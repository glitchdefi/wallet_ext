(()=>{var __webpack_modules__={72367:(t,e,r)=>{"use strict";var n=r(23085).Buffer;function i(t,e){const i=JSON.stringify(e),s=n.from(i,"utf-8"),o=r.g.crypto.getRandomValues(new Uint8Array(16));return r.g.crypto.subtle.encrypt({name:"AES-GCM",iv:o},t,s).then((function(t){const e=new Uint8Array(t),r=n.from(o).toString("base64");return{data:n.from(e).toString("base64"),iv:r}}))}function s(t,e){const r=n.from(e.data,"base64"),i=n.from(e.iv,"base64");return crypto.subtle.decrypt({name:"AES-GCM",iv:i},t,r).then((function(t){const e=new Uint8Array(t),r=n.from(e).toString("utf-8");return JSON.parse(r)})).catch((function(t){throw new Error("Incorrect password")}))}function o(t,e){const i=n.from(t,"utf-8"),s=n.from(e,"base64");return r.g.crypto.subtle.importKey("raw",i,{name:"PBKDF2"},!1,["deriveBits","deriveKey"]).then((function(t){return r.g.crypto.subtle.deriveKey({name:"PBKDF2",salt:s,iterations:1e4,hash:"SHA-256"},t,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}))}function a(t){let e=t.toString(16);for(;e.length<2;)e=`0${e}`;return e}function u(t=32){const e=new Uint8Array(t);r.g.crypto.getRandomValues(e);return btoa(String.fromCharCode.apply(null,e))}t.exports={encrypt:function(t,e){const r=u();return o(t,r).then((function(t){return i(t,e)})).then((function(t){return t.salt=r,JSON.stringify(t)}))},decrypt:function(t,e){const r=JSON.parse(e),{salt:n}=r;return o(t,n).then((function(t){return s(t,r)}))},keyFromPassword:o,encryptWithKey:i,decryptWithKey:s,serializeBufferForStorage:function(t){let e="0x";const r=t.length||t.byteLength;for(let n=0;n<r;n++)e+=a(t[n]);return e},serializeBufferFromStorage:function(t){const e="0x"===t.slice(0,2)?t.slice(2):t,r=new Uint8Array(e.length/2);for(let t=0;t<e.length;t+=2){const n=e.substr(t,2);r[t/2]=parseInt(n,16)}return r},generateSalt:u}},58189:function(t,e,r){!function(t,e){"use strict";function n(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(72617).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(t,e,r){var n=a(t,r);return r-1>=e&&(n|=a(t,r-1)<<4),n}function h(t,e,r,n){for(var i=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<t.length&&(16===e?this._parseHex(t,i,r):(this._parseBase(t,e,i),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var s,o,a=0;if("be"===r)for(i=t.length-1,s=0;i>=0;i-=3)o=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(i=0,s=0;i<t.length;i+=3)o=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,s=0,o=0;if("be"===r)for(n=t.length-1;n>=e;n-=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;else for(n=(t.length-e)%2==0?e+1:e;n<t.length;n+=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var s=t.length-r,o=s%n,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=n)u=h(t,c,c+n,e),this.imuln(i),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],s=0|e.words[0],o=i*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(i=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var i=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<i|s)).toString(16);r=0!==(s=a>>>24-i&16777215)||o!==this.length-1?c[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],f=d[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?m+r:c[h-m.length]+m+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return n(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var i=this.byteLength(),s=r||Math.max(1,i);n(i<=s,"byte array longer than desired length"),n(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-i;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){n("number"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},s.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,s=0;s<n.length;s++)e=(0|r.words[s])+(0|n.words[s])+i,this.words[s]=67108863&e,i=e>>>26;for(;0!==i&&s<r.length;s++)e=(0|r.words[s])+i,this.words[s]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var s=0,o=0;o<n.length;o++)s=(e=(0|r.words[o])-(0|n.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,r){var n,i,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,m=f>>>13,y=0|o[2],v=8191&y,g=y>>>13,b=0|o[3],w=8191&b,M=b>>>13,k=0|o[4],x=8191&k,P=k>>>13,L=0|o[5],T=8191&L,S=L>>>13,A=0|o[6],D=8191&A,j=A>>>13,H=0|o[7],O=8191&H,z=H>>>13,N=0|o[8],E=8191&N,Y=N>>>13,R=0|o[9],I=8191&R,B=R>>>13,X=0|a[0],V=8191&X,C=X>>>13,W=0|a[1],q=8191&W,Z=W>>>13,F=0|a[2],U=8191&F,G=F>>>13,_=0|a[3],K=8191&_,J=_>>>13,Q=0|a[4],$=8191&Q,tt=Q>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],st=8191&it,ot=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,mt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var yt=(h+(n=Math.imul(l,V))|0)+((8191&(i=(i=Math.imul(l,C))+Math.imul(d,V)|0))<<13)|0;h=((s=Math.imul(d,C))+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(p,V),i=(i=Math.imul(p,C))+Math.imul(m,V)|0,s=Math.imul(m,C);var vt=(h+(n=n+Math.imul(l,q)|0)|0)+((8191&(i=(i=i+Math.imul(l,Z)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,Z)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(v,V),i=(i=Math.imul(v,C))+Math.imul(g,V)|0,s=Math.imul(g,C),n=n+Math.imul(p,q)|0,i=(i=i+Math.imul(p,Z)|0)+Math.imul(m,q)|0,s=s+Math.imul(m,Z)|0;var gt=(h+(n=n+Math.imul(l,U)|0)|0)+((8191&(i=(i=i+Math.imul(l,G)|0)+Math.imul(d,U)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(w,V),i=(i=Math.imul(w,C))+Math.imul(M,V)|0,s=Math.imul(M,C),n=n+Math.imul(v,q)|0,i=(i=i+Math.imul(v,Z)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,Z)|0,n=n+Math.imul(p,U)|0,i=(i=i+Math.imul(p,G)|0)+Math.imul(m,U)|0,s=s+Math.imul(m,G)|0;var bt=(h+(n=n+Math.imul(l,K)|0)|0)+((8191&(i=(i=i+Math.imul(l,J)|0)+Math.imul(d,K)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(x,V),i=(i=Math.imul(x,C))+Math.imul(P,V)|0,s=Math.imul(P,C),n=n+Math.imul(w,q)|0,i=(i=i+Math.imul(w,Z)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,Z)|0,n=n+Math.imul(v,U)|0,i=(i=i+Math.imul(v,G)|0)+Math.imul(g,U)|0,s=s+Math.imul(g,G)|0,n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,J)|0)+Math.imul(m,K)|0,s=s+Math.imul(m,J)|0;var wt=(h+(n=n+Math.imul(l,$)|0)|0)+((8191&(i=(i=i+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(T,V),i=(i=Math.imul(T,C))+Math.imul(S,V)|0,s=Math.imul(S,C),n=n+Math.imul(x,q)|0,i=(i=i+Math.imul(x,Z)|0)+Math.imul(P,q)|0,s=s+Math.imul(P,Z)|0,n=n+Math.imul(w,U)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(M,U)|0,s=s+Math.imul(M,G)|0,n=n+Math.imul(v,K)|0,i=(i=i+Math.imul(v,J)|0)+Math.imul(g,K)|0,s=s+Math.imul(g,J)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,s=s+Math.imul(m,tt)|0;var Mt=(h+(n=n+Math.imul(l,rt)|0)|0)+((8191&(i=(i=i+Math.imul(l,nt)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,nt)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,C))+Math.imul(j,V)|0,s=Math.imul(j,C),n=n+Math.imul(T,q)|0,i=(i=i+Math.imul(T,Z)|0)+Math.imul(S,q)|0,s=s+Math.imul(S,Z)|0,n=n+Math.imul(x,U)|0,i=(i=i+Math.imul(x,G)|0)+Math.imul(P,U)|0,s=s+Math.imul(P,G)|0,n=n+Math.imul(w,K)|0,i=(i=i+Math.imul(w,J)|0)+Math.imul(M,K)|0,s=s+Math.imul(M,J)|0,n=n+Math.imul(v,$)|0,i=(i=i+Math.imul(v,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,s=s+Math.imul(m,nt)|0;var kt=(h+(n=n+Math.imul(l,st)|0)|0)+((8191&(i=(i=i+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(O,V),i=(i=Math.imul(O,C))+Math.imul(z,V)|0,s=Math.imul(z,C),n=n+Math.imul(D,q)|0,i=(i=i+Math.imul(D,Z)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,Z)|0,n=n+Math.imul(T,U)|0,i=(i=i+Math.imul(T,G)|0)+Math.imul(S,U)|0,s=s+Math.imul(S,G)|0,n=n+Math.imul(x,K)|0,i=(i=i+Math.imul(x,J)|0)+Math.imul(P,K)|0,s=s+Math.imul(P,J)|0,n=n+Math.imul(w,$)|0,i=(i=i+Math.imul(w,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,n=n+Math.imul(v,rt)|0,i=(i=i+Math.imul(v,nt)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,nt)|0,n=n+Math.imul(p,st)|0,i=(i=i+Math.imul(p,ot)|0)+Math.imul(m,st)|0,s=s+Math.imul(m,ot)|0;var xt=(h+(n=n+Math.imul(l,ut)|0)|0)+((8191&(i=(i=i+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(E,V),i=(i=Math.imul(E,C))+Math.imul(Y,V)|0,s=Math.imul(Y,C),n=n+Math.imul(O,q)|0,i=(i=i+Math.imul(O,Z)|0)+Math.imul(z,q)|0,s=s+Math.imul(z,Z)|0,n=n+Math.imul(D,U)|0,i=(i=i+Math.imul(D,G)|0)+Math.imul(j,U)|0,s=s+Math.imul(j,G)|0,n=n+Math.imul(T,K)|0,i=(i=i+Math.imul(T,J)|0)+Math.imul(S,K)|0,s=s+Math.imul(S,J)|0,n=n+Math.imul(x,$)|0,i=(i=i+Math.imul(x,tt)|0)+Math.imul(P,$)|0,s=s+Math.imul(P,tt)|0,n=n+Math.imul(w,rt)|0,i=(i=i+Math.imul(w,nt)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,nt)|0,n=n+Math.imul(v,st)|0,i=(i=i+Math.imul(v,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,s=s+Math.imul(m,ht)|0;var Pt=(h+(n=n+Math.imul(l,lt)|0)|0)+((8191&(i=(i=i+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(i>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,n=Math.imul(I,V),i=(i=Math.imul(I,C))+Math.imul(B,V)|0,s=Math.imul(B,C),n=n+Math.imul(E,q)|0,i=(i=i+Math.imul(E,Z)|0)+Math.imul(Y,q)|0,s=s+Math.imul(Y,Z)|0,n=n+Math.imul(O,U)|0,i=(i=i+Math.imul(O,G)|0)+Math.imul(z,U)|0,s=s+Math.imul(z,G)|0,n=n+Math.imul(D,K)|0,i=(i=i+Math.imul(D,J)|0)+Math.imul(j,K)|0,s=s+Math.imul(j,J)|0,n=n+Math.imul(T,$)|0,i=(i=i+Math.imul(T,tt)|0)+Math.imul(S,$)|0,s=s+Math.imul(S,tt)|0,n=n+Math.imul(x,rt)|0,i=(i=i+Math.imul(x,nt)|0)+Math.imul(P,rt)|0,s=s+Math.imul(P,nt)|0,n=n+Math.imul(w,st)|0,i=(i=i+Math.imul(w,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,n=n+Math.imul(v,ut)|0,i=(i=i+Math.imul(v,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0,n=n+Math.imul(p,lt)|0,i=(i=i+Math.imul(p,dt)|0)+Math.imul(m,lt)|0,s=s+Math.imul(m,dt)|0;var Lt=(h+(n=n+Math.imul(l,pt)|0)|0)+((8191&(i=(i=i+Math.imul(l,mt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,mt)|0)+(i>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,n=Math.imul(I,q),i=(i=Math.imul(I,Z))+Math.imul(B,q)|0,s=Math.imul(B,Z),n=n+Math.imul(E,U)|0,i=(i=i+Math.imul(E,G)|0)+Math.imul(Y,U)|0,s=s+Math.imul(Y,G)|0,n=n+Math.imul(O,K)|0,i=(i=i+Math.imul(O,J)|0)+Math.imul(z,K)|0,s=s+Math.imul(z,J)|0,n=n+Math.imul(D,$)|0,i=(i=i+Math.imul(D,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,n=n+Math.imul(T,rt)|0,i=(i=i+Math.imul(T,nt)|0)+Math.imul(S,rt)|0,s=s+Math.imul(S,nt)|0,n=n+Math.imul(x,st)|0,i=(i=i+Math.imul(x,ot)|0)+Math.imul(P,st)|0,s=s+Math.imul(P,ot)|0,n=n+Math.imul(w,ut)|0,i=(i=i+Math.imul(w,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,n=n+Math.imul(v,lt)|0,i=(i=i+Math.imul(v,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var Tt=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((s=s+Math.imul(m,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,n=Math.imul(I,U),i=(i=Math.imul(I,G))+Math.imul(B,U)|0,s=Math.imul(B,G),n=n+Math.imul(E,K)|0,i=(i=i+Math.imul(E,J)|0)+Math.imul(Y,K)|0,s=s+Math.imul(Y,J)|0,n=n+Math.imul(O,$)|0,i=(i=i+Math.imul(O,tt)|0)+Math.imul(z,$)|0,s=s+Math.imul(z,tt)|0,n=n+Math.imul(D,rt)|0,i=(i=i+Math.imul(D,nt)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,nt)|0,n=n+Math.imul(T,st)|0,i=(i=i+Math.imul(T,ot)|0)+Math.imul(S,st)|0,s=s+Math.imul(S,ot)|0,n=n+Math.imul(x,ut)|0,i=(i=i+Math.imul(x,ht)|0)+Math.imul(P,ut)|0,s=s+Math.imul(P,ht)|0,n=n+Math.imul(w,lt)|0,i=(i=i+Math.imul(w,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var St=(h+(n=n+Math.imul(v,pt)|0)|0)+((8191&(i=(i=i+Math.imul(v,mt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(I,K),i=(i=Math.imul(I,J))+Math.imul(B,K)|0,s=Math.imul(B,J),n=n+Math.imul(E,$)|0,i=(i=i+Math.imul(E,tt)|0)+Math.imul(Y,$)|0,s=s+Math.imul(Y,tt)|0,n=n+Math.imul(O,rt)|0,i=(i=i+Math.imul(O,nt)|0)+Math.imul(z,rt)|0,s=s+Math.imul(z,nt)|0,n=n+Math.imul(D,st)|0,i=(i=i+Math.imul(D,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,n=n+Math.imul(T,ut)|0,i=(i=i+Math.imul(T,ht)|0)+Math.imul(S,ut)|0,s=s+Math.imul(S,ht)|0,n=n+Math.imul(x,lt)|0,i=(i=i+Math.imul(x,dt)|0)+Math.imul(P,lt)|0,s=s+Math.imul(P,dt)|0;var At=(h+(n=n+Math.imul(w,pt)|0)|0)+((8191&(i=(i=i+Math.imul(w,mt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,mt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(I,$),i=(i=Math.imul(I,tt))+Math.imul(B,$)|0,s=Math.imul(B,tt),n=n+Math.imul(E,rt)|0,i=(i=i+Math.imul(E,nt)|0)+Math.imul(Y,rt)|0,s=s+Math.imul(Y,nt)|0,n=n+Math.imul(O,st)|0,i=(i=i+Math.imul(O,ot)|0)+Math.imul(z,st)|0,s=s+Math.imul(z,ot)|0,n=n+Math.imul(D,ut)|0,i=(i=i+Math.imul(D,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,n=n+Math.imul(T,lt)|0,i=(i=i+Math.imul(T,dt)|0)+Math.imul(S,lt)|0,s=s+Math.imul(S,dt)|0;var Dt=(h+(n=n+Math.imul(x,pt)|0)|0)+((8191&(i=(i=i+Math.imul(x,mt)|0)+Math.imul(P,pt)|0))<<13)|0;h=((s=s+Math.imul(P,mt)|0)+(i>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,n=Math.imul(I,rt),i=(i=Math.imul(I,nt))+Math.imul(B,rt)|0,s=Math.imul(B,nt),n=n+Math.imul(E,st)|0,i=(i=i+Math.imul(E,ot)|0)+Math.imul(Y,st)|0,s=s+Math.imul(Y,ot)|0,n=n+Math.imul(O,ut)|0,i=(i=i+Math.imul(O,ht)|0)+Math.imul(z,ut)|0,s=s+Math.imul(z,ht)|0,n=n+Math.imul(D,lt)|0,i=(i=i+Math.imul(D,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var jt=(h+(n=n+Math.imul(T,pt)|0)|0)+((8191&(i=(i=i+Math.imul(T,mt)|0)+Math.imul(S,pt)|0))<<13)|0;h=((s=s+Math.imul(S,mt)|0)+(i>>>13)|0)+(jt>>>26)|0,jt&=67108863,n=Math.imul(I,st),i=(i=Math.imul(I,ot))+Math.imul(B,st)|0,s=Math.imul(B,ot),n=n+Math.imul(E,ut)|0,i=(i=i+Math.imul(E,ht)|0)+Math.imul(Y,ut)|0,s=s+Math.imul(Y,ht)|0,n=n+Math.imul(O,lt)|0,i=(i=i+Math.imul(O,dt)|0)+Math.imul(z,lt)|0,s=s+Math.imul(z,dt)|0;var Ht=(h+(n=n+Math.imul(D,pt)|0)|0)+((8191&(i=(i=i+Math.imul(D,mt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,mt)|0)+(i>>>13)|0)+(Ht>>>26)|0,Ht&=67108863,n=Math.imul(I,ut),i=(i=Math.imul(I,ht))+Math.imul(B,ut)|0,s=Math.imul(B,ht),n=n+Math.imul(E,lt)|0,i=(i=i+Math.imul(E,dt)|0)+Math.imul(Y,lt)|0,s=s+Math.imul(Y,dt)|0;var Ot=(h+(n=n+Math.imul(O,pt)|0)|0)+((8191&(i=(i=i+Math.imul(O,mt)|0)+Math.imul(z,pt)|0))<<13)|0;h=((s=s+Math.imul(z,mt)|0)+(i>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,n=Math.imul(I,lt),i=(i=Math.imul(I,dt))+Math.imul(B,lt)|0,s=Math.imul(B,dt);var zt=(h+(n=n+Math.imul(E,pt)|0)|0)+((8191&(i=(i=i+Math.imul(E,mt)|0)+Math.imul(Y,pt)|0))<<13)|0;h=((s=s+Math.imul(Y,mt)|0)+(i>>>13)|0)+(zt>>>26)|0,zt&=67108863;var Nt=(h+(n=Math.imul(I,pt))|0)+((8191&(i=(i=Math.imul(I,mt))+Math.imul(B,pt)|0))<<13)|0;return h=((s=Math.imul(B,mt))+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=yt,u[1]=vt,u[2]=gt,u[3]=bt,u[4]=wt,u[5]=Mt,u[6]=kt,u[7]=xt,u[8]=Pt,u[9]=Lt,u[10]=Tt,u[11]=St,u[12]=At,u[13]=Dt,u[14]=jt,u[15]=Ht,u[16]=Ot,u[17]=zt,u[18]=Nt,0!==h&&(u[19]=h,r.length++),r};function m(t,e,r){return(new y).mulp(t,e,r)}function y(t,e){this.x=t,this.y=e}Math.imul||(p=f),s.prototype.mulTo=function(t,e){var r,n=this.length+t.length;return r=10===this.length&&10===t.length?p(this,t,e):n<63?f(this,t,e):n<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,s=0;s<r.length-1;s++){var o=i;i=0;for(var a=67108863&n,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),i+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,n=o,o=i}return 0!==n?r.words[s]=n:r.length--,r.strip()}(this,t,e):m(this,t,e),r},y.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},y.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},y.prototype.permute=function(t,e,r,n,i,s){for(var o=0;o<s;o++)n[o]=e[t[o]],i[o]=r[t[o]]},y.prototype.transform=function(t,e,r,n,i,s){this.permute(s,t,e,r,n,i);for(var o=1;o<i;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<i;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],m=n[c+f],y=r[c+f+o],v=n[c+f+o],g=l*y-d*v;v=l*v+d*y,y=g,r[c+f]=p+y,n[c+f]=m+v,r[c+f+o]=p-y,n[c+f+o]=m-v,f!==a&&(g=u*l-h*d,d=u*d+h*l,l=g)}},y.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},y.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},y.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},y.prototype.convert13b=function(t,e,r,i){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<i;++o)r[o]=0;n(0===s),n(0==(-8192&s))},y.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},y.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),s=this.stub(n),o=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),c=new Array(n),l=new Array(n),d=r.words;d.length=n,this.convert13b(t.words,t.length,o,n),this.convert13b(e.words,e.length,h,n),this.transform(o,s,a,u,n,i),this.transform(h,s,c,l,n,i);for(var f=0;f<n;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,n),this.transform(a,u,d,s,n,i),this.conjugate(d,s,n),this.normalize13b(d,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),m(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var e=0,r=0;r<this.length;r++){var i=(0|this.words[r])*t,s=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=(t.words[n]&1<<i)>>>i}return e}(t);if(0===e.length)return new s(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},s.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},s.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var i;n("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(i-=o,i=Math.max(0,i),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=i);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r)&&!!(this.words[r]&i)},s.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var i,s,o=t.length+r;this._expand(o);var a=0;for(i=0;i<t.length;i++){s=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&s}for(;i<this.length-r;i++)a=(s=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&s;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(s=-(0|this.words[i])+a)>>26,this.words[i]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,o=0|i.words[i.length-1];0!==(r=26-this._countBits(o))&&(i=i.ushln(r),n.iushln(r),o=0|i.words[i.length-1]);var a,u=n.length-i.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=n.clone()._ishlnsubmul(i,1,u);0===c.negative&&(n=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|n.words[i.length+l])+(0|n.words[i.length+l-1]);for(d=Math.min(d/o|0,67108863),n._ishlnsubmul(i,d,l);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(i,1,l),n.isZero()||(n.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),n.strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},s.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(i=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:i,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var i,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),s=r.cmp(n);return s<0||1===i&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){n(t<=67108863);for(var e=(1<<26)%t,r=0,i=this.length-1;i>=0;i--)r=(e*r+(0|this.words[i]))%t;return r},s.prototype.idivn=function(t){n(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*e;this.words[r]=i/t|0,e=i%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(c),o.isub(l)),i.iushrn(1),o.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),o.isub(u)):(r.isub(e),a.isub(i),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(i=0===e.cmpn(1)?o:a).cmpn(0)<0&&i.iadd(t),i},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var s=e;e=r,r=s}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){n("number"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var s=i,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new x(t)},s.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function g(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){g.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){g.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function M(){g.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function k(){g.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function x(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function P(t){x.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}g.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},g.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},g.prototype.split=function(t,e){t.iushrn(this.n,0,e)},g.prototype.imulK=function(t){return t.imul(this.k)},i(b,g),b.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,i=10;i<t.length;i++){var o=0|t.words[i];t.words[i-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[i-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(w,g),i(M,g),i(k,g),k.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(v[t])return v[t];var e;if("k256"===t)e=new b;else if("p224"===t)e=new w;else if("p192"===t)e=new M;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new k}return v[t]=e,e},x.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},x.prototype._verify2=function(t,e){n(0==(t.negative|e.negative),"red works only with positives"),n(t.red&&t.red===e.red,"red works only with red numbers")},x.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},x.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},x.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},x.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},x.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},x.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},x.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},x.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},x.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},x.prototype.isqr=function(t){return this.imul(t,t.clone())},x.prototype.sqr=function(t){return this.mul(t,t)},x.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),o=0;!i.isZero()&&0===i.andln(1);)o++,i.iushrn(1);n(!i.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,i),d=this.pow(t,i.addn(1).iushrn(1)),f=this.pow(t,i),p=o;0!==f.cmp(a);){for(var m=f,y=0;0!==m.cmp(a);y++)m=m.redSqr();n(y<p);var v=this.pow(l,new s(1).iushln(p-y-1));d=d.redMul(v),l=v.redSqr(),f=f.redMul(l),p=y}return d},x.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},x.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],c=u-1;c>=0;c--){var l=h>>c&1;i!==r[0]&&(i=this.sqr(i)),0!==l||0!==o?(o<<=1,o|=l,(4===++a||0===n&&0===c)&&(i=this.mul(i,r[o]),a=0,o=0)):a=0}u=26}return i},x.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},x.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new P(t)},i(P,x),P.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},P.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},P.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},P.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},P.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},52207:function(t,e,r){!function(t,e){"use strict";function n(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(70573).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(t,e,r){var n=a(t,r);return r-1>=e&&(n|=a(t,r-1)<<4),n}function h(t,e,r,n){for(var i=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<t.length&&(16===e?this._parseHex(t,i,r):(this._parseBase(t,e,i),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var s,o,a=0;if("be"===r)for(i=t.length-1,s=0;i>=0;i-=3)o=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(i=0,s=0;i<t.length;i+=3)o=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,s=0,o=0;if("be"===r)for(n=t.length-1;n>=e;n-=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;else for(n=(t.length-e)%2==0?e+1:e;n<t.length;n+=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var s=t.length-r,o=s%n,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=n)u=h(t,c,c+n,e),this.imuln(i),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],s=0|e.words[0],o=i*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(i=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var i=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<i|s)).toString(16);r=0!==(s=a>>>24-i&16777215)||o!==this.length-1?c[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],f=d[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?m+r:c[h-m.length]+m+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return n(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var i=this.byteLength(),s=r||Math.max(1,i);n(i<=s,"byte array longer than desired length"),n(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-i;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){n("number"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},s.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,s=0;s<n.length;s++)e=(0|r.words[s])+(0|n.words[s])+i,this.words[s]=67108863&e,i=e>>>26;for(;0!==i&&s<r.length;s++)e=(0|r.words[s])+i,this.words[s]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var s=0,o=0;o<n.length;o++)s=(e=(0|r.words[o])-(0|n.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,r){var n,i,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,m=f>>>13,y=0|o[2],v=8191&y,g=y>>>13,b=0|o[3],w=8191&b,M=b>>>13,k=0|o[4],x=8191&k,P=k>>>13,L=0|o[5],T=8191&L,S=L>>>13,A=0|o[6],D=8191&A,j=A>>>13,H=0|o[7],O=8191&H,z=H>>>13,N=0|o[8],E=8191&N,Y=N>>>13,R=0|o[9],I=8191&R,B=R>>>13,X=0|a[0],V=8191&X,C=X>>>13,W=0|a[1],q=8191&W,Z=W>>>13,F=0|a[2],U=8191&F,G=F>>>13,_=0|a[3],K=8191&_,J=_>>>13,Q=0|a[4],$=8191&Q,tt=Q>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],st=8191&it,ot=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,mt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var yt=(h+(n=Math.imul(l,V))|0)+((8191&(i=(i=Math.imul(l,C))+Math.imul(d,V)|0))<<13)|0;h=((s=Math.imul(d,C))+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(p,V),i=(i=Math.imul(p,C))+Math.imul(m,V)|0,s=Math.imul(m,C);var vt=(h+(n=n+Math.imul(l,q)|0)|0)+((8191&(i=(i=i+Math.imul(l,Z)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,Z)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(v,V),i=(i=Math.imul(v,C))+Math.imul(g,V)|0,s=Math.imul(g,C),n=n+Math.imul(p,q)|0,i=(i=i+Math.imul(p,Z)|0)+Math.imul(m,q)|0,s=s+Math.imul(m,Z)|0;var gt=(h+(n=n+Math.imul(l,U)|0)|0)+((8191&(i=(i=i+Math.imul(l,G)|0)+Math.imul(d,U)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(w,V),i=(i=Math.imul(w,C))+Math.imul(M,V)|0,s=Math.imul(M,C),n=n+Math.imul(v,q)|0,i=(i=i+Math.imul(v,Z)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,Z)|0,n=n+Math.imul(p,U)|0,i=(i=i+Math.imul(p,G)|0)+Math.imul(m,U)|0,s=s+Math.imul(m,G)|0;var bt=(h+(n=n+Math.imul(l,K)|0)|0)+((8191&(i=(i=i+Math.imul(l,J)|0)+Math.imul(d,K)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(x,V),i=(i=Math.imul(x,C))+Math.imul(P,V)|0,s=Math.imul(P,C),n=n+Math.imul(w,q)|0,i=(i=i+Math.imul(w,Z)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,Z)|0,n=n+Math.imul(v,U)|0,i=(i=i+Math.imul(v,G)|0)+Math.imul(g,U)|0,s=s+Math.imul(g,G)|0,n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,J)|0)+Math.imul(m,K)|0,s=s+Math.imul(m,J)|0;var wt=(h+(n=n+Math.imul(l,$)|0)|0)+((8191&(i=(i=i+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(T,V),i=(i=Math.imul(T,C))+Math.imul(S,V)|0,s=Math.imul(S,C),n=n+Math.imul(x,q)|0,i=(i=i+Math.imul(x,Z)|0)+Math.imul(P,q)|0,s=s+Math.imul(P,Z)|0,n=n+Math.imul(w,U)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(M,U)|0,s=s+Math.imul(M,G)|0,n=n+Math.imul(v,K)|0,i=(i=i+Math.imul(v,J)|0)+Math.imul(g,K)|0,s=s+Math.imul(g,J)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,s=s+Math.imul(m,tt)|0;var Mt=(h+(n=n+Math.imul(l,rt)|0)|0)+((8191&(i=(i=i+Math.imul(l,nt)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,nt)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,C))+Math.imul(j,V)|0,s=Math.imul(j,C),n=n+Math.imul(T,q)|0,i=(i=i+Math.imul(T,Z)|0)+Math.imul(S,q)|0,s=s+Math.imul(S,Z)|0,n=n+Math.imul(x,U)|0,i=(i=i+Math.imul(x,G)|0)+Math.imul(P,U)|0,s=s+Math.imul(P,G)|0,n=n+Math.imul(w,K)|0,i=(i=i+Math.imul(w,J)|0)+Math.imul(M,K)|0,s=s+Math.imul(M,J)|0,n=n+Math.imul(v,$)|0,i=(i=i+Math.imul(v,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,s=s+Math.imul(m,nt)|0;var kt=(h+(n=n+Math.imul(l,st)|0)|0)+((8191&(i=(i=i+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(O,V),i=(i=Math.imul(O,C))+Math.imul(z,V)|0,s=Math.imul(z,C),n=n+Math.imul(D,q)|0,i=(i=i+Math.imul(D,Z)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,Z)|0,n=n+Math.imul(T,U)|0,i=(i=i+Math.imul(T,G)|0)+Math.imul(S,U)|0,s=s+Math.imul(S,G)|0,n=n+Math.imul(x,K)|0,i=(i=i+Math.imul(x,J)|0)+Math.imul(P,K)|0,s=s+Math.imul(P,J)|0,n=n+Math.imul(w,$)|0,i=(i=i+Math.imul(w,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,n=n+Math.imul(v,rt)|0,i=(i=i+Math.imul(v,nt)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,nt)|0,n=n+Math.imul(p,st)|0,i=(i=i+Math.imul(p,ot)|0)+Math.imul(m,st)|0,s=s+Math.imul(m,ot)|0;var xt=(h+(n=n+Math.imul(l,ut)|0)|0)+((8191&(i=(i=i+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(E,V),i=(i=Math.imul(E,C))+Math.imul(Y,V)|0,s=Math.imul(Y,C),n=n+Math.imul(O,q)|0,i=(i=i+Math.imul(O,Z)|0)+Math.imul(z,q)|0,s=s+Math.imul(z,Z)|0,n=n+Math.imul(D,U)|0,i=(i=i+Math.imul(D,G)|0)+Math.imul(j,U)|0,s=s+Math.imul(j,G)|0,n=n+Math.imul(T,K)|0,i=(i=i+Math.imul(T,J)|0)+Math.imul(S,K)|0,s=s+Math.imul(S,J)|0,n=n+Math.imul(x,$)|0,i=(i=i+Math.imul(x,tt)|0)+Math.imul(P,$)|0,s=s+Math.imul(P,tt)|0,n=n+Math.imul(w,rt)|0,i=(i=i+Math.imul(w,nt)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,nt)|0,n=n+Math.imul(v,st)|0,i=(i=i+Math.imul(v,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,s=s+Math.imul(m,ht)|0;var Pt=(h+(n=n+Math.imul(l,lt)|0)|0)+((8191&(i=(i=i+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(i>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,n=Math.imul(I,V),i=(i=Math.imul(I,C))+Math.imul(B,V)|0,s=Math.imul(B,C),n=n+Math.imul(E,q)|0,i=(i=i+Math.imul(E,Z)|0)+Math.imul(Y,q)|0,s=s+Math.imul(Y,Z)|0,n=n+Math.imul(O,U)|0,i=(i=i+Math.imul(O,G)|0)+Math.imul(z,U)|0,s=s+Math.imul(z,G)|0,n=n+Math.imul(D,K)|0,i=(i=i+Math.imul(D,J)|0)+Math.imul(j,K)|0,s=s+Math.imul(j,J)|0,n=n+Math.imul(T,$)|0,i=(i=i+Math.imul(T,tt)|0)+Math.imul(S,$)|0,s=s+Math.imul(S,tt)|0,n=n+Math.imul(x,rt)|0,i=(i=i+Math.imul(x,nt)|0)+Math.imul(P,rt)|0,s=s+Math.imul(P,nt)|0,n=n+Math.imul(w,st)|0,i=(i=i+Math.imul(w,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,n=n+Math.imul(v,ut)|0,i=(i=i+Math.imul(v,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0,n=n+Math.imul(p,lt)|0,i=(i=i+Math.imul(p,dt)|0)+Math.imul(m,lt)|0,s=s+Math.imul(m,dt)|0;var Lt=(h+(n=n+Math.imul(l,pt)|0)|0)+((8191&(i=(i=i+Math.imul(l,mt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,mt)|0)+(i>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,n=Math.imul(I,q),i=(i=Math.imul(I,Z))+Math.imul(B,q)|0,s=Math.imul(B,Z),n=n+Math.imul(E,U)|0,i=(i=i+Math.imul(E,G)|0)+Math.imul(Y,U)|0,s=s+Math.imul(Y,G)|0,n=n+Math.imul(O,K)|0,i=(i=i+Math.imul(O,J)|0)+Math.imul(z,K)|0,s=s+Math.imul(z,J)|0,n=n+Math.imul(D,$)|0,i=(i=i+Math.imul(D,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,n=n+Math.imul(T,rt)|0,i=(i=i+Math.imul(T,nt)|0)+Math.imul(S,rt)|0,s=s+Math.imul(S,nt)|0,n=n+Math.imul(x,st)|0,i=(i=i+Math.imul(x,ot)|0)+Math.imul(P,st)|0,s=s+Math.imul(P,ot)|0,n=n+Math.imul(w,ut)|0,i=(i=i+Math.imul(w,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,n=n+Math.imul(v,lt)|0,i=(i=i+Math.imul(v,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var Tt=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((s=s+Math.imul(m,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,n=Math.imul(I,U),i=(i=Math.imul(I,G))+Math.imul(B,U)|0,s=Math.imul(B,G),n=n+Math.imul(E,K)|0,i=(i=i+Math.imul(E,J)|0)+Math.imul(Y,K)|0,s=s+Math.imul(Y,J)|0,n=n+Math.imul(O,$)|0,i=(i=i+Math.imul(O,tt)|0)+Math.imul(z,$)|0,s=s+Math.imul(z,tt)|0,n=n+Math.imul(D,rt)|0,i=(i=i+Math.imul(D,nt)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,nt)|0,n=n+Math.imul(T,st)|0,i=(i=i+Math.imul(T,ot)|0)+Math.imul(S,st)|0,s=s+Math.imul(S,ot)|0,n=n+Math.imul(x,ut)|0,i=(i=i+Math.imul(x,ht)|0)+Math.imul(P,ut)|0,s=s+Math.imul(P,ht)|0,n=n+Math.imul(w,lt)|0,i=(i=i+Math.imul(w,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var St=(h+(n=n+Math.imul(v,pt)|0)|0)+((8191&(i=(i=i+Math.imul(v,mt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(I,K),i=(i=Math.imul(I,J))+Math.imul(B,K)|0,s=Math.imul(B,J),n=n+Math.imul(E,$)|0,i=(i=i+Math.imul(E,tt)|0)+Math.imul(Y,$)|0,s=s+Math.imul(Y,tt)|0,n=n+Math.imul(O,rt)|0,i=(i=i+Math.imul(O,nt)|0)+Math.imul(z,rt)|0,s=s+Math.imul(z,nt)|0,n=n+Math.imul(D,st)|0,i=(i=i+Math.imul(D,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,n=n+Math.imul(T,ut)|0,i=(i=i+Math.imul(T,ht)|0)+Math.imul(S,ut)|0,s=s+Math.imul(S,ht)|0,n=n+Math.imul(x,lt)|0,i=(i=i+Math.imul(x,dt)|0)+Math.imul(P,lt)|0,s=s+Math.imul(P,dt)|0;var At=(h+(n=n+Math.imul(w,pt)|0)|0)+((8191&(i=(i=i+Math.imul(w,mt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,mt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(I,$),i=(i=Math.imul(I,tt))+Math.imul(B,$)|0,s=Math.imul(B,tt),n=n+Math.imul(E,rt)|0,i=(i=i+Math.imul(E,nt)|0)+Math.imul(Y,rt)|0,s=s+Math.imul(Y,nt)|0,n=n+Math.imul(O,st)|0,i=(i=i+Math.imul(O,ot)|0)+Math.imul(z,st)|0,s=s+Math.imul(z,ot)|0,n=n+Math.imul(D,ut)|0,i=(i=i+Math.imul(D,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,n=n+Math.imul(T,lt)|0,i=(i=i+Math.imul(T,dt)|0)+Math.imul(S,lt)|0,s=s+Math.imul(S,dt)|0;var Dt=(h+(n=n+Math.imul(x,pt)|0)|0)+((8191&(i=(i=i+Math.imul(x,mt)|0)+Math.imul(P,pt)|0))<<13)|0;h=((s=s+Math.imul(P,mt)|0)+(i>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,n=Math.imul(I,rt),i=(i=Math.imul(I,nt))+Math.imul(B,rt)|0,s=Math.imul(B,nt),n=n+Math.imul(E,st)|0,i=(i=i+Math.imul(E,ot)|0)+Math.imul(Y,st)|0,s=s+Math.imul(Y,ot)|0,n=n+Math.imul(O,ut)|0,i=(i=i+Math.imul(O,ht)|0)+Math.imul(z,ut)|0,s=s+Math.imul(z,ht)|0,n=n+Math.imul(D,lt)|0,i=(i=i+Math.imul(D,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var jt=(h+(n=n+Math.imul(T,pt)|0)|0)+((8191&(i=(i=i+Math.imul(T,mt)|0)+Math.imul(S,pt)|0))<<13)|0;h=((s=s+Math.imul(S,mt)|0)+(i>>>13)|0)+(jt>>>26)|0,jt&=67108863,n=Math.imul(I,st),i=(i=Math.imul(I,ot))+Math.imul(B,st)|0,s=Math.imul(B,ot),n=n+Math.imul(E,ut)|0,i=(i=i+Math.imul(E,ht)|0)+Math.imul(Y,ut)|0,s=s+Math.imul(Y,ht)|0,n=n+Math.imul(O,lt)|0,i=(i=i+Math.imul(O,dt)|0)+Math.imul(z,lt)|0,s=s+Math.imul(z,dt)|0;var Ht=(h+(n=n+Math.imul(D,pt)|0)|0)+((8191&(i=(i=i+Math.imul(D,mt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,mt)|0)+(i>>>13)|0)+(Ht>>>26)|0,Ht&=67108863,n=Math.imul(I,ut),i=(i=Math.imul(I,ht))+Math.imul(B,ut)|0,s=Math.imul(B,ht),n=n+Math.imul(E,lt)|0,i=(i=i+Math.imul(E,dt)|0)+Math.imul(Y,lt)|0,s=s+Math.imul(Y,dt)|0;var Ot=(h+(n=n+Math.imul(O,pt)|0)|0)+((8191&(i=(i=i+Math.imul(O,mt)|0)+Math.imul(z,pt)|0))<<13)|0;h=((s=s+Math.imul(z,mt)|0)+(i>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,n=Math.imul(I,lt),i=(i=Math.imul(I,dt))+Math.imul(B,lt)|0,s=Math.imul(B,dt);var zt=(h+(n=n+Math.imul(E,pt)|0)|0)+((8191&(i=(i=i+Math.imul(E,mt)|0)+Math.imul(Y,pt)|0))<<13)|0;h=((s=s+Math.imul(Y,mt)|0)+(i>>>13)|0)+(zt>>>26)|0,zt&=67108863;var Nt=(h+(n=Math.imul(I,pt))|0)+((8191&(i=(i=Math.imul(I,mt))+Math.imul(B,pt)|0))<<13)|0;return h=((s=Math.imul(B,mt))+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=yt,u[1]=vt,u[2]=gt,u[3]=bt,u[4]=wt,u[5]=Mt,u[6]=kt,u[7]=xt,u[8]=Pt,u[9]=Lt,u[10]=Tt,u[11]=St,u[12]=At,u[13]=Dt,u[14]=jt,u[15]=Ht,u[16]=Ot,u[17]=zt,u[18]=Nt,0!==h&&(u[19]=h,r.length++),r};function m(t,e,r){return(new y).mulp(t,e,r)}function y(t,e){this.x=t,this.y=e}Math.imul||(p=f),s.prototype.mulTo=function(t,e){var r,n=this.length+t.length;return r=10===this.length&&10===t.length?p(this,t,e):n<63?f(this,t,e):n<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,s=0;s<r.length-1;s++){var o=i;i=0;for(var a=67108863&n,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),i+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,n=o,o=i}return 0!==n?r.words[s]=n:r.length--,r.strip()}(this,t,e):m(this,t,e),r},y.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},y.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},y.prototype.permute=function(t,e,r,n,i,s){for(var o=0;o<s;o++)n[o]=e[t[o]],i[o]=r[t[o]]},y.prototype.transform=function(t,e,r,n,i,s){this.permute(s,t,e,r,n,i);for(var o=1;o<i;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<i;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],m=n[c+f],y=r[c+f+o],v=n[c+f+o],g=l*y-d*v;v=l*v+d*y,y=g,r[c+f]=p+y,n[c+f]=m+v,r[c+f+o]=p-y,n[c+f+o]=m-v,f!==a&&(g=u*l-h*d,d=u*d+h*l,l=g)}},y.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},y.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},y.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},y.prototype.convert13b=function(t,e,r,i){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<i;++o)r[o]=0;n(0===s),n(0==(-8192&s))},y.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},y.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),s=this.stub(n),o=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),c=new Array(n),l=new Array(n),d=r.words;d.length=n,this.convert13b(t.words,t.length,o,n),this.convert13b(e.words,e.length,h,n),this.transform(o,s,a,u,n,i),this.transform(h,s,c,l,n,i);for(var f=0;f<n;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,n),this.transform(a,u,d,s,n,i),this.conjugate(d,s,n),this.normalize13b(d,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),m(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var e=0,r=0;r<this.length;r++){var i=(0|this.words[r])*t,s=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=(t.words[n]&1<<i)>>>i}return e}(t);if(0===e.length)return new s(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},s.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},s.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var i;n("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(i-=o,i=Math.max(0,i),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=i);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r)&&!!(this.words[r]&i)},s.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var i,s,o=t.length+r;this._expand(o);var a=0;for(i=0;i<t.length;i++){s=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&s}for(;i<this.length-r;i++)a=(s=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&s;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(s=-(0|this.words[i])+a)>>26,this.words[i]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,o=0|i.words[i.length-1];0!==(r=26-this._countBits(o))&&(i=i.ushln(r),n.iushln(r),o=0|i.words[i.length-1]);var a,u=n.length-i.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=n.clone()._ishlnsubmul(i,1,u);0===c.negative&&(n=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|n.words[i.length+l])+(0|n.words[i.length+l-1]);for(d=Math.min(d/o|0,67108863),n._ishlnsubmul(i,d,l);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(i,1,l),n.isZero()||(n.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),n.strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},s.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(i=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:i,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var i,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),s=r.cmp(n);return s<0||1===i&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){n(t<=67108863);for(var e=(1<<26)%t,r=0,i=this.length-1;i>=0;i--)r=(e*r+(0|this.words[i]))%t;return r},s.prototype.idivn=function(t){n(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*e;this.words[r]=i/t|0,e=i%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(c),o.isub(l)),i.iushrn(1),o.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),o.isub(u)):(r.isub(e),a.isub(i),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(i=0===e.cmpn(1)?o:a).cmpn(0)<0&&i.iadd(t),i},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var s=e;e=r,r=s}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){n("number"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var s=i,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new x(t)},s.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function g(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){g.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){g.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function M(){g.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function k(){g.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function x(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function P(t){x.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}g.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},g.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},g.prototype.split=function(t,e){t.iushrn(this.n,0,e)},g.prototype.imulK=function(t){return t.imul(this.k)},i(b,g),b.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,i=10;i<t.length;i++){var o=0|t.words[i];t.words[i-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[i-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(w,g),i(M,g),i(k,g),k.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(v[t])return v[t];var e;if("k256"===t)e=new b;else if("p224"===t)e=new w;else if("p192"===t)e=new M;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new k}return v[t]=e,e},x.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},x.prototype._verify2=function(t,e){n(0==(t.negative|e.negative),"red works only with positives"),n(t.red&&t.red===e.red,"red works only with red numbers")},x.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},x.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},x.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},x.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},x.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},x.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},x.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},x.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},x.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},x.prototype.isqr=function(t){return this.imul(t,t.clone())},x.prototype.sqr=function(t){return this.mul(t,t)},x.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),o=0;!i.isZero()&&0===i.andln(1);)o++,i.iushrn(1);n(!i.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,i),d=this.pow(t,i.addn(1).iushrn(1)),f=this.pow(t,i),p=o;0!==f.cmp(a);){for(var m=f,y=0;0!==m.cmp(a);y++)m=m.redSqr();n(y<p);var v=this.pow(l,new s(1).iushln(p-y-1));d=d.redMul(v),l=v.redSqr(),f=f.redMul(l),p=y}return d},x.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},x.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],c=u-1;c>=0;c--){var l=h>>c&1;i!==r[0]&&(i=this.sqr(i)),0!==l||0!==o?(o<<=1,o|=l,(4===++a||0===n&&0===c)&&(i=this.mul(i,r[o]),a=0,o=0)):a=0}u=26}return i},x.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},x.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new P(t)},i(P,x),P.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},P.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},P.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},P.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},P.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},39809:(t,e,r)=>{"use strict";const n=e;n.bignum=r(4590),n.define=r(22500).define,n.base=r(71979),n.constants=r(36826),n.decoders=r(78307),n.encoders=r(56579)},22500:(t,e,r)=>{"use strict";const n=r(56579),i=r(78307),s=r(35717);function o(t,e){this.name=t,this.body=e,this.decoders={},this.encoders={}}e.define=function(t,e){return new o(t,e)},o.prototype._createNamed=function(t){const e=this.name;function r(t){this._initNamed(t,e)}return s(r,t),r.prototype._initNamed=function(e,r){t.call(this,e,r)},new r(this)},o.prototype._getDecoder=function(t){return t=t||"der",this.decoders.hasOwnProperty(t)||(this.decoders[t]=this._createNamed(i[t])),this.decoders[t]},o.prototype.decode=function(t,e,r){return this._getDecoder(e).decode(t,r)},o.prototype._getEncoder=function(t){return t=t||"der",this.encoders.hasOwnProperty(t)||(this.encoders[t]=this._createNamed(n[t])),this.encoders[t]},o.prototype.encode=function(t,e,r){return this._getEncoder(e).encode(t,r)}},36625:(t,e,r)=>{"use strict";const n=r(35717),i=r(98465).b,s=r(2399).Buffer;function o(t,e){i.call(this,e),s.isBuffer(t)?(this.base=t,this.offset=0,this.length=t.length):this.error("Input not Buffer")}function a(t,e){if(Array.isArray(t))this.length=0,this.value=t.map((function(t){return a.isEncoderBuffer(t)||(t=new a(t,e)),this.length+=t.length,t}),this);else if("number"==typeof t){if(!(0<=t&&t<=255))return e.error("non-byte EncoderBuffer value");this.value=t,this.length=1}else if("string"==typeof t)this.value=t,this.length=s.byteLength(t);else{if(!s.isBuffer(t))return e.error("Unsupported type: "+typeof t);this.value=t,this.length=t.length}}n(o,i),e.C=o,o.isDecoderBuffer=function(t){if(t instanceof o)return!0;return"object"==typeof t&&s.isBuffer(t.base)&&"DecoderBuffer"===t.constructor.name&&"number"==typeof t.offset&&"number"==typeof t.length&&"function"==typeof t.save&&"function"==typeof t.restore&&"function"==typeof t.isEmpty&&"function"==typeof t.readUInt8&&"function"==typeof t.skip&&"function"==typeof t.raw},o.prototype.save=function(){return{offset:this.offset,reporter:i.prototype.save.call(this)}},o.prototype.restore=function(t){const e=new o(this.base);return e.offset=t.offset,e.length=this.offset,this.offset=t.offset,i.prototype.restore.call(this,t.reporter),e},o.prototype.isEmpty=function(){return this.offset===this.length},o.prototype.readUInt8=function(t){return this.offset+1<=this.length?this.base.readUInt8(this.offset++,!0):this.error(t||"DecoderBuffer overrun")},o.prototype.skip=function(t,e){if(!(this.offset+t<=this.length))return this.error(e||"DecoderBuffer overrun");const r=new o(this.base);return r._reporterState=this._reporterState,r.offset=this.offset,r.length=this.offset+t,this.offset+=t,r},o.prototype.raw=function(t){return this.base.slice(t?t.offset:this.offset,this.length)},e.R=a,a.isEncoderBuffer=function(t){if(t instanceof a)return!0;return"object"==typeof t&&"EncoderBuffer"===t.constructor.name&&"number"==typeof t.length&&"function"==typeof t.join},a.prototype.join=function(t,e){return t||(t=s.alloc(this.length)),e||(e=0),0===this.length||(Array.isArray(this.value)?this.value.forEach((function(r){r.join(t,e),e+=r.length})):("number"==typeof this.value?t[e]=this.value:"string"==typeof this.value?t.write(this.value,e):s.isBuffer(this.value)&&this.value.copy(t,e),e+=this.length)),t}},71979:(t,e,r)=>{"use strict";const n=e;n.Reporter=r(98465).b,n.DecoderBuffer=r(36625).C,n.EncoderBuffer=r(36625).R,n.Node=r(41949)},41949:(t,e,r)=>{"use strict";const n=r(98465).b,i=r(36625).R,s=r(36625).C,o=r(79746),a=["seq","seqof","set","setof","objid","bool","gentime","utctime","null_","enum","int","objDesc","bitstr","bmpstr","charstr","genstr","graphstr","ia5str","iso646str","numstr","octstr","printstr","t61str","unistr","utf8str","videostr"],u=["key","obj","use","optional","explicit","implicit","def","choice","any","contains"].concat(a);function h(t,e,r){const n={};this._baseState=n,n.name=r,n.enc=t,n.parent=e||null,n.children=null,n.tag=null,n.args=null,n.reverseArgs=null,n.choice=null,n.optional=!1,n.any=!1,n.obj=!1,n.use=null,n.useDecoder=null,n.key=null,n.default=null,n.explicit=null,n.implicit=null,n.contains=null,n.parent||(n.children=[],this._wrap())}t.exports=h;const c=["enc","parent","children","tag","args","reverseArgs","choice","optional","any","obj","use","alteredUse","key","default","explicit","implicit","contains"];h.prototype.clone=function(){const t=this._baseState,e={};c.forEach((function(r){e[r]=t[r]}));const r=new this.constructor(e.parent);return r._baseState=e,r},h.prototype._wrap=function(){const t=this._baseState;u.forEach((function(e){this[e]=function(){const r=new this.constructor(this);return t.children.push(r),r[e].apply(r,arguments)}}),this)},h.prototype._init=function(t){const e=this._baseState;o(null===e.parent),t.call(this),e.children=e.children.filter((function(t){return t._baseState.parent===this}),this),o.equal(e.children.length,1,"Root node can have only one child")},h.prototype._useArgs=function(t){const e=this._baseState,r=t.filter((function(t){return t instanceof this.constructor}),this);t=t.filter((function(t){return!(t instanceof this.constructor)}),this),0!==r.length&&(o(null===e.children),e.children=r,r.forEach((function(t){t._baseState.parent=this}),this)),0!==t.length&&(o(null===e.args),e.args=t,e.reverseArgs=t.map((function(t){if("object"!=typeof t||t.constructor!==Object)return t;const e={};return Object.keys(t).forEach((function(r){r==(0|r)&&(r|=0);const n=t[r];e[n]=r})),e})))},["_peekTag","_decodeTag","_use","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeInt","_decodeBool","_decodeList","_encodeComposite","_encodeStr","_encodeObjid","_encodeTime","_encodeNull","_encodeInt","_encodeBool"].forEach((function(t){h.prototype[t]=function(){const e=this._baseState;throw new Error(t+" not implemented for encoding: "+e.enc)}})),a.forEach((function(t){h.prototype[t]=function(){const e=this._baseState,r=Array.prototype.slice.call(arguments);return o(null===e.tag),e.tag=t,this._useArgs(r),this}})),h.prototype.use=function(t){o(t);const e=this._baseState;return o(null===e.use),e.use=t,this},h.prototype.optional=function(){return this._baseState.optional=!0,this},h.prototype.def=function(t){const e=this._baseState;return o(null===e.default),e.default=t,e.optional=!0,this},h.prototype.explicit=function(t){const e=this._baseState;return o(null===e.explicit&&null===e.implicit),e.explicit=t,this},h.prototype.implicit=function(t){const e=this._baseState;return o(null===e.explicit&&null===e.implicit),e.implicit=t,this},h.prototype.obj=function(){const t=this._baseState,e=Array.prototype.slice.call(arguments);return t.obj=!0,0!==e.length&&this._useArgs(e),this},h.prototype.key=function(t){const e=this._baseState;return o(null===e.key),e.key=t,this},h.prototype.any=function(){return this._baseState.any=!0,this},h.prototype.choice=function(t){const e=this._baseState;return o(null===e.choice),e.choice=t,this._useArgs(Object.keys(t).map((function(e){return t[e]}))),this},h.prototype.contains=function(t){const e=this._baseState;return o(null===e.use),e.contains=t,this},h.prototype._decode=function(t,e){const r=this._baseState;if(null===r.parent)return t.wrapResult(r.children[0]._decode(t,e));let n,i=r.default,o=!0,a=null;if(null!==r.key&&(a=t.enterKey(r.key)),r.optional){let n=null;if(null!==r.explicit?n=r.explicit:null!==r.implicit?n=r.implicit:null!==r.tag&&(n=r.tag),null!==n||r.any){if(o=this._peekTag(t,n,r.any),t.isError(o))return o}else{const n=t.save();try{null===r.choice?this._decodeGeneric(r.tag,t,e):this._decodeChoice(t,e),o=!0}catch(t){o=!1}t.restore(n)}}if(r.obj&&o&&(n=t.enterObject()),o){if(null!==r.explicit){const e=this._decodeTag(t,r.explicit);if(t.isError(e))return e;t=e}const n=t.offset;if(null===r.use&&null===r.choice){let e;r.any&&(e=t.save());const n=this._decodeTag(t,null!==r.implicit?r.implicit:r.tag,r.any);if(t.isError(n))return n;r.any?i=t.raw(e):t=n}if(e&&e.track&&null!==r.tag&&e.track(t.path(),n,t.length,"tagged"),e&&e.track&&null!==r.tag&&e.track(t.path(),t.offset,t.length,"content"),r.any||(i=null===r.choice?this._decodeGeneric(r.tag,t,e):this._decodeChoice(t,e)),t.isError(i))return i;if(r.any||null!==r.choice||null===r.children||r.children.forEach((function(r){r._decode(t,e)})),r.contains&&("octstr"===r.tag||"bitstr"===r.tag)){const n=new s(i);i=this._getUse(r.contains,t._reporterState.obj)._decode(n,e)}}return r.obj&&o&&(i=t.leaveObject(n)),null===r.key||null===i&&!0!==o?null!==a&&t.exitKey(a):t.leaveKey(a,r.key,i),i},h.prototype._decodeGeneric=function(t,e,r){const n=this._baseState;return"seq"===t||"set"===t?null:"seqof"===t||"setof"===t?this._decodeList(e,t,n.args[0],r):/str$/.test(t)?this._decodeStr(e,t,r):"objid"===t&&n.args?this._decodeObjid(e,n.args[0],n.args[1],r):"objid"===t?this._decodeObjid(e,null,null,r):"gentime"===t||"utctime"===t?this._decodeTime(e,t,r):"null_"===t?this._decodeNull(e,r):"bool"===t?this._decodeBool(e,r):"objDesc"===t?this._decodeStr(e,t,r):"int"===t||"enum"===t?this._decodeInt(e,n.args&&n.args[0],r):null!==n.use?this._getUse(n.use,e._reporterState.obj)._decode(e,r):e.error("unknown tag: "+t)},h.prototype._getUse=function(t,e){const r=this._baseState;return r.useDecoder=this._use(t,e),o(null===r.useDecoder._baseState.parent),r.useDecoder=r.useDecoder._baseState.children[0],r.implicit!==r.useDecoder._baseState.implicit&&(r.useDecoder=r.useDecoder.clone(),r.useDecoder._baseState.implicit=r.implicit),r.useDecoder},h.prototype._decodeChoice=function(t,e){const r=this._baseState;let n=null,i=!1;return Object.keys(r.choice).some((function(s){const o=t.save(),a=r.choice[s];try{const r=a._decode(t,e);if(t.isError(r))return!1;n={type:s,value:r},i=!0}catch(e){return t.restore(o),!1}return!0}),this),i?n:t.error("Choice not matched")},h.prototype._createEncoderBuffer=function(t){return new i(t,this.reporter)},h.prototype._encode=function(t,e,r){const n=this._baseState;if(null!==n.default&&n.default===t)return;const i=this._encodeValue(t,e,r);return void 0===i||this._skipDefault(i,e,r)?void 0:i},h.prototype._encodeValue=function(t,e,r){const i=this._baseState;if(null===i.parent)return i.children[0]._encode(t,e||new n);let s=null;if(this.reporter=e,i.optional&&void 0===t){if(null===i.default)return;t=i.default}let o=null,a=!1;if(i.any)s=this._createEncoderBuffer(t);else if(i.choice)s=this._encodeChoice(t,e);else if(i.contains)o=this._getUse(i.contains,r)._encode(t,e),a=!0;else if(i.children)o=i.children.map((function(r){if("null_"===r._baseState.tag)return r._encode(null,e,t);if(null===r._baseState.key)return e.error("Child should have a key");const n=e.enterKey(r._baseState.key);if("object"!=typeof t)return e.error("Child expected, but input is not object");const i=r._encode(t[r._baseState.key],e,t);return e.leaveKey(n),i}),this).filter((function(t){return t})),o=this._createEncoderBuffer(o);else if("seqof"===i.tag||"setof"===i.tag){if(!i.args||1!==i.args.length)return e.error("Too many args for : "+i.tag);if(!Array.isArray(t))return e.error("seqof/setof, but data is not Array");const r=this.clone();r._baseState.implicit=null,o=this._createEncoderBuffer(t.map((function(r){const n=this._baseState;return this._getUse(n.args[0],t)._encode(r,e)}),r))}else null!==i.use?s=this._getUse(i.use,r)._encode(t,e):(o=this._encodePrimitive(i.tag,t),a=!0);if(!i.any&&null===i.choice){const t=null!==i.implicit?i.implicit:i.tag,r=null===i.implicit?"universal":"context";null===t?null===i.use&&e.error("Tag could be omitted only for .use()"):null===i.use&&(s=this._encodeComposite(t,a,r,o))}return null!==i.explicit&&(s=this._encodeComposite(i.explicit,!1,"context",s)),s},h.prototype._encodeChoice=function(t,e){const r=this._baseState,n=r.choice[t.type];return n||o(!1,t.type+" not found in "+JSON.stringify(Object.keys(r.choice))),n._encode(t.value,e)},h.prototype._encodePrimitive=function(t,e){const r=this._baseState;if(/str$/.test(t))return this._encodeStr(e,t);if("objid"===t&&r.args)return this._encodeObjid(e,r.reverseArgs[0],r.args[1]);if("objid"===t)return this._encodeObjid(e,null,null);if("gentime"===t||"utctime"===t)return this._encodeTime(e,t);if("null_"===t)return this._encodeNull();if("int"===t||"enum"===t)return this._encodeInt(e,r.args&&r.reverseArgs[0]);if("bool"===t)return this._encodeBool(e);if("objDesc"===t)return this._encodeStr(e,t);throw new Error("Unsupported tag: "+t)},h.prototype._isNumstr=function(t){return/^[0-9 ]*$/.test(t)},h.prototype._isPrintstr=function(t){return/^[A-Za-z0-9 '()+,-./:=?]*$/.test(t)}},98465:(t,e,r)=>{"use strict";const n=r(35717);function i(t){this._reporterState={obj:null,path:[],options:t||{},errors:[]}}function s(t,e){this.path=t,this.rethrow(e)}e.b=i,i.prototype.isError=function(t){return t instanceof s},i.prototype.save=function(){const t=this._reporterState;return{obj:t.obj,pathLen:t.path.length}},i.prototype.restore=function(t){const e=this._reporterState;e.obj=t.obj,e.path=e.path.slice(0,t.pathLen)},i.prototype.enterKey=function(t){return this._reporterState.path.push(t)},i.prototype.exitKey=function(t){const e=this._reporterState;e.path=e.path.slice(0,t-1)},i.prototype.leaveKey=function(t,e,r){const n=this._reporterState;this.exitKey(t),null!==n.obj&&(n.obj[e]=r)},i.prototype.path=function(){return this._reporterState.path.join("/")},i.prototype.enterObject=function(){const t=this._reporterState,e=t.obj;return t.obj={},e},i.prototype.leaveObject=function(t){const e=this._reporterState,r=e.obj;return e.obj=t,r},i.prototype.error=function(t){let e;const r=this._reporterState,n=t instanceof s;if(e=n?t:new s(r.path.map((function(t){return"["+JSON.stringify(t)+"]"})).join(""),t.message||t,t.stack),!r.options.partial)throw e;return n||r.errors.push(e),e},i.prototype.wrapResult=function(t){const e=this._reporterState;return e.options.partial?{result:this.isError(t)?null:t,errors:e.errors}:t},n(s,Error),s.prototype.rethrow=function(t){if(this.message=t+" at: "+(this.path||"(shallow)"),Error.captureStackTrace&&Error.captureStackTrace(this,s),!this.stack)try{throw new Error(this.message)}catch(t){this.stack=t.stack}return this}},70160:(t,e)=>{"use strict";function r(t){const e={};return Object.keys(t).forEach((function(r){(0|r)==r&&(r|=0);const n=t[r];e[n]=r})),e}e.tagClass={0:"universal",1:"application",2:"context",3:"private"},e.tagClassByName=r(e.tagClass),e.tag={0:"end",1:"bool",2:"int",3:"bitstr",4:"octstr",5:"null_",6:"objid",7:"objDesc",8:"external",9:"real",10:"enum",11:"embed",12:"utf8str",13:"relativeOid",16:"seq",17:"set",18:"numstr",19:"printstr",20:"t61str",21:"videostr",22:"ia5str",23:"utctime",24:"gentime",25:"graphstr",26:"iso646str",27:"genstr",28:"unistr",29:"charstr",30:"bmpstr"},e.tagByName=r(e.tag)},36826:(t,e,r)=>{"use strict";const n=e;n._reverse=function(t){const e={};return Object.keys(t).forEach((function(r){(0|r)==r&&(r|=0);const n=t[r];e[n]=r})),e},n.der=r(70160)},41671:(t,e,r)=>{"use strict";const n=r(35717),i=r(4590),s=r(36625).C,o=r(41949),a=r(70160);function u(t){this.enc="der",this.name=t.name,this.entity=t,this.tree=new h,this.tree._init(t.body)}function h(t){o.call(this,"der",t)}function c(t,e){let r=t.readUInt8(e);if(t.isError(r))return r;const n=a.tagClass[r>>6],i=0==(32&r);if(31==(31&r)){let n=r;for(r=0;128==(128&n);){if(n=t.readUInt8(e),t.isError(n))return n;r<<=7,r|=127&n}}else r&=31;return{cls:n,primitive:i,tag:r,tagStr:a.tag[r]}}function l(t,e,r){let n=t.readUInt8(r);if(t.isError(n))return n;if(!e&&128===n)return null;if(0==(128&n))return n;const i=127&n;if(i>4)return t.error("length octect is too long");n=0;for(let e=0;e<i;e++){n<<=8;const e=t.readUInt8(r);if(t.isError(e))return e;n|=e}return n}t.exports=u,u.prototype.decode=function(t,e){return s.isDecoderBuffer(t)||(t=new s(t,e)),this.tree._decode(t,e)},n(h,o),h.prototype._peekTag=function(t,e,r){if(t.isEmpty())return!1;const n=t.save(),i=c(t,'Failed to peek tag: "'+e+'"');return t.isError(i)?i:(t.restore(n),i.tag===e||i.tagStr===e||i.tagStr+"of"===e||r)},h.prototype._decodeTag=function(t,e,r){const n=c(t,'Failed to decode tag of "'+e+'"');if(t.isError(n))return n;let i=l(t,n.primitive,'Failed to get length of "'+e+'"');if(t.isError(i))return i;if(!r&&n.tag!==e&&n.tagStr!==e&&n.tagStr+"of"!==e)return t.error('Failed to match tag: "'+e+'"');if(n.primitive||null!==i)return t.skip(i,'Failed to match body of: "'+e+'"');const s=t.save(),o=this._skipUntilEnd(t,'Failed to skip indefinite length body: "'+this.tag+'"');return t.isError(o)?o:(i=t.offset-s.offset,t.restore(s),t.skip(i,'Failed to match body of: "'+e+'"'))},h.prototype._skipUntilEnd=function(t,e){for(;;){const r=c(t,e);if(t.isError(r))return r;const n=l(t,r.primitive,e);if(t.isError(n))return n;let i;if(i=r.primitive||null!==n?t.skip(n):this._skipUntilEnd(t,e),t.isError(i))return i;if("end"===r.tagStr)break}},h.prototype._decodeList=function(t,e,r,n){const i=[];for(;!t.isEmpty();){const e=this._peekTag(t,"end");if(t.isError(e))return e;const s=r.decode(t,"der",n);if(t.isError(s)&&e)break;i.push(s)}return i},h.prototype._decodeStr=function(t,e){if("bitstr"===e){const e=t.readUInt8();return t.isError(e)?e:{unused:e,data:t.raw()}}if("bmpstr"===e){const e=t.raw();if(e.length%2==1)return t.error("Decoding of string type: bmpstr length mismatch");let r="";for(let t=0;t<e.length/2;t++)r+=String.fromCharCode(e.readUInt16BE(2*t));return r}if("numstr"===e){const e=t.raw().toString("ascii");return this._isNumstr(e)?e:t.error("Decoding of string type: numstr unsupported characters")}if("octstr"===e)return t.raw();if("objDesc"===e)return t.raw();if("printstr"===e){const e=t.raw().toString("ascii");return this._isPrintstr(e)?e:t.error("Decoding of string type: printstr unsupported characters")}return/str$/.test(e)?t.raw().toString():t.error("Decoding of string type: "+e+" unsupported")},h.prototype._decodeObjid=function(t,e,r){let n;const i=[];let s=0,o=0;for(;!t.isEmpty();)o=t.readUInt8(),s<<=7,s|=127&o,0==(128&o)&&(i.push(s),s=0);128&o&&i.push(s);const a=i[0]/40|0,u=i[0]%40;if(n=r?i:[a,u].concat(i.slice(1)),e){let t=e[n.join(" ")];void 0===t&&(t=e[n.join(".")]),void 0!==t&&(n=t)}return n},h.prototype._decodeTime=function(t,e){const r=t.raw().toString();let n,i,s,o,a,u;if("gentime"===e)n=0|r.slice(0,4),i=0|r.slice(4,6),s=0|r.slice(6,8),o=0|r.slice(8,10),a=0|r.slice(10,12),u=0|r.slice(12,14);else{if("utctime"!==e)return t.error("Decoding "+e+" time is not supported yet");n=0|r.slice(0,2),i=0|r.slice(2,4),s=0|r.slice(4,6),o=0|r.slice(6,8),a=0|r.slice(8,10),u=0|r.slice(10,12),n=n<70?2e3+n:1900+n}return Date.UTC(n,i-1,s,o,a,u,0)},h.prototype._decodeNull=function(){return null},h.prototype._decodeBool=function(t){const e=t.readUInt8();return t.isError(e)?e:0!==e},h.prototype._decodeInt=function(t,e){const r=t.raw();let n=new i(r);return e&&(n=e[n.toString(10)]||n),n},h.prototype._use=function(t,e){return"function"==typeof t&&(t=t(e)),t._getDecoder("der").tree}},78307:(t,e,r)=>{"use strict";const n=e;n.der=r(41671),n.pem=r(59631)},59631:(t,e,r)=>{"use strict";const n=r(35717),i=r(2399).Buffer,s=r(41671);function o(t){s.call(this,t),this.enc="pem"}n(o,s),t.exports=o,o.prototype.decode=function(t,e){const r=t.toString().split(/[\r\n]+/g),n=e.label.toUpperCase(),o=/^-----(BEGIN|END) ([^-]+)-----$/;let a=-1,u=-1;for(let t=0;t<r.length;t++){const e=r[t].match(o);if(null!==e&&e[2]===n){if(-1!==a){if("END"!==e[1])break;u=t;break}if("BEGIN"!==e[1])break;a=t}}if(-1===a||-1===u)throw new Error("PEM section not found for: "+n);const h=r.slice(a+1,u).join("");h.replace(/[^a-z0-9+/=]+/gi,"");const c=i.from(h,"base64");return s.prototype.decode.call(this,c,e)}},66984:(t,e,r)=>{"use strict";const n=r(35717),i=r(2399).Buffer,s=r(41949),o=r(70160);function a(t){this.enc="der",this.name=t.name,this.entity=t,this.tree=new u,this.tree._init(t.body)}function u(t){s.call(this,"der",t)}function h(t){return t<10?"0"+t:t}t.exports=a,a.prototype.encode=function(t,e){return this.tree._encode(t,e).join()},n(u,s),u.prototype._encodeComposite=function(t,e,r,n){const s=function(t,e,r,n){let i;"seqof"===t?t="seq":"setof"===t&&(t="set");if(o.tagByName.hasOwnProperty(t))i=o.tagByName[t];else{if("number"!=typeof t||(0|t)!==t)return n.error("Unknown tag: "+t);i=t}if(i>=31)return n.error("Multi-octet tag encoding unsupported");e||(i|=32);return i|=o.tagClassByName[r||"universal"]<<6,i}(t,e,r,this.reporter);if(n.length<128){const t=i.alloc(2);return t[0]=s,t[1]=n.length,this._createEncoderBuffer([t,n])}let a=1;for(let t=n.length;t>=256;t>>=8)a++;const u=i.alloc(2+a);u[0]=s,u[1]=128|a;for(let t=1+a,e=n.length;e>0;t--,e>>=8)u[t]=255&e;return this._createEncoderBuffer([u,n])},u.prototype._encodeStr=function(t,e){if("bitstr"===e)return this._createEncoderBuffer([0|t.unused,t.data]);if("bmpstr"===e){const e=i.alloc(2*t.length);for(let r=0;r<t.length;r++)e.writeUInt16BE(t.charCodeAt(r),2*r);return this._createEncoderBuffer(e)}return"numstr"===e?this._isNumstr(t)?this._createEncoderBuffer(t):this.reporter.error("Encoding of string type: numstr supports only digits and space"):"printstr"===e?this._isPrintstr(t)?this._createEncoderBuffer(t):this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark"):/str$/.test(e)||"objDesc"===e?this._createEncoderBuffer(t):this.reporter.error("Encoding of string type: "+e+" unsupported")},u.prototype._encodeObjid=function(t,e,r){if("string"==typeof t){if(!e)return this.reporter.error("string objid given, but no values map found");if(!e.hasOwnProperty(t))return this.reporter.error("objid not found in values map");t=e[t].split(/[\s.]+/g);for(let e=0;e<t.length;e++)t[e]|=0}else if(Array.isArray(t)){t=t.slice();for(let e=0;e<t.length;e++)t[e]|=0}if(!Array.isArray(t))return this.reporter.error("objid() should be either array or string, got: "+JSON.stringify(t));if(!r){if(t[1]>=40)return this.reporter.error("Second objid identifier OOB");t.splice(0,2,40*t[0]+t[1])}let n=0;for(let e=0;e<t.length;e++){let r=t[e];for(n++;r>=128;r>>=7)n++}const s=i.alloc(n);let o=s.length-1;for(let e=t.length-1;e>=0;e--){let r=t[e];for(s[o--]=127&r;(r>>=7)>0;)s[o--]=128|127&r}return this._createEncoderBuffer(s)},u.prototype._encodeTime=function(t,e){let r;const n=new Date(t);return"gentime"===e?r=[h(n.getUTCFullYear()),h(n.getUTCMonth()+1),h(n.getUTCDate()),h(n.getUTCHours()),h(n.getUTCMinutes()),h(n.getUTCSeconds()),"Z"].join(""):"utctime"===e?r=[h(n.getUTCFullYear()%100),h(n.getUTCMonth()+1),h(n.getUTCDate()),h(n.getUTCHours()),h(n.getUTCMinutes()),h(n.getUTCSeconds()),"Z"].join(""):this.reporter.error("Encoding "+e+" time is not supported yet"),this._encodeStr(r,"octstr")},u.prototype._encodeNull=function(){return this._createEncoderBuffer("")},u.prototype._encodeInt=function(t,e){if("string"==typeof t){if(!e)return this.reporter.error("String int or enum given, but no values map");if(!e.hasOwnProperty(t))return this.reporter.error("Values map doesn't contain: "+JSON.stringify(t));t=e[t]}if("number"!=typeof t&&!i.isBuffer(t)){const e=t.toArray();!t.sign&&128&e[0]&&e.unshift(0),t=i.from(e)}if(i.isBuffer(t)){let e=t.length;0===t.length&&e++;const r=i.alloc(e);return t.copy(r),0===t.length&&(r[0]=0),this._createEncoderBuffer(r)}if(t<128)return this._createEncoderBuffer(t);if(t<256)return this._createEncoderBuffer([0,t]);let r=1;for(let e=t;e>=256;e>>=8)r++;const n=new Array(r);for(let e=n.length-1;e>=0;e--)n[e]=255&t,t>>=8;return 128&n[0]&&n.unshift(0),this._createEncoderBuffer(i.from(n))},u.prototype._encodeBool=function(t){return this._createEncoderBuffer(t?255:0)},u.prototype._use=function(t,e){return"function"==typeof t&&(t=t(e)),t._getEncoder("der").tree},u.prototype._skipDefault=function(t,e,r){const n=this._baseState;let i;if(null===n.default)return!1;const s=t.join();if(void 0===n.defaultBuffer&&(n.defaultBuffer=this._encodeValue(n.default,e,r).join()),s.length!==n.defaultBuffer.length)return!1;for(i=0;i<s.length;i++)if(s[i]!==n.defaultBuffer[i])return!1;return!0}},56579:(t,e,r)=>{"use strict";const n=e;n.der=r(66984),n.pem=r(2883)},2883:(t,e,r)=>{"use strict";const n=r(35717),i=r(66984);function s(t){i.call(this,t),this.enc="pem"}n(s,i),t.exports=s,s.prototype.encode=function(t,e){const r=i.prototype.encode.call(this,t).toString("base64"),n=["-----BEGIN "+e.label+"-----"];for(let t=0;t<r.length;t+=64)n.push(r.slice(t,t+64));return n.push("-----END "+e.label+"-----"),n.join("\n")}},4590:function(t,e,r){!function(t,e){"use strict";function n(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(80950).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(t,e,r){var n=a(t,r);return r-1>=e&&(n|=a(t,r-1)<<4),n}function h(t,e,r,n){for(var i=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<t.length&&(16===e?this._parseHex(t,i,r):(this._parseBase(t,e,i),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var s,o,a=0;if("be"===r)for(i=t.length-1,s=0;i>=0;i-=3)o=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(i=0,s=0;i<t.length;i+=3)o=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,s=0,o=0;if("be"===r)for(n=t.length-1;n>=e;n-=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;else for(n=(t.length-e)%2==0?e+1:e;n<t.length;n+=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var s=t.length-r,o=s%n,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=n)u=h(t,c,c+n,e),this.imuln(i),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],s=0|e.words[0],o=i*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(i=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var i=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<i|s)).toString(16);r=0!==(s=a>>>24-i&16777215)||o!==this.length-1?c[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],f=d[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?m+r:c[h-m.length]+m+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return n(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var i=this.byteLength(),s=r||Math.max(1,i);n(i<=s,"byte array longer than desired length"),n(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-i;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){n("number"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},s.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,s=0;s<n.length;s++)e=(0|r.words[s])+(0|n.words[s])+i,this.words[s]=67108863&e,i=e>>>26;for(;0!==i&&s<r.length;s++)e=(0|r.words[s])+i,this.words[s]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var s=0,o=0;o<n.length;o++)s=(e=(0|r.words[o])-(0|n.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,r){var n,i,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,m=f>>>13,y=0|o[2],v=8191&y,g=y>>>13,b=0|o[3],w=8191&b,M=b>>>13,k=0|o[4],x=8191&k,P=k>>>13,L=0|o[5],T=8191&L,S=L>>>13,A=0|o[6],D=8191&A,j=A>>>13,H=0|o[7],O=8191&H,z=H>>>13,N=0|o[8],E=8191&N,Y=N>>>13,R=0|o[9],I=8191&R,B=R>>>13,X=0|a[0],V=8191&X,C=X>>>13,W=0|a[1],q=8191&W,Z=W>>>13,F=0|a[2],U=8191&F,G=F>>>13,_=0|a[3],K=8191&_,J=_>>>13,Q=0|a[4],$=8191&Q,tt=Q>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],st=8191&it,ot=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,mt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var yt=(h+(n=Math.imul(l,V))|0)+((8191&(i=(i=Math.imul(l,C))+Math.imul(d,V)|0))<<13)|0;h=((s=Math.imul(d,C))+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(p,V),i=(i=Math.imul(p,C))+Math.imul(m,V)|0,s=Math.imul(m,C);var vt=(h+(n=n+Math.imul(l,q)|0)|0)+((8191&(i=(i=i+Math.imul(l,Z)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,Z)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(v,V),i=(i=Math.imul(v,C))+Math.imul(g,V)|0,s=Math.imul(g,C),n=n+Math.imul(p,q)|0,i=(i=i+Math.imul(p,Z)|0)+Math.imul(m,q)|0,s=s+Math.imul(m,Z)|0;var gt=(h+(n=n+Math.imul(l,U)|0)|0)+((8191&(i=(i=i+Math.imul(l,G)|0)+Math.imul(d,U)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(w,V),i=(i=Math.imul(w,C))+Math.imul(M,V)|0,s=Math.imul(M,C),n=n+Math.imul(v,q)|0,i=(i=i+Math.imul(v,Z)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,Z)|0,n=n+Math.imul(p,U)|0,i=(i=i+Math.imul(p,G)|0)+Math.imul(m,U)|0,s=s+Math.imul(m,G)|0;var bt=(h+(n=n+Math.imul(l,K)|0)|0)+((8191&(i=(i=i+Math.imul(l,J)|0)+Math.imul(d,K)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(x,V),i=(i=Math.imul(x,C))+Math.imul(P,V)|0,s=Math.imul(P,C),n=n+Math.imul(w,q)|0,i=(i=i+Math.imul(w,Z)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,Z)|0,n=n+Math.imul(v,U)|0,i=(i=i+Math.imul(v,G)|0)+Math.imul(g,U)|0,s=s+Math.imul(g,G)|0,n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,J)|0)+Math.imul(m,K)|0,s=s+Math.imul(m,J)|0;var wt=(h+(n=n+Math.imul(l,$)|0)|0)+((8191&(i=(i=i+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(T,V),i=(i=Math.imul(T,C))+Math.imul(S,V)|0,s=Math.imul(S,C),n=n+Math.imul(x,q)|0,i=(i=i+Math.imul(x,Z)|0)+Math.imul(P,q)|0,s=s+Math.imul(P,Z)|0,n=n+Math.imul(w,U)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(M,U)|0,s=s+Math.imul(M,G)|0,n=n+Math.imul(v,K)|0,i=(i=i+Math.imul(v,J)|0)+Math.imul(g,K)|0,s=s+Math.imul(g,J)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,s=s+Math.imul(m,tt)|0;var Mt=(h+(n=n+Math.imul(l,rt)|0)|0)+((8191&(i=(i=i+Math.imul(l,nt)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,nt)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,C))+Math.imul(j,V)|0,s=Math.imul(j,C),n=n+Math.imul(T,q)|0,i=(i=i+Math.imul(T,Z)|0)+Math.imul(S,q)|0,s=s+Math.imul(S,Z)|0,n=n+Math.imul(x,U)|0,i=(i=i+Math.imul(x,G)|0)+Math.imul(P,U)|0,s=s+Math.imul(P,G)|0,n=n+Math.imul(w,K)|0,i=(i=i+Math.imul(w,J)|0)+Math.imul(M,K)|0,s=s+Math.imul(M,J)|0,n=n+Math.imul(v,$)|0,i=(i=i+Math.imul(v,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,s=s+Math.imul(m,nt)|0;var kt=(h+(n=n+Math.imul(l,st)|0)|0)+((8191&(i=(i=i+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(O,V),i=(i=Math.imul(O,C))+Math.imul(z,V)|0,s=Math.imul(z,C),n=n+Math.imul(D,q)|0,i=(i=i+Math.imul(D,Z)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,Z)|0,n=n+Math.imul(T,U)|0,i=(i=i+Math.imul(T,G)|0)+Math.imul(S,U)|0,s=s+Math.imul(S,G)|0,n=n+Math.imul(x,K)|0,i=(i=i+Math.imul(x,J)|0)+Math.imul(P,K)|0,s=s+Math.imul(P,J)|0,n=n+Math.imul(w,$)|0,i=(i=i+Math.imul(w,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,n=n+Math.imul(v,rt)|0,i=(i=i+Math.imul(v,nt)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,nt)|0,n=n+Math.imul(p,st)|0,i=(i=i+Math.imul(p,ot)|0)+Math.imul(m,st)|0,s=s+Math.imul(m,ot)|0;var xt=(h+(n=n+Math.imul(l,ut)|0)|0)+((8191&(i=(i=i+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(E,V),i=(i=Math.imul(E,C))+Math.imul(Y,V)|0,s=Math.imul(Y,C),n=n+Math.imul(O,q)|0,i=(i=i+Math.imul(O,Z)|0)+Math.imul(z,q)|0,s=s+Math.imul(z,Z)|0,n=n+Math.imul(D,U)|0,i=(i=i+Math.imul(D,G)|0)+Math.imul(j,U)|0,s=s+Math.imul(j,G)|0,n=n+Math.imul(T,K)|0,i=(i=i+Math.imul(T,J)|0)+Math.imul(S,K)|0,s=s+Math.imul(S,J)|0,n=n+Math.imul(x,$)|0,i=(i=i+Math.imul(x,tt)|0)+Math.imul(P,$)|0,s=s+Math.imul(P,tt)|0,n=n+Math.imul(w,rt)|0,i=(i=i+Math.imul(w,nt)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,nt)|0,n=n+Math.imul(v,st)|0,i=(i=i+Math.imul(v,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,s=s+Math.imul(m,ht)|0;var Pt=(h+(n=n+Math.imul(l,lt)|0)|0)+((8191&(i=(i=i+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(i>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,n=Math.imul(I,V),i=(i=Math.imul(I,C))+Math.imul(B,V)|0,s=Math.imul(B,C),n=n+Math.imul(E,q)|0,i=(i=i+Math.imul(E,Z)|0)+Math.imul(Y,q)|0,s=s+Math.imul(Y,Z)|0,n=n+Math.imul(O,U)|0,i=(i=i+Math.imul(O,G)|0)+Math.imul(z,U)|0,s=s+Math.imul(z,G)|0,n=n+Math.imul(D,K)|0,i=(i=i+Math.imul(D,J)|0)+Math.imul(j,K)|0,s=s+Math.imul(j,J)|0,n=n+Math.imul(T,$)|0,i=(i=i+Math.imul(T,tt)|0)+Math.imul(S,$)|0,s=s+Math.imul(S,tt)|0,n=n+Math.imul(x,rt)|0,i=(i=i+Math.imul(x,nt)|0)+Math.imul(P,rt)|0,s=s+Math.imul(P,nt)|0,n=n+Math.imul(w,st)|0,i=(i=i+Math.imul(w,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,n=n+Math.imul(v,ut)|0,i=(i=i+Math.imul(v,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0,n=n+Math.imul(p,lt)|0,i=(i=i+Math.imul(p,dt)|0)+Math.imul(m,lt)|0,s=s+Math.imul(m,dt)|0;var Lt=(h+(n=n+Math.imul(l,pt)|0)|0)+((8191&(i=(i=i+Math.imul(l,mt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,mt)|0)+(i>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,n=Math.imul(I,q),i=(i=Math.imul(I,Z))+Math.imul(B,q)|0,s=Math.imul(B,Z),n=n+Math.imul(E,U)|0,i=(i=i+Math.imul(E,G)|0)+Math.imul(Y,U)|0,s=s+Math.imul(Y,G)|0,n=n+Math.imul(O,K)|0,i=(i=i+Math.imul(O,J)|0)+Math.imul(z,K)|0,s=s+Math.imul(z,J)|0,n=n+Math.imul(D,$)|0,i=(i=i+Math.imul(D,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,n=n+Math.imul(T,rt)|0,i=(i=i+Math.imul(T,nt)|0)+Math.imul(S,rt)|0,s=s+Math.imul(S,nt)|0,n=n+Math.imul(x,st)|0,i=(i=i+Math.imul(x,ot)|0)+Math.imul(P,st)|0,s=s+Math.imul(P,ot)|0,n=n+Math.imul(w,ut)|0,i=(i=i+Math.imul(w,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,n=n+Math.imul(v,lt)|0,i=(i=i+Math.imul(v,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var Tt=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((s=s+Math.imul(m,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,n=Math.imul(I,U),i=(i=Math.imul(I,G))+Math.imul(B,U)|0,s=Math.imul(B,G),n=n+Math.imul(E,K)|0,i=(i=i+Math.imul(E,J)|0)+Math.imul(Y,K)|0,s=s+Math.imul(Y,J)|0,n=n+Math.imul(O,$)|0,i=(i=i+Math.imul(O,tt)|0)+Math.imul(z,$)|0,s=s+Math.imul(z,tt)|0,n=n+Math.imul(D,rt)|0,i=(i=i+Math.imul(D,nt)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,nt)|0,n=n+Math.imul(T,st)|0,i=(i=i+Math.imul(T,ot)|0)+Math.imul(S,st)|0,s=s+Math.imul(S,ot)|0,n=n+Math.imul(x,ut)|0,i=(i=i+Math.imul(x,ht)|0)+Math.imul(P,ut)|0,s=s+Math.imul(P,ht)|0,n=n+Math.imul(w,lt)|0,i=(i=i+Math.imul(w,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var St=(h+(n=n+Math.imul(v,pt)|0)|0)+((8191&(i=(i=i+Math.imul(v,mt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(I,K),i=(i=Math.imul(I,J))+Math.imul(B,K)|0,s=Math.imul(B,J),n=n+Math.imul(E,$)|0,i=(i=i+Math.imul(E,tt)|0)+Math.imul(Y,$)|0,s=s+Math.imul(Y,tt)|0,n=n+Math.imul(O,rt)|0,i=(i=i+Math.imul(O,nt)|0)+Math.imul(z,rt)|0,s=s+Math.imul(z,nt)|0,n=n+Math.imul(D,st)|0,i=(i=i+Math.imul(D,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,n=n+Math.imul(T,ut)|0,i=(i=i+Math.imul(T,ht)|0)+Math.imul(S,ut)|0,s=s+Math.imul(S,ht)|0,n=n+Math.imul(x,lt)|0,i=(i=i+Math.imul(x,dt)|0)+Math.imul(P,lt)|0,s=s+Math.imul(P,dt)|0;var At=(h+(n=n+Math.imul(w,pt)|0)|0)+((8191&(i=(i=i+Math.imul(w,mt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,mt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(I,$),i=(i=Math.imul(I,tt))+Math.imul(B,$)|0,s=Math.imul(B,tt),n=n+Math.imul(E,rt)|0,i=(i=i+Math.imul(E,nt)|0)+Math.imul(Y,rt)|0,s=s+Math.imul(Y,nt)|0,n=n+Math.imul(O,st)|0,i=(i=i+Math.imul(O,ot)|0)+Math.imul(z,st)|0,s=s+Math.imul(z,ot)|0,n=n+Math.imul(D,ut)|0,i=(i=i+Math.imul(D,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,n=n+Math.imul(T,lt)|0,i=(i=i+Math.imul(T,dt)|0)+Math.imul(S,lt)|0,s=s+Math.imul(S,dt)|0;var Dt=(h+(n=n+Math.imul(x,pt)|0)|0)+((8191&(i=(i=i+Math.imul(x,mt)|0)+Math.imul(P,pt)|0))<<13)|0;h=((s=s+Math.imul(P,mt)|0)+(i>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,n=Math.imul(I,rt),i=(i=Math.imul(I,nt))+Math.imul(B,rt)|0,s=Math.imul(B,nt),n=n+Math.imul(E,st)|0,i=(i=i+Math.imul(E,ot)|0)+Math.imul(Y,st)|0,s=s+Math.imul(Y,ot)|0,n=n+Math.imul(O,ut)|0,i=(i=i+Math.imul(O,ht)|0)+Math.imul(z,ut)|0,s=s+Math.imul(z,ht)|0,n=n+Math.imul(D,lt)|0,i=(i=i+Math.imul(D,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var jt=(h+(n=n+Math.imul(T,pt)|0)|0)+((8191&(i=(i=i+Math.imul(T,mt)|0)+Math.imul(S,pt)|0))<<13)|0;h=((s=s+Math.imul(S,mt)|0)+(i>>>13)|0)+(jt>>>26)|0,jt&=67108863,n=Math.imul(I,st),i=(i=Math.imul(I,ot))+Math.imul(B,st)|0,s=Math.imul(B,ot),n=n+Math.imul(E,ut)|0,i=(i=i+Math.imul(E,ht)|0)+Math.imul(Y,ut)|0,s=s+Math.imul(Y,ht)|0,n=n+Math.imul(O,lt)|0,i=(i=i+Math.imul(O,dt)|0)+Math.imul(z,lt)|0,s=s+Math.imul(z,dt)|0;var Ht=(h+(n=n+Math.imul(D,pt)|0)|0)+((8191&(i=(i=i+Math.imul(D,mt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,mt)|0)+(i>>>13)|0)+(Ht>>>26)|0,Ht&=67108863,n=Math.imul(I,ut),i=(i=Math.imul(I,ht))+Math.imul(B,ut)|0,s=Math.imul(B,ht),n=n+Math.imul(E,lt)|0,i=(i=i+Math.imul(E,dt)|0)+Math.imul(Y,lt)|0,s=s+Math.imul(Y,dt)|0;var Ot=(h+(n=n+Math.imul(O,pt)|0)|0)+((8191&(i=(i=i+Math.imul(O,mt)|0)+Math.imul(z,pt)|0))<<13)|0;h=((s=s+Math.imul(z,mt)|0)+(i>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,n=Math.imul(I,lt),i=(i=Math.imul(I,dt))+Math.imul(B,lt)|0,s=Math.imul(B,dt);var zt=(h+(n=n+Math.imul(E,pt)|0)|0)+((8191&(i=(i=i+Math.imul(E,mt)|0)+Math.imul(Y,pt)|0))<<13)|0;h=((s=s+Math.imul(Y,mt)|0)+(i>>>13)|0)+(zt>>>26)|0,zt&=67108863;var Nt=(h+(n=Math.imul(I,pt))|0)+((8191&(i=(i=Math.imul(I,mt))+Math.imul(B,pt)|0))<<13)|0;return h=((s=Math.imul(B,mt))+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=yt,u[1]=vt,u[2]=gt,u[3]=bt,u[4]=wt,u[5]=Mt,u[6]=kt,u[7]=xt,u[8]=Pt,u[9]=Lt,u[10]=Tt,u[11]=St,u[12]=At,u[13]=Dt,u[14]=jt,u[15]=Ht,u[16]=Ot,u[17]=zt,u[18]=Nt,0!==h&&(u[19]=h,r.length++),r};function m(t,e,r){return(new y).mulp(t,e,r)}function y(t,e){this.x=t,this.y=e}Math.imul||(p=f),s.prototype.mulTo=function(t,e){var r,n=this.length+t.length;return r=10===this.length&&10===t.length?p(this,t,e):n<63?f(this,t,e):n<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,s=0;s<r.length-1;s++){var o=i;i=0;for(var a=67108863&n,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),i+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,n=o,o=i}return 0!==n?r.words[s]=n:r.length--,r.strip()}(this,t,e):m(this,t,e),r},y.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},y.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},y.prototype.permute=function(t,e,r,n,i,s){for(var o=0;o<s;o++)n[o]=e[t[o]],i[o]=r[t[o]]},y.prototype.transform=function(t,e,r,n,i,s){this.permute(s,t,e,r,n,i);for(var o=1;o<i;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<i;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],m=n[c+f],y=r[c+f+o],v=n[c+f+o],g=l*y-d*v;v=l*v+d*y,y=g,r[c+f]=p+y,n[c+f]=m+v,r[c+f+o]=p-y,n[c+f+o]=m-v,f!==a&&(g=u*l-h*d,d=u*d+h*l,l=g)}},y.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},y.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},y.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},y.prototype.convert13b=function(t,e,r,i){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<i;++o)r[o]=0;n(0===s),n(0==(-8192&s))},y.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},y.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),s=this.stub(n),o=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),c=new Array(n),l=new Array(n),d=r.words;d.length=n,this.convert13b(t.words,t.length,o,n),this.convert13b(e.words,e.length,h,n),this.transform(o,s,a,u,n,i),this.transform(h,s,c,l,n,i);for(var f=0;f<n;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,n),this.transform(a,u,d,s,n,i),this.conjugate(d,s,n),this.normalize13b(d,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),m(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var e=0,r=0;r<this.length;r++){var i=(0|this.words[r])*t,s=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=(t.words[n]&1<<i)>>>i}return e}(t);if(0===e.length)return new s(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},s.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},s.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var i;n("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(i-=o,i=Math.max(0,i),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=i);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r)&&!!(this.words[r]&i)},s.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var i,s,o=t.length+r;this._expand(o);var a=0;for(i=0;i<t.length;i++){s=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&s}for(;i<this.length-r;i++)a=(s=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&s;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(s=-(0|this.words[i])+a)>>26,this.words[i]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,o=0|i.words[i.length-1];0!==(r=26-this._countBits(o))&&(i=i.ushln(r),n.iushln(r),o=0|i.words[i.length-1]);var a,u=n.length-i.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=n.clone()._ishlnsubmul(i,1,u);0===c.negative&&(n=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|n.words[i.length+l])+(0|n.words[i.length+l-1]);for(d=Math.min(d/o|0,67108863),n._ishlnsubmul(i,d,l);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(i,1,l),n.isZero()||(n.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),n.strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},s.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(i=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:i,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var i,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),s=r.cmp(n);return s<0||1===i&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){n(t<=67108863);for(var e=(1<<26)%t,r=0,i=this.length-1;i>=0;i--)r=(e*r+(0|this.words[i]))%t;return r},s.prototype.idivn=function(t){n(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*e;this.words[r]=i/t|0,e=i%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(c),o.isub(l)),i.iushrn(1),o.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),o.isub(u)):(r.isub(e),a.isub(i),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(i=0===e.cmpn(1)?o:a).cmpn(0)<0&&i.iadd(t),i},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var s=e;e=r,r=s}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){n("number"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var s=i,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new x(t)},s.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function g(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){g.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){g.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function M(){g.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function k(){g.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function x(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function P(t){x.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}g.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},g.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},g.prototype.split=function(t,e){t.iushrn(this.n,0,e)},g.prototype.imulK=function(t){return t.imul(this.k)},i(b,g),b.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,i=10;i<t.length;i++){var o=0|t.words[i];t.words[i-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[i-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(w,g),i(M,g),i(k,g),k.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(v[t])return v[t];var e;if("k256"===t)e=new b;else if("p224"===t)e=new w;else if("p192"===t)e=new M;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new k}return v[t]=e,e},x.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},x.prototype._verify2=function(t,e){n(0==(t.negative|e.negative),"red works only with positives"),n(t.red&&t.red===e.red,"red works only with red numbers")},x.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},x.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},x.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},x.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},x.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},x.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},x.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},x.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},x.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},x.prototype.isqr=function(t){return this.imul(t,t.clone())},x.prototype.sqr=function(t){return this.mul(t,t)},x.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),o=0;!i.isZero()&&0===i.andln(1);)o++,i.iushrn(1);n(!i.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,i),d=this.pow(t,i.addn(1).iushrn(1)),f=this.pow(t,i),p=o;0!==f.cmp(a);){for(var m=f,y=0;0!==m.cmp(a);y++)m=m.redSqr();n(y<p);var v=this.pow(l,new s(1).iushln(p-y-1));d=d.redMul(v),l=v.redSqr(),f=f.redMul(l),p=y}return d},x.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},x.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],c=u-1;c>=0;c--){var l=h>>c&1;i!==r[0]&&(i=this.sqr(i)),0!==l||0!==o?(o<<=1,o|=l,(4===++a||0===n&&0===c)&&(i=this.mul(i,r[o]),a=0,o=0)):a=0}u=26}return i},x.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},x.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new P(t)},i(P,x),P.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},P.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},P.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},P.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},P.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},69282:(t,e,r)=>{"use strict";var n=r(34155);function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}var s,o,a=r(62136).codes,u=a.ERR_AMBIGUOUS_ARGUMENT,h=a.ERR_INVALID_ARG_TYPE,c=a.ERR_INVALID_ARG_VALUE,l=a.ERR_INVALID_RETURN_VALUE,d=a.ERR_MISSING_ARGS,f=r(25961),p=r(89539).inspect,m=r(89539).types,y=m.isPromise,v=m.isRegExp,g=Object.assign?Object.assign:r(8091).assign,b=Object.is?Object.is:r(20609);new Map;function w(){var t=r(19158);s=t.isDeepEqual,o=t.isDeepStrictEqual}var M=!1,k=t.exports=T,x={};function P(t){if(t.message instanceof Error)throw t.message;throw new f(t)}function L(t,e,r,n){if(!r){var i=!1;if(0===e)i=!0,n="No value argument passed to `assert.ok()`";else if(n instanceof Error)throw n;var s=new f({actual:r,expected:!0,message:n,operator:"==",stackStartFn:t});throw s.generatedMessage=i,s}}function T(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];L.apply(void 0,[T,e.length].concat(e))}k.fail=function t(e,r,i,s,o){var a,u=arguments.length;if(0===u)a="Failed";else if(1===u)i=e,e=void 0;else{if(!1===M){M=!0;var h=n.emitWarning?n.emitWarning:console.warn.bind(console);h("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.","DeprecationWarning","DEP0094")}2===u&&(s="!=")}if(i instanceof Error)throw i;var c={actual:e,expected:r,operator:void 0===s?"fail":s,stackStartFn:o||t};void 0!==i&&(c.message=i);var l=new f(c);throw a&&(l.message=a,l.generatedMessage=!0),l},k.AssertionError=f,k.ok=T,k.equal=function t(e,r,n){if(arguments.length<2)throw new d("actual","expected");e!=r&&P({actual:e,expected:r,message:n,operator:"==",stackStartFn:t})},k.notEqual=function t(e,r,n){if(arguments.length<2)throw new d("actual","expected");e==r&&P({actual:e,expected:r,message:n,operator:"!=",stackStartFn:t})},k.deepEqual=function t(e,r,n){if(arguments.length<2)throw new d("actual","expected");void 0===s&&w(),s(e,r)||P({actual:e,expected:r,message:n,operator:"deepEqual",stackStartFn:t})},k.notDeepEqual=function t(e,r,n){if(arguments.length<2)throw new d("actual","expected");void 0===s&&w(),s(e,r)&&P({actual:e,expected:r,message:n,operator:"notDeepEqual",stackStartFn:t})},k.deepStrictEqual=function t(e,r,n){if(arguments.length<2)throw new d("actual","expected");void 0===s&&w(),o(e,r)||P({actual:e,expected:r,message:n,operator:"deepStrictEqual",stackStartFn:t})},k.notDeepStrictEqual=function t(e,r,n){if(arguments.length<2)throw new d("actual","expected");void 0===s&&w();o(e,r)&&P({actual:e,expected:r,message:n,operator:"notDeepStrictEqual",stackStartFn:t})},k.strictEqual=function t(e,r,n){if(arguments.length<2)throw new d("actual","expected");b(e,r)||P({actual:e,expected:r,message:n,operator:"strictEqual",stackStartFn:t})},k.notStrictEqual=function t(e,r,n){if(arguments.length<2)throw new d("actual","expected");b(e,r)&&P({actual:e,expected:r,message:n,operator:"notStrictEqual",stackStartFn:t})};var S=function t(e,r,n){var i=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),r.forEach((function(t){t in e&&(void 0!==n&&"string"==typeof n[t]&&v(e[t])&&e[t].test(n[t])?i[t]=n[t]:i[t]=e[t])}))};function A(t,e,r,n,i,s){if(!(r in t)||!o(t[r],e[r])){if(!n){var a=new S(t,i),u=new S(e,i,t),h=new f({actual:a,expected:u,operator:"deepStrictEqual",stackStartFn:s});throw h.actual=t,h.expected=e,h.operator=s.name,h}P({actual:t,expected:e,message:n,operator:s.name,stackStartFn:s})}}function D(t,e,r,n){if("function"!=typeof e){if(v(e))return e.test(t);if(2===arguments.length)throw new h("expected",["Function","RegExp"],e);if("object"!==i(t)||null===t){var o=new f({actual:t,expected:e,message:r,operator:"deepStrictEqual",stackStartFn:n});throw o.operator=n.name,o}var a=Object.keys(e);if(e instanceof Error)a.push("name","message");else if(0===a.length)throw new c("error",e,"may not be an empty object");return void 0===s&&w(),a.forEach((function(i){"string"==typeof t[i]&&v(e[i])&&e[i].test(t[i])||A(t,e,i,r,a,n)})),!0}return void 0!==e.prototype&&t instanceof e||!Error.isPrototypeOf(e)&&!0===e.call({},t)}function j(t){if("function"!=typeof t)throw new h("fn","Function",t);try{t()}catch(t){return t}return x}function H(t){return y(t)||null!==t&&"object"===i(t)&&"function"==typeof t.then&&"function"==typeof t.catch}function O(t){return Promise.resolve().then((function(){var e;if("function"==typeof t){if(!H(e=t()))throw new l("instance of Promise","promiseFn",e)}else{if(!H(t))throw new h("promiseFn",["Function","Promise"],t);e=t}return Promise.resolve().then((function(){return e})).then((function(){return x})).catch((function(t){return t}))}))}function z(t,e,r,n){if("string"==typeof r){if(4===arguments.length)throw new h("error",["Object","Error","Function","RegExp"],r);if("object"===i(e)&&null!==e){if(e.message===r)throw new u("error/message",'The error message "'.concat(e.message,'" is identical to the message.'))}else if(e===r)throw new u("error/message",'The error "'.concat(e,'" is identical to the message.'));n=r,r=void 0}else if(null!=r&&"object"!==i(r)&&"function"!=typeof r)throw new h("error",["Object","Error","Function","RegExp"],r);if(e===x){var s="";r&&r.name&&(s+=" (".concat(r.name,")")),s+=n?": ".concat(n):".";var o="rejects"===t.name?"rejection":"exception";P({actual:void 0,expected:r,operator:t.name,message:"Missing expected ".concat(o).concat(s),stackStartFn:t})}if(r&&!D(e,r,n,t))throw e}function N(t,e,r,n){if(e!==x){if("string"==typeof r&&(n=r,r=void 0),!r||D(e,r)){var i=n?": ".concat(n):".",s="doesNotReject"===t.name?"rejection":"exception";P({actual:e,expected:r,operator:t.name,message:"Got unwanted ".concat(s).concat(i,"\n")+'Actual message: "'.concat(e&&e.message,'"'),stackStartFn:t})}throw e}}function E(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];L.apply(void 0,[E,e.length].concat(e))}k.throws=function t(e){for(var r=arguments.length,n=new Array(r>1?r-1:0),i=1;i<r;i++)n[i-1]=arguments[i];z.apply(void 0,[t,j(e)].concat(n))},k.rejects=function t(e){for(var r=arguments.length,n=new Array(r>1?r-1:0),i=1;i<r;i++)n[i-1]=arguments[i];return O(e).then((function(e){return z.apply(void 0,[t,e].concat(n))}))},k.doesNotThrow=function t(e){for(var r=arguments.length,n=new Array(r>1?r-1:0),i=1;i<r;i++)n[i-1]=arguments[i];N.apply(void 0,[t,j(e)].concat(n))},k.doesNotReject=function t(e){for(var r=arguments.length,n=new Array(r>1?r-1:0),i=1;i<r;i++)n[i-1]=arguments[i];return O(e).then((function(e){return N.apply(void 0,[t,e].concat(n))}))},k.ifError=function t(e){if(null!=e){var r="ifError got unwanted exception: ";"object"===i(e)&&"string"==typeof e.message?0===e.message.length&&e.constructor?r+=e.constructor.name:r+=e.message:r+=p(e);var n=new f({actual:e,expected:null,operator:"ifError",message:r,stackStartFn:t}),s=e.stack;if("string"==typeof s){var o=s.split("\n");o.shift();for(var a=n.stack.split("\n"),u=0;u<o.length;u++){var h=a.indexOf(o[u]);if(-1!==h){a=a.slice(0,h);break}}n.stack="".concat(a.join("\n"),"\n").concat(o.join("\n"))}throw n}},k.strict=g(E,k,{equal:k.strictEqual,deepEqual:k.deepStrictEqual,notEqual:k.notStrictEqual,notDeepEqual:k.notDeepStrictEqual}),k.strict.strict=k.strict},25961:(t,e,r)=>{"use strict";var n=r(34155);function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function s(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function o(t,e){return!e||"object"!==f(e)&&"function"!=typeof e?a(t):e}function a(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function u(t){var e="function"==typeof Map?new Map:void 0;return u=function(t){if(null===t||(r=t,-1===Function.toString.call(r).indexOf("[native code]")))return t;var r;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,n)}function n(){return c(t,arguments,d(this).constructor)}return n.prototype=Object.create(t.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),l(n,t)},u(t)}function h(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}function c(t,e,r){return c=h()?Reflect.construct:function(t,e,r){var n=[null];n.push.apply(n,e);var i=new(Function.bind.apply(t,n));return r&&l(i,r.prototype),i},c.apply(null,arguments)}function l(t,e){return l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},l(t,e)}function d(t){return d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},d(t)}function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}var p=r(89539).inspect,m=r(62136).codes.ERR_INVALID_ARG_TYPE;function y(t,e,r){return(void 0===r||r>t.length)&&(r=t.length),t.substring(r-e.length,r)===e}var v="",g="",b="",w="",M={deepStrictEqual:"Expected values to be strictly deep-equal:",strictEqual:"Expected values to be strictly equal:",strictEqualObject:'Expected "actual" to be reference-equal to "expected":',deepEqual:"Expected values to be loosely deep-equal:",equal:"Expected values to be loosely equal:",notDeepStrictEqual:'Expected "actual" not to be strictly deep-equal to:',notStrictEqual:'Expected "actual" to be strictly unequal to:',notStrictEqualObject:'Expected "actual" not to be reference-equal to "expected":',notDeepEqual:'Expected "actual" not to be loosely deep-equal to:',notEqual:'Expected "actual" to be loosely unequal to:',notIdentical:"Values identical but not reference-equal:"};function k(t){var e=Object.keys(t),r=Object.create(Object.getPrototypeOf(t));return e.forEach((function(e){r[e]=t[e]})),Object.defineProperty(r,"message",{value:t.message}),r}function x(t){return p(t,{compact:!1,customInspect:!1,depth:1e3,maxArrayLength:1/0,showHidden:!1,breakLength:1/0,showProxy:!1,sorted:!0,getters:!0})}function P(t,e,r){var i="",s="",o=0,a="",u=!1,h=x(t),c=h.split("\n"),l=x(e).split("\n"),d=0,p="";if("strictEqual"===r&&"object"===f(t)&&"object"===f(e)&&null!==t&&null!==e&&(r="strictEqualObject"),1===c.length&&1===l.length&&c[0]!==l[0]){var m=c[0].length+l[0].length;if(m<=10){if(!("object"===f(t)&&null!==t||"object"===f(e)&&null!==e||0===t&&0===e))return"".concat(M[r],"\n\n")+"".concat(c[0]," !== ").concat(l[0],"\n")}else if("strictEqualObject"!==r){if(m<(n.stderr&&n.stderr.isTTY?n.stderr.columns:80)){for(;c[0][d]===l[0][d];)d++;d>2&&(p="\n  ".concat(function(t,e){if(e=Math.floor(e),0==t.length||0==e)return"";var r=t.length*e;for(e=Math.floor(Math.log(e)/Math.log(2));e;)t+=t,e--;return t+t.substring(0,r-t.length)}(" ",d),"^"),d=0)}}}for(var k=c[c.length-1],P=l[l.length-1];k===P&&(d++<2?a="\n  ".concat(k).concat(a):i=k,c.pop(),l.pop(),0!==c.length&&0!==l.length);)k=c[c.length-1],P=l[l.length-1];var L=Math.max(c.length,l.length);if(0===L){var T=h.split("\n");if(T.length>30)for(T[26]="".concat(v,"...").concat(w);T.length>27;)T.pop();return"".concat(M.notIdentical,"\n\n").concat(T.join("\n"),"\n")}d>3&&(a="\n".concat(v,"...").concat(w).concat(a),u=!0),""!==i&&(a="\n  ".concat(i).concat(a),i="");var S=0,A=M[r]+"\n".concat(g,"+ actual").concat(w," ").concat(b,"- expected").concat(w),D=" ".concat(v,"...").concat(w," Lines skipped");for(d=0;d<L;d++){var j=d-o;if(c.length<d+1)j>1&&d>2&&(j>4?(s+="\n".concat(v,"...").concat(w),u=!0):j>3&&(s+="\n  ".concat(l[d-2]),S++),s+="\n  ".concat(l[d-1]),S++),o=d,i+="\n".concat(b,"-").concat(w," ").concat(l[d]),S++;else if(l.length<d+1)j>1&&d>2&&(j>4?(s+="\n".concat(v,"...").concat(w),u=!0):j>3&&(s+="\n  ".concat(c[d-2]),S++),s+="\n  ".concat(c[d-1]),S++),o=d,s+="\n".concat(g,"+").concat(w," ").concat(c[d]),S++;else{var H=l[d],O=c[d],z=O!==H&&(!y(O,",")||O.slice(0,-1)!==H);z&&y(H,",")&&H.slice(0,-1)===O&&(z=!1,O+=","),z?(j>1&&d>2&&(j>4?(s+="\n".concat(v,"...").concat(w),u=!0):j>3&&(s+="\n  ".concat(c[d-2]),S++),s+="\n  ".concat(c[d-1]),S++),o=d,s+="\n".concat(g,"+").concat(w," ").concat(O),i+="\n".concat(b,"-").concat(w," ").concat(H),S+=2):(s+=i,i="",1!==j&&0!==d||(s+="\n  ".concat(O),S++))}if(S>20&&d<L-2)return"".concat(A).concat(D,"\n").concat(s,"\n").concat(v,"...").concat(w).concat(i,"\n")+"".concat(v,"...").concat(w)}return"".concat(A).concat(u?D:"","\n").concat(s).concat(i).concat(a).concat(p)}var L=function(t){function e(t){var r;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),"object"!==f(t)||null===t)throw new m("options","Object",t);var i=t.message,s=t.operator,u=t.stackStartFn,h=t.actual,c=t.expected,l=Error.stackTraceLimit;if(Error.stackTraceLimit=0,null!=i)r=o(this,d(e).call(this,String(i)));else if(n.stderr&&n.stderr.isTTY&&(n.stderr&&n.stderr.getColorDepth&&1!==n.stderr.getColorDepth()?(v="[34m",g="[32m",w="[39m",b="[31m"):(v="",g="",w="",b="")),"object"===f(h)&&null!==h&&"object"===f(c)&&null!==c&&"stack"in h&&h instanceof Error&&"stack"in c&&c instanceof Error&&(h=k(h),c=k(c)),"deepStrictEqual"===s||"strictEqual"===s)r=o(this,d(e).call(this,P(h,c,s)));else if("notDeepStrictEqual"===s||"notStrictEqual"===s){var p=M[s],y=x(h).split("\n");if("notStrictEqual"===s&&"object"===f(h)&&null!==h&&(p=M.notStrictEqualObject),y.length>30)for(y[26]="".concat(v,"...").concat(w);y.length>27;)y.pop();r=1===y.length?o(this,d(e).call(this,"".concat(p," ").concat(y[0]))):o(this,d(e).call(this,"".concat(p,"\n\n").concat(y.join("\n"),"\n")))}else{var L=x(h),T="",S=M[s];"notDeepEqual"===s||"notEqual"===s?(L="".concat(M[s],"\n\n").concat(L)).length>1024&&(L="".concat(L.slice(0,1021),"...")):(T="".concat(x(c)),L.length>512&&(L="".concat(L.slice(0,509),"...")),T.length>512&&(T="".concat(T.slice(0,509),"...")),"deepEqual"===s||"equal"===s?L="".concat(S,"\n\n").concat(L,"\n\nshould equal\n\n"):T=" ".concat(s," ").concat(T)),r=o(this,d(e).call(this,"".concat(L).concat(T)))}return Error.stackTraceLimit=l,r.generatedMessage=!i,Object.defineProperty(a(r),"name",{value:"AssertionError [ERR_ASSERTION]",enumerable:!1,writable:!0,configurable:!0}),r.code="ERR_ASSERTION",r.actual=h,r.expected=c,r.operator=s,Error.captureStackTrace&&Error.captureStackTrace(a(r),u),r.stack,r.name="AssertionError",o(r)}var r,u,h;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&l(t,e)}(e,t),r=e,u=[{key:"toString",value:function(){return"".concat(this.name," [").concat(this.code,"]: ").concat(this.message)}},{key:p.custom,value:function(t,e){return p(this,function(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable})))),n.forEach((function(e){i(t,e,r[e])}))}return t}({},e,{customInspect:!1,depth:0}))}}],u&&s(r.prototype,u),h&&s(r,h),e}(u(Error));t.exports=L},62136:(t,e,r)=>{"use strict";function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}function i(t,e){return!e||"object"!==n(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function s(t){return s=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},s(t)}function o(t,e){return o=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},o(t,e)}var a,u,h={};function c(t,e,r){r||(r=Error);var n=function(r){function n(r,o,a){var u;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),u=i(this,s(n).call(this,function(t,r,n){return"string"==typeof e?e:e(t,r,n)}(r,o,a))),u.code=t,u}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&o(t,e)}(n,r),n}(r);h[t]=n}function l(t,e){if(Array.isArray(t)){var r=t.length;return t=t.map((function(t){return String(t)})),r>2?"one of ".concat(e," ").concat(t.slice(0,r-1).join(", "),", or ")+t[r-1]:2===r?"one of ".concat(e," ").concat(t[0]," or ").concat(t[1]):"of ".concat(e," ").concat(t[0])}return"of ".concat(e," ").concat(String(t))}c("ERR_AMBIGUOUS_ARGUMENT",'The "%s" argument is ambiguous. %s',TypeError),c("ERR_INVALID_ARG_TYPE",(function(t,e,i){var s,o,u,h;if(void 0===a&&(a=r(69282)),a("string"==typeof t,"'name' must be a string"),"string"==typeof e&&(o="not ",e.substr(!u||u<0?0:+u,o.length)===o)?(s="must not be",e=e.replace(/^not /,"")):s="must be",function(t,e,r){return(void 0===r||r>t.length)&&(r=t.length),t.substring(r-e.length,r)===e}(t," argument"))h="The ".concat(t," ").concat(s," ").concat(l(e,"type"));else{var c=function(t,e,r){return"number"!=typeof r&&(r=0),!(r+e.length>t.length)&&-1!==t.indexOf(e,r)}(t,".")?"property":"argument";h='The "'.concat(t,'" ').concat(c," ").concat(s," ").concat(l(e,"type"))}return h+=". Received type ".concat(n(i))}),TypeError),c("ERR_INVALID_ARG_VALUE",(function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"is invalid";void 0===u&&(u=r(89539));var i=u.inspect(e);return i.length>128&&(i="".concat(i.slice(0,128),"...")),"The argument '".concat(t,"' ").concat(n,". Received ").concat(i)}),TypeError,RangeError),c("ERR_INVALID_RETURN_VALUE",(function(t,e,r){var i;return i=r&&r.constructor&&r.constructor.name?"instance of ".concat(r.constructor.name):"type ".concat(n(r)),"Expected ".concat(t,' to be returned from the "').concat(e,'"')+" function but got ".concat(i,".")}),TypeError),c("ERR_MISSING_ARGS",(function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];void 0===a&&(a=r(69282)),a(e.length>0,"At least one arg needs to be specified");var i="The ",s=e.length;switch(e=e.map((function(t){return'"'.concat(t,'"')})),s){case 1:i+="".concat(e[0]," argument");break;case 2:i+="".concat(e[0]," and ").concat(e[1]," arguments");break;default:i+=e.slice(0,s-1).join(", "),i+=", and ".concat(e[s-1]," arguments")}return"".concat(i," must be specified")}),TypeError),t.exports.codes=h},19158:(t,e,r)=>{"use strict";function n(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=[],n=!0,i=!1,s=void 0;try{for(var o,a=t[Symbol.iterator]();!(n=(o=a.next()).done)&&(r.push(o.value),!e||r.length!==e);n=!0);}catch(t){i=!0,s=t}finally{try{n||null==a.return||a.return()}finally{if(i)throw s}}return r}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}var s=void 0!==/a/g.flags,o=function(t){var e=[];return t.forEach((function(t){return e.push(t)})),e},a=function(t){var e=[];return t.forEach((function(t,r){return e.push([r,t])})),e},u=Object.is?Object.is:r(20609),h=Object.getOwnPropertySymbols?Object.getOwnPropertySymbols:function(){return[]},c=Number.isNaN?Number.isNaN:r(20360);function l(t){return t.call.bind(t)}var d=l(Object.prototype.hasOwnProperty),f=l(Object.prototype.propertyIsEnumerable),p=l(Object.prototype.toString),m=r(89539).types,y=m.isAnyArrayBuffer,v=m.isArrayBufferView,g=m.isDate,b=m.isMap,w=m.isRegExp,M=m.isSet,k=m.isNativeError,x=m.isBoxedPrimitive,P=m.isNumberObject,L=m.isStringObject,T=m.isBooleanObject,S=m.isBigIntObject,A=m.isSymbolObject,D=m.isFloat32Array,j=m.isFloat64Array;function H(t){if(0===t.length||t.length>10)return!0;for(var e=0;e<t.length;e++){var r=t.charCodeAt(e);if(r<48||r>57)return!0}return 10===t.length&&t>=Math.pow(2,32)}function O(t){return Object.keys(t).filter(H).concat(h(t).filter(Object.prototype.propertyIsEnumerable.bind(t)))}
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */function z(t,e){if(t===e)return 0;for(var r=t.length,n=e.length,i=0,s=Math.min(r,n);i<s;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0}function N(t,e,r,n){if(t===e)return 0!==t||(!r||u(t,e));if(r){if("object"!==i(t))return"number"==typeof t&&c(t)&&c(e);if("object"!==i(e)||null===t||null===e)return!1;if(Object.getPrototypeOf(t)!==Object.getPrototypeOf(e))return!1}else{if(null===t||"object"!==i(t))return(null===e||"object"!==i(e))&&t==e;if(null===e||"object"!==i(e))return!1}var o,a,h,l,d=p(t);if(d!==p(e))return!1;if(Array.isArray(t)){if(t.length!==e.length)return!1;var f=O(t),m=O(e);return f.length===m.length&&Y(t,e,r,n,1,f)}if("[object Object]"===d&&(!b(t)&&b(e)||!M(t)&&M(e)))return!1;if(g(t)){if(!g(e)||Date.prototype.getTime.call(t)!==Date.prototype.getTime.call(e))return!1}else if(w(t)){if(!w(e)||(h=t,l=e,!(s?h.source===l.source&&h.flags===l.flags:RegExp.prototype.toString.call(h)===RegExp.prototype.toString.call(l))))return!1}else if(k(t)||t instanceof Error){if(t.message!==e.message||t.name!==e.name)return!1}else{if(v(t)){if(r||!D(t)&&!j(t)){if(!function(t,e){return t.byteLength===e.byteLength&&0===z(new Uint8Array(t.buffer,t.byteOffset,t.byteLength),new Uint8Array(e.buffer,e.byteOffset,e.byteLength))}(t,e))return!1}else if(!function(t,e){if(t.byteLength!==e.byteLength)return!1;for(var r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}(t,e))return!1;var H=O(t),N=O(e);return H.length===N.length&&Y(t,e,r,n,0,H)}if(M(t))return!(!M(e)||t.size!==e.size)&&Y(t,e,r,n,2);if(b(t))return!(!b(e)||t.size!==e.size)&&Y(t,e,r,n,3);if(y(t)){if(a=e,(o=t).byteLength!==a.byteLength||0!==z(new Uint8Array(o),new Uint8Array(a)))return!1}else if(x(t)&&!function(t,e){return P(t)?P(e)&&u(Number.prototype.valueOf.call(t),Number.prototype.valueOf.call(e)):L(t)?L(e)&&String.prototype.valueOf.call(t)===String.prototype.valueOf.call(e):T(t)?T(e)&&Boolean.prototype.valueOf.call(t)===Boolean.prototype.valueOf.call(e):S(t)?S(e)&&BigInt.prototype.valueOf.call(t)===BigInt.prototype.valueOf.call(e):A(e)&&Symbol.prototype.valueOf.call(t)===Symbol.prototype.valueOf.call(e)}(t,e))return!1}return Y(t,e,r,n,0)}function E(t,e){return e.filter((function(e){return f(t,e)}))}function Y(t,e,r,n,i,s){if(5===arguments.length){s=Object.keys(t);var o=Object.keys(e);if(s.length!==o.length)return!1}for(var a=0;a<s.length;a++)if(!d(e,s[a]))return!1;if(r&&5===arguments.length){var u=h(t);if(0!==u.length){var c=0;for(a=0;a<u.length;a++){var l=u[a];if(f(t,l)){if(!f(e,l))return!1;s.push(l),c++}else if(f(e,l))return!1}var p=h(e);if(u.length!==p.length&&E(e,p).length!==c)return!1}else{var m=h(e);if(0!==m.length&&0!==E(e,m).length)return!1}}if(0===s.length&&(0===i||1===i&&0===t.length||0===t.size))return!0;if(void 0===n)n={val1:new Map,val2:new Map,position:0};else{var y=n.val1.get(t);if(void 0!==y){var v=n.val2.get(e);if(void 0!==v)return y===v}n.position++}n.val1.set(t,n.position),n.val2.set(e,n.position);var g=C(t,e,r,s,n,i);return n.val1.delete(t),n.val2.delete(e),g}function R(t,e,r,n){for(var i=o(t),s=0;s<i.length;s++){var a=i[s];if(N(e,a,r,n))return t.delete(a),!0}return!1}function I(t){switch(i(t)){case"undefined":return null;case"object":return;case"symbol":return!1;case"string":t=+t;case"number":if(c(t))return!1}return!0}function B(t,e,r){var n=I(r);return null!=n?n:e.has(n)&&!t.has(n)}function X(t,e,r,n,i){var s=I(r);if(null!=s)return s;var o=e.get(s);return!(void 0===o&&!e.has(s)||!N(n,o,!1,i))&&(!t.has(s)&&N(n,o,!1,i))}function V(t,e,r,n,i,s){for(var a=o(t),u=0;u<a.length;u++){var h=a[u];if(N(r,h,i,s)&&N(n,e.get(h),i,s))return t.delete(h),!0}return!1}function C(t,e,r,s,u,h){var c=0;if(2===h){if(!function(t,e,r,n){for(var s=null,a=o(t),u=0;u<a.length;u++){var h=a[u];if("object"===i(h)&&null!==h)null===s&&(s=new Set),s.add(h);else if(!e.has(h)){if(r)return!1;if(!B(t,e,h))return!1;null===s&&(s=new Set),s.add(h)}}if(null!==s){for(var c=o(e),l=0;l<c.length;l++){var d=c[l];if("object"===i(d)&&null!==d){if(!R(s,d,r,n))return!1}else if(!r&&!t.has(d)&&!R(s,d,r,n))return!1}return 0===s.size}return!0}(t,e,r,u))return!1}else if(3===h){if(!function(t,e,r,s){for(var o=null,u=a(t),h=0;h<u.length;h++){var c=n(u[h],2),l=c[0],d=c[1];if("object"===i(l)&&null!==l)null===o&&(o=new Set),o.add(l);else{var f=e.get(l);if(void 0===f&&!e.has(l)||!N(d,f,r,s)){if(r)return!1;if(!X(t,e,l,d,s))return!1;null===o&&(o=new Set),o.add(l)}}}if(null!==o){for(var p=a(e),m=0;m<p.length;m++){var y=n(p[m],2),v=(l=y[0],y[1]);if("object"===i(l)&&null!==l){if(!V(o,t,l,v,r,s))return!1}else if(!(r||t.has(l)&&N(t.get(l),v,!1,s)||V(o,t,l,v,!1,s)))return!1}return 0===o.size}return!0}(t,e,r,u))return!1}else if(1===h)for(;c<t.length;c++){if(!d(t,c)){if(d(e,c))return!1;for(var l=Object.keys(t);c<l.length;c++){var f=l[c];if(!d(e,f)||!N(t[f],e[f],r,u))return!1}return l.length===Object.keys(e).length}if(!d(e,c)||!N(t[c],e[c],r,u))return!1}for(c=0;c<s.length;c++){var p=s[c];if(!N(t[p],e[p],r,u))return!1}return!0}t.exports={isDeepEqual:function(t,e){return N(t,e,false)},isDeepStrictEqual:function(t,e){return N(t,e,true)}}},9669:(t,e,r)=>{t.exports=r(51609)},55448:(t,e,r)=>{"use strict";var n=r(64867),i=r(36026),s=r(4372),o=r(15327),a=r(94097),u=r(84109),h=r(67985),c=r(85061),l=r(45655),d=r(65263);t.exports=function(t){return new Promise((function(e,r){var f,p=t.data,m=t.headers,y=t.responseType;function v(){t.cancelToken&&t.cancelToken.unsubscribe(f),t.signal&&t.signal.removeEventListener("abort",f)}n.isFormData(p)&&delete m["Content-Type"];var g=new XMLHttpRequest;if(t.auth){var b=t.auth.username||"",w=t.auth.password?unescape(encodeURIComponent(t.auth.password)):"";m.Authorization="Basic "+btoa(b+":"+w)}var M=a(t.baseURL,t.url);function k(){if(g){var n="getAllResponseHeaders"in g?u(g.getAllResponseHeaders()):null,s={data:y&&"text"!==y&&"json"!==y?g.response:g.responseText,status:g.status,statusText:g.statusText,headers:n,config:t,request:g};i((function(t){e(t),v()}),(function(t){r(t),v()}),s),g=null}}if(g.open(t.method.toUpperCase(),o(M,t.params,t.paramsSerializer),!0),g.timeout=t.timeout,"onloadend"in g?g.onloadend=k:g.onreadystatechange=function(){g&&4===g.readyState&&(0!==g.status||g.responseURL&&0===g.responseURL.indexOf("file:"))&&setTimeout(k)},g.onabort=function(){g&&(r(c("Request aborted",t,"ECONNABORTED",g)),g=null)},g.onerror=function(){r(c("Network Error",t,null,g)),g=null},g.ontimeout=function(){var e=t.timeout?"timeout of "+t.timeout+"ms exceeded":"timeout exceeded",n=t.transitional||l.transitional;t.timeoutErrorMessage&&(e=t.timeoutErrorMessage),r(c(e,t,n.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",g)),g=null},n.isStandardBrowserEnv()){var x=(t.withCredentials||h(M))&&t.xsrfCookieName?s.read(t.xsrfCookieName):void 0;x&&(m[t.xsrfHeaderName]=x)}"setRequestHeader"in g&&n.forEach(m,(function(t,e){void 0===p&&"content-type"===e.toLowerCase()?delete m[e]:g.setRequestHeader(e,t)})),n.isUndefined(t.withCredentials)||(g.withCredentials=!!t.withCredentials),y&&"json"!==y&&(g.responseType=t.responseType),"function"==typeof t.onDownloadProgress&&g.addEventListener("progress",t.onDownloadProgress),"function"==typeof t.onUploadProgress&&g.upload&&g.upload.addEventListener("progress",t.onUploadProgress),(t.cancelToken||t.signal)&&(f=function(t){g&&(r(!t||t&&t.type?new d("canceled"):t),g.abort(),g=null)},t.cancelToken&&t.cancelToken.subscribe(f),t.signal&&(t.signal.aborted?f():t.signal.addEventListener("abort",f))),p||(p=null),g.send(p)}))}},51609:(t,e,r)=>{"use strict";var n=r(64867),i=r(91849),s=r(30321),o=r(47185);var a=function t(e){var r=new s(e),a=i(s.prototype.request,r);return n.extend(a,s.prototype,r),n.extend(a,r),a.create=function(r){return t(o(e,r))},a}(r(45655));a.Axios=s,a.Cancel=r(65263),a.CancelToken=r(14972),a.isCancel=r(26502),a.VERSION=r(97288).version,a.all=function(t){return Promise.all(t)},a.spread=r(8713),a.isAxiosError=r(16268),t.exports=a,t.exports.default=a},65263:t=>{"use strict";function e(t){this.message=t}e.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},e.prototype.__CANCEL__=!0,t.exports=e},14972:(t,e,r)=>{"use strict";var n=r(65263);function i(t){if("function"!=typeof t)throw new TypeError("executor must be a function.");var e;this.promise=new Promise((function(t){e=t}));var r=this;this.promise.then((function(t){if(r._listeners){var e,n=r._listeners.length;for(e=0;e<n;e++)r._listeners[e](t);r._listeners=null}})),this.promise.then=function(t){var e,n=new Promise((function(t){r.subscribe(t),e=t})).then(t);return n.cancel=function(){r.unsubscribe(e)},n},t((function(t){r.reason||(r.reason=new n(t),e(r.reason))}))}i.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},i.prototype.subscribe=function(t){this.reason?t(this.reason):this._listeners?this._listeners.push(t):this._listeners=[t]},i.prototype.unsubscribe=function(t){if(this._listeners){var e=this._listeners.indexOf(t);-1!==e&&this._listeners.splice(e,1)}},i.source=function(){var t;return{token:new i((function(e){t=e})),cancel:t}},t.exports=i},26502:t=>{"use strict";t.exports=function(t){return!(!t||!t.__CANCEL__)}},30321:(t,e,r)=>{"use strict";var n=r(64867),i=r(15327),s=r(80782),o=r(13572),a=r(47185),u=r(54875),h=u.validators;function c(t){this.defaults=t,this.interceptors={request:new s,response:new s}}c.prototype.request=function(t){"string"==typeof t?(t=arguments[1]||{}).url=arguments[0]:t=t||{},(t=a(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var e=t.transitional;void 0!==e&&u.assertOptions(e,{silentJSONParsing:h.transitional(h.boolean),forcedJSONParsing:h.transitional(h.boolean),clarifyTimeoutError:h.transitional(h.boolean)},!1);var r=[],n=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(t)||(n=n&&e.synchronous,r.unshift(e.fulfilled,e.rejected))}));var i,s=[];if(this.interceptors.response.forEach((function(t){s.push(t.fulfilled,t.rejected)})),!n){var c=[o,void 0];for(Array.prototype.unshift.apply(c,r),c=c.concat(s),i=Promise.resolve(t);c.length;)i=i.then(c.shift(),c.shift());return i}for(var l=t;r.length;){var d=r.shift(),f=r.shift();try{l=d(l)}catch(t){f(t);break}}try{i=o(l)}catch(t){return Promise.reject(t)}for(;s.length;)i=i.then(s.shift(),s.shift());return i},c.prototype.getUri=function(t){return t=a(this.defaults,t),i(t.url,t.params,t.paramsSerializer).replace(/^\?/,"")},n.forEach(["delete","get","head","options"],(function(t){c.prototype[t]=function(e,r){return this.request(a(r||{},{method:t,url:e,data:(r||{}).data}))}})),n.forEach(["post","put","patch"],(function(t){c.prototype[t]=function(e,r,n){return this.request(a(n||{},{method:t,url:e,data:r}))}})),t.exports=c},80782:(t,e,r)=>{"use strict";var n=r(64867);function i(){this.handlers=[]}i.prototype.use=function(t,e,r){return this.handlers.push({fulfilled:t,rejected:e,synchronous:!!r&&r.synchronous,runWhen:r?r.runWhen:null}),this.handlers.length-1},i.prototype.eject=function(t){this.handlers[t]&&(this.handlers[t]=null)},i.prototype.forEach=function(t){n.forEach(this.handlers,(function(e){null!==e&&t(e)}))},t.exports=i},94097:(t,e,r)=>{"use strict";var n=r(91793),i=r(7303);t.exports=function(t,e){return t&&!n(e)?i(t,e):e}},85061:(t,e,r)=>{"use strict";var n=r(80481);t.exports=function(t,e,r,i,s){var o=new Error(t);return n(o,e,r,i,s)}},13572:(t,e,r)=>{"use strict";var n=r(64867),i=r(18527),s=r(26502),o=r(45655),a=r(65263);function u(t){if(t.cancelToken&&t.cancelToken.throwIfRequested(),t.signal&&t.signal.aborted)throw new a("canceled")}t.exports=function(t){return u(t),t.headers=t.headers||{},t.data=i.call(t,t.data,t.headers,t.transformRequest),t.headers=n.merge(t.headers.common||{},t.headers[t.method]||{},t.headers),n.forEach(["delete","get","head","post","put","patch","common"],(function(e){delete t.headers[e]})),(t.adapter||o.adapter)(t).then((function(e){return u(t),e.data=i.call(t,e.data,e.headers,t.transformResponse),e}),(function(e){return s(e)||(u(t),e&&e.response&&(e.response.data=i.call(t,e.response.data,e.response.headers,t.transformResponse))),Promise.reject(e)}))}},80481:t=>{"use strict";t.exports=function(t,e,r,n,i){return t.config=e,r&&(t.code=r),t.request=n,t.response=i,t.isAxiosError=!0,t.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},t}},47185:(t,e,r)=>{"use strict";var n=r(64867);t.exports=function(t,e){e=e||{};var r={};function i(t,e){return n.isPlainObject(t)&&n.isPlainObject(e)?n.merge(t,e):n.isPlainObject(e)?n.merge({},e):n.isArray(e)?e.slice():e}function s(r){return n.isUndefined(e[r])?n.isUndefined(t[r])?void 0:i(void 0,t[r]):i(t[r],e[r])}function o(t){if(!n.isUndefined(e[t]))return i(void 0,e[t])}function a(r){return n.isUndefined(e[r])?n.isUndefined(t[r])?void 0:i(void 0,t[r]):i(void 0,e[r])}function u(r){return r in e?i(t[r],e[r]):r in t?i(void 0,t[r]):void 0}var h={url:o,method:o,data:o,baseURL:a,transformRequest:a,transformResponse:a,paramsSerializer:a,timeout:a,timeoutMessage:a,withCredentials:a,adapter:a,responseType:a,xsrfCookieName:a,xsrfHeaderName:a,onUploadProgress:a,onDownloadProgress:a,decompress:a,maxContentLength:a,maxBodyLength:a,transport:a,httpAgent:a,httpsAgent:a,cancelToken:a,socketPath:a,responseEncoding:a,validateStatus:u};return n.forEach(Object.keys(t).concat(Object.keys(e)),(function(t){var e=h[t]||s,i=e(t);n.isUndefined(i)&&e!==u||(r[t]=i)})),r}},36026:(t,e,r)=>{"use strict";var n=r(85061);t.exports=function(t,e,r){var i=r.config.validateStatus;r.status&&i&&!i(r.status)?e(n("Request failed with status code "+r.status,r.config,null,r.request,r)):t(r)}},18527:(t,e,r)=>{"use strict";var n=r(64867),i=r(45655);t.exports=function(t,e,r){var s=this||i;return n.forEach(r,(function(r){t=r.call(s,t,e)})),t}},45655:(t,e,r)=>{"use strict";var n=r(34155),i=r(64867),s=r(16016),o=r(80481),a={"Content-Type":"application/x-www-form-urlencoded"};function u(t,e){!i.isUndefined(t)&&i.isUndefined(t["Content-Type"])&&(t["Content-Type"]=e)}var h,c={transitional:{silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},adapter:(("undefined"!=typeof XMLHttpRequest||void 0!==n&&"[object process]"===Object.prototype.toString.call(n))&&(h=r(55448)),h),transformRequest:[function(t,e){return s(e,"Accept"),s(e,"Content-Type"),i.isFormData(t)||i.isArrayBuffer(t)||i.isBuffer(t)||i.isStream(t)||i.isFile(t)||i.isBlob(t)?t:i.isArrayBufferView(t)?t.buffer:i.isURLSearchParams(t)?(u(e,"application/x-www-form-urlencoded;charset=utf-8"),t.toString()):i.isObject(t)||e&&"application/json"===e["Content-Type"]?(u(e,"application/json"),function(t,e,r){if(i.isString(t))try{return(e||JSON.parse)(t),i.trim(t)}catch(t){if("SyntaxError"!==t.name)throw t}return(r||JSON.stringify)(t)}(t)):t}],transformResponse:[function(t){var e=this.transitional||c.transitional,r=e&&e.silentJSONParsing,n=e&&e.forcedJSONParsing,s=!r&&"json"===this.responseType;if(s||n&&i.isString(t)&&t.length)try{return JSON.parse(t)}catch(t){if(s){if("SyntaxError"===t.name)throw o(t,this,"E_JSON_PARSE");throw t}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};i.forEach(["delete","get","head"],(function(t){c.headers[t]={}})),i.forEach(["post","put","patch"],(function(t){c.headers[t]=i.merge(a)})),t.exports=c},97288:t=>{t.exports={version:"0.24.0"}},91849:t=>{"use strict";t.exports=function(t,e){return function(){for(var r=new Array(arguments.length),n=0;n<r.length;n++)r[n]=arguments[n];return t.apply(e,r)}}},15327:(t,e,r)=>{"use strict";var n=r(64867);function i(t){return encodeURIComponent(t).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}t.exports=function(t,e,r){if(!e)return t;var s;if(r)s=r(e);else if(n.isURLSearchParams(e))s=e.toString();else{var o=[];n.forEach(e,(function(t,e){null!=t&&(n.isArray(t)?e+="[]":t=[t],n.forEach(t,(function(t){n.isDate(t)?t=t.toISOString():n.isObject(t)&&(t=JSON.stringify(t)),o.push(i(e)+"="+i(t))})))})),s=o.join("&")}if(s){var a=t.indexOf("#");-1!==a&&(t=t.slice(0,a)),t+=(-1===t.indexOf("?")?"?":"&")+s}return t}},7303:t=>{"use strict";t.exports=function(t,e){return e?t.replace(/\/+$/,"")+"/"+e.replace(/^\/+/,""):t}},4372:(t,e,r)=>{"use strict";var n=r(64867);t.exports=n.isStandardBrowserEnv()?{write:function(t,e,r,i,s,o){var a=[];a.push(t+"="+encodeURIComponent(e)),n.isNumber(r)&&a.push("expires="+new Date(r).toGMTString()),n.isString(i)&&a.push("path="+i),n.isString(s)&&a.push("domain="+s),!0===o&&a.push("secure"),document.cookie=a.join("; ")},read:function(t){var e=document.cookie.match(new RegExp("(^|;\\s*)("+t+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove:function(t){this.write(t,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},91793:t=>{"use strict";t.exports=function(t){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t)}},16268:t=>{"use strict";t.exports=function(t){return"object"==typeof t&&!0===t.isAxiosError}},67985:(t,e,r)=>{"use strict";var n=r(64867);t.exports=n.isStandardBrowserEnv()?function(){var t,e=/(msie|trident)/i.test(navigator.userAgent),r=document.createElement("a");function i(t){var n=t;return e&&(r.setAttribute("href",n),n=r.href),r.setAttribute("href",n),{href:r.href,protocol:r.protocol?r.protocol.replace(/:$/,""):"",host:r.host,search:r.search?r.search.replace(/^\?/,""):"",hash:r.hash?r.hash.replace(/^#/,""):"",hostname:r.hostname,port:r.port,pathname:"/"===r.pathname.charAt(0)?r.pathname:"/"+r.pathname}}return t=i(window.location.href),function(e){var r=n.isString(e)?i(e):e;return r.protocol===t.protocol&&r.host===t.host}}():function(){return!0}},16016:(t,e,r)=>{"use strict";var n=r(64867);t.exports=function(t,e){n.forEach(t,(function(r,n){n!==e&&n.toUpperCase()===e.toUpperCase()&&(t[e]=r,delete t[n])}))}},84109:(t,e,r)=>{"use strict";var n=r(64867),i=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];t.exports=function(t){var e,r,s,o={};return t?(n.forEach(t.split("\n"),(function(t){if(s=t.indexOf(":"),e=n.trim(t.substr(0,s)).toLowerCase(),r=n.trim(t.substr(s+1)),e){if(o[e]&&i.indexOf(e)>=0)return;o[e]="set-cookie"===e?(o[e]?o[e]:[]).concat([r]):o[e]?o[e]+", "+r:r}})),o):o}},8713:t=>{"use strict";t.exports=function(t){return function(e){return t.apply(null,e)}}},54875:(t,e,r)=>{"use strict";var n=r(97288).version,i={};["object","boolean","number","function","string","symbol"].forEach((function(t,e){i[t]=function(r){return typeof r===t||"a"+(e<1?"n ":" ")+t}}));var s={};i.transitional=function(t,e,r){function i(t,e){return"[Axios v"+n+"] Transitional option '"+t+"'"+e+(r?". "+r:"")}return function(r,n,o){if(!1===t)throw new Error(i(n," has been removed"+(e?" in "+e:"")));return e&&!s[n]&&(s[n]=!0,console.warn(i(n," has been deprecated since v"+e+" and will be removed in the near future"))),!t||t(r,n,o)}},t.exports={assertOptions:function(t,e,r){if("object"!=typeof t)throw new TypeError("options must be an object");for(var n=Object.keys(t),i=n.length;i-- >0;){var s=n[i],o=e[s];if(o){var a=t[s],u=void 0===a||o(a,s,t);if(!0!==u)throw new TypeError("option "+s+" must be "+u)}else if(!0!==r)throw Error("Unknown option "+s)}},validators:i}},64867:(t,e,r)=>{"use strict";var n=r(91849),i=Object.prototype.toString;function s(t){return"[object Array]"===i.call(t)}function o(t){return void 0===t}function a(t){return null!==t&&"object"==typeof t}function u(t){if("[object Object]"!==i.call(t))return!1;var e=Object.getPrototypeOf(t);return null===e||e===Object.prototype}function h(t){return"[object Function]"===i.call(t)}function c(t,e){if(null!=t)if("object"!=typeof t&&(t=[t]),s(t))for(var r=0,n=t.length;r<n;r++)e.call(null,t[r],r,t);else for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.call(null,t[i],i,t)}t.exports={isArray:s,isArrayBuffer:function(t){return"[object ArrayBuffer]"===i.call(t)},isBuffer:function(t){return null!==t&&!o(t)&&null!==t.constructor&&!o(t.constructor)&&"function"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)},isFormData:function(t){return"undefined"!=typeof FormData&&t instanceof FormData},isArrayBufferView:function(t){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(t):t&&t.buffer&&t.buffer instanceof ArrayBuffer},isString:function(t){return"string"==typeof t},isNumber:function(t){return"number"==typeof t},isObject:a,isPlainObject:u,isUndefined:o,isDate:function(t){return"[object Date]"===i.call(t)},isFile:function(t){return"[object File]"===i.call(t)},isBlob:function(t){return"[object Blob]"===i.call(t)},isFunction:h,isStream:function(t){return a(t)&&h(t.pipe)},isURLSearchParams:function(t){return"undefined"!=typeof URLSearchParams&&t instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:c,merge:function t(){var e={};function r(r,n){u(e[n])&&u(r)?e[n]=t(e[n],r):u(r)?e[n]=t({},r):s(r)?e[n]=r.slice():e[n]=r}for(var n=0,i=arguments.length;n<i;n++)c(arguments[n],r);return e},extend:function(t,e,r){return c(e,(function(e,i){t[i]=r&&"function"==typeof e?n(e,r):e})),t},trim:function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")},stripBOM:function(t){return 65279===t.charCodeAt(0)&&(t=t.slice(1)),t}}},79742:(t,e)=>{"use strict";e.byteLength=function(t){var e=u(t),r=e[0],n=e[1];return 3*(r+n)/4-n},e.toByteArray=function(t){var e,r,s=u(t),o=s[0],a=s[1],h=new i(function(t,e,r){return 3*(e+r)/4-r}(0,o,a)),c=0,l=a>0?o-4:o;for(r=0;r<l;r+=4)e=n[t.charCodeAt(r)]<<18|n[t.charCodeAt(r+1)]<<12|n[t.charCodeAt(r+2)]<<6|n[t.charCodeAt(r+3)],h[c++]=e>>16&255,h[c++]=e>>8&255,h[c++]=255&e;2===a&&(e=n[t.charCodeAt(r)]<<2|n[t.charCodeAt(r+1)]>>4,h[c++]=255&e);1===a&&(e=n[t.charCodeAt(r)]<<10|n[t.charCodeAt(r+1)]<<4|n[t.charCodeAt(r+2)]>>2,h[c++]=e>>8&255,h[c++]=255&e);return h},e.fromByteArray=function(t){for(var e,n=t.length,i=n%3,s=[],o=16383,a=0,u=n-i;a<u;a+=o)s.push(h(t,a,a+o>u?u:a+o));1===i?(e=t[n-1],s.push(r[e>>2]+r[e<<4&63]+"==")):2===i&&(e=(t[n-2]<<8)+t[n-1],s.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"="));return s.join("")};for(var r=[],n=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,a=s.length;o<a;++o)r[o]=s[o],n[s.charCodeAt(o)]=o;function u(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=t.indexOf("=");return-1===r&&(r=e),[r,r===e?0:4-r%4]}function h(t,e,n){for(var i,s,o=[],a=e;a<n;a+=3)i=(t[a]<<16&16711680)+(t[a+1]<<8&65280)+(255&t[a+2]),o.push(r[(s=i)>>18&63]+r[s>>12&63]+r[s>>6&63]+r[63&s]);return o.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},8442:(t,e,r)=>{const n=r(99488);function i(t,e,r){const n=t[e]+t[r];let i=t[e+1]+t[r+1];n>=4294967296&&i++,t[e]=n,t[e+1]=i}function s(t,e,r,n){let i=t[e]+r;r<0&&(i+=4294967296);let s=t[e+1]+n;i>=4294967296&&s++,t[e]=i,t[e+1]=s}function o(t,e){return t[e]^t[e+1]<<8^t[e+2]<<16^t[e+3]<<24}function a(t,e,r,n,o,a){const u=l[o],h=l[o+1],d=l[a],f=l[a+1];i(c,t,e),s(c,t,u,h);let p=c[n]^c[t],m=c[n+1]^c[t+1];c[n]=m,c[n+1]=p,i(c,r,n),p=c[e]^c[r],m=c[e+1]^c[r+1],c[e]=p>>>24^m<<8,c[e+1]=m>>>24^p<<8,i(c,t,e),s(c,t,d,f),p=c[n]^c[t],m=c[n+1]^c[t+1],c[n]=p>>>16^m<<16,c[n+1]=m>>>16^p<<16,i(c,r,n),p=c[e]^c[r],m=c[e+1]^c[r+1],c[e]=m>>>31^p<<1,c[e+1]=p>>>31^m<<1}const u=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),h=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3].map((function(t){return 2*t}))),c=new Uint32Array(32),l=new Uint32Array(32);function d(t,e){let r=0;for(r=0;r<16;r++)c[r]=t.h[r],c[r+16]=u[r];for(c[24]=c[24]^t.t,c[25]=c[25]^t.t/4294967296,e&&(c[28]=~c[28],c[29]=~c[29]),r=0;r<32;r++)l[r]=o(t.b,4*r);for(r=0;r<12;r++)a(0,8,16,24,h[16*r+0],h[16*r+1]),a(2,10,18,26,h[16*r+2],h[16*r+3]),a(4,12,20,28,h[16*r+4],h[16*r+5]),a(6,14,22,30,h[16*r+6],h[16*r+7]),a(0,10,20,30,h[16*r+8],h[16*r+9]),a(2,12,22,24,h[16*r+10],h[16*r+11]),a(4,14,16,26,h[16*r+12],h[16*r+13]),a(6,8,18,28,h[16*r+14],h[16*r+15]);for(r=0;r<16;r++)t.h[r]=t.h[r]^c[r]^c[r+16]}function f(t,e){if(0===t||t>64)throw new Error("Illegal output length, expected 0 < length <= 64");if(e&&e.length>64)throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");const r={b:new Uint8Array(128),h:new Uint32Array(16),t:0,c:0,outlen:t};for(let t=0;t<16;t++)r.h[t]=u[t];const n=e?e.length:0;return r.h[0]^=16842752^n<<8^t,e&&(p(r,e),r.c=128),r}function p(t,e){for(let r=0;r<e.length;r++)128===t.c&&(t.t+=t.c,d(t,!1),t.c=0),t.b[t.c++]=e[r]}function m(t){for(t.t+=t.c;t.c<128;)t.b[t.c++]=0;d(t,!0);const e=new Uint8Array(t.outlen);for(let r=0;r<t.outlen;r++)e[r]=t.h[r>>2]>>8*(3&r);return e}function y(t,e,r){r=r||64,t=n.normalizeInput(t);const i=f(r,e);return p(i,t),m(i)}t.exports={blake2b:y,blake2bHex:function(t,e,r){const i=y(t,e,r);return n.toHex(i)},blake2bInit:f,blake2bUpdate:p,blake2bFinal:m}},45297:(t,e,r)=>{const n=r(99488);function i(t,e){return t[e]^t[e+1]<<8^t[e+2]<<16^t[e+3]<<24}function s(t,e,r,n,i,s){h[t]=h[t]+h[e]+i,h[n]=o(h[n]^h[t],16),h[r]=h[r]+h[n],h[e]=o(h[e]^h[r],12),h[t]=h[t]+h[e]+s,h[n]=o(h[n]^h[t],8),h[r]=h[r]+h[n],h[e]=o(h[e]^h[r],7)}function o(t,e){return t>>>e^t<<32-e}const a=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),u=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0]),h=new Uint32Array(16),c=new Uint32Array(16);function l(t,e){let r=0;for(r=0;r<8;r++)h[r]=t.h[r],h[r+8]=a[r];for(h[12]^=t.t,h[13]^=t.t/4294967296,e&&(h[14]=~h[14]),r=0;r<16;r++)c[r]=i(t.b,4*r);for(r=0;r<10;r++)s(0,4,8,12,c[u[16*r+0]],c[u[16*r+1]]),s(1,5,9,13,c[u[16*r+2]],c[u[16*r+3]]),s(2,6,10,14,c[u[16*r+4]],c[u[16*r+5]]),s(3,7,11,15,c[u[16*r+6]],c[u[16*r+7]]),s(0,5,10,15,c[u[16*r+8]],c[u[16*r+9]]),s(1,6,11,12,c[u[16*r+10]],c[u[16*r+11]]),s(2,7,8,13,c[u[16*r+12]],c[u[16*r+13]]),s(3,4,9,14,c[u[16*r+14]],c[u[16*r+15]]);for(r=0;r<8;r++)t.h[r]^=h[r]^h[r+8]}function d(t,e){if(!(t>0&&t<=32))throw new Error("Incorrect output length, should be in [1, 32]");const r=e?e.length:0;if(e&&!(r>0&&r<=32))throw new Error("Incorrect key length, should be in [1, 32]");const n={h:new Uint32Array(a),b:new Uint8Array(64),c:0,t:0,outlen:t};return n.h[0]^=16842752^r<<8^t,r>0&&(f(n,e),n.c=64),n}function f(t,e){for(let r=0;r<e.length;r++)64===t.c&&(t.t+=t.c,l(t,!1),t.c=0),t.b[t.c++]=e[r]}function p(t){for(t.t+=t.c;t.c<64;)t.b[t.c++]=0;l(t,!0);const e=new Uint8Array(t.outlen);for(let r=0;r<t.outlen;r++)e[r]=t.h[r>>2]>>8*(3&r)&255;return e}function m(t,e,r){r=r||32,t=n.normalizeInput(t);const i=d(r,e);return f(i,t),p(i)}t.exports={blake2s:m,blake2sHex:function(t,e,r){const i=m(t,e,r);return n.toHex(i)},blake2sInit:d,blake2sUpdate:f,blake2sFinal:p}},1191:(t,e,r)=>{const n=r(8442),i=r(45297);t.exports={blake2b:n.blake2b,blake2bHex:n.blake2bHex,blake2bInit:n.blake2bInit,blake2bUpdate:n.blake2bUpdate,blake2bFinal:n.blake2bFinal,blake2s:i.blake2s,blake2sHex:i.blake2sHex,blake2sInit:i.blake2sInit,blake2sUpdate:i.blake2sUpdate,blake2sFinal:i.blake2sFinal}},99488:(t,e,r)=>{var n=r(23085).Buffer;function i(t){return(4294967296+t).toString(16).substring(1)}t.exports={normalizeInput:function(t){let e;if(t instanceof Uint8Array)e=t;else if(t instanceof n)e=new Uint8Array(t);else{if("string"!=typeof t)throw new Error("Input must be an string, Buffer or Uint8Array");e=new Uint8Array(n.from(t,"utf8"))}return e},toHex:function(t){return Array.prototype.map.call(t,(function(t){return(t<16?"0":"")+t.toString(16)})).join("")},debugPrint:function(t,e,r){let n="\n"+t+" = ";for(let s=0;s<e.length;s+=2){if(32===r)n+=i(e[s]).toUpperCase(),n+=" ",n+=i(e[s+1]).toUpperCase();else{if(64!==r)throw new Error("Invalid size "+r);n+=i(e[s+1]).toUpperCase(),n+=i(e[s]).toUpperCase()}s%6==4?n+="\n"+new Array(t.length+4).join(" "):s<e.length-2&&(n+=" ")}console.log(n)},testSpeed:function(t,e,r){let n=(new Date).getTime();const i=new Uint8Array(e);for(let t=0;t<e;t++)i[t]=t%256;const s=(new Date).getTime();console.log("Generated random input in "+(s-n)+"ms"),n=s;for(let s=0;s<r;s++){const r=t(i),s=(new Date).getTime(),o=s-n;n=s,console.log("Hashed in "+o+"ms: "+r.substring(0,20)+"..."),console.log(Math.round(e/(1<<20)/(o/1e3)*100)/100+" MB PER SECOND")}}}},13550:function(t,e,r){!function(t,e){"use strict";function n(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(46601).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=48&&r<=57?r-48:r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:void n(!1,"Invalid character in "+t)}function u(t,e,r){var n=a(t,r);return r-1>=e&&(n|=a(t,r-1)<<4),n}function h(t,e,r,i){for(var s=0,o=0,a=Math.min(t.length,r),u=e;u<a;u++){var h=t.charCodeAt(u)-48;s*=i,o=h>=49?h-49+10:h>=17?h-17+10:h,n(h>=0&&o<i,"Invalid character"),s+=o}return s}function c(t,e){t.words=e.words,t.length=e.length,t.negative=e.negative,t.red=e.red}if(s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<t.length&&(16===e?this._parseHex(t,i,r):(this._parseBase(t,e,i),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var s,o,a=0;if("be"===r)for(i=t.length-1,s=0;i>=0;i-=3)o=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(i=0,s=0;i<t.length;i+=3)o=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this._strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,s=0,o=0;if("be"===r)for(n=t.length-1;n>=e;n-=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;else for(n=(t.length-e)%2==0?e+1:e;n<t.length;n+=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;this._strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var s=t.length-r,o=s%n,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=n)u=h(t,c,c+n,e),this.imuln(i),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this._strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype._move=function(t){c(t,this)},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype._strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},"undefined"!=typeof Symbol&&"function"==typeof Symbol.for)try{s.prototype[Symbol.for("nodejs.util.inspect.custom")]=l}catch(t){s.prototype.inspect=l}else s.prototype.inspect=l;function l(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var d=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],f=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],p=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var i=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<i|s)).toString(16);r=0!==(s=a>>>24-i&16777215)||o!==this.length-1?d[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=f[t],c=p[t];r="";var l=this.clone();for(l.negative=0;!l.isZero();){var m=l.modrn(c).toString(t);r=(l=l.idivn(c)).isZero()?m+r:d[h-m.length]+m+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16,2)},o&&(s.prototype.toBuffer=function(t,e){return this.toArrayLike(o,t,e)}),s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)};function m(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],s=0|e.words[0],o=i*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(i=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r._strip()}s.prototype.toArrayLike=function(t,e,r){this._strip();var i=this.byteLength(),s=r||Math.max(1,i);n(i<=s,"byte array longer than desired length"),n(s>0,"Requested array length <= 0");var o=function(t,e){return t.allocUnsafe?t.allocUnsafe(e):new t(e)}(t,s);return this["_toArrayLike"+("le"===e?"LE":"BE")](o,i),o},s.prototype._toArrayLikeLE=function(t,e){for(var r=0,n=0,i=0,s=0;i<this.length;i++){var o=this.words[i]<<s|n;t[r++]=255&o,r<t.length&&(t[r++]=o>>8&255),r<t.length&&(t[r++]=o>>16&255),6===s?(r<t.length&&(t[r++]=o>>24&255),n=0,s=0):(n=o>>>24,s+=2)}if(r<t.length)for(t[r++]=n;r<t.length;)t[r++]=0},s.prototype._toArrayLikeBE=function(t,e){for(var r=t.length-1,n=0,i=0,s=0;i<this.length;i++){var o=this.words[i]<<s|n;t[r--]=255&o,r>=0&&(t[r--]=o>>8&255),r>=0&&(t[r--]=o>>16&255),6===s?(r>=0&&(t[r--]=o>>24&255),n=0,s=0):(n=o>>>24,s+=2)}if(r>=0)for(t[r--]=n;r>=0;)t[r--]=0},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this._strip()},s.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this._strip()},s.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this._strip()},s.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this._strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){n("number"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this._strip()},s.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,s=0;s<n.length;s++)e=(0|r.words[s])+(0|n.words[s])+i,this.words[s]=67108863&e,i=e>>>26;for(;0!==i&&s<r.length;s++)e=(0|r.words[s])+i,this.words[s]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var s=0,o=0;o<n.length;o++)s=(e=(0|r.words[o])-(0|n.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this._strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var y=function(t,e,r){var n,i,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,m=f>>>13,y=0|o[2],v=8191&y,g=y>>>13,b=0|o[3],w=8191&b,M=b>>>13,k=0|o[4],x=8191&k,P=k>>>13,L=0|o[5],T=8191&L,S=L>>>13,A=0|o[6],D=8191&A,j=A>>>13,H=0|o[7],O=8191&H,z=H>>>13,N=0|o[8],E=8191&N,Y=N>>>13,R=0|o[9],I=8191&R,B=R>>>13,X=0|a[0],V=8191&X,C=X>>>13,W=0|a[1],q=8191&W,Z=W>>>13,F=0|a[2],U=8191&F,G=F>>>13,_=0|a[3],K=8191&_,J=_>>>13,Q=0|a[4],$=8191&Q,tt=Q>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],st=8191&it,ot=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,mt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var yt=(h+(n=Math.imul(l,V))|0)+((8191&(i=(i=Math.imul(l,C))+Math.imul(d,V)|0))<<13)|0;h=((s=Math.imul(d,C))+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(p,V),i=(i=Math.imul(p,C))+Math.imul(m,V)|0,s=Math.imul(m,C);var vt=(h+(n=n+Math.imul(l,q)|0)|0)+((8191&(i=(i=i+Math.imul(l,Z)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,Z)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(v,V),i=(i=Math.imul(v,C))+Math.imul(g,V)|0,s=Math.imul(g,C),n=n+Math.imul(p,q)|0,i=(i=i+Math.imul(p,Z)|0)+Math.imul(m,q)|0,s=s+Math.imul(m,Z)|0;var gt=(h+(n=n+Math.imul(l,U)|0)|0)+((8191&(i=(i=i+Math.imul(l,G)|0)+Math.imul(d,U)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(w,V),i=(i=Math.imul(w,C))+Math.imul(M,V)|0,s=Math.imul(M,C),n=n+Math.imul(v,q)|0,i=(i=i+Math.imul(v,Z)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,Z)|0,n=n+Math.imul(p,U)|0,i=(i=i+Math.imul(p,G)|0)+Math.imul(m,U)|0,s=s+Math.imul(m,G)|0;var bt=(h+(n=n+Math.imul(l,K)|0)|0)+((8191&(i=(i=i+Math.imul(l,J)|0)+Math.imul(d,K)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(x,V),i=(i=Math.imul(x,C))+Math.imul(P,V)|0,s=Math.imul(P,C),n=n+Math.imul(w,q)|0,i=(i=i+Math.imul(w,Z)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,Z)|0,n=n+Math.imul(v,U)|0,i=(i=i+Math.imul(v,G)|0)+Math.imul(g,U)|0,s=s+Math.imul(g,G)|0,n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,J)|0)+Math.imul(m,K)|0,s=s+Math.imul(m,J)|0;var wt=(h+(n=n+Math.imul(l,$)|0)|0)+((8191&(i=(i=i+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(T,V),i=(i=Math.imul(T,C))+Math.imul(S,V)|0,s=Math.imul(S,C),n=n+Math.imul(x,q)|0,i=(i=i+Math.imul(x,Z)|0)+Math.imul(P,q)|0,s=s+Math.imul(P,Z)|0,n=n+Math.imul(w,U)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(M,U)|0,s=s+Math.imul(M,G)|0,n=n+Math.imul(v,K)|0,i=(i=i+Math.imul(v,J)|0)+Math.imul(g,K)|0,s=s+Math.imul(g,J)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,s=s+Math.imul(m,tt)|0;var Mt=(h+(n=n+Math.imul(l,rt)|0)|0)+((8191&(i=(i=i+Math.imul(l,nt)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,nt)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,C))+Math.imul(j,V)|0,s=Math.imul(j,C),n=n+Math.imul(T,q)|0,i=(i=i+Math.imul(T,Z)|0)+Math.imul(S,q)|0,s=s+Math.imul(S,Z)|0,n=n+Math.imul(x,U)|0,i=(i=i+Math.imul(x,G)|0)+Math.imul(P,U)|0,s=s+Math.imul(P,G)|0,n=n+Math.imul(w,K)|0,i=(i=i+Math.imul(w,J)|0)+Math.imul(M,K)|0,s=s+Math.imul(M,J)|0,n=n+Math.imul(v,$)|0,i=(i=i+Math.imul(v,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,s=s+Math.imul(m,nt)|0;var kt=(h+(n=n+Math.imul(l,st)|0)|0)+((8191&(i=(i=i+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(O,V),i=(i=Math.imul(O,C))+Math.imul(z,V)|0,s=Math.imul(z,C),n=n+Math.imul(D,q)|0,i=(i=i+Math.imul(D,Z)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,Z)|0,n=n+Math.imul(T,U)|0,i=(i=i+Math.imul(T,G)|0)+Math.imul(S,U)|0,s=s+Math.imul(S,G)|0,n=n+Math.imul(x,K)|0,i=(i=i+Math.imul(x,J)|0)+Math.imul(P,K)|0,s=s+Math.imul(P,J)|0,n=n+Math.imul(w,$)|0,i=(i=i+Math.imul(w,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,n=n+Math.imul(v,rt)|0,i=(i=i+Math.imul(v,nt)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,nt)|0,n=n+Math.imul(p,st)|0,i=(i=i+Math.imul(p,ot)|0)+Math.imul(m,st)|0,s=s+Math.imul(m,ot)|0;var xt=(h+(n=n+Math.imul(l,ut)|0)|0)+((8191&(i=(i=i+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(E,V),i=(i=Math.imul(E,C))+Math.imul(Y,V)|0,s=Math.imul(Y,C),n=n+Math.imul(O,q)|0,i=(i=i+Math.imul(O,Z)|0)+Math.imul(z,q)|0,s=s+Math.imul(z,Z)|0,n=n+Math.imul(D,U)|0,i=(i=i+Math.imul(D,G)|0)+Math.imul(j,U)|0,s=s+Math.imul(j,G)|0,n=n+Math.imul(T,K)|0,i=(i=i+Math.imul(T,J)|0)+Math.imul(S,K)|0,s=s+Math.imul(S,J)|0,n=n+Math.imul(x,$)|0,i=(i=i+Math.imul(x,tt)|0)+Math.imul(P,$)|0,s=s+Math.imul(P,tt)|0,n=n+Math.imul(w,rt)|0,i=(i=i+Math.imul(w,nt)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,nt)|0,n=n+Math.imul(v,st)|0,i=(i=i+Math.imul(v,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,s=s+Math.imul(m,ht)|0;var Pt=(h+(n=n+Math.imul(l,lt)|0)|0)+((8191&(i=(i=i+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(i>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,n=Math.imul(I,V),i=(i=Math.imul(I,C))+Math.imul(B,V)|0,s=Math.imul(B,C),n=n+Math.imul(E,q)|0,i=(i=i+Math.imul(E,Z)|0)+Math.imul(Y,q)|0,s=s+Math.imul(Y,Z)|0,n=n+Math.imul(O,U)|0,i=(i=i+Math.imul(O,G)|0)+Math.imul(z,U)|0,s=s+Math.imul(z,G)|0,n=n+Math.imul(D,K)|0,i=(i=i+Math.imul(D,J)|0)+Math.imul(j,K)|0,s=s+Math.imul(j,J)|0,n=n+Math.imul(T,$)|0,i=(i=i+Math.imul(T,tt)|0)+Math.imul(S,$)|0,s=s+Math.imul(S,tt)|0,n=n+Math.imul(x,rt)|0,i=(i=i+Math.imul(x,nt)|0)+Math.imul(P,rt)|0,s=s+Math.imul(P,nt)|0,n=n+Math.imul(w,st)|0,i=(i=i+Math.imul(w,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,n=n+Math.imul(v,ut)|0,i=(i=i+Math.imul(v,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0,n=n+Math.imul(p,lt)|0,i=(i=i+Math.imul(p,dt)|0)+Math.imul(m,lt)|0,s=s+Math.imul(m,dt)|0;var Lt=(h+(n=n+Math.imul(l,pt)|0)|0)+((8191&(i=(i=i+Math.imul(l,mt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,mt)|0)+(i>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,n=Math.imul(I,q),i=(i=Math.imul(I,Z))+Math.imul(B,q)|0,s=Math.imul(B,Z),n=n+Math.imul(E,U)|0,i=(i=i+Math.imul(E,G)|0)+Math.imul(Y,U)|0,s=s+Math.imul(Y,G)|0,n=n+Math.imul(O,K)|0,i=(i=i+Math.imul(O,J)|0)+Math.imul(z,K)|0,s=s+Math.imul(z,J)|0,n=n+Math.imul(D,$)|0,i=(i=i+Math.imul(D,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,n=n+Math.imul(T,rt)|0,i=(i=i+Math.imul(T,nt)|0)+Math.imul(S,rt)|0,s=s+Math.imul(S,nt)|0,n=n+Math.imul(x,st)|0,i=(i=i+Math.imul(x,ot)|0)+Math.imul(P,st)|0,s=s+Math.imul(P,ot)|0,n=n+Math.imul(w,ut)|0,i=(i=i+Math.imul(w,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,n=n+Math.imul(v,lt)|0,i=(i=i+Math.imul(v,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var Tt=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((s=s+Math.imul(m,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,n=Math.imul(I,U),i=(i=Math.imul(I,G))+Math.imul(B,U)|0,s=Math.imul(B,G),n=n+Math.imul(E,K)|0,i=(i=i+Math.imul(E,J)|0)+Math.imul(Y,K)|0,s=s+Math.imul(Y,J)|0,n=n+Math.imul(O,$)|0,i=(i=i+Math.imul(O,tt)|0)+Math.imul(z,$)|0,s=s+Math.imul(z,tt)|0,n=n+Math.imul(D,rt)|0,i=(i=i+Math.imul(D,nt)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,nt)|0,n=n+Math.imul(T,st)|0,i=(i=i+Math.imul(T,ot)|0)+Math.imul(S,st)|0,s=s+Math.imul(S,ot)|0,n=n+Math.imul(x,ut)|0,i=(i=i+Math.imul(x,ht)|0)+Math.imul(P,ut)|0,s=s+Math.imul(P,ht)|0,n=n+Math.imul(w,lt)|0,i=(i=i+Math.imul(w,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var St=(h+(n=n+Math.imul(v,pt)|0)|0)+((8191&(i=(i=i+Math.imul(v,mt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(I,K),i=(i=Math.imul(I,J))+Math.imul(B,K)|0,s=Math.imul(B,J),n=n+Math.imul(E,$)|0,i=(i=i+Math.imul(E,tt)|0)+Math.imul(Y,$)|0,s=s+Math.imul(Y,tt)|0,n=n+Math.imul(O,rt)|0,i=(i=i+Math.imul(O,nt)|0)+Math.imul(z,rt)|0,s=s+Math.imul(z,nt)|0,n=n+Math.imul(D,st)|0,i=(i=i+Math.imul(D,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,n=n+Math.imul(T,ut)|0,i=(i=i+Math.imul(T,ht)|0)+Math.imul(S,ut)|0,s=s+Math.imul(S,ht)|0,n=n+Math.imul(x,lt)|0,i=(i=i+Math.imul(x,dt)|0)+Math.imul(P,lt)|0,s=s+Math.imul(P,dt)|0;var At=(h+(n=n+Math.imul(w,pt)|0)|0)+((8191&(i=(i=i+Math.imul(w,mt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,mt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(I,$),i=(i=Math.imul(I,tt))+Math.imul(B,$)|0,s=Math.imul(B,tt),n=n+Math.imul(E,rt)|0,i=(i=i+Math.imul(E,nt)|0)+Math.imul(Y,rt)|0,s=s+Math.imul(Y,nt)|0,n=n+Math.imul(O,st)|0,i=(i=i+Math.imul(O,ot)|0)+Math.imul(z,st)|0,s=s+Math.imul(z,ot)|0,n=n+Math.imul(D,ut)|0,i=(i=i+Math.imul(D,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,n=n+Math.imul(T,lt)|0,i=(i=i+Math.imul(T,dt)|0)+Math.imul(S,lt)|0,s=s+Math.imul(S,dt)|0;var Dt=(h+(n=n+Math.imul(x,pt)|0)|0)+((8191&(i=(i=i+Math.imul(x,mt)|0)+Math.imul(P,pt)|0))<<13)|0;h=((s=s+Math.imul(P,mt)|0)+(i>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,n=Math.imul(I,rt),i=(i=Math.imul(I,nt))+Math.imul(B,rt)|0,s=Math.imul(B,nt),n=n+Math.imul(E,st)|0,i=(i=i+Math.imul(E,ot)|0)+Math.imul(Y,st)|0,s=s+Math.imul(Y,ot)|0,n=n+Math.imul(O,ut)|0,i=(i=i+Math.imul(O,ht)|0)+Math.imul(z,ut)|0,s=s+Math.imul(z,ht)|0,n=n+Math.imul(D,lt)|0,i=(i=i+Math.imul(D,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var jt=(h+(n=n+Math.imul(T,pt)|0)|0)+((8191&(i=(i=i+Math.imul(T,mt)|0)+Math.imul(S,pt)|0))<<13)|0;h=((s=s+Math.imul(S,mt)|0)+(i>>>13)|0)+(jt>>>26)|0,jt&=67108863,n=Math.imul(I,st),i=(i=Math.imul(I,ot))+Math.imul(B,st)|0,s=Math.imul(B,ot),n=n+Math.imul(E,ut)|0,i=(i=i+Math.imul(E,ht)|0)+Math.imul(Y,ut)|0,s=s+Math.imul(Y,ht)|0,n=n+Math.imul(O,lt)|0,i=(i=i+Math.imul(O,dt)|0)+Math.imul(z,lt)|0,s=s+Math.imul(z,dt)|0;var Ht=(h+(n=n+Math.imul(D,pt)|0)|0)+((8191&(i=(i=i+Math.imul(D,mt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,mt)|0)+(i>>>13)|0)+(Ht>>>26)|0,Ht&=67108863,n=Math.imul(I,ut),i=(i=Math.imul(I,ht))+Math.imul(B,ut)|0,s=Math.imul(B,ht),n=n+Math.imul(E,lt)|0,i=(i=i+Math.imul(E,dt)|0)+Math.imul(Y,lt)|0,s=s+Math.imul(Y,dt)|0;var Ot=(h+(n=n+Math.imul(O,pt)|0)|0)+((8191&(i=(i=i+Math.imul(O,mt)|0)+Math.imul(z,pt)|0))<<13)|0;h=((s=s+Math.imul(z,mt)|0)+(i>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,n=Math.imul(I,lt),i=(i=Math.imul(I,dt))+Math.imul(B,lt)|0,s=Math.imul(B,dt);var zt=(h+(n=n+Math.imul(E,pt)|0)|0)+((8191&(i=(i=i+Math.imul(E,mt)|0)+Math.imul(Y,pt)|0))<<13)|0;h=((s=s+Math.imul(Y,mt)|0)+(i>>>13)|0)+(zt>>>26)|0,zt&=67108863;var Nt=(h+(n=Math.imul(I,pt))|0)+((8191&(i=(i=Math.imul(I,mt))+Math.imul(B,pt)|0))<<13)|0;return h=((s=Math.imul(B,mt))+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=yt,u[1]=vt,u[2]=gt,u[3]=bt,u[4]=wt,u[5]=Mt,u[6]=kt,u[7]=xt,u[8]=Pt,u[9]=Lt,u[10]=Tt,u[11]=St,u[12]=At,u[13]=Dt,u[14]=jt,u[15]=Ht,u[16]=Ot,u[17]=zt,u[18]=Nt,0!==h&&(u[19]=h,r.length++),r};function v(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,s=0;s<r.length-1;s++){var o=i;i=0;for(var a=67108863&n,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),i+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,n=o,o=i}return 0!==n?r.words[s]=n:r.length--,r._strip()}function g(t,e,r){return v(t,e,r)}function b(t,e){this.x=t,this.y=e}Math.imul||(y=m),s.prototype.mulTo=function(t,e){var r=this.length+t.length;return 10===this.length&&10===t.length?y(this,t,e):r<63?m(this,t,e):r<1024?v(this,t,e):g(this,t,e)},b.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},b.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},b.prototype.permute=function(t,e,r,n,i,s){for(var o=0;o<s;o++)n[o]=e[t[o]],i[o]=r[t[o]]},b.prototype.transform=function(t,e,r,n,i,s){this.permute(s,t,e,r,n,i);for(var o=1;o<i;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<i;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],m=n[c+f],y=r[c+f+o],v=n[c+f+o],g=l*y-d*v;v=l*v+d*y,y=g,r[c+f]=p+y,n[c+f]=m+v,r[c+f+o]=p-y,n[c+f+o]=m-v,f!==a&&(g=u*l-h*d,d=u*d+h*l,l=g)}},b.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},b.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},b.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},b.prototype.convert13b=function(t,e,r,i){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<i;++o)r[o]=0;n(0===s),n(0==(-8192&s))},b.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},b.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),s=this.stub(n),o=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),c=new Array(n),l=new Array(n),d=r.words;d.length=n,this.convert13b(t.words,t.length,o,n),this.convert13b(e.words,e.length,h,n),this.transform(o,s,a,u,n,i),this.transform(h,s,c,l,n,i);for(var f=0;f<n;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,n),this.transform(a,u,d,s,n,i),this.conjugate(d,s,n),this.normalize13b(d,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r._strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),g(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){var e=t<0;e&&(t=-t),n("number"==typeof t),n(t<67108864);for(var r=0,i=0;i<this.length;i++){var s=(0|this.words[i])*t,o=(67108863&s)+(67108863&r);r>>=26,r+=s/67108864|0,r+=o>>>26,this.words[i]=67108863&o}return 0!==r&&(this.words[i]=r,this.length++),e?this.ineg():this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=t.words[n]>>>i&1}return e}(t);if(0===e.length)return new s(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},s.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this._strip()},s.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var i;n("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(i-=o,i=Math.max(0,i),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=i);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this._strip()},s.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r)&&!!(this.words[r]&i)},s.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this._strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<=t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this._strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var i,s,o=t.length+r;this._expand(o);var a=0;for(i=0;i<t.length;i++){s=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&s}for(;i<this.length-r;i++)a=(s=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&s;if(0===a)return this._strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(s=-(0|this.words[i])+a)>>26,this.words[i]=67108863&s;return this.negative=1,this._strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,o=0|i.words[i.length-1];0!==(r=26-this._countBits(o))&&(i=i.ushln(r),n.iushln(r),o=0|i.words[i.length-1]);var a,u=n.length-i.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=n.clone()._ishlnsubmul(i,1,u);0===c.negative&&(n=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|n.words[i.length+l])+(0|n.words[i.length+l-1]);for(d=Math.min(d/o|0,67108863),n._ishlnsubmul(i,d,l);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(i,1,l),n.isZero()||(n.negative^=1);a&&(a.words[l]=d)}return a&&a._strip(),n._strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},s.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(i=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:i,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modrn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modrn(t.words[0]))}:this._wordDiv(t,e);var i,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),s=r.cmp(n);return s<0||1===i&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modrn=function(t){var e=t<0;e&&(t=-t),n(t<=67108863);for(var r=(1<<26)%t,i=0,s=this.length-1;s>=0;s--)i=(r*i+(0|this.words[s]))%t;return e?-i:i},s.prototype.modn=function(t){return this.modrn(t)},s.prototype.idivn=function(t){var e=t<0;e&&(t=-t),n(t<=67108863);for(var r=0,i=this.length-1;i>=0;i--){var s=(0|this.words[i])+67108864*r;this.words[i]=s/t|0,r=s%t}return this._strip(),e?this.ineg():this},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(c),o.isub(l)),i.iushrn(1),o.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),o.isub(u)):(r.isub(e),a.isub(i),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(i=0===e.cmpn(1)?o:a).cmpn(0)<0&&i.iadd(t),i},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var s=e;e=r,r=s}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){n("number"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var s=i,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this._strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new T(t)},s.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var w={k256:null,p224:null,p192:null,p25519:null};function M(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function k(){M.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function x(){M.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function P(){M.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function L(){M.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function T(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function S(t){T.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}M.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},M.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},M.prototype.split=function(t,e){t.iushrn(this.n,0,e)},M.prototype.imulK=function(t){return t.imul(this.k)},i(k,M),k.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,i=10;i<t.length;i++){var o=0|t.words[i];t.words[i-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[i-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},k.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(x,M),i(P,M),i(L,M),L.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(w[t])return w[t];var e;if("k256"===t)e=new k;else if("p224"===t)e=new x;else if("p192"===t)e=new P;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new L}return w[t]=e,e},T.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},T.prototype._verify2=function(t,e){n(0==(t.negative|e.negative),"red works only with positives"),n(t.red&&t.red===e.red,"red works only with red numbers")},T.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):(c(t,t.umod(this.m)._forceRed(this)),t)},T.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},T.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},T.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},T.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},T.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},T.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},T.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},T.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},T.prototype.isqr=function(t){return this.imul(t,t.clone())},T.prototype.sqr=function(t){return this.mul(t,t)},T.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),o=0;!i.isZero()&&0===i.andln(1);)o++,i.iushrn(1);n(!i.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,i),d=this.pow(t,i.addn(1).iushrn(1)),f=this.pow(t,i),p=o;0!==f.cmp(a);){for(var m=f,y=0;0!==m.cmp(a);y++)m=m.redSqr();n(y<p);var v=this.pow(l,new s(1).iushln(p-y-1));d=d.redMul(v),l=v.redSqr(),f=f.redMul(l),p=y}return d},T.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},T.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],c=u-1;c>=0;c--){var l=h>>c&1;i!==r[0]&&(i=this.sqr(i)),0!==l||0!==o?(o<<=1,o|=l,(4===++a||0===n&&0===c)&&(i=this.mul(i,r[o]),a=0,o=0)):a=0}u=26}return i},T.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},T.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new S(t)},i(S,T),S.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},S.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},S.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},S.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},S.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},29931:(t,e,r)=>{var n;function i(t){this.rand=t}if(t.exports=function(t){return n||(n=new i(null)),n.generate(t)},t.exports.Rand=i,i.prototype.generate=function(t){return this._rand(t)},i.prototype._rand=function(t){if(this.rand.getBytes)return this.rand.getBytes(t);for(var e=new Uint8Array(t),r=0;r<e.length;r++)e[r]=this.rand.getByte();return e},"object"==typeof self)self.crypto&&self.crypto.getRandomValues?i.prototype._rand=function(t){var e=new Uint8Array(t);return self.crypto.getRandomValues(e),e}:self.msCrypto&&self.msCrypto.getRandomValues?i.prototype._rand=function(t){var e=new Uint8Array(t);return self.msCrypto.getRandomValues(e),e}:"object"==typeof window&&(i.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var s=r(89214);if("function"!=typeof s.randomBytes)throw new Error("Not supported");i.prototype._rand=function(t){return s.randomBytes(t)}}catch(t){}},74497:(t,e,r)=>{var n=r(89509).Buffer;function i(t){n.isBuffer(t)||(t=n.from(t));for(var e=t.length/4|0,r=new Array(e),i=0;i<e;i++)r[i]=t.readUInt32BE(4*i);return r}function s(t){for(;0<t.length;t++)t[0]=0}function o(t,e,r,n,i){for(var s,o,a,u,h=r[0],c=r[1],l=r[2],d=r[3],f=t[0]^e[0],p=t[1]^e[1],m=t[2]^e[2],y=t[3]^e[3],v=4,g=1;g<i;g++)s=h[f>>>24]^c[p>>>16&255]^l[m>>>8&255]^d[255&y]^e[v++],o=h[p>>>24]^c[m>>>16&255]^l[y>>>8&255]^d[255&f]^e[v++],a=h[m>>>24]^c[y>>>16&255]^l[f>>>8&255]^d[255&p]^e[v++],u=h[y>>>24]^c[f>>>16&255]^l[p>>>8&255]^d[255&m]^e[v++],f=s,p=o,m=a,y=u;return s=(n[f>>>24]<<24|n[p>>>16&255]<<16|n[m>>>8&255]<<8|n[255&y])^e[v++],o=(n[p>>>24]<<24|n[m>>>16&255]<<16|n[y>>>8&255]<<8|n[255&f])^e[v++],a=(n[m>>>24]<<24|n[y>>>16&255]<<16|n[f>>>8&255]<<8|n[255&p])^e[v++],u=(n[y>>>24]<<24|n[f>>>16&255]<<16|n[p>>>8&255]<<8|n[255&m])^e[v++],[s>>>=0,o>>>=0,a>>>=0,u>>>=0]}var a=[0,1,2,4,8,16,32,64,128,27,54],u=function(){for(var t=new Array(256),e=0;e<256;e++)t[e]=e<128?e<<1:e<<1^283;for(var r=[],n=[],i=[[],[],[],[]],s=[[],[],[],[]],o=0,a=0,u=0;u<256;++u){var h=a^a<<1^a<<2^a<<3^a<<4;h=h>>>8^255&h^99,r[o]=h,n[h]=o;var c=t[o],l=t[c],d=t[l],f=257*t[h]^16843008*h;i[0][o]=f<<24|f>>>8,i[1][o]=f<<16|f>>>16,i[2][o]=f<<8|f>>>24,i[3][o]=f,f=16843009*d^65537*l^257*c^16843008*o,s[0][h]=f<<24|f>>>8,s[1][h]=f<<16|f>>>16,s[2][h]=f<<8|f>>>24,s[3][h]=f,0===o?o=a=1:(o=c^t[t[t[d^c]]],a^=t[t[a]])}return{SBOX:r,INV_SBOX:n,SUB_MIX:i,INV_SUB_MIX:s}}();function h(t){this._key=i(t),this._reset()}h.blockSize=16,h.keySize=32,h.prototype.blockSize=h.blockSize,h.prototype.keySize=h.keySize,h.prototype._reset=function(){for(var t=this._key,e=t.length,r=e+6,n=4*(r+1),i=[],s=0;s<e;s++)i[s]=t[s];for(s=e;s<n;s++){var o=i[s-1];s%e==0?(o=o<<8|o>>>24,o=u.SBOX[o>>>24]<<24|u.SBOX[o>>>16&255]<<16|u.SBOX[o>>>8&255]<<8|u.SBOX[255&o],o^=a[s/e|0]<<24):e>6&&s%e==4&&(o=u.SBOX[o>>>24]<<24|u.SBOX[o>>>16&255]<<16|u.SBOX[o>>>8&255]<<8|u.SBOX[255&o]),i[s]=i[s-e]^o}for(var h=[],c=0;c<n;c++){var l=n-c,d=i[l-(c%4?0:4)];h[c]=c<4||l<=4?d:u.INV_SUB_MIX[0][u.SBOX[d>>>24]]^u.INV_SUB_MIX[1][u.SBOX[d>>>16&255]]^u.INV_SUB_MIX[2][u.SBOX[d>>>8&255]]^u.INV_SUB_MIX[3][u.SBOX[255&d]]}this._nRounds=r,this._keySchedule=i,this._invKeySchedule=h},h.prototype.encryptBlockRaw=function(t){return o(t=i(t),this._keySchedule,u.SUB_MIX,u.SBOX,this._nRounds)},h.prototype.encryptBlock=function(t){var e=this.encryptBlockRaw(t),r=n.allocUnsafe(16);return r.writeUInt32BE(e[0],0),r.writeUInt32BE(e[1],4),r.writeUInt32BE(e[2],8),r.writeUInt32BE(e[3],12),r},h.prototype.decryptBlock=function(t){var e=(t=i(t))[1];t[1]=t[3],t[3]=e;var r=o(t,this._invKeySchedule,u.INV_SUB_MIX,u.INV_SBOX,this._nRounds),s=n.allocUnsafe(16);return s.writeUInt32BE(r[0],0),s.writeUInt32BE(r[3],4),s.writeUInt32BE(r[2],8),s.writeUInt32BE(r[1],12),s},h.prototype.scrub=function(){s(this._keySchedule),s(this._invKeySchedule),s(this._key)},t.exports.AES=h},62422:(t,e,r)=>{var n=r(74497),i=r(89509).Buffer,s=r(71027),o=r(35717),a=r(83288),u=r(67295),h=r(20685);function c(t,e,r,o){s.call(this);var u=i.alloc(4,0);this._cipher=new n.AES(e);var c=this._cipher.encryptBlock(u);this._ghash=new a(c),r=function(t,e,r){if(12===e.length)return t._finID=i.concat([e,i.from([0,0,0,1])]),i.concat([e,i.from([0,0,0,2])]);var n=new a(r),s=e.length,o=s%16;n.update(e),o&&(o=16-o,n.update(i.alloc(o,0))),n.update(i.alloc(8,0));var u=8*s,c=i.alloc(8);c.writeUIntBE(u,0,8),n.update(c),t._finID=n.state;var l=i.from(t._finID);return h(l),l}(this,r,c),this._prev=i.from(r),this._cache=i.allocUnsafe(0),this._secCache=i.allocUnsafe(0),this._decrypt=o,this._alen=0,this._len=0,this._mode=t,this._authTag=null,this._called=!1}o(c,s),c.prototype._update=function(t){if(!this._called&&this._alen){var e=16-this._alen%16;e<16&&(e=i.alloc(e,0),this._ghash.update(e))}this._called=!0;var r=this._mode.encrypt(this,t);return this._decrypt?this._ghash.update(t):this._ghash.update(r),this._len+=t.length,r},c.prototype._final=function(){if(this._decrypt&&!this._authTag)throw new Error("Unsupported state or unable to authenticate data");var t=u(this._ghash.final(8*this._alen,8*this._len),this._cipher.encryptBlock(this._finID));if(this._decrypt&&function(t,e){var r=0;t.length!==e.length&&r++;for(var n=Math.min(t.length,e.length),i=0;i<n;++i)r+=t[i]^e[i];return r}(t,this._authTag))throw new Error("Unsupported state or unable to authenticate data");this._authTag=t,this._cipher.scrub()},c.prototype.getAuthTag=function(){if(this._decrypt||!i.isBuffer(this._authTag))throw new Error("Attempting to get auth tag in unsupported state");return this._authTag},c.prototype.setAuthTag=function(t){if(!this._decrypt)throw new Error("Attempting to set auth tag in unsupported state");this._authTag=t},c.prototype.setAAD=function(t){if(this._called)throw new Error("Attempting to set AAD in unsupported state");this._ghash.update(t),this._alen+=t.length},t.exports=c},44696:(t,e,r)=>{var n=r(71494),i=r(66193),s=r(44946);e.createCipher=e.Cipher=n.createCipher,e.createCipheriv=e.Cipheriv=n.createCipheriv,e.createDecipher=e.Decipher=i.createDecipher,e.createDecipheriv=e.Decipheriv=i.createDecipheriv,e.listCiphers=e.getCiphers=function(){return Object.keys(s)}},66193:(t,e,r)=>{var n=r(62422),i=r(89509).Buffer,s=r(45),o=r(25969),a=r(71027),u=r(74497),h=r(13048);function c(t,e,r){a.call(this),this._cache=new l,this._last=void 0,this._cipher=new u.AES(e),this._prev=i.from(r),this._mode=t,this._autopadding=!0}function l(){this.cache=i.allocUnsafe(0)}function d(t,e,r){var a=s[t.toLowerCase()];if(!a)throw new TypeError("invalid suite type");if("string"==typeof r&&(r=i.from(r)),"GCM"!==a.mode&&r.length!==a.iv)throw new TypeError("invalid iv length "+r.length);if("string"==typeof e&&(e=i.from(e)),e.length!==a.key/8)throw new TypeError("invalid key length "+e.length);return"stream"===a.type?new o(a.module,e,r,!0):"auth"===a.type?new n(a.module,e,r,!0):new c(a.module,e,r)}r(35717)(c,a),c.prototype._update=function(t){var e,r;this._cache.add(t);for(var n=[];e=this._cache.get(this._autopadding);)r=this._mode.decrypt(this,e),n.push(r);return i.concat(n)},c.prototype._final=function(){var t=this._cache.flush();if(this._autopadding)return function(t){var e=t[15];if(e<1||e>16)throw new Error("unable to decrypt data");var r=-1;for(;++r<e;)if(t[r+(16-e)]!==e)throw new Error("unable to decrypt data");if(16===e)return;return t.slice(0,16-e)}(this._mode.decrypt(this,t));if(t)throw new Error("data not multiple of block length")},c.prototype.setAutoPadding=function(t){return this._autopadding=!!t,this},l.prototype.add=function(t){this.cache=i.concat([this.cache,t])},l.prototype.get=function(t){var e;if(t){if(this.cache.length>16)return e=this.cache.slice(0,16),this.cache=this.cache.slice(16),e}else if(this.cache.length>=16)return e=this.cache.slice(0,16),this.cache=this.cache.slice(16),e;return null},l.prototype.flush=function(){if(this.cache.length)return this.cache},e.createDecipher=function(t,e){var r=s[t.toLowerCase()];if(!r)throw new TypeError("invalid suite type");var n=h(e,!1,r.key,r.iv);return d(t,n.key,n.iv)},e.createDecipheriv=d},71494:(t,e,r)=>{var n=r(45),i=r(62422),s=r(89509).Buffer,o=r(25969),a=r(71027),u=r(74497),h=r(13048);function c(t,e,r){a.call(this),this._cache=new d,this._cipher=new u.AES(e),this._prev=s.from(r),this._mode=t,this._autopadding=!0}r(35717)(c,a),c.prototype._update=function(t){var e,r;this._cache.add(t);for(var n=[];e=this._cache.get();)r=this._mode.encrypt(this,e),n.push(r);return s.concat(n)};var l=s.alloc(16,16);function d(){this.cache=s.allocUnsafe(0)}function f(t,e,r){var a=n[t.toLowerCase()];if(!a)throw new TypeError("invalid suite type");if("string"==typeof e&&(e=s.from(e)),e.length!==a.key/8)throw new TypeError("invalid key length "+e.length);if("string"==typeof r&&(r=s.from(r)),"GCM"!==a.mode&&r.length!==a.iv)throw new TypeError("invalid iv length "+r.length);return"stream"===a.type?new o(a.module,e,r):"auth"===a.type?new i(a.module,e,r):new c(a.module,e,r)}c.prototype._final=function(){var t=this._cache.flush();if(this._autopadding)return t=this._mode.encrypt(this,t),this._cipher.scrub(),t;if(!t.equals(l))throw this._cipher.scrub(),new Error("data not multiple of block length")},c.prototype.setAutoPadding=function(t){return this._autopadding=!!t,this},d.prototype.add=function(t){this.cache=s.concat([this.cache,t])},d.prototype.get=function(){if(this.cache.length>15){var t=this.cache.slice(0,16);return this.cache=this.cache.slice(16),t}return null},d.prototype.flush=function(){for(var t=16-this.cache.length,e=s.allocUnsafe(t),r=-1;++r<t;)e.writeUInt8(t,r);return s.concat([this.cache,e])},e.createCipheriv=f,e.createCipher=function(t,e){var r=n[t.toLowerCase()];if(!r)throw new TypeError("invalid suite type");var i=h(e,!1,r.key,r.iv);return f(t,i.key,i.iv)}},83288:(t,e,r)=>{var n=r(89509).Buffer,i=n.alloc(16,0);function s(t){var e=n.allocUnsafe(16);return e.writeUInt32BE(t[0]>>>0,0),e.writeUInt32BE(t[1]>>>0,4),e.writeUInt32BE(t[2]>>>0,8),e.writeUInt32BE(t[3]>>>0,12),e}function o(t){this.h=t,this.state=n.alloc(16,0),this.cache=n.allocUnsafe(0)}o.prototype.ghash=function(t){for(var e=-1;++e<t.length;)this.state[e]^=t[e];this._multiply()},o.prototype._multiply=function(){for(var t,e,r,n=[(t=this.h).readUInt32BE(0),t.readUInt32BE(4),t.readUInt32BE(8),t.readUInt32BE(12)],i=[0,0,0,0],o=-1;++o<128;){for(0!=(this.state[~~(o/8)]&1<<7-o%8)&&(i[0]^=n[0],i[1]^=n[1],i[2]^=n[2],i[3]^=n[3]),r=0!=(1&n[3]),e=3;e>0;e--)n[e]=n[e]>>>1|(1&n[e-1])<<31;n[0]=n[0]>>>1,r&&(n[0]=n[0]^225<<24)}this.state=s(i)},o.prototype.update=function(t){var e;for(this.cache=n.concat([this.cache,t]);this.cache.length>=16;)e=this.cache.slice(0,16),this.cache=this.cache.slice(16),this.ghash(e)},o.prototype.final=function(t,e){return this.cache.length&&this.ghash(n.concat([this.cache,i],16)),this.ghash(s([0,t,0,e])),this.state},t.exports=o},20685:t=>{t.exports=function(t){for(var e,r=t.length;r--;){if(255!==(e=t.readUInt8(r))){e++,t.writeUInt8(e,r);break}t.writeUInt8(0,r)}}},25292:(t,e,r)=>{var n=r(67295);e.encrypt=function(t,e){var r=n(e,t._prev);return t._prev=t._cipher.encryptBlock(r),t._prev},e.decrypt=function(t,e){var r=t._prev;t._prev=e;var i=t._cipher.decryptBlock(e);return n(i,r)}},86311:(t,e,r)=>{var n=r(89509).Buffer,i=r(67295);function s(t,e,r){var s=e.length,o=i(e,t._cache);return t._cache=t._cache.slice(s),t._prev=n.concat([t._prev,r?e:o]),o}e.encrypt=function(t,e,r){for(var i,o=n.allocUnsafe(0);e.length;){if(0===t._cache.length&&(t._cache=t._cipher.encryptBlock(t._prev),t._prev=n.allocUnsafe(0)),!(t._cache.length<=e.length)){o=n.concat([o,s(t,e,r)]);break}i=t._cache.length,o=n.concat([o,s(t,e.slice(0,i),r)]),e=e.slice(i)}return o}},21510:(t,e,r)=>{var n=r(89509).Buffer;function i(t,e,r){for(var n,i,o=-1,a=0;++o<8;)n=e&1<<7-o?128:0,a+=(128&(i=t._cipher.encryptBlock(t._prev)[0]^n))>>o%8,t._prev=s(t._prev,r?n:i);return a}function s(t,e){var r=t.length,i=-1,s=n.allocUnsafe(t.length);for(t=n.concat([t,n.from([e])]);++i<r;)s[i]=t[i]<<1|t[i+1]>>7;return s}e.encrypt=function(t,e,r){for(var s=e.length,o=n.allocUnsafe(s),a=-1;++a<s;)o[a]=i(t,e[a],r);return o}},71964:(t,e,r)=>{var n=r(89509).Buffer;function i(t,e,r){var i=t._cipher.encryptBlock(t._prev)[0]^e;return t._prev=n.concat([t._prev.slice(1),n.from([r?e:i])]),i}e.encrypt=function(t,e,r){for(var s=e.length,o=n.allocUnsafe(s),a=-1;++a<s;)o[a]=i(t,e[a],r);return o}},96009:(t,e,r)=>{var n=r(67295),i=r(89509).Buffer,s=r(20685);function o(t){var e=t._cipher.encryptBlockRaw(t._prev);return s(t._prev),e}e.encrypt=function(t,e){var r=Math.ceil(e.length/16),s=t._cache.length;t._cache=i.concat([t._cache,i.allocUnsafe(16*r)]);for(var a=0;a<r;a++){var u=o(t),h=s+16*a;t._cache.writeUInt32BE(u[0],h+0),t._cache.writeUInt32BE(u[1],h+4),t._cache.writeUInt32BE(u[2],h+8),t._cache.writeUInt32BE(u[3],h+12)}var c=t._cache.slice(0,e.length);return t._cache=t._cache.slice(e.length),n(e,c)}},11084:(t,e)=>{e.encrypt=function(t,e){return t._cipher.encryptBlock(e)},e.decrypt=function(t,e){return t._cipher.decryptBlock(e)}},45:(t,e,r)=>{var n={ECB:r(11084),CBC:r(25292),CFB:r(86311),CFB8:r(71964),CFB1:r(21510),OFB:r(18861),CTR:r(96009),GCM:r(96009)},i=r(44946);for(var s in i)i[s].module=n[i[s].mode];t.exports=i},18861:(t,e,r)=>{var n=r(23085).Buffer,i=r(67295);function s(t){return t._prev=t._cipher.encryptBlock(t._prev),t._prev}e.encrypt=function(t,e){for(;t._cache.length<e.length;)t._cache=n.concat([t._cache,s(t)]);var r=t._cache.slice(0,e.length);return t._cache=t._cache.slice(e.length),i(e,r)}},25969:(t,e,r)=>{var n=r(74497),i=r(89509).Buffer,s=r(71027);function o(t,e,r,o){s.call(this),this._cipher=new n.AES(e),this._prev=i.from(r),this._cache=i.allocUnsafe(0),this._secCache=i.allocUnsafe(0),this._decrypt=o,this._mode=t}r(35717)(o,s),o.prototype._update=function(t){return this._mode.encrypt(this,t,this._decrypt)},o.prototype._final=function(){this._cipher.scrub()},t.exports=o},53614:(t,e,r)=>{var n=r(47667),i=r(44696),s=r(45),o=r(99715),a=r(13048);function u(t,e,r){if(t=t.toLowerCase(),s[t])return i.createCipheriv(t,e,r);if(o[t])return new n({key:e,iv:r,mode:t});throw new TypeError("invalid suite type")}function h(t,e,r){if(t=t.toLowerCase(),s[t])return i.createDecipheriv(t,e,r);if(o[t])return new n({key:e,iv:r,mode:t,decrypt:!0});throw new TypeError("invalid suite type")}e.createCipher=e.Cipher=function(t,e){var r,n;if(t=t.toLowerCase(),s[t])r=s[t].key,n=s[t].iv;else{if(!o[t])throw new TypeError("invalid suite type");r=8*o[t].key,n=o[t].iv}var i=a(e,!1,r,n);return u(t,i.key,i.iv)},e.createCipheriv=e.Cipheriv=u,e.createDecipher=e.Decipher=function(t,e){var r,n;if(t=t.toLowerCase(),s[t])r=s[t].key,n=s[t].iv;else{if(!o[t])throw new TypeError("invalid suite type");r=8*o[t].key,n=o[t].iv}var i=a(e,!1,r,n);return h(t,i.key,i.iv)},e.createDecipheriv=e.Decipheriv=h,e.listCiphers=e.getCiphers=function(){return Object.keys(o).concat(i.getCiphers())}},47667:(t,e,r)=>{var n=r(71027),i=r(15251),s=r(35717),o=r(89509).Buffer,a={"des-ede3-cbc":i.CBC.instantiate(i.EDE),"des-ede3":i.EDE,"des-ede-cbc":i.CBC.instantiate(i.EDE),"des-ede":i.EDE,"des-cbc":i.CBC.instantiate(i.DES),"des-ecb":i.DES};function u(t){n.call(this);var e,r=t.mode.toLowerCase(),i=a[r];e=t.decrypt?"decrypt":"encrypt";var s=t.key;o.isBuffer(s)||(s=o.from(s)),"des-ede"!==r&&"des-ede-cbc"!==r||(s=o.concat([s,s.slice(0,8)]));var u=t.iv;o.isBuffer(u)||(u=o.from(u)),this._des=i.create({key:s,iv:u,type:e})}a.des=a["des-cbc"],a.des3=a["des-ede3-cbc"],t.exports=u,s(u,n),u.prototype._update=function(t){return o.from(this._des.update(t))},u.prototype._final=function(){return o.from(this._des.final())}},99715:(t,e)=>{e["des-ecb"]={key:8,iv:0},e["des-cbc"]=e.des={key:8,iv:8},e["des-ede3-cbc"]=e.des3={key:24,iv:8},e["des-ede3"]={key:24,iv:0},e["des-ede-cbc"]={key:16,iv:8},e["des-ede"]={key:16,iv:0}},23663:(t,e,r)=>{var n=r(23085).Buffer,i=r(13550),s=r(61798);function o(t){var e,r=t.modulus.byteLength();do{e=new i(s(r))}while(e.cmp(t.modulus)>=0||!e.umod(t.prime1)||!e.umod(t.prime2));return e}function a(t,e){var r=function(t){var e=o(t);return{blinder:e.toRed(i.mont(t.modulus)).redPow(new i(t.publicExponent)).fromRed(),unblinder:e.invm(t.modulus)}}(e),s=e.modulus.byteLength(),a=new i(t).mul(r.blinder).umod(e.modulus),u=a.toRed(i.mont(e.prime1)),h=a.toRed(i.mont(e.prime2)),c=e.coefficient,l=e.prime1,d=e.prime2,f=u.redPow(e.exponent1).fromRed(),p=h.redPow(e.exponent2).fromRed(),m=f.isub(p).imul(c).umod(l).imul(d);return p.iadd(m).imul(r.unblinder).umod(e.modulus).toArrayLike(n,"be",s)}a.getr=o,t.exports=a},56042:(t,e,r)=>{t.exports=r(75207)},64743:(t,e,r)=>{var n=r(89509).Buffer,i=r(23482),s=r(88473),o=r(35717),a=r(82957),u=r(47753),h=r(75207);function c(t){s.Writable.call(this);var e=h[t];if(!e)throw new Error("Unknown message digest");this._hashType=e.hash,this._hash=i(e.hash),this._tag=e.id,this._signType=e.sign}function l(t){s.Writable.call(this);var e=h[t];if(!e)throw new Error("Unknown message digest");this._hash=i(e.hash),this._tag=e.id,this._signType=e.sign}function d(t){return new c(t)}function f(t){return new l(t)}Object.keys(h).forEach((function(t){h[t].id=n.from(h[t].id,"hex"),h[t.toLowerCase()]=h[t]})),o(c,s.Writable),c.prototype._write=function(t,e,r){this._hash.update(t),r()},c.prototype.update=function(t,e){return"string"==typeof t&&(t=n.from(t,e)),this._hash.update(t),this},c.prototype.sign=function(t,e){this.end();var r=this._hash.digest(),n=a(r,t,this._hashType,this._signType,this._tag);return e?n.toString(e):n},o(l,s.Writable),l.prototype._write=function(t,e,r){this._hash.update(t),r()},l.prototype.update=function(t,e){return"string"==typeof t&&(t=n.from(t,e)),this._hash.update(t),this},l.prototype.verify=function(t,e,r){"string"==typeof e&&(e=n.from(e,r)),this.end();var i=this._hash.digest();return u(e,i,t,this._signType,this._tag)},t.exports={Sign:d,Verify:f,createSign:d,createVerify:f}},82957:(t,e,r)=>{var n=r(89509).Buffer,i=r(58355),s=r(23663),o=r(86266).ec,a=r(13550),u=r(70980),h=r(1308);function c(t,e,r,s){if((t=n.from(t.toArray())).length<e.byteLength()){var o=n.alloc(e.byteLength()-t.length);t=n.concat([o,t])}var a=r.length,u=function(t,e){t=(t=l(t,e)).mod(e);var r=n.from(t.toArray());if(r.length<e.byteLength()){var i=n.alloc(e.byteLength()-r.length);r=n.concat([i,r])}return r}(r,e),h=n.alloc(a);h.fill(1);var c=n.alloc(a);return c=i(s,c).update(h).update(n.from([0])).update(t).update(u).digest(),h=i(s,c).update(h).digest(),{k:c=i(s,c).update(h).update(n.from([1])).update(t).update(u).digest(),v:h=i(s,c).update(h).digest()}}function l(t,e){var r=new a(t),n=(t.length<<3)-e.bitLength();return n>0&&r.ishrn(n),r}function d(t,e,r){var s,o;do{for(s=n.alloc(0);8*s.length<t.bitLength();)e.v=i(r,e.k).update(e.v).digest(),s=n.concat([s,e.v]);o=l(s,t),e.k=i(r,e.k).update(e.v).update(n.from([0])).digest(),e.v=i(r,e.k).update(e.v).digest()}while(-1!==o.cmp(t));return o}function f(t,e,r,n){return t.toRed(a.mont(r)).redPow(e).fromRed().mod(n)}t.exports=function(t,e,r,i,p){var m=u(e);if(m.curve){if("ecdsa"!==i&&"ecdsa/rsa"!==i)throw new Error("wrong private key type");return function(t,e){var r=h[e.curve.join(".")];if(!r)throw new Error("unknown curve "+e.curve.join("."));var i=new o(r).keyFromPrivate(e.privateKey).sign(t);return n.from(i.toDER())}(t,m)}if("dsa"===m.type){if("dsa"!==i)throw new Error("wrong private key type");return function(t,e,r){var i,s=e.params.priv_key,o=e.params.p,u=e.params.q,h=e.params.g,p=new a(0),m=l(t,u).mod(u),y=!1,v=c(s,u,t,r);for(;!1===y;)p=f(h,i=d(u,v,r),o,u),0===(y=i.invm(u).imul(m.add(s.mul(p))).mod(u)).cmpn(0)&&(y=!1,p=new a(0));return function(t,e){t=t.toArray(),e=e.toArray(),128&t[0]&&(t=[0].concat(t));128&e[0]&&(e=[0].concat(e));var r=[48,t.length+e.length+4,2,t.length];return r=r.concat(t,[2,e.length],e),n.from(r)}(p,y)}(t,m,r)}if("rsa"!==i&&"ecdsa/rsa"!==i)throw new Error("wrong private key type");t=n.concat([p,t]);for(var y=m.modulus.byteLength(),v=[0,1];t.length+v.length+1<y;)v.push(255);v.push(0);for(var g=-1;++g<t.length;)v.push(t[g]);return s(v,m)},t.exports.getKey=c,t.exports.makeKey=d},47753:(t,e,r)=>{var n=r(89509).Buffer,i=r(13550),s=r(86266).ec,o=r(70980),a=r(1308);function u(t,e){if(t.cmpn(0)<=0)throw new Error("invalid sig");if(t.cmp(e)>=e)throw new Error("invalid sig")}t.exports=function(t,e,r,h,c){var l=o(r);if("ec"===l.type){if("ecdsa"!==h&&"ecdsa/rsa"!==h)throw new Error("wrong public key type");return function(t,e,r){var n=a[r.data.algorithm.curve.join(".")];if(!n)throw new Error("unknown curve "+r.data.algorithm.curve.join("."));var i=new s(n),o=r.data.subjectPrivateKey.data;return i.verify(e,t,o)}(t,e,l)}if("dsa"===l.type){if("dsa"!==h)throw new Error("wrong public key type");return function(t,e,r){var n=r.data.p,s=r.data.q,a=r.data.g,h=r.data.pub_key,c=o.signature.decode(t,"der"),l=c.s,d=c.r;u(l,s),u(d,s);var f=i.mont(n),p=l.invm(s);return 0===a.toRed(f).redPow(new i(e).mul(p).mod(s)).fromRed().mul(h.toRed(f).redPow(d.mul(p).mod(s)).fromRed()).mod(n).mod(s).cmp(d)}(t,e,l)}if("rsa"!==h&&"ecdsa/rsa"!==h)throw new Error("wrong public key type");e=n.concat([c,e]);for(var d=l.modulus.byteLength(),f=[1],p=0;e.length+f.length+2<d;)f.push(255),p++;f.push(0);for(var m=-1;++m<e.length;)f.push(e[m]);f=n.from(f);var y=i.mont(l.modulus);t=(t=new i(t).toRed(y)).redPow(new i(l.publicExponent)),t=n.from(t.fromRed().toArray());var v=p<8?1:0;for(d=Math.min(t.length,f.length),t.length!==f.length&&(v=1),m=-1;++m<d;)v|=t[m]^f[m];return 0===v}},67295:(t,e,r)=>{var n=r(23085).Buffer;t.exports=function(t,e){for(var r=Math.min(t.length,e.length),i=new n(r),s=0;s<r;++s)i[s]=t[s]^e[s];return i}},48764:(t,e,r)=>{"use strict";
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */var n=r(79742),i=r(80645),s="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;e.Buffer=u,e.SlowBuffer=function(t){+t!=t&&(t=0);return u.alloc(+t)},e.INSPECT_MAX_BYTES=50;var o=2147483647;function a(t){if(t>o)throw new RangeError('The value "'+t+'" is invalid for option "size"');var e=new Uint8Array(t);return Object.setPrototypeOf(e,u.prototype),e}function u(t,e,r){if("number"==typeof t){if("string"==typeof e)throw new TypeError('The "string" argument must be of type string. Received type number');return l(t)}return h(t,e,r)}function h(t,e,r){if("string"==typeof t)return function(t,e){"string"==typeof e&&""!==e||(e="utf8");if(!u.isEncoding(e))throw new TypeError("Unknown encoding: "+e);var r=0|m(t,e),n=a(r),i=n.write(t,e);i!==r&&(n=n.slice(0,i));return n}(t,e);if(ArrayBuffer.isView(t))return function(t){if(V(t,Uint8Array)){var e=new Uint8Array(t);return f(e.buffer,e.byteOffset,e.byteLength)}return d(t)}(t);if(null==t)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(V(t,ArrayBuffer)||t&&V(t.buffer,ArrayBuffer))return f(t,e,r);if("undefined"!=typeof SharedArrayBuffer&&(V(t,SharedArrayBuffer)||t&&V(t.buffer,SharedArrayBuffer)))return f(t,e,r);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');var n=t.valueOf&&t.valueOf();if(null!=n&&n!==t)return u.from(n,e,r);var i=function(t){if(u.isBuffer(t)){var e=0|p(t.length),r=a(e);return 0===r.length||t.copy(r,0,0,e),r}if(void 0!==t.length)return"number"!=typeof t.length||C(t.length)?a(0):d(t);if("Buffer"===t.type&&Array.isArray(t.data))return d(t.data)}(t);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return u.from(t[Symbol.toPrimitive]("string"),e,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function c(t){if("number"!=typeof t)throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function l(t){return c(t),a(t<0?0:0|p(t))}function d(t){for(var e=t.length<0?0:0|p(t.length),r=a(e),n=0;n<e;n+=1)r[n]=255&t[n];return r}function f(t,e,r){if(e<0||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('"length" is outside of buffer bounds');var n;return n=void 0===e&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,e):new Uint8Array(t,e,r),Object.setPrototypeOf(n,u.prototype),n}function p(t){if(t>=o)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o.toString(16)+" bytes");return 0|t}function m(t,e){if(u.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||V(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);var r=t.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;for(var i=!1;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return I(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return B(t).length;default:if(i)return n?-1:I(t).length;e=(""+e).toLowerCase(),i=!0}}function y(t,e,r){var n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return j(this,e,r);case"utf8":case"utf-8":return T(this,e,r);case"ascii":return A(this,e,r);case"latin1":case"binary":return D(this,e,r);case"base64":return L(this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return H(this,e,r);default:if(n)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),n=!0}}function v(t,e,r){var n=t[e];t[e]=t[r],t[r]=n}function g(t,e,r,n,i){if(0===t.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),C(r=+r)&&(r=i?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(i)return-1;r=t.length-1}else if(r<0){if(!i)return-1;r=0}if("string"==typeof e&&(e=u.from(e,n)),u.isBuffer(e))return 0===e.length?-1:b(t,e,r,n,i);if("number"==typeof e)return e&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):b(t,[e],r,n,i);throw new TypeError("val must be string, number or Buffer")}function b(t,e,r,n,i){var s,o=1,a=t.length,u=e.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(t.length<2||e.length<2)return-1;o=2,a/=2,u/=2,r/=2}function h(t,e){return 1===o?t[e]:t.readUInt16BE(e*o)}if(i){var c=-1;for(s=r;s<a;s++)if(h(t,s)===h(e,-1===c?0:s-c)){if(-1===c&&(c=s),s-c+1===u)return c*o}else-1!==c&&(s-=s-c),c=-1}else for(r+u>a&&(r=a-u),s=r;s>=0;s--){for(var l=!0,d=0;d<u;d++)if(h(t,s+d)!==h(e,d)){l=!1;break}if(l)return s}return-1}function w(t,e,r,n){r=Number(r)||0;var i=t.length-r;n?(n=Number(n))>i&&(n=i):n=i;var s=e.length;n>s/2&&(n=s/2);for(var o=0;o<n;++o){var a=parseInt(e.substr(2*o,2),16);if(C(a))return o;t[r+o]=a}return o}function M(t,e,r,n){return X(I(e,t.length-r),t,r,n)}function k(t,e,r,n){return X(function(t){for(var e=[],r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}(e),t,r,n)}function x(t,e,r,n){return X(B(e),t,r,n)}function P(t,e,r,n){return X(function(t,e){for(var r,n,i,s=[],o=0;o<t.length&&!((e-=2)<0);++o)n=(r=t.charCodeAt(o))>>8,i=r%256,s.push(i),s.push(n);return s}(e,t.length-r),t,r,n)}function L(t,e,r){return 0===e&&r===t.length?n.fromByteArray(t):n.fromByteArray(t.slice(e,r))}function T(t,e,r){r=Math.min(t.length,r);for(var n=[],i=e;i<r;){var s,o,a,u,h=t[i],c=null,l=h>239?4:h>223?3:h>191?2:1;if(i+l<=r)switch(l){case 1:h<128&&(c=h);break;case 2:128==(192&(s=t[i+1]))&&(u=(31&h)<<6|63&s)>127&&(c=u);break;case 3:s=t[i+1],o=t[i+2],128==(192&s)&&128==(192&o)&&(u=(15&h)<<12|(63&s)<<6|63&o)>2047&&(u<55296||u>57343)&&(c=u);break;case 4:s=t[i+1],o=t[i+2],a=t[i+3],128==(192&s)&&128==(192&o)&&128==(192&a)&&(u=(15&h)<<18|(63&s)<<12|(63&o)<<6|63&a)>65535&&u<1114112&&(c=u)}null===c?(c=65533,l=1):c>65535&&(c-=65536,n.push(c>>>10&1023|55296),c=56320|1023&c),n.push(c),i+=l}return function(t){var e=t.length;if(e<=S)return String.fromCharCode.apply(String,t);var r="",n=0;for(;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=S));return r}(n)}e.kMaxLength=o,u.TYPED_ARRAY_SUPPORT=function(){try{var t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),u.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(u.prototype,"parent",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.buffer}}),Object.defineProperty(u.prototype,"offset",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.byteOffset}}),u.poolSize=8192,u.from=function(t,e,r){return h(t,e,r)},Object.setPrototypeOf(u.prototype,Uint8Array.prototype),Object.setPrototypeOf(u,Uint8Array),u.alloc=function(t,e,r){return function(t,e,r){return c(t),t<=0?a(t):void 0!==e?"string"==typeof r?a(t).fill(e,r):a(t).fill(e):a(t)}(t,e,r)},u.allocUnsafe=function(t){return l(t)},u.allocUnsafeSlow=function(t){return l(t)},u.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==u.prototype},u.compare=function(t,e){if(V(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),V(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;for(var r=t.length,n=e.length,i=0,s=Math.min(r,n);i<s;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);var r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;var n=u.allocUnsafe(e),i=0;for(r=0;r<t.length;++r){var s=t[r];if(V(s,Uint8Array))i+s.length>n.length?u.from(s).copy(n,i):Uint8Array.prototype.set.call(n,s,i);else{if(!u.isBuffer(s))throw new TypeError('"list" argument must be an Array of Buffers');s.copy(n,i)}i+=s.length}return n},u.byteLength=m,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)v(this,e,e+1);return this},u.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)v(this,e,e+3),v(this,e+1,e+2);return this},u.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)v(this,e,e+7),v(this,e+1,e+6),v(this,e+2,e+5),v(this,e+3,e+4);return this},u.prototype.toString=function(){var t=this.length;return 0===t?"":0===arguments.length?T(this,0,t):y.apply(this,arguments)},u.prototype.toLocaleString=u.prototype.toString,u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){var t="",r=e.INSPECT_MAX_BYTES;return t=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(t+=" ... "),"<Buffer "+t+">"},s&&(u.prototype[s]=u.prototype.inspect),u.prototype.compare=function(t,e,r,n,i){if(V(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),!u.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),e<0||r>t.length||n<0||i>this.length)throw new RangeError("out of range index");if(n>=i&&e>=r)return 0;if(n>=i)return-1;if(e>=r)return 1;if(this===t)return 0;for(var s=(i>>>=0)-(n>>>=0),o=(r>>>=0)-(e>>>=0),a=Math.min(s,o),h=this.slice(n,i),c=t.slice(e,r),l=0;l<a;++l)if(h[l]!==c[l]){s=h[l],o=c[l];break}return s<o?-1:o<s?1:0},u.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},u.prototype.indexOf=function(t,e,r){return g(this,t,e,r,!0)},u.prototype.lastIndexOf=function(t,e,r){return g(this,t,e,r,!1)},u.prototype.write=function(t,e,r,n){if(void 0===e)n="utf8",r=this.length,e=0;else if(void 0===r&&"string"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var i=this.length-e;if((void 0===r||r>i)&&(r=i),t.length>0&&(r<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var s=!1;;)switch(n){case"hex":return w(this,t,e,r);case"utf8":case"utf-8":return M(this,t,e,r);case"ascii":case"latin1":case"binary":return k(this,t,e,r);case"base64":return x(this,t,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return P(this,t,e,r);default:if(s)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),s=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var S=4096;function A(t,e,r){var n="";r=Math.min(t.length,r);for(var i=e;i<r;++i)n+=String.fromCharCode(127&t[i]);return n}function D(t,e,r){var n="";r=Math.min(t.length,r);for(var i=e;i<r;++i)n+=String.fromCharCode(t[i]);return n}function j(t,e,r){var n=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>n)&&(r=n);for(var i="",s=e;s<r;++s)i+=W[t[s]];return i}function H(t,e,r){for(var n=t.slice(e,r),i="",s=0;s<n.length-1;s+=2)i+=String.fromCharCode(n[s]+256*n[s+1]);return i}function O(t,e,r){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>r)throw new RangeError("Trying to access beyond buffer length")}function z(t,e,r,n,i,s){if(!u.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>i||e<s)throw new RangeError('"value" argument is out of bounds');if(r+n>t.length)throw new RangeError("Index out of range")}function N(t,e,r,n,i,s){if(r+n>t.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function E(t,e,r,n,s){return e=+e,r>>>=0,s||N(t,0,r,4),i.write(t,e,r,n,23,4),r+4}function Y(t,e,r,n,s){return e=+e,r>>>=0,s||N(t,0,r,8),i.write(t,e,r,n,52,8),r+8}u.prototype.slice=function(t,e){var r=this.length;(t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t);var n=this.subarray(t,e);return Object.setPrototypeOf(n,u.prototype),n},u.prototype.readUintLE=u.prototype.readUIntLE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);for(var n=this[t],i=1,s=0;++s<e&&(i*=256);)n+=this[t+s]*i;return n},u.prototype.readUintBE=u.prototype.readUIntBE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);for(var n=this[t+--e],i=1;e>0&&(i*=256);)n+=this[t+--e]*i;return n},u.prototype.readUint8=u.prototype.readUInt8=function(t,e){return t>>>=0,e||O(t,1,this.length),this[t]},u.prototype.readUint16LE=u.prototype.readUInt16LE=function(t,e){return t>>>=0,e||O(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUint16BE=u.prototype.readUInt16BE=function(t,e){return t>>>=0,e||O(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUint32LE=u.prototype.readUInt32LE=function(t,e){return t>>>=0,e||O(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUint32BE=u.prototype.readUInt32BE=function(t,e){return t>>>=0,e||O(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readIntLE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);for(var n=this[t],i=1,s=0;++s<e&&(i*=256);)n+=this[t+s]*i;return n>=(i*=128)&&(n-=Math.pow(2,8*e)),n},u.prototype.readIntBE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);for(var n=e,i=1,s=this[t+--n];n>0&&(i*=256);)s+=this[t+--n]*i;return s>=(i*=128)&&(s-=Math.pow(2,8*e)),s},u.prototype.readInt8=function(t,e){return t>>>=0,e||O(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){t>>>=0,e||O(t,2,this.length);var r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt16BE=function(t,e){t>>>=0,e||O(t,2,this.length);var r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt32LE=function(t,e){return t>>>=0,e||O(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return t>>>=0,e||O(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readFloatLE=function(t,e){return t>>>=0,e||O(t,4,this.length),i.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return t>>>=0,e||O(t,4,this.length),i.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return t>>>=0,e||O(t,8,this.length),i.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return t>>>=0,e||O(t,8,this.length),i.read(this,t,!1,52,8)},u.prototype.writeUintLE=u.prototype.writeUIntLE=function(t,e,r,n){(t=+t,e>>>=0,r>>>=0,n)||z(this,t,e,r,Math.pow(2,8*r)-1,0);var i=1,s=0;for(this[e]=255&t;++s<r&&(i*=256);)this[e+s]=t/i&255;return e+r},u.prototype.writeUintBE=u.prototype.writeUIntBE=function(t,e,r,n){(t=+t,e>>>=0,r>>>=0,n)||z(this,t,e,r,Math.pow(2,8*r)-1,0);var i=r-1,s=1;for(this[e+i]=255&t;--i>=0&&(s*=256);)this[e+i]=t/s&255;return e+r},u.prototype.writeUint8=u.prototype.writeUInt8=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,1,255,0),this[e]=255&t,e+1},u.prototype.writeUint16LE=u.prototype.writeUInt16LE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},u.prototype.writeUint16BE=u.prototype.writeUInt16BE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},u.prototype.writeUint32LE=u.prototype.writeUInt32LE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},u.prototype.writeUint32BE=u.prototype.writeUInt32BE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},u.prototype.writeIntLE=function(t,e,r,n){if(t=+t,e>>>=0,!n){var i=Math.pow(2,8*r-1);z(this,t,e,r,i-1,-i)}var s=0,o=1,a=0;for(this[e]=255&t;++s<r&&(o*=256);)t<0&&0===a&&0!==this[e+s-1]&&(a=1),this[e+s]=(t/o>>0)-a&255;return e+r},u.prototype.writeIntBE=function(t,e,r,n){if(t=+t,e>>>=0,!n){var i=Math.pow(2,8*r-1);z(this,t,e,r,i-1,-i)}var s=r-1,o=1,a=0;for(this[e+s]=255&t;--s>=0&&(o*=256);)t<0&&0===a&&0!==this[e+s+1]&&(a=1),this[e+s]=(t/o>>0)-a&255;return e+r},u.prototype.writeInt8=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},u.prototype.writeInt16BE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},u.prototype.writeInt32LE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},u.prototype.writeInt32BE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},u.prototype.writeFloatLE=function(t,e,r){return E(this,t,e,!0,r)},u.prototype.writeFloatBE=function(t,e,r){return E(this,t,e,!1,r)},u.prototype.writeDoubleLE=function(t,e,r){return Y(this,t,e,!0,r)},u.prototype.writeDoubleBE=function(t,e,r){return Y(this,t,e,!1,r)},u.prototype.copy=function(t,e,r,n){if(!u.isBuffer(t))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);var i=n-r;return this===t&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,r,n):Uint8Array.prototype.set.call(t,this.subarray(r,n),e),i},u.prototype.fill=function(t,e,r,n){if("string"==typeof t){if("string"==typeof e?(n=e,e=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!u.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===t.length){var i=t.charCodeAt(0);("utf8"===n&&i<128||"latin1"===n)&&(t=i)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<r)throw new RangeError("Out of range index");if(r<=e)return this;var s;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),"number"==typeof t)for(s=e;s<r;++s)this[s]=t;else{var o=u.isBuffer(t)?t:u.from(t,n),a=o.length;if(0===a)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(s=0;s<r-e;++s)this[s+e]=o[s%a]}return this};var R=/[^+/0-9A-Za-z-_]/g;function I(t,e){var r;e=e||1/0;for(var n=t.length,i=null,s=[],o=0;o<n;++o){if((r=t.charCodeAt(o))>55295&&r<57344){if(!i){if(r>56319){(e-=3)>-1&&s.push(239,191,189);continue}if(o+1===n){(e-=3)>-1&&s.push(239,191,189);continue}i=r;continue}if(r<56320){(e-=3)>-1&&s.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(e-=3)>-1&&s.push(239,191,189);if(i=null,r<128){if((e-=1)<0)break;s.push(r)}else if(r<2048){if((e-=2)<0)break;s.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;s.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;s.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return s}function B(t){return n.toByteArray(function(t){if((t=(t=t.split("=")[0]).trim().replace(R,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function X(t,e,r,n){for(var i=0;i<n&&!(i+r>=e.length||i>=t.length);++i)e[i+r]=t[i];return i}function V(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function C(t){return t!=t}var W=function(){for(var t="0123456789abcdef",e=new Array(256),r=0;r<16;++r)for(var n=16*r,i=0;i<16;++i)e[n+i]=t[r]+t[i];return e}()},21924:(t,e,r)=>{"use strict";var n=r(40210),i=r(55559),s=i(n("String.prototype.indexOf"));t.exports=function(t,e){var r=n(t,!!e);return"function"==typeof r&&s(t,".prototype.")>-1?i(r):r}},55559:(t,e,r)=>{"use strict";var n=r(58612),i=r(40210),s=i("%Function.prototype.apply%"),o=i("%Function.prototype.call%"),a=i("%Reflect.apply%",!0)||n.call(o,s),u=i("%Object.getOwnPropertyDescriptor%",!0),h=i("%Object.defineProperty%",!0),c=i("%Math.max%");if(h)try{h({},"a",{value:1})}catch(t){h=null}t.exports=function(t){var e=a(n,o,arguments);if(u&&h){var r=u(e,"length");r.configurable&&h(e,"length",{value:1+c(0,t.length-(arguments.length-1))})}return e};var l=function(){return a(n,s,arguments)};h?h(t.exports,"apply",{value:l}):t.exports.apply=l},23204:t=>{"use strict";const e=/[\p{Lu}]/u,r=/[\p{Ll}]/u,n=/^[\p{Lu}](?![\p{Lu}])/gu,i=/([\p{Alpha}\p{N}_]|$)/u,s=/[_.\- ]+/,o=new RegExp("^"+s.source),a=new RegExp(s.source+i.source,"gu"),u=new RegExp("\\d+"+i.source,"gu"),h=(t,i)=>{if("string"!=typeof t&&!Array.isArray(t))throw new TypeError("Expected the input to be `string | string[]`");if(i={pascalCase:!1,preserveConsecutiveUppercase:!1,...i},0===(t=Array.isArray(t)?t.map((t=>t.trim())).filter((t=>t.length)).join("-"):t.trim()).length)return"";if(1===t.length)return i.pascalCase?t.toLocaleUpperCase(i.locale):t.toLocaleLowerCase(i.locale);return t!==t.toLocaleLowerCase(i.locale)&&(t=((t,n)=>{let i=!1,s=!1,o=!1;for(let a=0;a<t.length;a++){const u=t[a];i&&e.test(u)?(t=t.slice(0,a)+"-"+t.slice(a),i=!1,o=s,s=!0,a++):s&&o&&r.test(u)?(t=t.slice(0,a-1)+"-"+t.slice(a-1),o=s,s=!1,i=!0):(i=u.toLocaleLowerCase(n)===u&&u.toLocaleUpperCase(n)!==u,o=s,s=u.toLocaleUpperCase(n)===u&&u.toLocaleLowerCase(n)!==u)}return t})(t,i.locale)),t=t.replace(o,""),t=i.preserveConsecutiveUppercase?(t=>(n.lastIndex=0,t.replace(n,(t=>t.toLowerCase()))))(t):t.toLocaleLowerCase(),i.pascalCase&&(t=t.charAt(0).toLocaleUpperCase(i.locale)+t.slice(1)),((t,e)=>(a.lastIndex=0,u.lastIndex=0,t.replace(a,((t,r)=>r.toLocaleUpperCase(e.locale))).replace(u,(t=>t.toLocaleUpperCase(e.locale)))))(t,i)};t.exports=h,t.exports.default=h},71027:(t,e,r)=>{var n=r(89509).Buffer,i=r(42830).Transform,s=r(32553).s;function o(t){i.call(this),this.hashMode="string"==typeof t,this.hashMode?this[t]=this._finalOrDigest:this.final=this._finalOrDigest,this._final&&(this.__final=this._final,this._final=null),this._decoder=null,this._encoding=null}r(35717)(o,i),o.prototype.update=function(t,e,r){"string"==typeof t&&(t=n.from(t,e));var i=this._update(t);return this.hashMode?this:(r&&(i=this._toString(i,r)),i)},o.prototype.setAutoPadding=function(){},o.prototype.getAuthTag=function(){throw new Error("trying to get auth tag in unsupported state")},o.prototype.setAuthTag=function(){throw new Error("trying to set auth tag in unsupported state")},o.prototype.setAAD=function(){throw new Error("trying to set aad in unsupported state")},o.prototype._transform=function(t,e,r){var n;try{this.hashMode?this._update(t):this.push(this._update(t))}catch(t){n=t}finally{r(n)}},o.prototype._flush=function(t){var e;try{this.push(this.__final())}catch(t){e=t}t(e)},o.prototype._finalOrDigest=function(t){var e=this.__final()||n.alloc(0);return t&&(e=this._toString(e,t,!0)),e},o.prototype._toString=function(t,e,r){if(this._decoder||(this._decoder=new s(e),this._encoding=e),this._encoding!==e)throw new Error("can't switch encodings");var n=this._decoder.write(t);return r&&(n+=this._decoder.end()),n},t.exports=o},76393:(t,e,r)=>{var n=r(23085).Buffer,i=r(86266),s=r(16426);t.exports=function(t){return new a(t)};var o={secp256k1:{name:"secp256k1",byteLength:32},secp224r1:{name:"p224",byteLength:28},prime256v1:{name:"p256",byteLength:32},prime192v1:{name:"p192",byteLength:24},ed25519:{name:"ed25519",byteLength:32},secp384r1:{name:"p384",byteLength:48},secp521r1:{name:"p521",byteLength:66}};function a(t){this.curveType=o[t],this.curveType||(this.curveType={name:t}),this.curve=new i.ec(this.curveType.name),this.keys=void 0}function u(t,e,r){Array.isArray(t)||(t=t.toArray());var i=new n(t);if(r&&i.length<r){var s=new n(r-i.length);s.fill(0),i=n.concat([s,i])}return e?i.toString(e):i}o.p224=o.secp224r1,o.p256=o.secp256r1=o.prime256v1,o.p192=o.secp192r1=o.prime192v1,o.p384=o.secp384r1,o.p521=o.secp521r1,a.prototype.generateKeys=function(t,e){return this.keys=this.curve.genKeyPair(),this.getPublicKey(t,e)},a.prototype.computeSecret=function(t,e,r){return e=e||"utf8",n.isBuffer(t)||(t=new n(t,e)),u(this.curve.keyFromPublic(t).getPublic().mul(this.keys.getPrivate()).getX(),r,this.curveType.byteLength)},a.prototype.getPublicKey=function(t,e){var r=this.keys.getPublic("compressed"===e,!0);return"hybrid"===e&&(r[r.length-1]%2?r[0]=7:r[0]=6),u(r,t)},a.prototype.getPrivateKey=function(t){return u(this.keys.getPrivate(),t)},a.prototype.setPublicKey=function(t,e){return e=e||"utf8",n.isBuffer(t)||(t=new n(t,e)),this.keys._importPublic(t),this},a.prototype.setPrivateKey=function(t,e){e=e||"utf8",n.isBuffer(t)||(t=new n(t,e));var r=new s(t);return r=r.toString(16),this.keys=this.curve.genKeyPair(),this.keys._importPrivate(r),this}},16426:function(t,e,r){!function(t,e){"use strict";function n(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(8623).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(t,e,r){var n=a(t,r);return r-1>=e&&(n|=a(t,r-1)<<4),n}function h(t,e,r,n){for(var i=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<t.length&&(16===e?this._parseHex(t,i,r):(this._parseBase(t,e,i),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var s,o,a=0;if("be"===r)for(i=t.length-1,s=0;i>=0;i-=3)o=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(i=0,s=0;i<t.length;i+=3)o=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,s=0,o=0;if("be"===r)for(n=t.length-1;n>=e;n-=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;else for(n=(t.length-e)%2==0?e+1:e;n<t.length;n+=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var s=t.length-r,o=s%n,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=n)u=h(t,c,c+n,e),this.imuln(i),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],s=0|e.words[0],o=i*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(i=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var i=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<i|s)).toString(16);r=0!==(s=a>>>24-i&16777215)||o!==this.length-1?c[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],f=d[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?m+r:c[h-m.length]+m+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return n(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var i=this.byteLength(),s=r||Math.max(1,i);n(i<=s,"byte array longer than desired length"),n(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-i;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){n("number"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},s.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,s=0;s<n.length;s++)e=(0|r.words[s])+(0|n.words[s])+i,this.words[s]=67108863&e,i=e>>>26;for(;0!==i&&s<r.length;s++)e=(0|r.words[s])+i,this.words[s]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var s=0,o=0;o<n.length;o++)s=(e=(0|r.words[o])-(0|n.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,r){var n,i,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,m=f>>>13,y=0|o[2],v=8191&y,g=y>>>13,b=0|o[3],w=8191&b,M=b>>>13,k=0|o[4],x=8191&k,P=k>>>13,L=0|o[5],T=8191&L,S=L>>>13,A=0|o[6],D=8191&A,j=A>>>13,H=0|o[7],O=8191&H,z=H>>>13,N=0|o[8],E=8191&N,Y=N>>>13,R=0|o[9],I=8191&R,B=R>>>13,X=0|a[0],V=8191&X,C=X>>>13,W=0|a[1],q=8191&W,Z=W>>>13,F=0|a[2],U=8191&F,G=F>>>13,_=0|a[3],K=8191&_,J=_>>>13,Q=0|a[4],$=8191&Q,tt=Q>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],st=8191&it,ot=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,mt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var yt=(h+(n=Math.imul(l,V))|0)+((8191&(i=(i=Math.imul(l,C))+Math.imul(d,V)|0))<<13)|0;h=((s=Math.imul(d,C))+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(p,V),i=(i=Math.imul(p,C))+Math.imul(m,V)|0,s=Math.imul(m,C);var vt=(h+(n=n+Math.imul(l,q)|0)|0)+((8191&(i=(i=i+Math.imul(l,Z)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,Z)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(v,V),i=(i=Math.imul(v,C))+Math.imul(g,V)|0,s=Math.imul(g,C),n=n+Math.imul(p,q)|0,i=(i=i+Math.imul(p,Z)|0)+Math.imul(m,q)|0,s=s+Math.imul(m,Z)|0;var gt=(h+(n=n+Math.imul(l,U)|0)|0)+((8191&(i=(i=i+Math.imul(l,G)|0)+Math.imul(d,U)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(w,V),i=(i=Math.imul(w,C))+Math.imul(M,V)|0,s=Math.imul(M,C),n=n+Math.imul(v,q)|0,i=(i=i+Math.imul(v,Z)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,Z)|0,n=n+Math.imul(p,U)|0,i=(i=i+Math.imul(p,G)|0)+Math.imul(m,U)|0,s=s+Math.imul(m,G)|0;var bt=(h+(n=n+Math.imul(l,K)|0)|0)+((8191&(i=(i=i+Math.imul(l,J)|0)+Math.imul(d,K)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(x,V),i=(i=Math.imul(x,C))+Math.imul(P,V)|0,s=Math.imul(P,C),n=n+Math.imul(w,q)|0,i=(i=i+Math.imul(w,Z)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,Z)|0,n=n+Math.imul(v,U)|0,i=(i=i+Math.imul(v,G)|0)+Math.imul(g,U)|0,s=s+Math.imul(g,G)|0,n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,J)|0)+Math.imul(m,K)|0,s=s+Math.imul(m,J)|0;var wt=(h+(n=n+Math.imul(l,$)|0)|0)+((8191&(i=(i=i+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(T,V),i=(i=Math.imul(T,C))+Math.imul(S,V)|0,s=Math.imul(S,C),n=n+Math.imul(x,q)|0,i=(i=i+Math.imul(x,Z)|0)+Math.imul(P,q)|0,s=s+Math.imul(P,Z)|0,n=n+Math.imul(w,U)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(M,U)|0,s=s+Math.imul(M,G)|0,n=n+Math.imul(v,K)|0,i=(i=i+Math.imul(v,J)|0)+Math.imul(g,K)|0,s=s+Math.imul(g,J)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,s=s+Math.imul(m,tt)|0;var Mt=(h+(n=n+Math.imul(l,rt)|0)|0)+((8191&(i=(i=i+Math.imul(l,nt)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,nt)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,C))+Math.imul(j,V)|0,s=Math.imul(j,C),n=n+Math.imul(T,q)|0,i=(i=i+Math.imul(T,Z)|0)+Math.imul(S,q)|0,s=s+Math.imul(S,Z)|0,n=n+Math.imul(x,U)|0,i=(i=i+Math.imul(x,G)|0)+Math.imul(P,U)|0,s=s+Math.imul(P,G)|0,n=n+Math.imul(w,K)|0,i=(i=i+Math.imul(w,J)|0)+Math.imul(M,K)|0,s=s+Math.imul(M,J)|0,n=n+Math.imul(v,$)|0,i=(i=i+Math.imul(v,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,s=s+Math.imul(m,nt)|0;var kt=(h+(n=n+Math.imul(l,st)|0)|0)+((8191&(i=(i=i+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(O,V),i=(i=Math.imul(O,C))+Math.imul(z,V)|0,s=Math.imul(z,C),n=n+Math.imul(D,q)|0,i=(i=i+Math.imul(D,Z)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,Z)|0,n=n+Math.imul(T,U)|0,i=(i=i+Math.imul(T,G)|0)+Math.imul(S,U)|0,s=s+Math.imul(S,G)|0,n=n+Math.imul(x,K)|0,i=(i=i+Math.imul(x,J)|0)+Math.imul(P,K)|0,s=s+Math.imul(P,J)|0,n=n+Math.imul(w,$)|0,i=(i=i+Math.imul(w,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,n=n+Math.imul(v,rt)|0,i=(i=i+Math.imul(v,nt)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,nt)|0,n=n+Math.imul(p,st)|0,i=(i=i+Math.imul(p,ot)|0)+Math.imul(m,st)|0,s=s+Math.imul(m,ot)|0;var xt=(h+(n=n+Math.imul(l,ut)|0)|0)+((8191&(i=(i=i+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(E,V),i=(i=Math.imul(E,C))+Math.imul(Y,V)|0,s=Math.imul(Y,C),n=n+Math.imul(O,q)|0,i=(i=i+Math.imul(O,Z)|0)+Math.imul(z,q)|0,s=s+Math.imul(z,Z)|0,n=n+Math.imul(D,U)|0,i=(i=i+Math.imul(D,G)|0)+Math.imul(j,U)|0,s=s+Math.imul(j,G)|0,n=n+Math.imul(T,K)|0,i=(i=i+Math.imul(T,J)|0)+Math.imul(S,K)|0,s=s+Math.imul(S,J)|0,n=n+Math.imul(x,$)|0,i=(i=i+Math.imul(x,tt)|0)+Math.imul(P,$)|0,s=s+Math.imul(P,tt)|0,n=n+Math.imul(w,rt)|0,i=(i=i+Math.imul(w,nt)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,nt)|0,n=n+Math.imul(v,st)|0,i=(i=i+Math.imul(v,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,s=s+Math.imul(m,ht)|0;var Pt=(h+(n=n+Math.imul(l,lt)|0)|0)+((8191&(i=(i=i+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(i>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,n=Math.imul(I,V),i=(i=Math.imul(I,C))+Math.imul(B,V)|0,s=Math.imul(B,C),n=n+Math.imul(E,q)|0,i=(i=i+Math.imul(E,Z)|0)+Math.imul(Y,q)|0,s=s+Math.imul(Y,Z)|0,n=n+Math.imul(O,U)|0,i=(i=i+Math.imul(O,G)|0)+Math.imul(z,U)|0,s=s+Math.imul(z,G)|0,n=n+Math.imul(D,K)|0,i=(i=i+Math.imul(D,J)|0)+Math.imul(j,K)|0,s=s+Math.imul(j,J)|0,n=n+Math.imul(T,$)|0,i=(i=i+Math.imul(T,tt)|0)+Math.imul(S,$)|0,s=s+Math.imul(S,tt)|0,n=n+Math.imul(x,rt)|0,i=(i=i+Math.imul(x,nt)|0)+Math.imul(P,rt)|0,s=s+Math.imul(P,nt)|0,n=n+Math.imul(w,st)|0,i=(i=i+Math.imul(w,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,n=n+Math.imul(v,ut)|0,i=(i=i+Math.imul(v,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0,n=n+Math.imul(p,lt)|0,i=(i=i+Math.imul(p,dt)|0)+Math.imul(m,lt)|0,s=s+Math.imul(m,dt)|0;var Lt=(h+(n=n+Math.imul(l,pt)|0)|0)+((8191&(i=(i=i+Math.imul(l,mt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,mt)|0)+(i>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,n=Math.imul(I,q),i=(i=Math.imul(I,Z))+Math.imul(B,q)|0,s=Math.imul(B,Z),n=n+Math.imul(E,U)|0,i=(i=i+Math.imul(E,G)|0)+Math.imul(Y,U)|0,s=s+Math.imul(Y,G)|0,n=n+Math.imul(O,K)|0,i=(i=i+Math.imul(O,J)|0)+Math.imul(z,K)|0,s=s+Math.imul(z,J)|0,n=n+Math.imul(D,$)|0,i=(i=i+Math.imul(D,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,n=n+Math.imul(T,rt)|0,i=(i=i+Math.imul(T,nt)|0)+Math.imul(S,rt)|0,s=s+Math.imul(S,nt)|0,n=n+Math.imul(x,st)|0,i=(i=i+Math.imul(x,ot)|0)+Math.imul(P,st)|0,s=s+Math.imul(P,ot)|0,n=n+Math.imul(w,ut)|0,i=(i=i+Math.imul(w,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,n=n+Math.imul(v,lt)|0,i=(i=i+Math.imul(v,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var Tt=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((s=s+Math.imul(m,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,n=Math.imul(I,U),i=(i=Math.imul(I,G))+Math.imul(B,U)|0,s=Math.imul(B,G),n=n+Math.imul(E,K)|0,i=(i=i+Math.imul(E,J)|0)+Math.imul(Y,K)|0,s=s+Math.imul(Y,J)|0,n=n+Math.imul(O,$)|0,i=(i=i+Math.imul(O,tt)|0)+Math.imul(z,$)|0,s=s+Math.imul(z,tt)|0,n=n+Math.imul(D,rt)|0,i=(i=i+Math.imul(D,nt)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,nt)|0,n=n+Math.imul(T,st)|0,i=(i=i+Math.imul(T,ot)|0)+Math.imul(S,st)|0,s=s+Math.imul(S,ot)|0,n=n+Math.imul(x,ut)|0,i=(i=i+Math.imul(x,ht)|0)+Math.imul(P,ut)|0,s=s+Math.imul(P,ht)|0,n=n+Math.imul(w,lt)|0,i=(i=i+Math.imul(w,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var St=(h+(n=n+Math.imul(v,pt)|0)|0)+((8191&(i=(i=i+Math.imul(v,mt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(I,K),i=(i=Math.imul(I,J))+Math.imul(B,K)|0,s=Math.imul(B,J),n=n+Math.imul(E,$)|0,i=(i=i+Math.imul(E,tt)|0)+Math.imul(Y,$)|0,s=s+Math.imul(Y,tt)|0,n=n+Math.imul(O,rt)|0,i=(i=i+Math.imul(O,nt)|0)+Math.imul(z,rt)|0,s=s+Math.imul(z,nt)|0,n=n+Math.imul(D,st)|0,i=(i=i+Math.imul(D,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,n=n+Math.imul(T,ut)|0,i=(i=i+Math.imul(T,ht)|0)+Math.imul(S,ut)|0,s=s+Math.imul(S,ht)|0,n=n+Math.imul(x,lt)|0,i=(i=i+Math.imul(x,dt)|0)+Math.imul(P,lt)|0,s=s+Math.imul(P,dt)|0;var At=(h+(n=n+Math.imul(w,pt)|0)|0)+((8191&(i=(i=i+Math.imul(w,mt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,mt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(I,$),i=(i=Math.imul(I,tt))+Math.imul(B,$)|0,s=Math.imul(B,tt),n=n+Math.imul(E,rt)|0,i=(i=i+Math.imul(E,nt)|0)+Math.imul(Y,rt)|0,s=s+Math.imul(Y,nt)|0,n=n+Math.imul(O,st)|0,i=(i=i+Math.imul(O,ot)|0)+Math.imul(z,st)|0,s=s+Math.imul(z,ot)|0,n=n+Math.imul(D,ut)|0,i=(i=i+Math.imul(D,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,n=n+Math.imul(T,lt)|0,i=(i=i+Math.imul(T,dt)|0)+Math.imul(S,lt)|0,s=s+Math.imul(S,dt)|0;var Dt=(h+(n=n+Math.imul(x,pt)|0)|0)+((8191&(i=(i=i+Math.imul(x,mt)|0)+Math.imul(P,pt)|0))<<13)|0;h=((s=s+Math.imul(P,mt)|0)+(i>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,n=Math.imul(I,rt),i=(i=Math.imul(I,nt))+Math.imul(B,rt)|0,s=Math.imul(B,nt),n=n+Math.imul(E,st)|0,i=(i=i+Math.imul(E,ot)|0)+Math.imul(Y,st)|0,s=s+Math.imul(Y,ot)|0,n=n+Math.imul(O,ut)|0,i=(i=i+Math.imul(O,ht)|0)+Math.imul(z,ut)|0,s=s+Math.imul(z,ht)|0,n=n+Math.imul(D,lt)|0,i=(i=i+Math.imul(D,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var jt=(h+(n=n+Math.imul(T,pt)|0)|0)+((8191&(i=(i=i+Math.imul(T,mt)|0)+Math.imul(S,pt)|0))<<13)|0;h=((s=s+Math.imul(S,mt)|0)+(i>>>13)|0)+(jt>>>26)|0,jt&=67108863,n=Math.imul(I,st),i=(i=Math.imul(I,ot))+Math.imul(B,st)|0,s=Math.imul(B,ot),n=n+Math.imul(E,ut)|0,i=(i=i+Math.imul(E,ht)|0)+Math.imul(Y,ut)|0,s=s+Math.imul(Y,ht)|0,n=n+Math.imul(O,lt)|0,i=(i=i+Math.imul(O,dt)|0)+Math.imul(z,lt)|0,s=s+Math.imul(z,dt)|0;var Ht=(h+(n=n+Math.imul(D,pt)|0)|0)+((8191&(i=(i=i+Math.imul(D,mt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,mt)|0)+(i>>>13)|0)+(Ht>>>26)|0,Ht&=67108863,n=Math.imul(I,ut),i=(i=Math.imul(I,ht))+Math.imul(B,ut)|0,s=Math.imul(B,ht),n=n+Math.imul(E,lt)|0,i=(i=i+Math.imul(E,dt)|0)+Math.imul(Y,lt)|0,s=s+Math.imul(Y,dt)|0;var Ot=(h+(n=n+Math.imul(O,pt)|0)|0)+((8191&(i=(i=i+Math.imul(O,mt)|0)+Math.imul(z,pt)|0))<<13)|0;h=((s=s+Math.imul(z,mt)|0)+(i>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,n=Math.imul(I,lt),i=(i=Math.imul(I,dt))+Math.imul(B,lt)|0,s=Math.imul(B,dt);var zt=(h+(n=n+Math.imul(E,pt)|0)|0)+((8191&(i=(i=i+Math.imul(E,mt)|0)+Math.imul(Y,pt)|0))<<13)|0;h=((s=s+Math.imul(Y,mt)|0)+(i>>>13)|0)+(zt>>>26)|0,zt&=67108863;var Nt=(h+(n=Math.imul(I,pt))|0)+((8191&(i=(i=Math.imul(I,mt))+Math.imul(B,pt)|0))<<13)|0;return h=((s=Math.imul(B,mt))+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=yt,u[1]=vt,u[2]=gt,u[3]=bt,u[4]=wt,u[5]=Mt,u[6]=kt,u[7]=xt,u[8]=Pt,u[9]=Lt,u[10]=Tt,u[11]=St,u[12]=At,u[13]=Dt,u[14]=jt,u[15]=Ht,u[16]=Ot,u[17]=zt,u[18]=Nt,0!==h&&(u[19]=h,r.length++),r};function m(t,e,r){return(new y).mulp(t,e,r)}function y(t,e){this.x=t,this.y=e}Math.imul||(p=f),s.prototype.mulTo=function(t,e){var r,n=this.length+t.length;return r=10===this.length&&10===t.length?p(this,t,e):n<63?f(this,t,e):n<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,s=0;s<r.length-1;s++){var o=i;i=0;for(var a=67108863&n,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),i+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,n=o,o=i}return 0!==n?r.words[s]=n:r.length--,r.strip()}(this,t,e):m(this,t,e),r},y.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},y.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},y.prototype.permute=function(t,e,r,n,i,s){for(var o=0;o<s;o++)n[o]=e[t[o]],i[o]=r[t[o]]},y.prototype.transform=function(t,e,r,n,i,s){this.permute(s,t,e,r,n,i);for(var o=1;o<i;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<i;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],m=n[c+f],y=r[c+f+o],v=n[c+f+o],g=l*y-d*v;v=l*v+d*y,y=g,r[c+f]=p+y,n[c+f]=m+v,r[c+f+o]=p-y,n[c+f+o]=m-v,f!==a&&(g=u*l-h*d,d=u*d+h*l,l=g)}},y.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},y.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},y.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},y.prototype.convert13b=function(t,e,r,i){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<i;++o)r[o]=0;n(0===s),n(0==(-8192&s))},y.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},y.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),s=this.stub(n),o=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),c=new Array(n),l=new Array(n),d=r.words;d.length=n,this.convert13b(t.words,t.length,o,n),this.convert13b(e.words,e.length,h,n),this.transform(o,s,a,u,n,i),this.transform(h,s,c,l,n,i);for(var f=0;f<n;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,n),this.transform(a,u,d,s,n,i),this.conjugate(d,s,n),this.normalize13b(d,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),m(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var e=0,r=0;r<this.length;r++){var i=(0|this.words[r])*t,s=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=(t.words[n]&1<<i)>>>i}return e}(t);if(0===e.length)return new s(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},s.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},s.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var i;n("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(i-=o,i=Math.max(0,i),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=i);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r)&&!!(this.words[r]&i)},s.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var i,s,o=t.length+r;this._expand(o);var a=0;for(i=0;i<t.length;i++){s=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&s}for(;i<this.length-r;i++)a=(s=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&s;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(s=-(0|this.words[i])+a)>>26,this.words[i]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,o=0|i.words[i.length-1];0!==(r=26-this._countBits(o))&&(i=i.ushln(r),n.iushln(r),o=0|i.words[i.length-1]);var a,u=n.length-i.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=n.clone()._ishlnsubmul(i,1,u);0===c.negative&&(n=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|n.words[i.length+l])+(0|n.words[i.length+l-1]);for(d=Math.min(d/o|0,67108863),n._ishlnsubmul(i,d,l);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(i,1,l),n.isZero()||(n.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),n.strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},s.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(i=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:i,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var i,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),s=r.cmp(n);return s<0||1===i&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){n(t<=67108863);for(var e=(1<<26)%t,r=0,i=this.length-1;i>=0;i--)r=(e*r+(0|this.words[i]))%t;return r},s.prototype.idivn=function(t){n(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*e;this.words[r]=i/t|0,e=i%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(c),o.isub(l)),i.iushrn(1),o.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),o.isub(u)):(r.isub(e),a.isub(i),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(i=0===e.cmpn(1)?o:a).cmpn(0)<0&&i.iadd(t),i},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var s=e;e=r,r=s}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){n("number"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var s=i,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new x(t)},s.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function g(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){g.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){g.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function M(){g.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function k(){g.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function x(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function P(t){x.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}g.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},g.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},g.prototype.split=function(t,e){t.iushrn(this.n,0,e)},g.prototype.imulK=function(t){return t.imul(this.k)},i(b,g),b.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,i=10;i<t.length;i++){var o=0|t.words[i];t.words[i-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[i-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(w,g),i(M,g),i(k,g),k.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(v[t])return v[t];var e;if("k256"===t)e=new b;else if("p224"===t)e=new w;else if("p192"===t)e=new M;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new k}return v[t]=e,e},x.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},x.prototype._verify2=function(t,e){n(0==(t.negative|e.negative),"red works only with positives"),n(t.red&&t.red===e.red,"red works only with red numbers")},x.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},x.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},x.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},x.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},x.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},x.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},x.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},x.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},x.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},x.prototype.isqr=function(t){return this.imul(t,t.clone())},x.prototype.sqr=function(t){return this.mul(t,t)},x.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),o=0;!i.isZero()&&0===i.andln(1);)o++,i.iushrn(1);n(!i.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,i),d=this.pow(t,i.addn(1).iushrn(1)),f=this.pow(t,i),p=o;0!==f.cmp(a);){for(var m=f,y=0;0!==m.cmp(a);y++)m=m.redSqr();n(y<p);var v=this.pow(l,new s(1).iushln(p-y-1));d=d.redMul(v),l=v.redSqr(),f=f.redMul(l),p=y}return d},x.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},x.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],c=u-1;c>=0;c--){var l=h>>c&1;i!==r[0]&&(i=this.sqr(i)),0!==l||0!==o?(o<<=1,o|=l,(4===++a||0===n&&0===c)&&(i=this.mul(i,r[o]),a=0,o=0)):a=0}u=26}return i},x.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},x.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new P(t)},i(P,x),P.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},P.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},P.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},P.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},P.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},23482:(t,e,r)=>{"use strict";var n=r(35717),i=r(62318),s=r(79785),o=r(89072),a=r(71027);function u(t){a.call(this,"digest"),this._hash=t}n(u,a),u.prototype._update=function(t){this._hash.update(t)},u.prototype._final=function(){return this._hash.digest()},t.exports=function(t){return"md5"===(t=t.toLowerCase())?new i:"rmd160"===t||"ripemd160"===t?new s:new u(o(t))}},78028:(t,e,r)=>{var n=r(62318);t.exports=function(t){return(new n).update(t).digest()}},58355:(t,e,r)=>{"use strict";var n=r(35717),i=r(51031),s=r(71027),o=r(89509).Buffer,a=r(78028),u=r(79785),h=r(89072),c=o.alloc(128);function l(t,e){s.call(this,"digest"),"string"==typeof e&&(e=o.from(e));var r="sha512"===t||"sha384"===t?128:64;(this._alg=t,this._key=e,e.length>r)?e=("rmd160"===t?new u:h(t)).update(e).digest():e.length<r&&(e=o.concat([e,c],r));for(var n=this._ipad=o.allocUnsafe(r),i=this._opad=o.allocUnsafe(r),a=0;a<r;a++)n[a]=54^e[a],i[a]=92^e[a];this._hash="rmd160"===t?new u:h(t),this._hash.update(n)}n(l,s),l.prototype._update=function(t){this._hash.update(t)},l.prototype._final=function(){var t=this._hash.digest();return("rmd160"===this._alg?new u:h(this._alg)).update(this._opad).update(t).digest()},t.exports=function(t,e){return"rmd160"===(t=t.toLowerCase())||"ripemd160"===t?new l("rmd160",e):"md5"===t?new i(a,e):new l(t,e)}},51031:(t,e,r)=>{"use strict";var n=r(35717),i=r(89509).Buffer,s=r(71027),o=i.alloc(128),a=64;function u(t,e){s.call(this,"digest"),"string"==typeof e&&(e=i.from(e)),this._alg=t,this._key=e,e.length>a?e=t(e):e.length<a&&(e=i.concat([e,o],a));for(var r=this._ipad=i.allocUnsafe(a),n=this._opad=i.allocUnsafe(a),u=0;u<a;u++)r[u]=54^e[u],n[u]=92^e[u];this._hash=[r]}n(u,s),u.prototype._update=function(t){this._hash.push(t)},u.prototype._final=function(){var t=this._alg(i.concat(this._hash));return this._alg(i.concat([this._opad,t]))},t.exports=u},55835:(t,e,r)=>{"use strict";e.randomBytes=e.rng=e.pseudoRandomBytes=e.prng=r(61798),e.createHash=e.Hash=r(23482),e.createHmac=e.Hmac=r(58355);var n=r(56042),i=Object.keys(n),s=["sha1","sha224","sha256","sha384","sha512","md5","rmd160"].concat(i);e.getHashes=function(){return s};var o=r(25632);e.pbkdf2=o.pbkdf2,e.pbkdf2Sync=o.pbkdf2Sync;var a=r(53614);e.Cipher=a.Cipher,e.createCipher=a.createCipher,e.Cipheriv=a.Cipheriv,e.createCipheriv=a.createCipheriv,e.Decipher=a.Decipher,e.createDecipher=a.createDecipher,e.Decipheriv=a.Decipheriv,e.createDecipheriv=a.createDecipheriv,e.getCiphers=a.getCiphers,e.listCiphers=a.listCiphers;var u=r(62607);e.DiffieHellmanGroup=u.DiffieHellmanGroup,e.createDiffieHellmanGroup=u.createDiffieHellmanGroup,e.getDiffieHellman=u.getDiffieHellman,e.createDiffieHellman=u.createDiffieHellman,e.DiffieHellman=u.DiffieHellman;var h=r(64743);e.createSign=h.createSign,e.Sign=h.Sign,e.createVerify=h.createVerify,e.Verify=h.Verify,e.createECDH=r(76393);var c=r(7900);e.publicEncrypt=c.publicEncrypt,e.privateEncrypt=c.privateEncrypt,e.publicDecrypt=c.publicDecrypt,e.privateDecrypt=c.privateDecrypt;var l=r(77963);e.randomFill=l.randomFill,e.randomFillSync=l.randomFillSync,e.createCredentials=function(){throw new Error(["sorry, createCredentials is not implemented yet","we accept pull requests","https://github.com/crypto-browserify/crypto-browserify"].join("\n"))},e.constants={DH_CHECK_P_NOT_SAFE_PRIME:2,DH_CHECK_P_NOT_PRIME:1,DH_UNABLE_TO_CHECK_GENERATOR:4,DH_NOT_SUITABLE_GENERATOR:8,NPN_ENABLED:1,ALPN_ENABLED:1,RSA_PKCS1_PADDING:1,RSA_SSLV23_PADDING:2,RSA_NO_PADDING:3,RSA_PKCS1_OAEP_PADDING:4,RSA_X931_PADDING:5,RSA_PKCS1_PSS_PADDING:6,POINT_CONVERSION_COMPRESSED:2,POINT_CONVERSION_UNCOMPRESSED:4,POINT_CONVERSION_HYBRID:6}},21986:(t,e,r)=>{e.UINT32=r(50734),e.UINT64=r(66924)},50734:function(t,e){var r;!function(n){i(Math.pow(36,5)),i(Math.pow(16,7)),i(Math.pow(10,9)),i(Math.pow(2,30)),i(36),i(16),i(10),i(2);function i(t,e){return this instanceof i?(this._low=0,this._high=0,this.remainder=null,void 0===e?o.call(this,t):"string"==typeof t?a.call(this,t,e):void s.call(this,t,e)):new i(t,e)}function s(t,e){return this._low=0|t,this._high=0|e,this}function o(t){return this._low=65535&t,this._high=t>>>16,this}function a(t,e){var r=parseInt(t,e||10);return this._low=65535&r,this._high=r>>>16,this}i.prototype.fromBits=s,i.prototype.fromNumber=o,i.prototype.fromString=a,i.prototype.toNumber=function(){return 65536*this._high+this._low},i.prototype.toString=function(t){return this.toNumber().toString(t||10)},i.prototype.add=function(t){var e=this._low+t._low,r=e>>>16;return r+=this._high+t._high,this._low=65535&e,this._high=65535&r,this},i.prototype.subtract=function(t){return this.add(t.clone().negate())},i.prototype.multiply=function(t){var e,r,n=this._high,i=this._low,s=t._high,o=t._low;return e=(r=i*o)>>>16,e+=n*o,e&=65535,e+=i*s,this._low=65535&r,this._high=65535&e,this},i.prototype.div=function(t){if(0==t._low&&0==t._high)throw Error("division by zero");if(0==t._high&&1==t._low)return this.remainder=new i(0),this;if(t.gt(this))return this.remainder=this.clone(),this._low=0,this._high=0,this;if(this.eq(t))return this.remainder=new i(0),this._low=1,this._high=0,this;for(var e=t.clone(),r=-1;!this.lt(e);)e.shiftLeft(1,!0),r++;for(this.remainder=this.clone(),this._low=0,this._high=0;r>=0;r--)e.shiftRight(1),this.remainder.lt(e)||(this.remainder.subtract(e),r>=16?this._high|=1<<r-16:this._low|=1<<r);return this},i.prototype.negate=function(){var t=1+(65535&~this._low);return this._low=65535&t,this._high=~this._high+(t>>>16)&65535,this},i.prototype.equals=i.prototype.eq=function(t){return this._low==t._low&&this._high==t._high},i.prototype.greaterThan=i.prototype.gt=function(t){return this._high>t._high||!(this._high<t._high)&&this._low>t._low},i.prototype.lessThan=i.prototype.lt=function(t){return this._high<t._high||!(this._high>t._high)&&this._low<t._low},i.prototype.or=function(t){return this._low|=t._low,this._high|=t._high,this},i.prototype.and=function(t){return this._low&=t._low,this._high&=t._high,this},i.prototype.not=function(){return this._low=65535&~this._low,this._high=65535&~this._high,this},i.prototype.xor=function(t){return this._low^=t._low,this._high^=t._high,this},i.prototype.shiftRight=i.prototype.shiftr=function(t){return t>16?(this._low=this._high>>t-16,this._high=0):16==t?(this._low=this._high,this._high=0):(this._low=this._low>>t|this._high<<16-t&65535,this._high>>=t),this},i.prototype.shiftLeft=i.prototype.shiftl=function(t,e){return t>16?(this._high=this._low<<t-16,this._low=0,e||(this._high&=65535)):16==t?(this._high=this._low,this._low=0):(this._high=this._high<<t|this._low>>16-t,this._low=this._low<<t&65535,e||(this._high&=65535)),this},i.prototype.rotateLeft=i.prototype.rotl=function(t){var e=this._high<<16|this._low;return e=e<<t|e>>>32-t,this._low=65535&e,this._high=e>>>16,this},i.prototype.rotateRight=i.prototype.rotr=function(t){var e=this._high<<16|this._low;return e=e>>>t|e<<32-t,this._low=65535&e,this._high=e>>>16,this},i.prototype.clone=function(){return new i(this._low,this._high)},void 0===(r=function(){return i}.apply(e,[]))||(t.exports=r)}()},66924:function(t,e){var r;!function(n){var i={16:o(Math.pow(16,5)),10:o(Math.pow(10,5)),2:o(Math.pow(2,5))},s={16:o(16),10:o(10),2:o(2)};function o(t,e,r,n){return this instanceof o?(this.remainder=null,"string"==typeof t?h.call(this,t,e):void 0===e?u.call(this,t):void a.apply(this,arguments)):new o(t,e,r,n)}function a(t,e,r,n){return void 0===r?(this._a00=65535&t,this._a16=t>>>16,this._a32=65535&e,this._a48=e>>>16,this):(this._a00=0|t,this._a16=0|e,this._a32=0|r,this._a48=0|n,this)}function u(t){return this._a00=65535&t,this._a16=t>>>16,this._a32=0,this._a48=0,this}function h(t,e){e=e||10,this._a00=0,this._a16=0,this._a32=0,this._a48=0;for(var r=i[e]||new o(Math.pow(e,5)),n=0,s=t.length;n<s;n+=5){var a=Math.min(5,s-n),u=parseInt(t.slice(n,n+a),e);this.multiply(a<5?new o(Math.pow(e,a)):r).add(new o(u))}return this}o.prototype.fromBits=a,o.prototype.fromNumber=u,o.prototype.fromString=h,o.prototype.toNumber=function(){return 65536*this._a16+this._a00},o.prototype.toString=function(t){var e=s[t=t||10]||new o(t);if(!this.gt(e))return this.toNumber().toString(t);for(var r=this.clone(),n=new Array(64),i=63;i>=0&&(r.div(e),n[i]=r.remainder.toNumber().toString(t),r.gt(e));i--);return n[i-1]=r.toNumber().toString(t),n.join("")},o.prototype.add=function(t){var e=this._a00+t._a00,r=e>>>16,n=(r+=this._a16+t._a16)>>>16,i=(n+=this._a32+t._a32)>>>16;return i+=this._a48+t._a48,this._a00=65535&e,this._a16=65535&r,this._a32=65535&n,this._a48=65535&i,this},o.prototype.subtract=function(t){return this.add(t.clone().negate())},o.prototype.multiply=function(t){var e=this._a00,r=this._a16,n=this._a32,i=this._a48,s=t._a00,o=t._a16,a=t._a32,u=e*s,h=u>>>16,c=(h+=e*o)>>>16;h&=65535,c+=(h+=r*s)>>>16;var l=(c+=e*a)>>>16;return c&=65535,l+=(c+=r*o)>>>16,c&=65535,l+=(c+=n*s)>>>16,l+=e*t._a48,l&=65535,l+=r*a,l&=65535,l+=n*o,l&=65535,l+=i*s,this._a00=65535&u,this._a16=65535&h,this._a32=65535&c,this._a48=65535&l,this},o.prototype.div=function(t){if(0==t._a16&&0==t._a32&&0==t._a48){if(0==t._a00)throw Error("division by zero");if(1==t._a00)return this.remainder=new o(0),this}if(t.gt(this))return this.remainder=this.clone(),this._a00=0,this._a16=0,this._a32=0,this._a48=0,this;if(this.eq(t))return this.remainder=new o(0),this._a00=1,this._a16=0,this._a32=0,this._a48=0,this;for(var e=t.clone(),r=-1;!this.lt(e);)e.shiftLeft(1,!0),r++;for(this.remainder=this.clone(),this._a00=0,this._a16=0,this._a32=0,this._a48=0;r>=0;r--)e.shiftRight(1),this.remainder.lt(e)||(this.remainder.subtract(e),r>=48?this._a48|=1<<r-48:r>=32?this._a32|=1<<r-32:r>=16?this._a16|=1<<r-16:this._a00|=1<<r);return this},o.prototype.negate=function(){var t=1+(65535&~this._a00);return this._a00=65535&t,t=(65535&~this._a16)+(t>>>16),this._a16=65535&t,t=(65535&~this._a32)+(t>>>16),this._a32=65535&t,this._a48=~this._a48+(t>>>16)&65535,this},o.prototype.equals=o.prototype.eq=function(t){return this._a48==t._a48&&this._a00==t._a00&&this._a32==t._a32&&this._a16==t._a16},o.prototype.greaterThan=o.prototype.gt=function(t){return this._a48>t._a48||!(this._a48<t._a48)&&(this._a32>t._a32||!(this._a32<t._a32)&&(this._a16>t._a16||!(this._a16<t._a16)&&this._a00>t._a00))},o.prototype.lessThan=o.prototype.lt=function(t){return this._a48<t._a48||!(this._a48>t._a48)&&(this._a32<t._a32||!(this._a32>t._a32)&&(this._a16<t._a16||!(this._a16>t._a16)&&this._a00<t._a00))},o.prototype.or=function(t){return this._a00|=t._a00,this._a16|=t._a16,this._a32|=t._a32,this._a48|=t._a48,this},o.prototype.and=function(t){return this._a00&=t._a00,this._a16&=t._a16,this._a32&=t._a32,this._a48&=t._a48,this},o.prototype.xor=function(t){return this._a00^=t._a00,this._a16^=t._a16,this._a32^=t._a32,this._a48^=t._a48,this},o.prototype.not=function(){return this._a00=65535&~this._a00,this._a16=65535&~this._a16,this._a32=65535&~this._a32,this._a48=65535&~this._a48,this},o.prototype.shiftRight=o.prototype.shiftr=function(t){return(t%=64)>=48?(this._a00=this._a48>>t-48,this._a16=0,this._a32=0,this._a48=0):t>=32?(t-=32,this._a00=65535&(this._a32>>t|this._a48<<16-t),this._a16=this._a48>>t&65535,this._a32=0,this._a48=0):t>=16?(t-=16,this._a00=65535&(this._a16>>t|this._a32<<16-t),this._a16=65535&(this._a32>>t|this._a48<<16-t),this._a32=this._a48>>t&65535,this._a48=0):(this._a00=65535&(this._a00>>t|this._a16<<16-t),this._a16=65535&(this._a16>>t|this._a32<<16-t),this._a32=65535&(this._a32>>t|this._a48<<16-t),this._a48=this._a48>>t&65535),this},o.prototype.shiftLeft=o.prototype.shiftl=function(t,e){return(t%=64)>=48?(this._a48=this._a00<<t-48,this._a32=0,this._a16=0,this._a00=0):t>=32?(t-=32,this._a48=this._a16<<t|this._a00>>16-t,this._a32=this._a00<<t&65535,this._a16=0,this._a00=0):t>=16?(t-=16,this._a48=this._a32<<t|this._a16>>16-t,this._a32=65535&(this._a16<<t|this._a00>>16-t),this._a16=this._a00<<t&65535,this._a00=0):(this._a48=this._a48<<t|this._a32>>16-t,this._a32=65535&(this._a32<<t|this._a16>>16-t),this._a16=65535&(this._a16<<t|this._a00>>16-t),this._a00=this._a00<<t&65535),e||(this._a48&=65535),this},o.prototype.rotateLeft=o.prototype.rotl=function(t){if(0==(t%=64))return this;if(t>=32){var e=this._a00;if(this._a00=this._a32,this._a32=e,e=this._a48,this._a48=this._a16,this._a16=e,32==t)return this;t-=32}var r=this._a48<<16|this._a32,n=this._a16<<16|this._a00,i=r<<t|n>>>32-t,s=n<<t|r>>>32-t;return this._a00=65535&s,this._a16=s>>>16,this._a32=65535&i,this._a48=i>>>16,this},o.prototype.rotateRight=o.prototype.rotr=function(t){if(0==(t%=64))return this;if(t>=32){var e=this._a00;if(this._a00=this._a32,this._a32=e,e=this._a48,this._a48=this._a16,this._a16=e,32==t)return this;t-=32}var r=this._a48<<16|this._a32,n=this._a16<<16|this._a00,i=r>>>t|n<<32-t,s=n>>>t|r<<32-t;return this._a00=65535&s,this._a16=s>>>16,this._a32=65535&i,this._a48=i>>>16,this},o.prototype.clone=function(){return new o(this._a00,this._a16,this._a32,this._a48)},void 0===(r=function(){return o}.apply(e,[]))||(t.exports=r)}()},4289:(t,e,r)=>{"use strict";var n=r(82215),i="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),s=Object.prototype.toString,o=Array.prototype.concat,a=Object.defineProperty,u=a&&function(){var t={};try{for(var e in a(t,"x",{enumerable:!1,value:t}),t)return!1;return t.x===t}catch(t){return!1}}(),h=function(t,e,r,n){var i;(!(e in t)||"function"==typeof(i=n)&&"[object Function]"===s.call(i)&&n())&&(u?a(t,e,{configurable:!0,enumerable:!1,value:r,writable:!0}):t[e]=r)},c=function(t,e){var r=arguments.length>2?arguments[2]:{},s=n(e);i&&(s=o.call(s,Object.getOwnPropertySymbols(e)));for(var a=0;a<s.length;a+=1)h(t,s[a],e[s[a]],r[s[a]])};c.supportsDescriptors=!!u,t.exports=c},15251:(t,e,r)=>{"use strict";e.utils=r(11278),e.Cipher=r(55756),e.DES=r(70778),e.CBC=r(39051),e.EDE=r(50651)},39051:(t,e,r)=>{"use strict";var n=r(79746),i=r(35717),s={};function o(t){n.equal(t.length,8,"Invalid IV length"),this.iv=new Array(8);for(var e=0;e<this.iv.length;e++)this.iv[e]=t[e]}e.instantiate=function(t){function e(e){t.call(this,e),this._cbcInit()}i(e,t);for(var r=Object.keys(s),n=0;n<r.length;n++){var o=r[n];e.prototype[o]=s[o]}return e.create=function(t){return new e(t)},e},s._cbcInit=function(){var t=new o(this.options.iv);this._cbcState=t},s._update=function(t,e,r,n){var i=this._cbcState,s=this.constructor.super_.prototype,o=i.iv;if("encrypt"===this.type){for(var a=0;a<this.blockSize;a++)o[a]^=t[e+a];s._update.call(this,o,0,r,n);for(a=0;a<this.blockSize;a++)o[a]=r[n+a]}else{s._update.call(this,t,e,r,n);for(a=0;a<this.blockSize;a++)r[n+a]^=o[a];for(a=0;a<this.blockSize;a++)o[a]=t[e+a]}}},55756:(t,e,r)=>{"use strict";var n=r(79746);function i(t){this.options=t,this.type=this.options.type,this.blockSize=8,this._init(),this.buffer=new Array(this.blockSize),this.bufferOff=0}t.exports=i,i.prototype._init=function(){},i.prototype.update=function(t){return 0===t.length?[]:"decrypt"===this.type?this._updateDecrypt(t):this._updateEncrypt(t)},i.prototype._buffer=function(t,e){for(var r=Math.min(this.buffer.length-this.bufferOff,t.length-e),n=0;n<r;n++)this.buffer[this.bufferOff+n]=t[e+n];return this.bufferOff+=r,r},i.prototype._flushBuffer=function(t,e){return this._update(this.buffer,0,t,e),this.bufferOff=0,this.blockSize},i.prototype._updateEncrypt=function(t){var e=0,r=0,n=(this.bufferOff+t.length)/this.blockSize|0,i=new Array(n*this.blockSize);0!==this.bufferOff&&(e+=this._buffer(t,e),this.bufferOff===this.buffer.length&&(r+=this._flushBuffer(i,r)));for(var s=t.length-(t.length-e)%this.blockSize;e<s;e+=this.blockSize)this._update(t,e,i,r),r+=this.blockSize;for(;e<t.length;e++,this.bufferOff++)this.buffer[this.bufferOff]=t[e];return i},i.prototype._updateDecrypt=function(t){for(var e=0,r=0,n=Math.ceil((this.bufferOff+t.length)/this.blockSize)-1,i=new Array(n*this.blockSize);n>0;n--)e+=this._buffer(t,e),r+=this._flushBuffer(i,r);return e+=this._buffer(t,e),i},i.prototype.final=function(t){var e,r;return t&&(e=this.update(t)),r="encrypt"===this.type?this._finalEncrypt():this._finalDecrypt(),e?e.concat(r):r},i.prototype._pad=function(t,e){if(0===e)return!1;for(;e<t.length;)t[e++]=0;return!0},i.prototype._finalEncrypt=function(){if(!this._pad(this.buffer,this.bufferOff))return[];var t=new Array(this.blockSize);return this._update(this.buffer,0,t,0),t},i.prototype._unpad=function(t){return t},i.prototype._finalDecrypt=function(){n.equal(this.bufferOff,this.blockSize,"Not enough data to decrypt");var t=new Array(this.blockSize);return this._flushBuffer(t,0),this._unpad(t)}},70778:(t,e,r)=>{"use strict";var n=r(79746),i=r(35717),s=r(11278),o=r(55756);function a(){this.tmp=new Array(2),this.keys=null}function u(t){o.call(this,t);var e=new a;this._desState=e,this.deriveKeys(e,t.key)}i(u,o),t.exports=u,u.create=function(t){return new u(t)};var h=[1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1];u.prototype.deriveKeys=function(t,e){t.keys=new Array(32),n.equal(e.length,this.blockSize,"Invalid key length");var r=s.readUInt32BE(e,0),i=s.readUInt32BE(e,4);s.pc1(r,i,t.tmp,0),r=t.tmp[0],i=t.tmp[1];for(var o=0;o<t.keys.length;o+=2){var a=h[o>>>1];r=s.r28shl(r,a),i=s.r28shl(i,a),s.pc2(r,i,t.keys,o)}},u.prototype._update=function(t,e,r,n){var i=this._desState,o=s.readUInt32BE(t,e),a=s.readUInt32BE(t,e+4);s.ip(o,a,i.tmp,0),o=i.tmp[0],a=i.tmp[1],"encrypt"===this.type?this._encrypt(i,o,a,i.tmp,0):this._decrypt(i,o,a,i.tmp,0),o=i.tmp[0],a=i.tmp[1],s.writeUInt32BE(r,o,n),s.writeUInt32BE(r,a,n+4)},u.prototype._pad=function(t,e){for(var r=t.length-e,n=e;n<t.length;n++)t[n]=r;return!0},u.prototype._unpad=function(t){for(var e=t[t.length-1],r=t.length-e;r<t.length;r++)n.equal(t[r],e);return t.slice(0,t.length-e)},u.prototype._encrypt=function(t,e,r,n,i){for(var o=e,a=r,u=0;u<t.keys.length;u+=2){var h=t.keys[u],c=t.keys[u+1];s.expand(a,t.tmp,0),h^=t.tmp[0],c^=t.tmp[1];var l=s.substitute(h,c),d=a;a=(o^s.permute(l))>>>0,o=d}s.rip(a,o,n,i)},u.prototype._decrypt=function(t,e,r,n,i){for(var o=r,a=e,u=t.keys.length-2;u>=0;u-=2){var h=t.keys[u],c=t.keys[u+1];s.expand(o,t.tmp,0),h^=t.tmp[0],c^=t.tmp[1];var l=s.substitute(h,c),d=o;o=(a^s.permute(l))>>>0,a=d}s.rip(o,a,n,i)}},50651:(t,e,r)=>{"use strict";var n=r(79746),i=r(35717),s=r(55756),o=r(70778);function a(t,e){n.equal(e.length,24,"Invalid key length");var r=e.slice(0,8),i=e.slice(8,16),s=e.slice(16,24);this.ciphers="encrypt"===t?[o.create({type:"encrypt",key:r}),o.create({type:"decrypt",key:i}),o.create({type:"encrypt",key:s})]:[o.create({type:"decrypt",key:s}),o.create({type:"encrypt",key:i}),o.create({type:"decrypt",key:r})]}function u(t){s.call(this,t);var e=new a(this.type,this.options.key);this._edeState=e}i(u,s),t.exports=u,u.create=function(t){return new u(t)},u.prototype._update=function(t,e,r,n){var i=this._edeState;i.ciphers[0]._update(t,e,r,n),i.ciphers[1]._update(r,n,r,n),i.ciphers[2]._update(r,n,r,n)},u.prototype._pad=o.prototype._pad,u.prototype._unpad=o.prototype._unpad},11278:(t,e)=>{"use strict";e.readUInt32BE=function(t,e){return(t[0+e]<<24|t[1+e]<<16|t[2+e]<<8|t[3+e])>>>0},e.writeUInt32BE=function(t,e,r){t[0+r]=e>>>24,t[1+r]=e>>>16&255,t[2+r]=e>>>8&255,t[3+r]=255&e},e.ip=function(t,e,r,n){for(var i=0,s=0,o=6;o>=0;o-=2){for(var a=0;a<=24;a+=8)i<<=1,i|=e>>>a+o&1;for(a=0;a<=24;a+=8)i<<=1,i|=t>>>a+o&1}for(o=6;o>=0;o-=2){for(a=1;a<=25;a+=8)s<<=1,s|=e>>>a+o&1;for(a=1;a<=25;a+=8)s<<=1,s|=t>>>a+o&1}r[n+0]=i>>>0,r[n+1]=s>>>0},e.rip=function(t,e,r,n){for(var i=0,s=0,o=0;o<4;o++)for(var a=24;a>=0;a-=8)i<<=1,i|=e>>>a+o&1,i<<=1,i|=t>>>a+o&1;for(o=4;o<8;o++)for(a=24;a>=0;a-=8)s<<=1,s|=e>>>a+o&1,s<<=1,s|=t>>>a+o&1;r[n+0]=i>>>0,r[n+1]=s>>>0},e.pc1=function(t,e,r,n){for(var i=0,s=0,o=7;o>=5;o--){for(var a=0;a<=24;a+=8)i<<=1,i|=e>>a+o&1;for(a=0;a<=24;a+=8)i<<=1,i|=t>>a+o&1}for(a=0;a<=24;a+=8)i<<=1,i|=e>>a+o&1;for(o=1;o<=3;o++){for(a=0;a<=24;a+=8)s<<=1,s|=e>>a+o&1;for(a=0;a<=24;a+=8)s<<=1,s|=t>>a+o&1}for(a=0;a<=24;a+=8)s<<=1,s|=t>>a+o&1;r[n+0]=i>>>0,r[n+1]=s>>>0},e.r28shl=function(t,e){return t<<e&268435455|t>>>28-e};var r=[14,11,17,4,27,23,25,0,13,22,7,18,5,9,16,24,2,20,12,21,1,8,15,26,15,4,25,19,9,1,26,16,5,11,23,8,12,7,17,0,22,3,10,14,6,20,27,24];e.pc2=function(t,e,n,i){for(var s=0,o=0,a=r.length>>>1,u=0;u<a;u++)s<<=1,s|=t>>>r[u]&1;for(u=a;u<r.length;u++)o<<=1,o|=e>>>r[u]&1;n[i+0]=s>>>0,n[i+1]=o>>>0},e.expand=function(t,e,r){var n=0,i=0;n=(1&t)<<5|t>>>27;for(var s=23;s>=15;s-=4)n<<=6,n|=t>>>s&63;for(s=11;s>=3;s-=4)i|=t>>>s&63,i<<=6;i|=(31&t)<<1|t>>>31,e[r+0]=n>>>0,e[r+1]=i>>>0};var n=[14,0,4,15,13,7,1,4,2,14,15,2,11,13,8,1,3,10,10,6,6,12,12,11,5,9,9,5,0,3,7,8,4,15,1,12,14,8,8,2,13,4,6,9,2,1,11,7,15,5,12,11,9,3,7,14,3,10,10,0,5,6,0,13,15,3,1,13,8,4,14,7,6,15,11,2,3,8,4,14,9,12,7,0,2,1,13,10,12,6,0,9,5,11,10,5,0,13,14,8,7,10,11,1,10,3,4,15,13,4,1,2,5,11,8,6,12,7,6,12,9,0,3,5,2,14,15,9,10,13,0,7,9,0,14,9,6,3,3,4,15,6,5,10,1,2,13,8,12,5,7,14,11,12,4,11,2,15,8,1,13,1,6,10,4,13,9,0,8,6,15,9,3,8,0,7,11,4,1,15,2,14,12,3,5,11,10,5,14,2,7,12,7,13,13,8,14,11,3,5,0,6,6,15,9,0,10,3,1,4,2,7,8,2,5,12,11,1,12,10,4,14,15,9,10,3,6,15,9,0,0,6,12,10,11,1,7,13,13,8,15,9,1,4,3,5,14,11,5,12,2,7,8,2,4,14,2,14,12,11,4,2,1,12,7,4,10,7,11,13,6,1,8,5,5,0,3,15,15,10,13,3,0,9,14,8,9,6,4,11,2,8,1,12,11,7,10,1,13,14,7,2,8,13,15,6,9,15,12,0,5,9,6,10,3,4,0,5,14,3,12,10,1,15,10,4,15,2,9,7,2,12,6,9,8,5,0,6,13,1,3,13,4,14,14,0,7,11,5,3,11,8,9,4,14,3,15,2,5,12,2,9,8,5,12,15,3,10,7,11,0,14,4,1,10,7,1,6,13,0,11,8,6,13,4,13,11,0,2,11,14,7,15,4,0,9,8,1,13,10,3,14,12,3,9,5,7,12,5,2,10,15,6,8,1,6,1,6,4,11,11,13,13,8,12,1,3,4,7,10,14,7,10,9,15,5,6,0,8,15,0,14,5,2,9,3,2,12,13,1,2,15,8,13,4,8,6,10,15,3,11,7,1,4,10,12,9,5,3,6,14,11,5,0,0,14,12,9,7,2,7,2,11,1,4,14,1,7,9,4,12,10,14,8,2,13,0,15,6,12,10,9,13,0,15,3,3,5,5,6,8,11];e.substitute=function(t,e){for(var r=0,i=0;i<4;i++){r<<=4,r|=n[64*i+(t>>>18-6*i&63)]}for(i=0;i<4;i++){r<<=4,r|=n[256+64*i+(e>>>18-6*i&63)]}return r>>>0};var i=[16,25,12,11,3,20,4,15,31,17,9,6,27,14,1,22,30,24,8,18,0,5,29,23,13,19,2,26,10,21,28,7];e.permute=function(t){for(var e=0,r=0;r<i.length;r++)e<<=1,e|=t>>>i[r]&1;return e>>>0},e.padSplit=function(t,e,r){for(var n=t.toString(2);n.length<e;)n="0"+n;for(var i=[],s=0;s<e;s+=r)i.push(n.slice(s,s+r));return i.join(" ")}},62607:(t,e,r)=>{var n=r(23085).Buffer,i=r(43590),s=r(29799),o=r(57426);var a={binary:!0,hex:!0,base64:!0};e.DiffieHellmanGroup=e.createDiffieHellmanGroup=e.getDiffieHellman=function(t){var e=new n(s[t].prime,"hex"),r=new n(s[t].gen,"hex");return new o(e,r)},e.createDiffieHellman=e.DiffieHellman=function t(e,r,s,u){return n.isBuffer(r)||void 0===a[r]?t(e,"binary",r,s):(r=r||"binary",u=u||"binary",s=s||new n([2]),n.isBuffer(s)||(s=new n(s,u)),"number"==typeof e?new o(i(e,s),s,!0):(n.isBuffer(e)||(e=new n(e,r)),new o(e,s,!0)))}},57426:(t,e,r)=>{var n=r(23085).Buffer,i=r(83620),s=new(r(63047)),o=new i(24),a=new i(11),u=new i(10),h=new i(3),c=new i(7),l=r(43590),d=r(61798);function f(t,e){return e=e||"utf8",n.isBuffer(t)||(t=new n(t,e)),this._pub=new i(t),this}function p(t,e){return e=e||"utf8",n.isBuffer(t)||(t=new n(t,e)),this._priv=new i(t),this}t.exports=y;var m={};function y(t,e,r){this.setGenerator(e),this.__prime=new i(t),this._prime=i.mont(this.__prime),this._primeLen=t.length,this._pub=void 0,this._priv=void 0,this._primeCode=void 0,r?(this.setPublicKey=f,this.setPrivateKey=p):this._primeCode=8}function v(t,e){var r=new n(t.toArray());return e?r.toString(e):r}Object.defineProperty(y.prototype,"verifyError",{enumerable:!0,get:function(){return"number"!=typeof this._primeCode&&(this._primeCode=function(t,e){var r=e.toString("hex"),n=[r,t.toString(16)].join("_");if(n in m)return m[n];var i,d=0;if(t.isEven()||!l.simpleSieve||!l.fermatTest(t)||!s.test(t))return d+=1,d+="02"===r||"05"===r?8:4,m[n]=d,d;switch(s.test(t.shrn(1))||(d+=2),r){case"02":t.mod(o).cmp(a)&&(d+=8);break;case"05":(i=t.mod(u)).cmp(h)&&i.cmp(c)&&(d+=8);break;default:d+=4}return m[n]=d,d}(this.__prime,this.__gen)),this._primeCode}}),y.prototype.generateKeys=function(){return this._priv||(this._priv=new i(d(this._primeLen))),this._pub=this._gen.toRed(this._prime).redPow(this._priv).fromRed(),this.getPublicKey()},y.prototype.computeSecret=function(t){var e=(t=(t=new i(t)).toRed(this._prime)).redPow(this._priv).fromRed(),r=new n(e.toArray()),s=this.getPrime();if(r.length<s.length){var o=new n(s.length-r.length);o.fill(0),r=n.concat([o,r])}return r},y.prototype.getPublicKey=function(t){return v(this._pub,t)},y.prototype.getPrivateKey=function(t){return v(this._priv,t)},y.prototype.getPrime=function(t){return v(this.__prime,t)},y.prototype.getGenerator=function(t){return v(this._gen,t)},y.prototype.setGenerator=function(t,e){return e=e||"utf8",n.isBuffer(t)||(t=new n(t,e)),this.__gen=t,this._gen=new i(t),this}},43590:(t,e,r)=>{var n=r(61798);t.exports=g,g.simpleSieve=y,g.fermatTest=v;var i=r(83620),s=new i(24),o=new(r(63047)),a=new i(1),u=new i(2),h=new i(5),c=(new i(16),new i(8),new i(10)),l=new i(3),d=(new i(7),new i(11)),f=new i(4),p=(new i(12),null);function m(){if(null!==p)return p;var t=[];t[0]=2;for(var e=1,r=3;r<1048576;r+=2){for(var n=Math.ceil(Math.sqrt(r)),i=0;i<e&&t[i]<=n&&r%t[i]!=0;i++);e!==i&&t[i]<=n||(t[e++]=r)}return p=t,t}function y(t){for(var e=m(),r=0;r<e.length;r++)if(0===t.modn(e[r]))return 0===t.cmpn(e[r]);return!0}function v(t){var e=i.mont(t);return 0===u.toRed(e).redPow(t.subn(1)).fromRed().cmpn(1)}function g(t,e){if(t<16)return new i(2===e||5===e?[140,123]:[140,39]);var r,p;for(e=new i(e);;){for(r=new i(n(Math.ceil(t/8)));r.bitLength()>t;)r.ishrn(1);if(r.isEven()&&r.iadd(a),r.testn(1)||r.iadd(u),e.cmp(u)){if(!e.cmp(h))for(;r.mod(c).cmp(l);)r.iadd(f)}else for(;r.mod(s).cmp(d);)r.iadd(f);if(y(p=r.shrn(1))&&y(r)&&v(p)&&v(r)&&o.test(p)&&o.test(r))return r}}},83620:function(t,e,r){!function(t,e){"use strict";function n(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(7748).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(t,e,r){var n=a(t,r);return r-1>=e&&(n|=a(t,r-1)<<4),n}function h(t,e,r,n){for(var i=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<t.length&&(16===e?this._parseHex(t,i,r):(this._parseBase(t,e,i),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var s,o,a=0;if("be"===r)for(i=t.length-1,s=0;i>=0;i-=3)o=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(i=0,s=0;i<t.length;i+=3)o=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,s=0,o=0;if("be"===r)for(n=t.length-1;n>=e;n-=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;else for(n=(t.length-e)%2==0?e+1:e;n<t.length;n+=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var s=t.length-r,o=s%n,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=n)u=h(t,c,c+n,e),this.imuln(i),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],s=0|e.words[0],o=i*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(i=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var i=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<i|s)).toString(16);r=0!==(s=a>>>24-i&16777215)||o!==this.length-1?c[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],f=d[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?m+r:c[h-m.length]+m+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return n(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var i=this.byteLength(),s=r||Math.max(1,i);n(i<=s,"byte array longer than desired length"),n(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-i;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){n("number"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},s.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,s=0;s<n.length;s++)e=(0|r.words[s])+(0|n.words[s])+i,this.words[s]=67108863&e,i=e>>>26;for(;0!==i&&s<r.length;s++)e=(0|r.words[s])+i,this.words[s]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var s=0,o=0;o<n.length;o++)s=(e=(0|r.words[o])-(0|n.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,r){var n,i,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,m=f>>>13,y=0|o[2],v=8191&y,g=y>>>13,b=0|o[3],w=8191&b,M=b>>>13,k=0|o[4],x=8191&k,P=k>>>13,L=0|o[5],T=8191&L,S=L>>>13,A=0|o[6],D=8191&A,j=A>>>13,H=0|o[7],O=8191&H,z=H>>>13,N=0|o[8],E=8191&N,Y=N>>>13,R=0|o[9],I=8191&R,B=R>>>13,X=0|a[0],V=8191&X,C=X>>>13,W=0|a[1],q=8191&W,Z=W>>>13,F=0|a[2],U=8191&F,G=F>>>13,_=0|a[3],K=8191&_,J=_>>>13,Q=0|a[4],$=8191&Q,tt=Q>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],st=8191&it,ot=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,mt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var yt=(h+(n=Math.imul(l,V))|0)+((8191&(i=(i=Math.imul(l,C))+Math.imul(d,V)|0))<<13)|0;h=((s=Math.imul(d,C))+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(p,V),i=(i=Math.imul(p,C))+Math.imul(m,V)|0,s=Math.imul(m,C);var vt=(h+(n=n+Math.imul(l,q)|0)|0)+((8191&(i=(i=i+Math.imul(l,Z)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,Z)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(v,V),i=(i=Math.imul(v,C))+Math.imul(g,V)|0,s=Math.imul(g,C),n=n+Math.imul(p,q)|0,i=(i=i+Math.imul(p,Z)|0)+Math.imul(m,q)|0,s=s+Math.imul(m,Z)|0;var gt=(h+(n=n+Math.imul(l,U)|0)|0)+((8191&(i=(i=i+Math.imul(l,G)|0)+Math.imul(d,U)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(w,V),i=(i=Math.imul(w,C))+Math.imul(M,V)|0,s=Math.imul(M,C),n=n+Math.imul(v,q)|0,i=(i=i+Math.imul(v,Z)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,Z)|0,n=n+Math.imul(p,U)|0,i=(i=i+Math.imul(p,G)|0)+Math.imul(m,U)|0,s=s+Math.imul(m,G)|0;var bt=(h+(n=n+Math.imul(l,K)|0)|0)+((8191&(i=(i=i+Math.imul(l,J)|0)+Math.imul(d,K)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(x,V),i=(i=Math.imul(x,C))+Math.imul(P,V)|0,s=Math.imul(P,C),n=n+Math.imul(w,q)|0,i=(i=i+Math.imul(w,Z)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,Z)|0,n=n+Math.imul(v,U)|0,i=(i=i+Math.imul(v,G)|0)+Math.imul(g,U)|0,s=s+Math.imul(g,G)|0,n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,J)|0)+Math.imul(m,K)|0,s=s+Math.imul(m,J)|0;var wt=(h+(n=n+Math.imul(l,$)|0)|0)+((8191&(i=(i=i+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(T,V),i=(i=Math.imul(T,C))+Math.imul(S,V)|0,s=Math.imul(S,C),n=n+Math.imul(x,q)|0,i=(i=i+Math.imul(x,Z)|0)+Math.imul(P,q)|0,s=s+Math.imul(P,Z)|0,n=n+Math.imul(w,U)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(M,U)|0,s=s+Math.imul(M,G)|0,n=n+Math.imul(v,K)|0,i=(i=i+Math.imul(v,J)|0)+Math.imul(g,K)|0,s=s+Math.imul(g,J)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,s=s+Math.imul(m,tt)|0;var Mt=(h+(n=n+Math.imul(l,rt)|0)|0)+((8191&(i=(i=i+Math.imul(l,nt)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,nt)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,C))+Math.imul(j,V)|0,s=Math.imul(j,C),n=n+Math.imul(T,q)|0,i=(i=i+Math.imul(T,Z)|0)+Math.imul(S,q)|0,s=s+Math.imul(S,Z)|0,n=n+Math.imul(x,U)|0,i=(i=i+Math.imul(x,G)|0)+Math.imul(P,U)|0,s=s+Math.imul(P,G)|0,n=n+Math.imul(w,K)|0,i=(i=i+Math.imul(w,J)|0)+Math.imul(M,K)|0,s=s+Math.imul(M,J)|0,n=n+Math.imul(v,$)|0,i=(i=i+Math.imul(v,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,s=s+Math.imul(m,nt)|0;var kt=(h+(n=n+Math.imul(l,st)|0)|0)+((8191&(i=(i=i+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(O,V),i=(i=Math.imul(O,C))+Math.imul(z,V)|0,s=Math.imul(z,C),n=n+Math.imul(D,q)|0,i=(i=i+Math.imul(D,Z)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,Z)|0,n=n+Math.imul(T,U)|0,i=(i=i+Math.imul(T,G)|0)+Math.imul(S,U)|0,s=s+Math.imul(S,G)|0,n=n+Math.imul(x,K)|0,i=(i=i+Math.imul(x,J)|0)+Math.imul(P,K)|0,s=s+Math.imul(P,J)|0,n=n+Math.imul(w,$)|0,i=(i=i+Math.imul(w,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,n=n+Math.imul(v,rt)|0,i=(i=i+Math.imul(v,nt)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,nt)|0,n=n+Math.imul(p,st)|0,i=(i=i+Math.imul(p,ot)|0)+Math.imul(m,st)|0,s=s+Math.imul(m,ot)|0;var xt=(h+(n=n+Math.imul(l,ut)|0)|0)+((8191&(i=(i=i+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(E,V),i=(i=Math.imul(E,C))+Math.imul(Y,V)|0,s=Math.imul(Y,C),n=n+Math.imul(O,q)|0,i=(i=i+Math.imul(O,Z)|0)+Math.imul(z,q)|0,s=s+Math.imul(z,Z)|0,n=n+Math.imul(D,U)|0,i=(i=i+Math.imul(D,G)|0)+Math.imul(j,U)|0,s=s+Math.imul(j,G)|0,n=n+Math.imul(T,K)|0,i=(i=i+Math.imul(T,J)|0)+Math.imul(S,K)|0,s=s+Math.imul(S,J)|0,n=n+Math.imul(x,$)|0,i=(i=i+Math.imul(x,tt)|0)+Math.imul(P,$)|0,s=s+Math.imul(P,tt)|0,n=n+Math.imul(w,rt)|0,i=(i=i+Math.imul(w,nt)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,nt)|0,n=n+Math.imul(v,st)|0,i=(i=i+Math.imul(v,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,s=s+Math.imul(m,ht)|0;var Pt=(h+(n=n+Math.imul(l,lt)|0)|0)+((8191&(i=(i=i+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(i>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,n=Math.imul(I,V),i=(i=Math.imul(I,C))+Math.imul(B,V)|0,s=Math.imul(B,C),n=n+Math.imul(E,q)|0,i=(i=i+Math.imul(E,Z)|0)+Math.imul(Y,q)|0,s=s+Math.imul(Y,Z)|0,n=n+Math.imul(O,U)|0,i=(i=i+Math.imul(O,G)|0)+Math.imul(z,U)|0,s=s+Math.imul(z,G)|0,n=n+Math.imul(D,K)|0,i=(i=i+Math.imul(D,J)|0)+Math.imul(j,K)|0,s=s+Math.imul(j,J)|0,n=n+Math.imul(T,$)|0,i=(i=i+Math.imul(T,tt)|0)+Math.imul(S,$)|0,s=s+Math.imul(S,tt)|0,n=n+Math.imul(x,rt)|0,i=(i=i+Math.imul(x,nt)|0)+Math.imul(P,rt)|0,s=s+Math.imul(P,nt)|0,n=n+Math.imul(w,st)|0,i=(i=i+Math.imul(w,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,n=n+Math.imul(v,ut)|0,i=(i=i+Math.imul(v,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0,n=n+Math.imul(p,lt)|0,i=(i=i+Math.imul(p,dt)|0)+Math.imul(m,lt)|0,s=s+Math.imul(m,dt)|0;var Lt=(h+(n=n+Math.imul(l,pt)|0)|0)+((8191&(i=(i=i+Math.imul(l,mt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,mt)|0)+(i>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,n=Math.imul(I,q),i=(i=Math.imul(I,Z))+Math.imul(B,q)|0,s=Math.imul(B,Z),n=n+Math.imul(E,U)|0,i=(i=i+Math.imul(E,G)|0)+Math.imul(Y,U)|0,s=s+Math.imul(Y,G)|0,n=n+Math.imul(O,K)|0,i=(i=i+Math.imul(O,J)|0)+Math.imul(z,K)|0,s=s+Math.imul(z,J)|0,n=n+Math.imul(D,$)|0,i=(i=i+Math.imul(D,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,n=n+Math.imul(T,rt)|0,i=(i=i+Math.imul(T,nt)|0)+Math.imul(S,rt)|0,s=s+Math.imul(S,nt)|0,n=n+Math.imul(x,st)|0,i=(i=i+Math.imul(x,ot)|0)+Math.imul(P,st)|0,s=s+Math.imul(P,ot)|0,n=n+Math.imul(w,ut)|0,i=(i=i+Math.imul(w,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,n=n+Math.imul(v,lt)|0,i=(i=i+Math.imul(v,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var Tt=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((s=s+Math.imul(m,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,n=Math.imul(I,U),i=(i=Math.imul(I,G))+Math.imul(B,U)|0,s=Math.imul(B,G),n=n+Math.imul(E,K)|0,i=(i=i+Math.imul(E,J)|0)+Math.imul(Y,K)|0,s=s+Math.imul(Y,J)|0,n=n+Math.imul(O,$)|0,i=(i=i+Math.imul(O,tt)|0)+Math.imul(z,$)|0,s=s+Math.imul(z,tt)|0,n=n+Math.imul(D,rt)|0,i=(i=i+Math.imul(D,nt)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,nt)|0,n=n+Math.imul(T,st)|0,i=(i=i+Math.imul(T,ot)|0)+Math.imul(S,st)|0,s=s+Math.imul(S,ot)|0,n=n+Math.imul(x,ut)|0,i=(i=i+Math.imul(x,ht)|0)+Math.imul(P,ut)|0,s=s+Math.imul(P,ht)|0,n=n+Math.imul(w,lt)|0,i=(i=i+Math.imul(w,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var St=(h+(n=n+Math.imul(v,pt)|0)|0)+((8191&(i=(i=i+Math.imul(v,mt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(I,K),i=(i=Math.imul(I,J))+Math.imul(B,K)|0,s=Math.imul(B,J),n=n+Math.imul(E,$)|0,i=(i=i+Math.imul(E,tt)|0)+Math.imul(Y,$)|0,s=s+Math.imul(Y,tt)|0,n=n+Math.imul(O,rt)|0,i=(i=i+Math.imul(O,nt)|0)+Math.imul(z,rt)|0,s=s+Math.imul(z,nt)|0,n=n+Math.imul(D,st)|0,i=(i=i+Math.imul(D,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,n=n+Math.imul(T,ut)|0,i=(i=i+Math.imul(T,ht)|0)+Math.imul(S,ut)|0,s=s+Math.imul(S,ht)|0,n=n+Math.imul(x,lt)|0,i=(i=i+Math.imul(x,dt)|0)+Math.imul(P,lt)|0,s=s+Math.imul(P,dt)|0;var At=(h+(n=n+Math.imul(w,pt)|0)|0)+((8191&(i=(i=i+Math.imul(w,mt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,mt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(I,$),i=(i=Math.imul(I,tt))+Math.imul(B,$)|0,s=Math.imul(B,tt),n=n+Math.imul(E,rt)|0,i=(i=i+Math.imul(E,nt)|0)+Math.imul(Y,rt)|0,s=s+Math.imul(Y,nt)|0,n=n+Math.imul(O,st)|0,i=(i=i+Math.imul(O,ot)|0)+Math.imul(z,st)|0,s=s+Math.imul(z,ot)|0,n=n+Math.imul(D,ut)|0,i=(i=i+Math.imul(D,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,n=n+Math.imul(T,lt)|0,i=(i=i+Math.imul(T,dt)|0)+Math.imul(S,lt)|0,s=s+Math.imul(S,dt)|0;var Dt=(h+(n=n+Math.imul(x,pt)|0)|0)+((8191&(i=(i=i+Math.imul(x,mt)|0)+Math.imul(P,pt)|0))<<13)|0;h=((s=s+Math.imul(P,mt)|0)+(i>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,n=Math.imul(I,rt),i=(i=Math.imul(I,nt))+Math.imul(B,rt)|0,s=Math.imul(B,nt),n=n+Math.imul(E,st)|0,i=(i=i+Math.imul(E,ot)|0)+Math.imul(Y,st)|0,s=s+Math.imul(Y,ot)|0,n=n+Math.imul(O,ut)|0,i=(i=i+Math.imul(O,ht)|0)+Math.imul(z,ut)|0,s=s+Math.imul(z,ht)|0,n=n+Math.imul(D,lt)|0,i=(i=i+Math.imul(D,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var jt=(h+(n=n+Math.imul(T,pt)|0)|0)+((8191&(i=(i=i+Math.imul(T,mt)|0)+Math.imul(S,pt)|0))<<13)|0;h=((s=s+Math.imul(S,mt)|0)+(i>>>13)|0)+(jt>>>26)|0,jt&=67108863,n=Math.imul(I,st),i=(i=Math.imul(I,ot))+Math.imul(B,st)|0,s=Math.imul(B,ot),n=n+Math.imul(E,ut)|0,i=(i=i+Math.imul(E,ht)|0)+Math.imul(Y,ut)|0,s=s+Math.imul(Y,ht)|0,n=n+Math.imul(O,lt)|0,i=(i=i+Math.imul(O,dt)|0)+Math.imul(z,lt)|0,s=s+Math.imul(z,dt)|0;var Ht=(h+(n=n+Math.imul(D,pt)|0)|0)+((8191&(i=(i=i+Math.imul(D,mt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,mt)|0)+(i>>>13)|0)+(Ht>>>26)|0,Ht&=67108863,n=Math.imul(I,ut),i=(i=Math.imul(I,ht))+Math.imul(B,ut)|0,s=Math.imul(B,ht),n=n+Math.imul(E,lt)|0,i=(i=i+Math.imul(E,dt)|0)+Math.imul(Y,lt)|0,s=s+Math.imul(Y,dt)|0;var Ot=(h+(n=n+Math.imul(O,pt)|0)|0)+((8191&(i=(i=i+Math.imul(O,mt)|0)+Math.imul(z,pt)|0))<<13)|0;h=((s=s+Math.imul(z,mt)|0)+(i>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,n=Math.imul(I,lt),i=(i=Math.imul(I,dt))+Math.imul(B,lt)|0,s=Math.imul(B,dt);var zt=(h+(n=n+Math.imul(E,pt)|0)|0)+((8191&(i=(i=i+Math.imul(E,mt)|0)+Math.imul(Y,pt)|0))<<13)|0;h=((s=s+Math.imul(Y,mt)|0)+(i>>>13)|0)+(zt>>>26)|0,zt&=67108863;var Nt=(h+(n=Math.imul(I,pt))|0)+((8191&(i=(i=Math.imul(I,mt))+Math.imul(B,pt)|0))<<13)|0;return h=((s=Math.imul(B,mt))+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=yt,u[1]=vt,u[2]=gt,u[3]=bt,u[4]=wt,u[5]=Mt,u[6]=kt,u[7]=xt,u[8]=Pt,u[9]=Lt,u[10]=Tt,u[11]=St,u[12]=At,u[13]=Dt,u[14]=jt,u[15]=Ht,u[16]=Ot,u[17]=zt,u[18]=Nt,0!==h&&(u[19]=h,r.length++),r};function m(t,e,r){return(new y).mulp(t,e,r)}function y(t,e){this.x=t,this.y=e}Math.imul||(p=f),s.prototype.mulTo=function(t,e){var r,n=this.length+t.length;return r=10===this.length&&10===t.length?p(this,t,e):n<63?f(this,t,e):n<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,s=0;s<r.length-1;s++){var o=i;i=0;for(var a=67108863&n,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),i+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,n=o,o=i}return 0!==n?r.words[s]=n:r.length--,r.strip()}(this,t,e):m(this,t,e),r},y.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},y.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},y.prototype.permute=function(t,e,r,n,i,s){for(var o=0;o<s;o++)n[o]=e[t[o]],i[o]=r[t[o]]},y.prototype.transform=function(t,e,r,n,i,s){this.permute(s,t,e,r,n,i);for(var o=1;o<i;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<i;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],m=n[c+f],y=r[c+f+o],v=n[c+f+o],g=l*y-d*v;v=l*v+d*y,y=g,r[c+f]=p+y,n[c+f]=m+v,r[c+f+o]=p-y,n[c+f+o]=m-v,f!==a&&(g=u*l-h*d,d=u*d+h*l,l=g)}},y.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},y.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},y.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},y.prototype.convert13b=function(t,e,r,i){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<i;++o)r[o]=0;n(0===s),n(0==(-8192&s))},y.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},y.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),s=this.stub(n),o=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),c=new Array(n),l=new Array(n),d=r.words;d.length=n,this.convert13b(t.words,t.length,o,n),this.convert13b(e.words,e.length,h,n),this.transform(o,s,a,u,n,i),this.transform(h,s,c,l,n,i);for(var f=0;f<n;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,n),this.transform(a,u,d,s,n,i),this.conjugate(d,s,n),this.normalize13b(d,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),m(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var e=0,r=0;r<this.length;r++){var i=(0|this.words[r])*t,s=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=(t.words[n]&1<<i)>>>i}return e}(t);if(0===e.length)return new s(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},s.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},s.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var i;n("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(i-=o,i=Math.max(0,i),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=i);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r)&&!!(this.words[r]&i)},s.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var i,s,o=t.length+r;this._expand(o);var a=0;for(i=0;i<t.length;i++){s=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&s}for(;i<this.length-r;i++)a=(s=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&s;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(s=-(0|this.words[i])+a)>>26,this.words[i]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,o=0|i.words[i.length-1];0!==(r=26-this._countBits(o))&&(i=i.ushln(r),n.iushln(r),o=0|i.words[i.length-1]);var a,u=n.length-i.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=n.clone()._ishlnsubmul(i,1,u);0===c.negative&&(n=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|n.words[i.length+l])+(0|n.words[i.length+l-1]);for(d=Math.min(d/o|0,67108863),n._ishlnsubmul(i,d,l);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(i,1,l),n.isZero()||(n.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),n.strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},s.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(i=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:i,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var i,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),s=r.cmp(n);return s<0||1===i&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){n(t<=67108863);for(var e=(1<<26)%t,r=0,i=this.length-1;i>=0;i--)r=(e*r+(0|this.words[i]))%t;return r},s.prototype.idivn=function(t){n(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*e;this.words[r]=i/t|0,e=i%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(c),o.isub(l)),i.iushrn(1),o.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),o.isub(u)):(r.isub(e),a.isub(i),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(i=0===e.cmpn(1)?o:a).cmpn(0)<0&&i.iadd(t),i},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var s=e;e=r,r=s}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){n("number"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var s=i,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new x(t)},s.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function g(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){g.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){g.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function M(){g.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function k(){g.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function x(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function P(t){x.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}g.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},g.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},g.prototype.split=function(t,e){t.iushrn(this.n,0,e)},g.prototype.imulK=function(t){return t.imul(this.k)},i(b,g),b.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,i=10;i<t.length;i++){var o=0|t.words[i];t.words[i-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[i-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(w,g),i(M,g),i(k,g),k.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(v[t])return v[t];var e;if("k256"===t)e=new b;else if("p224"===t)e=new w;else if("p192"===t)e=new M;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new k}return v[t]=e,e},x.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},x.prototype._verify2=function(t,e){n(0==(t.negative|e.negative),"red works only with positives"),n(t.red&&t.red===e.red,"red works only with red numbers")},x.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},x.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},x.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},x.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},x.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},x.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},x.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},x.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},x.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},x.prototype.isqr=function(t){return this.imul(t,t.clone())},x.prototype.sqr=function(t){return this.mul(t,t)},x.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),o=0;!i.isZero()&&0===i.andln(1);)o++,i.iushrn(1);n(!i.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,i),d=this.pow(t,i.addn(1).iushrn(1)),f=this.pow(t,i),p=o;0!==f.cmp(a);){for(var m=f,y=0;0!==m.cmp(a);y++)m=m.redSqr();n(y<p);var v=this.pow(l,new s(1).iushln(p-y-1));d=d.redMul(v),l=v.redSqr(),f=f.redMul(l),p=y}return d},x.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},x.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],c=u-1;c>=0;c--){var l=h>>c&1;i!==r[0]&&(i=this.sqr(i)),0!==l||0!==o?(o<<=1,o|=l,(4===++a||0===n&&0===c)&&(i=this.mul(i,r[o]),a=0,o=0)):a=0}u=26}return i},x.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},x.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new P(t)},i(P,x),P.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},P.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},P.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},P.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},P.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},75678:function(t,e,r){!function(e,n){"use strict";t.exports?t.exports=n(r(50780)):e.ed2curve=n(e.nacl)}(this,(function(t){"use strict";if(!t)throw new Error("tweetnacl not loaded");var e=function(t){var e,r=new Float64Array(16);if(t)for(e=0;e<t.length;e++)r[e]=t[e];return r},r=e(),n=e([1]),i=e([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),s=e([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function o(t){var e,r;for(r=0;r<16;r++)t[r]+=65536,e=Math.floor(t[r]/65536),t[(r+1)*(r<15?1:0)]+=e-1+37*(e-1)*(15===r?1:0),t[r]-=65536*e}function a(t,e,r){for(var n,i=~(r-1),s=0;s<16;s++)n=i&(t[s]^e[s]),t[s]^=n,e[s]^=n}function u(t,e,r){var n;for(n=0;n<16;n++)t[n]=e[n]+r[n]|0}function h(t,e,r){var n;for(n=0;n<16;n++)t[n]=e[n]-r[n]|0}function c(t,e,r){var n,i,s=new Float64Array(31);for(n=0;n<31;n++)s[n]=0;for(n=0;n<16;n++)for(i=0;i<16;i++)s[n+i]+=e[n]*r[i];for(n=0;n<15;n++)s[n]+=38*s[n+16];for(n=0;n<16;n++)t[n]=s[n];o(t),o(t)}function l(t,e){c(t,e,e)}function d(t,r){var n,i,s,u=e(),h=e();for(n=0;n<16;n++)h[n]=r[n];for(o(h),o(h),o(h),i=0;i<2;i++){for(u[0]=h[0]-65517,n=1;n<15;n++)u[n]=h[n]-65535-(u[n-1]>>16&1),u[n-1]&=65535;u[15]=h[15]-32767-(u[14]>>16&1),s=u[15]>>16&1,u[14]&=65535,a(h,u,1-s)}for(n=0;n<16;n++)t[2*n]=255&h[n],t[2*n+1]=h[n]>>8}function f(t,e){var r=new Uint8Array(32),n=new Uint8Array(32);return d(r,t),d(n,e),function(t,e,r,n,i){var s,o=0;for(s=0;s<i;s++)o|=t[e+s]^r[n+s];return(1&o-1>>>8)-1}(r,0,n,0,32)}function p(t,o){var a,p,m=e(),y=e(),v=e(),g=e(),b=e(),w=e(),M=e();return function(t,e){var r;for(r=0;r<16;r++)t[r]=0|e[r]}(t[2],n),function(t,e){var r;for(r=0;r<16;r++)t[r]=e[2*r]+(e[2*r+1]<<8);t[15]&=32767}(t[1],o),l(v,t[1]),c(g,v,i),h(v,v,t[2]),u(g,t[2],g),l(b,g),l(w,b),c(M,w,b),c(m,M,v),c(m,m,g),function(t,r){var n,i=e();for(n=0;n<16;n++)i[n]=r[n];for(n=250;n>=0;n--)l(i,i),1!==n&&c(i,i,r);for(n=0;n<16;n++)t[n]=i[n]}(m,m),c(m,m,v),c(m,m,g),c(m,m,g),c(t[0],m,g),l(y,t[0]),c(y,y,g),f(y,v)&&c(t[0],t[0],s),l(y,t[0]),c(y,y,g),f(y,v)?-1:(a=t[0],d(p=new Uint8Array(32),a),(1&p[0])==o[31]>>7&&h(t[0],r,t[0]),c(t[3],t[0],t[1]),0)}function m(t){var r=new Uint8Array(32),i=[e(),e(),e(),e()],s=e(),o=e();if(p(i,t))return null;var a=i[1];return u(s,n,a),h(o,n,a),function(t,r){var n,i=e();for(n=0;n<16;n++)i[n]=r[n];for(n=253;n>=0;n--)l(i,i),2!==n&&4!==n&&c(i,i,r);for(n=0;n<16;n++)t[n]=i[n]}(o,o),c(s,s,o),d(r,s),r}function y(e){var r,n=new Uint8Array(64),i=new Uint8Array(32);for(t.lowlevel.crypto_hash(n,e,32),n[0]&=248,n[31]&=127,n[31]|=64,r=0;r<32;r++)i[r]=n[r];for(r=0;r<64;r++)n[r]=0;return i}return{convertPublicKey:m,convertSecretKey:y,convertKeyPair:function(t){var e=m(t.publicKey);return e?{publicKey:e,secretKey:y(t.secretKey)}:null}}}))},86266:(t,e,r)=>{"use strict";var n=e;n.version=r(18597).i8,n.utils=r(80953),n.rand=r(29931),n.curve=r(88254),n.curves=r(45427),n.ec=r(57954),n.eddsa=r(65980)},4918:(t,e,r)=>{"use strict";var n=r(73785),i=r(80953),s=i.getNAF,o=i.getJSF,a=i.assert;function u(t,e){this.type=t,this.p=new n(e.p,16),this.red=e.prime?n.red(e.prime):n.mont(this.p),this.zero=new n(0).toRed(this.red),this.one=new n(1).toRed(this.red),this.two=new n(2).toRed(this.red),this.n=e.n&&new n(e.n,16),this.g=e.g&&this.pointFromJSON(e.g,e.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var r=this.n&&this.p.div(this.n);!r||r.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}function h(t,e){this.curve=t,this.type=e,this.precomputed=null}t.exports=u,u.prototype.point=function(){throw new Error("Not implemented")},u.prototype.validate=function(){throw new Error("Not implemented")},u.prototype._fixedNafMul=function(t,e){a(t.precomputed);var r=t._getDoubles(),n=s(e,1,this._bitLength),i=(1<<r.step+1)-(r.step%2==0?2:1);i/=3;var o,u,h=[];for(o=0;o<n.length;o+=r.step){u=0;for(var c=o+r.step-1;c>=o;c--)u=(u<<1)+n[c];h.push(u)}for(var l=this.jpoint(null,null,null),d=this.jpoint(null,null,null),f=i;f>0;f--){for(o=0;o<h.length;o++)(u=h[o])===f?d=d.mixedAdd(r.points[o]):u===-f&&(d=d.mixedAdd(r.points[o].neg()));l=l.add(d)}return l.toP()},u.prototype._wnafMul=function(t,e){var r=4,n=t._getNAFPoints(r);r=n.wnd;for(var i=n.points,o=s(e,r,this._bitLength),u=this.jpoint(null,null,null),h=o.length-1;h>=0;h--){for(var c=0;h>=0&&0===o[h];h--)c++;if(h>=0&&c++,u=u.dblp(c),h<0)break;var l=o[h];a(0!==l),u="affine"===t.type?l>0?u.mixedAdd(i[l-1>>1]):u.mixedAdd(i[-l-1>>1].neg()):l>0?u.add(i[l-1>>1]):u.add(i[-l-1>>1].neg())}return"affine"===t.type?u.toP():u},u.prototype._wnafMulAdd=function(t,e,r,n,i){var a,u,h,c=this._wnafT1,l=this._wnafT2,d=this._wnafT3,f=0;for(a=0;a<n;a++){var p=(h=e[a])._getNAFPoints(t);c[a]=p.wnd,l[a]=p.points}for(a=n-1;a>=1;a-=2){var m=a-1,y=a;if(1===c[m]&&1===c[y]){var v=[e[m],null,null,e[y]];0===e[m].y.cmp(e[y].y)?(v[1]=e[m].add(e[y]),v[2]=e[m].toJ().mixedAdd(e[y].neg())):0===e[m].y.cmp(e[y].y.redNeg())?(v[1]=e[m].toJ().mixedAdd(e[y]),v[2]=e[m].add(e[y].neg())):(v[1]=e[m].toJ().mixedAdd(e[y]),v[2]=e[m].toJ().mixedAdd(e[y].neg()));var g=[-3,-1,-5,-7,0,7,5,1,3],b=o(r[m],r[y]);for(f=Math.max(b[0].length,f),d[m]=new Array(f),d[y]=new Array(f),u=0;u<f;u++){var w=0|b[0][u],M=0|b[1][u];d[m][u]=g[3*(w+1)+(M+1)],d[y][u]=0,l[m]=v}}else d[m]=s(r[m],c[m],this._bitLength),d[y]=s(r[y],c[y],this._bitLength),f=Math.max(d[m].length,f),f=Math.max(d[y].length,f)}var k=this.jpoint(null,null,null),x=this._wnafT4;for(a=f;a>=0;a--){for(var P=0;a>=0;){var L=!0;for(u=0;u<n;u++)x[u]=0|d[u][a],0!==x[u]&&(L=!1);if(!L)break;P++,a--}if(a>=0&&P++,k=k.dblp(P),a<0)break;for(u=0;u<n;u++){var T=x[u];0!==T&&(T>0?h=l[u][T-1>>1]:T<0&&(h=l[u][-T-1>>1].neg()),k="affine"===h.type?k.mixedAdd(h):k.add(h))}}for(a=0;a<n;a++)l[a]=null;return i?k:k.toP()},u.BasePoint=h,h.prototype.eq=function(){throw new Error("Not implemented")},h.prototype.validate=function(){return this.curve.validate(this)},u.prototype.decodePoint=function(t,e){t=i.toArray(t,e);var r=this.p.byteLength();if((4===t[0]||6===t[0]||7===t[0])&&t.length-1==2*r)return 6===t[0]?a(t[t.length-1]%2==0):7===t[0]&&a(t[t.length-1]%2==1),this.point(t.slice(1,1+r),t.slice(1+r,1+2*r));if((2===t[0]||3===t[0])&&t.length-1===r)return this.pointFromX(t.slice(1,1+r),3===t[0]);throw new Error("Unknown point format")},h.prototype.encodeCompressed=function(t){return this.encode(t,!0)},h.prototype._encode=function(t){var e=this.curve.p.byteLength(),r=this.getX().toArray("be",e);return t?[this.getY().isEven()?2:3].concat(r):[4].concat(r,this.getY().toArray("be",e))},h.prototype.encode=function(t,e){return i.encode(this._encode(e),t)},h.prototype.precompute=function(t){if(this.precomputed)return this;var e={doubles:null,naf:null,beta:null};return e.naf=this._getNAFPoints(8),e.doubles=this._getDoubles(4,t),e.beta=this._getBeta(),this.precomputed=e,this},h.prototype._hasDoubles=function(t){if(!this.precomputed)return!1;var e=this.precomputed.doubles;return!!e&&e.points.length>=Math.ceil((t.bitLength()+1)/e.step)},h.prototype._getDoubles=function(t,e){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var r=[this],n=this,i=0;i<e;i+=t){for(var s=0;s<t;s++)n=n.dbl();r.push(n)}return{step:t,points:r}},h.prototype._getNAFPoints=function(t){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var e=[this],r=(1<<t)-1,n=1===r?null:this.dbl(),i=1;i<r;i++)e[i]=e[i-1].add(n);return{wnd:t,points:e}},h.prototype._getBeta=function(){return null},h.prototype.dblp=function(t){for(var e=this,r=0;r<t;r++)e=e.dbl();return e}},31138:(t,e,r)=>{"use strict";var n=r(80953),i=r(73785),s=r(35717),o=r(4918),a=n.assert;function u(t){this.twisted=1!=(0|t.a),this.mOneA=this.twisted&&-1==(0|t.a),this.extended=this.mOneA,o.call(this,"edwards",t),this.a=new i(t.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new i(t.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new i(t.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),a(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|t.c)}function h(t,e,r,n,s){o.BasePoint.call(this,t,"projective"),null===e&&null===r&&null===n?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new i(e,16),this.y=new i(r,16),this.z=n?new i(n,16):this.curve.one,this.t=s&&new i(s,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}s(u,o),t.exports=u,u.prototype._mulA=function(t){return this.mOneA?t.redNeg():this.a.redMul(t)},u.prototype._mulC=function(t){return this.oneC?t:this.c.redMul(t)},u.prototype.jpoint=function(t,e,r,n){return this.point(t,e,r,n)},u.prototype.pointFromX=function(t,e){(t=new i(t,16)).red||(t=t.toRed(this.red));var r=t.redSqr(),n=this.c2.redSub(this.a.redMul(r)),s=this.one.redSub(this.c2.redMul(this.d).redMul(r)),o=n.redMul(s.redInvm()),a=o.redSqrt();if(0!==a.redSqr().redSub(o).cmp(this.zero))throw new Error("invalid point");var u=a.fromRed().isOdd();return(e&&!u||!e&&u)&&(a=a.redNeg()),this.point(t,a)},u.prototype.pointFromY=function(t,e){(t=new i(t,16)).red||(t=t.toRed(this.red));var r=t.redSqr(),n=r.redSub(this.c2),s=r.redMul(this.d).redMul(this.c2).redSub(this.a),o=n.redMul(s.redInvm());if(0===o.cmp(this.zero)){if(e)throw new Error("invalid point");return this.point(this.zero,t)}var a=o.redSqrt();if(0!==a.redSqr().redSub(o).cmp(this.zero))throw new Error("invalid point");return a.fromRed().isOdd()!==e&&(a=a.redNeg()),this.point(a,t)},u.prototype.validate=function(t){if(t.isInfinity())return!0;t.normalize();var e=t.x.redSqr(),r=t.y.redSqr(),n=e.redMul(this.a).redAdd(r),i=this.c2.redMul(this.one.redAdd(this.d.redMul(e).redMul(r)));return 0===n.cmp(i)},s(h,o.BasePoint),u.prototype.pointFromJSON=function(t){return h.fromJSON(this,t)},u.prototype.point=function(t,e,r,n){return new h(this,t,e,r,n)},h.fromJSON=function(t,e){return new h(t,e[0],e[1],e[2])},h.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},h.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&(0===this.y.cmp(this.z)||this.zOne&&0===this.y.cmp(this.curve.c))},h.prototype._extDbl=function(){var t=this.x.redSqr(),e=this.y.redSqr(),r=this.z.redSqr();r=r.redIAdd(r);var n=this.curve._mulA(t),i=this.x.redAdd(this.y).redSqr().redISub(t).redISub(e),s=n.redAdd(e),o=s.redSub(r),a=n.redSub(e),u=i.redMul(o),h=s.redMul(a),c=i.redMul(a),l=o.redMul(s);return this.curve.point(u,h,l,c)},h.prototype._projDbl=function(){var t,e,r,n,i,s,o=this.x.redAdd(this.y).redSqr(),a=this.x.redSqr(),u=this.y.redSqr();if(this.curve.twisted){var h=(n=this.curve._mulA(a)).redAdd(u);this.zOne?(t=o.redSub(a).redSub(u).redMul(h.redSub(this.curve.two)),e=h.redMul(n.redSub(u)),r=h.redSqr().redSub(h).redSub(h)):(i=this.z.redSqr(),s=h.redSub(i).redISub(i),t=o.redSub(a).redISub(u).redMul(s),e=h.redMul(n.redSub(u)),r=h.redMul(s))}else n=a.redAdd(u),i=this.curve._mulC(this.z).redSqr(),s=n.redSub(i).redSub(i),t=this.curve._mulC(o.redISub(n)).redMul(s),e=this.curve._mulC(n).redMul(a.redISub(u)),r=n.redMul(s);return this.curve.point(t,e,r)},h.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},h.prototype._extAdd=function(t){var e=this.y.redSub(this.x).redMul(t.y.redSub(t.x)),r=this.y.redAdd(this.x).redMul(t.y.redAdd(t.x)),n=this.t.redMul(this.curve.dd).redMul(t.t),i=this.z.redMul(t.z.redAdd(t.z)),s=r.redSub(e),o=i.redSub(n),a=i.redAdd(n),u=r.redAdd(e),h=s.redMul(o),c=a.redMul(u),l=s.redMul(u),d=o.redMul(a);return this.curve.point(h,c,d,l)},h.prototype._projAdd=function(t){var e,r,n=this.z.redMul(t.z),i=n.redSqr(),s=this.x.redMul(t.x),o=this.y.redMul(t.y),a=this.curve.d.redMul(s).redMul(o),u=i.redSub(a),h=i.redAdd(a),c=this.x.redAdd(this.y).redMul(t.x.redAdd(t.y)).redISub(s).redISub(o),l=n.redMul(u).redMul(c);return this.curve.twisted?(e=n.redMul(h).redMul(o.redSub(this.curve._mulA(s))),r=u.redMul(h)):(e=n.redMul(h).redMul(o.redSub(s)),r=this.curve._mulC(u).redMul(h)),this.curve.point(l,e,r)},h.prototype.add=function(t){return this.isInfinity()?t:t.isInfinity()?this:this.curve.extended?this._extAdd(t):this._projAdd(t)},h.prototype.mul=function(t){return this._hasDoubles(t)?this.curve._fixedNafMul(this,t):this.curve._wnafMul(this,t)},h.prototype.mulAdd=function(t,e,r){return this.curve._wnafMulAdd(1,[this,e],[t,r],2,!1)},h.prototype.jmulAdd=function(t,e,r){return this.curve._wnafMulAdd(1,[this,e],[t,r],2,!0)},h.prototype.normalize=function(){if(this.zOne)return this;var t=this.z.redInvm();return this.x=this.x.redMul(t),this.y=this.y.redMul(t),this.t&&(this.t=this.t.redMul(t)),this.z=this.curve.one,this.zOne=!0,this},h.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},h.prototype.getX=function(){return this.normalize(),this.x.fromRed()},h.prototype.getY=function(){return this.normalize(),this.y.fromRed()},h.prototype.eq=function(t){return this===t||0===this.getX().cmp(t.getX())&&0===this.getY().cmp(t.getY())},h.prototype.eqXToP=function(t){var e=t.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(e))return!0;for(var r=t.clone(),n=this.curve.redN.redMul(this.z);;){if(r.iadd(this.curve.n),r.cmp(this.curve.p)>=0)return!1;if(e.redIAdd(n),0===this.x.cmp(e))return!0}},h.prototype.toP=h.prototype.normalize,h.prototype.mixedAdd=h.prototype.add},88254:(t,e,r)=>{"use strict";var n=e;n.base=r(4918),n.short=r(6673),n.mont=r(22881),n.edwards=r(31138)},22881:(t,e,r)=>{"use strict";var n=r(73785),i=r(35717),s=r(4918),o=r(80953);function a(t){s.call(this,"mont",t),this.a=new n(t.a,16).toRed(this.red),this.b=new n(t.b,16).toRed(this.red),this.i4=new n(4).toRed(this.red).redInvm(),this.two=new n(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}function u(t,e,r){s.BasePoint.call(this,t,"projective"),null===e&&null===r?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new n(e,16),this.z=new n(r,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}i(a,s),t.exports=a,a.prototype.validate=function(t){var e=t.normalize().x,r=e.redSqr(),n=r.redMul(e).redAdd(r.redMul(this.a)).redAdd(e);return 0===n.redSqrt().redSqr().cmp(n)},i(u,s.BasePoint),a.prototype.decodePoint=function(t,e){return this.point(o.toArray(t,e),1)},a.prototype.point=function(t,e){return new u(this,t,e)},a.prototype.pointFromJSON=function(t){return u.fromJSON(this,t)},u.prototype.precompute=function(){},u.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},u.fromJSON=function(t,e){return new u(t,e[0],e[1]||t.one)},u.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},u.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},u.prototype.dbl=function(){var t=this.x.redAdd(this.z).redSqr(),e=this.x.redSub(this.z).redSqr(),r=t.redSub(e),n=t.redMul(e),i=r.redMul(e.redAdd(this.curve.a24.redMul(r)));return this.curve.point(n,i)},u.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},u.prototype.diffAdd=function(t,e){var r=this.x.redAdd(this.z),n=this.x.redSub(this.z),i=t.x.redAdd(t.z),s=t.x.redSub(t.z).redMul(r),o=i.redMul(n),a=e.z.redMul(s.redAdd(o).redSqr()),u=e.x.redMul(s.redISub(o).redSqr());return this.curve.point(a,u)},u.prototype.mul=function(t){for(var e=t.clone(),r=this,n=this.curve.point(null,null),i=[];0!==e.cmpn(0);e.iushrn(1))i.push(e.andln(1));for(var s=i.length-1;s>=0;s--)0===i[s]?(r=r.diffAdd(n,this),n=n.dbl()):(n=r.diffAdd(n,this),r=r.dbl());return n},u.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},u.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},u.prototype.eq=function(t){return 0===this.getX().cmp(t.getX())},u.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},u.prototype.getX=function(){return this.normalize(),this.x.fromRed()}},6673:(t,e,r)=>{"use strict";var n=r(80953),i=r(73785),s=r(35717),o=r(4918),a=n.assert;function u(t){o.call(this,"short",t),this.a=new i(t.a,16).toRed(this.red),this.b=new i(t.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(t),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}function h(t,e,r,n){o.BasePoint.call(this,t,"affine"),null===e&&null===r?(this.x=null,this.y=null,this.inf=!0):(this.x=new i(e,16),this.y=new i(r,16),n&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function c(t,e,r,n){o.BasePoint.call(this,t,"jacobian"),null===e&&null===r&&null===n?(this.x=this.curve.one,this.y=this.curve.one,this.z=new i(0)):(this.x=new i(e,16),this.y=new i(r,16),this.z=new i(n,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}s(u,o),t.exports=u,u.prototype._getEndomorphism=function(t){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var e,r;if(t.beta)e=new i(t.beta,16).toRed(this.red);else{var n=this._getEndoRoots(this.p);e=(e=n[0].cmp(n[1])<0?n[0]:n[1]).toRed(this.red)}if(t.lambda)r=new i(t.lambda,16);else{var s=this._getEndoRoots(this.n);0===this.g.mul(s[0]).x.cmp(this.g.x.redMul(e))?r=s[0]:(r=s[1],a(0===this.g.mul(r).x.cmp(this.g.x.redMul(e))))}return{beta:e,lambda:r,basis:t.basis?t.basis.map((function(t){return{a:new i(t.a,16),b:new i(t.b,16)}})):this._getEndoBasis(r)}}},u.prototype._getEndoRoots=function(t){var e=t===this.p?this.red:i.mont(t),r=new i(2).toRed(e).redInvm(),n=r.redNeg(),s=new i(3).toRed(e).redNeg().redSqrt().redMul(r);return[n.redAdd(s).fromRed(),n.redSub(s).fromRed()]},u.prototype._getEndoBasis=function(t){for(var e,r,n,s,o,a,u,h,c,l=this.n.ushrn(Math.floor(this.n.bitLength()/2)),d=t,f=this.n.clone(),p=new i(1),m=new i(0),y=new i(0),v=new i(1),g=0;0!==d.cmpn(0);){var b=f.div(d);h=f.sub(b.mul(d)),c=y.sub(b.mul(p));var w=v.sub(b.mul(m));if(!n&&h.cmp(l)<0)e=u.neg(),r=p,n=h.neg(),s=c;else if(n&&2==++g)break;u=h,f=d,d=h,y=p,p=c,v=m,m=w}o=h.neg(),a=c;var M=n.sqr().add(s.sqr());return o.sqr().add(a.sqr()).cmp(M)>=0&&(o=e,a=r),n.negative&&(n=n.neg(),s=s.neg()),o.negative&&(o=o.neg(),a=a.neg()),[{a:n,b:s},{a:o,b:a}]},u.prototype._endoSplit=function(t){var e=this.endo.basis,r=e[0],n=e[1],i=n.b.mul(t).divRound(this.n),s=r.b.neg().mul(t).divRound(this.n),o=i.mul(r.a),a=s.mul(n.a),u=i.mul(r.b),h=s.mul(n.b);return{k1:t.sub(o).sub(a),k2:u.add(h).neg()}},u.prototype.pointFromX=function(t,e){(t=new i(t,16)).red||(t=t.toRed(this.red));var r=t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),n=r.redSqrt();if(0!==n.redSqr().redSub(r).cmp(this.zero))throw new Error("invalid point");var s=n.fromRed().isOdd();return(e&&!s||!e&&s)&&(n=n.redNeg()),this.point(t,n)},u.prototype.validate=function(t){if(t.inf)return!0;var e=t.x,r=t.y,n=this.a.redMul(e),i=e.redSqr().redMul(e).redIAdd(n).redIAdd(this.b);return 0===r.redSqr().redISub(i).cmpn(0)},u.prototype._endoWnafMulAdd=function(t,e,r){for(var n=this._endoWnafT1,i=this._endoWnafT2,s=0;s<t.length;s++){var o=this._endoSplit(e[s]),a=t[s],u=a._getBeta();o.k1.negative&&(o.k1.ineg(),a=a.neg(!0)),o.k2.negative&&(o.k2.ineg(),u=u.neg(!0)),n[2*s]=a,n[2*s+1]=u,i[2*s]=o.k1,i[2*s+1]=o.k2}for(var h=this._wnafMulAdd(1,n,i,2*s,r),c=0;c<2*s;c++)n[c]=null,i[c]=null;return h},s(h,o.BasePoint),u.prototype.point=function(t,e,r){return new h(this,t,e,r)},u.prototype.pointFromJSON=function(t,e){return h.fromJSON(this,t,e)},h.prototype._getBeta=function(){if(this.curve.endo){var t=this.precomputed;if(t&&t.beta)return t.beta;var e=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(t){var r=this.curve,n=function(t){return r.point(t.x.redMul(r.endo.beta),t.y)};t.beta=e,e.precomputed={beta:null,naf:t.naf&&{wnd:t.naf.wnd,points:t.naf.points.map(n)},doubles:t.doubles&&{step:t.doubles.step,points:t.doubles.points.map(n)}}}return e}},h.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},h.fromJSON=function(t,e,r){"string"==typeof e&&(e=JSON.parse(e));var n=t.point(e[0],e[1],r);if(!e[2])return n;function i(e){return t.point(e[0],e[1],r)}var s=e[2];return n.precomputed={beta:null,doubles:s.doubles&&{step:s.doubles.step,points:[n].concat(s.doubles.points.map(i))},naf:s.naf&&{wnd:s.naf.wnd,points:[n].concat(s.naf.points.map(i))}},n},h.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},h.prototype.isInfinity=function(){return this.inf},h.prototype.add=function(t){if(this.inf)return t;if(t.inf)return this;if(this.eq(t))return this.dbl();if(this.neg().eq(t))return this.curve.point(null,null);if(0===this.x.cmp(t.x))return this.curve.point(null,null);var e=this.y.redSub(t.y);0!==e.cmpn(0)&&(e=e.redMul(this.x.redSub(t.x).redInvm()));var r=e.redSqr().redISub(this.x).redISub(t.x),n=e.redMul(this.x.redSub(r)).redISub(this.y);return this.curve.point(r,n)},h.prototype.dbl=function(){if(this.inf)return this;var t=this.y.redAdd(this.y);if(0===t.cmpn(0))return this.curve.point(null,null);var e=this.curve.a,r=this.x.redSqr(),n=t.redInvm(),i=r.redAdd(r).redIAdd(r).redIAdd(e).redMul(n),s=i.redSqr().redISub(this.x.redAdd(this.x)),o=i.redMul(this.x.redSub(s)).redISub(this.y);return this.curve.point(s,o)},h.prototype.getX=function(){return this.x.fromRed()},h.prototype.getY=function(){return this.y.fromRed()},h.prototype.mul=function(t){return t=new i(t,16),this.isInfinity()?this:this._hasDoubles(t)?this.curve._fixedNafMul(this,t):this.curve.endo?this.curve._endoWnafMulAdd([this],[t]):this.curve._wnafMul(this,t)},h.prototype.mulAdd=function(t,e,r){var n=[this,e],i=[t,r];return this.curve.endo?this.curve._endoWnafMulAdd(n,i):this.curve._wnafMulAdd(1,n,i,2)},h.prototype.jmulAdd=function(t,e,r){var n=[this,e],i=[t,r];return this.curve.endo?this.curve._endoWnafMulAdd(n,i,!0):this.curve._wnafMulAdd(1,n,i,2,!0)},h.prototype.eq=function(t){return this===t||this.inf===t.inf&&(this.inf||0===this.x.cmp(t.x)&&0===this.y.cmp(t.y))},h.prototype.neg=function(t){if(this.inf)return this;var e=this.curve.point(this.x,this.y.redNeg());if(t&&this.precomputed){var r=this.precomputed,n=function(t){return t.neg()};e.precomputed={naf:r.naf&&{wnd:r.naf.wnd,points:r.naf.points.map(n)},doubles:r.doubles&&{step:r.doubles.step,points:r.doubles.points.map(n)}}}return e},h.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},s(c,o.BasePoint),u.prototype.jpoint=function(t,e,r){return new c(this,t,e,r)},c.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var t=this.z.redInvm(),e=t.redSqr(),r=this.x.redMul(e),n=this.y.redMul(e).redMul(t);return this.curve.point(r,n)},c.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},c.prototype.add=function(t){if(this.isInfinity())return t;if(t.isInfinity())return this;var e=t.z.redSqr(),r=this.z.redSqr(),n=this.x.redMul(e),i=t.x.redMul(r),s=this.y.redMul(e.redMul(t.z)),o=t.y.redMul(r.redMul(this.z)),a=n.redSub(i),u=s.redSub(o);if(0===a.cmpn(0))return 0!==u.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var h=a.redSqr(),c=h.redMul(a),l=n.redMul(h),d=u.redSqr().redIAdd(c).redISub(l).redISub(l),f=u.redMul(l.redISub(d)).redISub(s.redMul(c)),p=this.z.redMul(t.z).redMul(a);return this.curve.jpoint(d,f,p)},c.prototype.mixedAdd=function(t){if(this.isInfinity())return t.toJ();if(t.isInfinity())return this;var e=this.z.redSqr(),r=this.x,n=t.x.redMul(e),i=this.y,s=t.y.redMul(e).redMul(this.z),o=r.redSub(n),a=i.redSub(s);if(0===o.cmpn(0))return 0!==a.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var u=o.redSqr(),h=u.redMul(o),c=r.redMul(u),l=a.redSqr().redIAdd(h).redISub(c).redISub(c),d=a.redMul(c.redISub(l)).redISub(i.redMul(h)),f=this.z.redMul(o);return this.curve.jpoint(l,d,f)},c.prototype.dblp=function(t){if(0===t)return this;if(this.isInfinity())return this;if(!t)return this.dbl();var e;if(this.curve.zeroA||this.curve.threeA){var r=this;for(e=0;e<t;e++)r=r.dbl();return r}var n=this.curve.a,i=this.curve.tinv,s=this.x,o=this.y,a=this.z,u=a.redSqr().redSqr(),h=o.redAdd(o);for(e=0;e<t;e++){var c=s.redSqr(),l=h.redSqr(),d=l.redSqr(),f=c.redAdd(c).redIAdd(c).redIAdd(n.redMul(u)),p=s.redMul(l),m=f.redSqr().redISub(p.redAdd(p)),y=p.redISub(m),v=f.redMul(y);v=v.redIAdd(v).redISub(d);var g=h.redMul(a);e+1<t&&(u=u.redMul(d)),s=m,a=g,h=v}return this.curve.jpoint(s,h.redMul(i),a)},c.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},c.prototype._zeroDbl=function(){var t,e,r;if(this.zOne){var n=this.x.redSqr(),i=this.y.redSqr(),s=i.redSqr(),o=this.x.redAdd(i).redSqr().redISub(n).redISub(s);o=o.redIAdd(o);var a=n.redAdd(n).redIAdd(n),u=a.redSqr().redISub(o).redISub(o),h=s.redIAdd(s);h=(h=h.redIAdd(h)).redIAdd(h),t=u,e=a.redMul(o.redISub(u)).redISub(h),r=this.y.redAdd(this.y)}else{var c=this.x.redSqr(),l=this.y.redSqr(),d=l.redSqr(),f=this.x.redAdd(l).redSqr().redISub(c).redISub(d);f=f.redIAdd(f);var p=c.redAdd(c).redIAdd(c),m=p.redSqr(),y=d.redIAdd(d);y=(y=y.redIAdd(y)).redIAdd(y),t=m.redISub(f).redISub(f),e=p.redMul(f.redISub(t)).redISub(y),r=(r=this.y.redMul(this.z)).redIAdd(r)}return this.curve.jpoint(t,e,r)},c.prototype._threeDbl=function(){var t,e,r;if(this.zOne){var n=this.x.redSqr(),i=this.y.redSqr(),s=i.redSqr(),o=this.x.redAdd(i).redSqr().redISub(n).redISub(s);o=o.redIAdd(o);var a=n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),u=a.redSqr().redISub(o).redISub(o);t=u;var h=s.redIAdd(s);h=(h=h.redIAdd(h)).redIAdd(h),e=a.redMul(o.redISub(u)).redISub(h),r=this.y.redAdd(this.y)}else{var c=this.z.redSqr(),l=this.y.redSqr(),d=this.x.redMul(l),f=this.x.redSub(c).redMul(this.x.redAdd(c));f=f.redAdd(f).redIAdd(f);var p=d.redIAdd(d),m=(p=p.redIAdd(p)).redAdd(p);t=f.redSqr().redISub(m),r=this.y.redAdd(this.z).redSqr().redISub(l).redISub(c);var y=l.redSqr();y=(y=(y=y.redIAdd(y)).redIAdd(y)).redIAdd(y),e=f.redMul(p.redISub(t)).redISub(y)}return this.curve.jpoint(t,e,r)},c.prototype._dbl=function(){var t=this.curve.a,e=this.x,r=this.y,n=this.z,i=n.redSqr().redSqr(),s=e.redSqr(),o=r.redSqr(),a=s.redAdd(s).redIAdd(s).redIAdd(t.redMul(i)),u=e.redAdd(e),h=(u=u.redIAdd(u)).redMul(o),c=a.redSqr().redISub(h.redAdd(h)),l=h.redISub(c),d=o.redSqr();d=(d=(d=d.redIAdd(d)).redIAdd(d)).redIAdd(d);var f=a.redMul(l).redISub(d),p=r.redAdd(r).redMul(n);return this.curve.jpoint(c,f,p)},c.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var t=this.x.redSqr(),e=this.y.redSqr(),r=this.z.redSqr(),n=e.redSqr(),i=t.redAdd(t).redIAdd(t),s=i.redSqr(),o=this.x.redAdd(e).redSqr().redISub(t).redISub(n),a=(o=(o=(o=o.redIAdd(o)).redAdd(o).redIAdd(o)).redISub(s)).redSqr(),u=n.redIAdd(n);u=(u=(u=u.redIAdd(u)).redIAdd(u)).redIAdd(u);var h=i.redIAdd(o).redSqr().redISub(s).redISub(a).redISub(u),c=e.redMul(h);c=(c=c.redIAdd(c)).redIAdd(c);var l=this.x.redMul(a).redISub(c);l=(l=l.redIAdd(l)).redIAdd(l);var d=this.y.redMul(h.redMul(u.redISub(h)).redISub(o.redMul(a)));d=(d=(d=d.redIAdd(d)).redIAdd(d)).redIAdd(d);var f=this.z.redAdd(o).redSqr().redISub(r).redISub(a);return this.curve.jpoint(l,d,f)},c.prototype.mul=function(t,e){return t=new i(t,e),this.curve._wnafMul(this,t)},c.prototype.eq=function(t){if("affine"===t.type)return this.eq(t.toJ());if(this===t)return!0;var e=this.z.redSqr(),r=t.z.redSqr();if(0!==this.x.redMul(r).redISub(t.x.redMul(e)).cmpn(0))return!1;var n=e.redMul(this.z),i=r.redMul(t.z);return 0===this.y.redMul(i).redISub(t.y.redMul(n)).cmpn(0)},c.prototype.eqXToP=function(t){var e=this.z.redSqr(),r=t.toRed(this.curve.red).redMul(e);if(0===this.x.cmp(r))return!0;for(var n=t.clone(),i=this.curve.redN.redMul(e);;){if(n.iadd(this.curve.n),n.cmp(this.curve.p)>=0)return!1;if(r.redIAdd(i),0===this.x.cmp(r))return!0}},c.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},c.prototype.isInfinity=function(){return 0===this.z.cmpn(0)}},45427:(t,e,r)=>{"use strict";var n,i=e,s=r(33715),o=r(88254),a=r(80953).assert;function u(t){"short"===t.type?this.curve=new o.short(t):"edwards"===t.type?this.curve=new o.edwards(t):this.curve=new o.mont(t),this.g=this.curve.g,this.n=this.curve.n,this.hash=t.hash,a(this.g.validate(),"Invalid curve"),a(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function h(t,e){Object.defineProperty(i,t,{configurable:!0,enumerable:!0,get:function(){var r=new u(e);return Object.defineProperty(i,t,{configurable:!0,enumerable:!0,value:r}),r}})}i.PresetCurve=u,h("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:s.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),h("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:s.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),h("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:s.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),h("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:s.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),h("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:s.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),h("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:s.sha256,gRed:!1,g:["9"]}),h("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:s.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{n=r(91037)}catch(t){n=void 0}h("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:s.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",n]})},57954:(t,e,r)=>{"use strict";var n=r(73785),i=r(2156),s=r(80953),o=r(45427),a=r(29931),u=s.assert,h=r(31251),c=r(90611);function l(t){if(!(this instanceof l))return new l(t);"string"==typeof t&&(u(Object.prototype.hasOwnProperty.call(o,t),"Unknown curve "+t),t=o[t]),t instanceof o.PresetCurve&&(t={curve:t}),this.curve=t.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=t.curve.g,this.g.precompute(t.curve.n.bitLength()+1),this.hash=t.hash||t.curve.hash}t.exports=l,l.prototype.keyPair=function(t){return new h(this,t)},l.prototype.keyFromPrivate=function(t,e){return h.fromPrivate(this,t,e)},l.prototype.keyFromPublic=function(t,e){return h.fromPublic(this,t,e)},l.prototype.genKeyPair=function(t){t||(t={});for(var e=new i({hash:this.hash,pers:t.pers,persEnc:t.persEnc||"utf8",entropy:t.entropy||a(this.hash.hmacStrength),entropyEnc:t.entropy&&t.entropyEnc||"utf8",nonce:this.n.toArray()}),r=this.n.byteLength(),s=this.n.sub(new n(2));;){var o=new n(e.generate(r));if(!(o.cmp(s)>0))return o.iaddn(1),this.keyFromPrivate(o)}},l.prototype._truncateToN=function(t,e){var r=8*t.byteLength()-this.n.bitLength();return r>0&&(t=t.ushrn(r)),!e&&t.cmp(this.n)>=0?t.sub(this.n):t},l.prototype.sign=function(t,e,r,s){"object"==typeof r&&(s=r,r=null),s||(s={}),e=this.keyFromPrivate(e,r),t=this._truncateToN(new n(t,16));for(var o=this.n.byteLength(),a=e.getPrivate().toArray("be",o),u=t.toArray("be",o),h=new i({hash:this.hash,entropy:a,nonce:u,pers:s.pers,persEnc:s.persEnc||"utf8"}),l=this.n.sub(new n(1)),d=0;;d++){var f=s.k?s.k(d):new n(h.generate(this.n.byteLength()));if(!((f=this._truncateToN(f,!0)).cmpn(1)<=0||f.cmp(l)>=0)){var p=this.g.mul(f);if(!p.isInfinity()){var m=p.getX(),y=m.umod(this.n);if(0!==y.cmpn(0)){var v=f.invm(this.n).mul(y.mul(e.getPrivate()).iadd(t));if(0!==(v=v.umod(this.n)).cmpn(0)){var g=(p.getY().isOdd()?1:0)|(0!==m.cmp(y)?2:0);return s.canonical&&v.cmp(this.nh)>0&&(v=this.n.sub(v),g^=1),new c({r:y,s:v,recoveryParam:g})}}}}}},l.prototype.verify=function(t,e,r,i){t=this._truncateToN(new n(t,16)),r=this.keyFromPublic(r,i);var s=(e=new c(e,"hex")).r,o=e.s;if(s.cmpn(1)<0||s.cmp(this.n)>=0)return!1;if(o.cmpn(1)<0||o.cmp(this.n)>=0)return!1;var a,u=o.invm(this.n),h=u.mul(t).umod(this.n),l=u.mul(s).umod(this.n);return this.curve._maxwellTrick?!(a=this.g.jmulAdd(h,r.getPublic(),l)).isInfinity()&&a.eqXToP(s):!(a=this.g.mulAdd(h,r.getPublic(),l)).isInfinity()&&0===a.getX().umod(this.n).cmp(s)},l.prototype.recoverPubKey=function(t,e,r,i){u((3&r)===r,"The recovery param is more than two bits"),e=new c(e,i);var s=this.n,o=new n(t),a=e.r,h=e.s,l=1&r,d=r>>1;if(a.cmp(this.curve.p.umod(this.curve.n))>=0&&d)throw new Error("Unable to find sencond key candinate");a=d?this.curve.pointFromX(a.add(this.curve.n),l):this.curve.pointFromX(a,l);var f=e.r.invm(s),p=s.sub(o).mul(f).umod(s),m=h.mul(f).umod(s);return this.g.mulAdd(p,a,m)},l.prototype.getKeyRecoveryParam=function(t,e,r,n){if(null!==(e=new c(e,n)).recoveryParam)return e.recoveryParam;for(var i=0;i<4;i++){var s;try{s=this.recoverPubKey(t,e,i)}catch(t){continue}if(s.eq(r))return i}throw new Error("Unable to find valid recovery factor")}},31251:(t,e,r)=>{"use strict";var n=r(73785),i=r(80953).assert;function s(t,e){this.ec=t,this.priv=null,this.pub=null,e.priv&&this._importPrivate(e.priv,e.privEnc),e.pub&&this._importPublic(e.pub,e.pubEnc)}t.exports=s,s.fromPublic=function(t,e,r){return e instanceof s?e:new s(t,{pub:e,pubEnc:r})},s.fromPrivate=function(t,e,r){return e instanceof s?e:new s(t,{priv:e,privEnc:r})},s.prototype.validate=function(){var t=this.getPublic();return t.isInfinity()?{result:!1,reason:"Invalid public key"}:t.validate()?t.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},s.prototype.getPublic=function(t,e){return"string"==typeof t&&(e=t,t=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),e?this.pub.encode(e,t):this.pub},s.prototype.getPrivate=function(t){return"hex"===t?this.priv.toString(16,2):this.priv},s.prototype._importPrivate=function(t,e){this.priv=new n(t,e||16),this.priv=this.priv.umod(this.ec.curve.n)},s.prototype._importPublic=function(t,e){if(t.x||t.y)return"mont"===this.ec.curve.type?i(t.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||i(t.x&&t.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(t.x,t.y));this.pub=this.ec.curve.decodePoint(t,e)},s.prototype.derive=function(t){return t.validate()||i(t.validate(),"public point not validated"),t.mul(this.priv).getX()},s.prototype.sign=function(t,e,r){return this.ec.sign(t,this,e,r)},s.prototype.verify=function(t,e){return this.ec.verify(t,e,this)},s.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"}},90611:(t,e,r)=>{"use strict";var n=r(73785),i=r(80953),s=i.assert;function o(t,e){if(t instanceof o)return t;this._importDER(t,e)||(s(t.r&&t.s,"Signature without r or s"),this.r=new n(t.r,16),this.s=new n(t.s,16),void 0===t.recoveryParam?this.recoveryParam=null:this.recoveryParam=t.recoveryParam)}function a(){this.place=0}function u(t,e){var r=t[e.place++];if(!(128&r))return r;var n=15&r;if(0===n||n>4)return!1;for(var i=0,s=0,o=e.place;s<n;s++,o++)i<<=8,i|=t[o],i>>>=0;return!(i<=127)&&(e.place=o,i)}function h(t){for(var e=0,r=t.length-1;!t[e]&&!(128&t[e+1])&&e<r;)e++;return 0===e?t:t.slice(e)}function c(t,e){if(e<128)t.push(e);else{var r=1+(Math.log(e)/Math.LN2>>>3);for(t.push(128|r);--r;)t.push(e>>>(r<<3)&255);t.push(e)}}t.exports=o,o.prototype._importDER=function(t,e){t=i.toArray(t,e);var r=new a;if(48!==t[r.place++])return!1;var s=u(t,r);if(!1===s)return!1;if(s+r.place!==t.length)return!1;if(2!==t[r.place++])return!1;var o=u(t,r);if(!1===o)return!1;var h=t.slice(r.place,o+r.place);if(r.place+=o,2!==t[r.place++])return!1;var c=u(t,r);if(!1===c)return!1;if(t.length!==c+r.place)return!1;var l=t.slice(r.place,c+r.place);if(0===h[0]){if(!(128&h[1]))return!1;h=h.slice(1)}if(0===l[0]){if(!(128&l[1]))return!1;l=l.slice(1)}return this.r=new n(h),this.s=new n(l),this.recoveryParam=null,!0},o.prototype.toDER=function(t){var e=this.r.toArray(),r=this.s.toArray();for(128&e[0]&&(e=[0].concat(e)),128&r[0]&&(r=[0].concat(r)),e=h(e),r=h(r);!(r[0]||128&r[1]);)r=r.slice(1);var n=[2];c(n,e.length),(n=n.concat(e)).push(2),c(n,r.length);var s=n.concat(r),o=[48];return c(o,s.length),o=o.concat(s),i.encode(o,t)}},65980:(t,e,r)=>{"use strict";var n=r(33715),i=r(45427),s=r(80953),o=s.assert,a=s.parseBytes,u=r(79087),h=r(23622);function c(t){if(o("ed25519"===t,"only tested with ed25519 so far"),!(this instanceof c))return new c(t);t=i[t].curve,this.curve=t,this.g=t.g,this.g.precompute(t.n.bitLength()+1),this.pointClass=t.point().constructor,this.encodingLength=Math.ceil(t.n.bitLength()/8),this.hash=n.sha512}t.exports=c,c.prototype.sign=function(t,e){t=a(t);var r=this.keyFromSecret(e),n=this.hashInt(r.messagePrefix(),t),i=this.g.mul(n),s=this.encodePoint(i),o=this.hashInt(s,r.pubBytes(),t).mul(r.priv()),u=n.add(o).umod(this.curve.n);return this.makeSignature({R:i,S:u,Rencoded:s})},c.prototype.verify=function(t,e,r){t=a(t),e=this.makeSignature(e);var n=this.keyFromPublic(r),i=this.hashInt(e.Rencoded(),n.pubBytes(),t),s=this.g.mul(e.S());return e.R().add(n.pub().mul(i)).eq(s)},c.prototype.hashInt=function(){for(var t=this.hash(),e=0;e<arguments.length;e++)t.update(arguments[e]);return s.intFromLE(t.digest()).umod(this.curve.n)},c.prototype.keyFromPublic=function(t){return u.fromPublic(this,t)},c.prototype.keyFromSecret=function(t){return u.fromSecret(this,t)},c.prototype.makeSignature=function(t){return t instanceof h?t:new h(this,t)},c.prototype.encodePoint=function(t){var e=t.getY().toArray("le",this.encodingLength);return e[this.encodingLength-1]|=t.getX().isOdd()?128:0,e},c.prototype.decodePoint=function(t){var e=(t=s.parseBytes(t)).length-1,r=t.slice(0,e).concat(-129&t[e]),n=0!=(128&t[e]),i=s.intFromLE(r);return this.curve.pointFromY(i,n)},c.prototype.encodeInt=function(t){return t.toArray("le",this.encodingLength)},c.prototype.decodeInt=function(t){return s.intFromLE(t)},c.prototype.isPoint=function(t){return t instanceof this.pointClass}},79087:(t,e,r)=>{"use strict";var n=r(80953),i=n.assert,s=n.parseBytes,o=n.cachedProperty;function a(t,e){this.eddsa=t,this._secret=s(e.secret),t.isPoint(e.pub)?this._pub=e.pub:this._pubBytes=s(e.pub)}a.fromPublic=function(t,e){return e instanceof a?e:new a(t,{pub:e})},a.fromSecret=function(t,e){return e instanceof a?e:new a(t,{secret:e})},a.prototype.secret=function(){return this._secret},o(a,"pubBytes",(function(){return this.eddsa.encodePoint(this.pub())})),o(a,"pub",(function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())})),o(a,"privBytes",(function(){var t=this.eddsa,e=this.hash(),r=t.encodingLength-1,n=e.slice(0,t.encodingLength);return n[0]&=248,n[r]&=127,n[r]|=64,n})),o(a,"priv",(function(){return this.eddsa.decodeInt(this.privBytes())})),o(a,"hash",(function(){return this.eddsa.hash().update(this.secret()).digest()})),o(a,"messagePrefix",(function(){return this.hash().slice(this.eddsa.encodingLength)})),a.prototype.sign=function(t){return i(this._secret,"KeyPair can only verify"),this.eddsa.sign(t,this)},a.prototype.verify=function(t,e){return this.eddsa.verify(t,e,this)},a.prototype.getSecret=function(t){return i(this._secret,"KeyPair is public only"),n.encode(this.secret(),t)},a.prototype.getPublic=function(t){return n.encode(this.pubBytes(),t)},t.exports=a},23622:(t,e,r)=>{"use strict";var n=r(73785),i=r(80953),s=i.assert,o=i.cachedProperty,a=i.parseBytes;function u(t,e){this.eddsa=t,"object"!=typeof e&&(e=a(e)),Array.isArray(e)&&(e={R:e.slice(0,t.encodingLength),S:e.slice(t.encodingLength)}),s(e.R&&e.S,"Signature without R or S"),t.isPoint(e.R)&&(this._R=e.R),e.S instanceof n&&(this._S=e.S),this._Rencoded=Array.isArray(e.R)?e.R:e.Rencoded,this._Sencoded=Array.isArray(e.S)?e.S:e.Sencoded}o(u,"S",(function(){return this.eddsa.decodeInt(this.Sencoded())})),o(u,"R",(function(){return this.eddsa.decodePoint(this.Rencoded())})),o(u,"Rencoded",(function(){return this.eddsa.encodePoint(this.R())})),o(u,"Sencoded",(function(){return this.eddsa.encodeInt(this.S())})),u.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},u.prototype.toHex=function(){return i.encode(this.toBytes(),"hex").toUpperCase()},t.exports=u},91037:t=>{t.exports={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}}},80953:(t,e,r)=>{"use strict";var n=e,i=r(73785),s=r(79746),o=r(34504);n.assert=s,n.toArray=o.toArray,n.zero2=o.zero2,n.toHex=o.toHex,n.encode=o.encode,n.getNAF=function(t,e,r){var n=new Array(Math.max(t.bitLength(),r)+1);n.fill(0);for(var i=1<<e+1,s=t.clone(),o=0;o<n.length;o++){var a,u=s.andln(i-1);s.isOdd()?(a=u>(i>>1)-1?(i>>1)-u:u,s.isubn(a)):a=0,n[o]=a,s.iushrn(1)}return n},n.getJSF=function(t,e){var r=[[],[]];t=t.clone(),e=e.clone();for(var n,i=0,s=0;t.cmpn(-i)>0||e.cmpn(-s)>0;){var o,a,u=t.andln(3)+i&3,h=e.andln(3)+s&3;3===u&&(u=-1),3===h&&(h=-1),o=0==(1&u)?0:3!==(n=t.andln(7)+i&7)&&5!==n||2!==h?u:-u,r[0].push(o),a=0==(1&h)?0:3!==(n=e.andln(7)+s&7)&&5!==n||2!==u?h:-h,r[1].push(a),2*i===o+1&&(i=1-i),2*s===a+1&&(s=1-s),t.iushrn(1),e.iushrn(1)}return r},n.cachedProperty=function(t,e,r){var n="_"+e;t.prototype[e]=function(){return void 0!==this[n]?this[n]:this[n]=r.call(this)}},n.parseBytes=function(t){return"string"==typeof t?n.toArray(t,"hex"):t},n.intFromLE=function(t){return new i(t,"hex","le")}},73785:function(t,e,r){!function(t,e){"use strict";function n(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(85568).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(t,e,r){var n=a(t,r);return r-1>=e&&(n|=a(t,r-1)<<4),n}function h(t,e,r,n){for(var i=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<t.length&&(16===e?this._parseHex(t,i,r):(this._parseBase(t,e,i),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var s,o,a=0;if("be"===r)for(i=t.length-1,s=0;i>=0;i-=3)o=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(i=0,s=0;i<t.length;i+=3)o=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,s=0,o=0;if("be"===r)for(n=t.length-1;n>=e;n-=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;else for(n=(t.length-e)%2==0?e+1:e;n<t.length;n+=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var s=t.length-r,o=s%n,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=n)u=h(t,c,c+n,e),this.imuln(i),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],s=0|e.words[0],o=i*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(i=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var i=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<i|s)).toString(16);r=0!==(s=a>>>24-i&16777215)||o!==this.length-1?c[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],f=d[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?m+r:c[h-m.length]+m+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return n(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var i=this.byteLength(),s=r||Math.max(1,i);n(i<=s,"byte array longer than desired length"),n(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-i;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){n("number"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},s.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,s=0;s<n.length;s++)e=(0|r.words[s])+(0|n.words[s])+i,this.words[s]=67108863&e,i=e>>>26;for(;0!==i&&s<r.length;s++)e=(0|r.words[s])+i,this.words[s]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var s=0,o=0;o<n.length;o++)s=(e=(0|r.words[o])-(0|n.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,r){var n,i,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,m=f>>>13,y=0|o[2],v=8191&y,g=y>>>13,b=0|o[3],w=8191&b,M=b>>>13,k=0|o[4],x=8191&k,P=k>>>13,L=0|o[5],T=8191&L,S=L>>>13,A=0|o[6],D=8191&A,j=A>>>13,H=0|o[7],O=8191&H,z=H>>>13,N=0|o[8],E=8191&N,Y=N>>>13,R=0|o[9],I=8191&R,B=R>>>13,X=0|a[0],V=8191&X,C=X>>>13,W=0|a[1],q=8191&W,Z=W>>>13,F=0|a[2],U=8191&F,G=F>>>13,_=0|a[3],K=8191&_,J=_>>>13,Q=0|a[4],$=8191&Q,tt=Q>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],st=8191&it,ot=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,mt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var yt=(h+(n=Math.imul(l,V))|0)+((8191&(i=(i=Math.imul(l,C))+Math.imul(d,V)|0))<<13)|0;h=((s=Math.imul(d,C))+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(p,V),i=(i=Math.imul(p,C))+Math.imul(m,V)|0,s=Math.imul(m,C);var vt=(h+(n=n+Math.imul(l,q)|0)|0)+((8191&(i=(i=i+Math.imul(l,Z)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,Z)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(v,V),i=(i=Math.imul(v,C))+Math.imul(g,V)|0,s=Math.imul(g,C),n=n+Math.imul(p,q)|0,i=(i=i+Math.imul(p,Z)|0)+Math.imul(m,q)|0,s=s+Math.imul(m,Z)|0;var gt=(h+(n=n+Math.imul(l,U)|0)|0)+((8191&(i=(i=i+Math.imul(l,G)|0)+Math.imul(d,U)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(w,V),i=(i=Math.imul(w,C))+Math.imul(M,V)|0,s=Math.imul(M,C),n=n+Math.imul(v,q)|0,i=(i=i+Math.imul(v,Z)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,Z)|0,n=n+Math.imul(p,U)|0,i=(i=i+Math.imul(p,G)|0)+Math.imul(m,U)|0,s=s+Math.imul(m,G)|0;var bt=(h+(n=n+Math.imul(l,K)|0)|0)+((8191&(i=(i=i+Math.imul(l,J)|0)+Math.imul(d,K)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(x,V),i=(i=Math.imul(x,C))+Math.imul(P,V)|0,s=Math.imul(P,C),n=n+Math.imul(w,q)|0,i=(i=i+Math.imul(w,Z)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,Z)|0,n=n+Math.imul(v,U)|0,i=(i=i+Math.imul(v,G)|0)+Math.imul(g,U)|0,s=s+Math.imul(g,G)|0,n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,J)|0)+Math.imul(m,K)|0,s=s+Math.imul(m,J)|0;var wt=(h+(n=n+Math.imul(l,$)|0)|0)+((8191&(i=(i=i+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(T,V),i=(i=Math.imul(T,C))+Math.imul(S,V)|0,s=Math.imul(S,C),n=n+Math.imul(x,q)|0,i=(i=i+Math.imul(x,Z)|0)+Math.imul(P,q)|0,s=s+Math.imul(P,Z)|0,n=n+Math.imul(w,U)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(M,U)|0,s=s+Math.imul(M,G)|0,n=n+Math.imul(v,K)|0,i=(i=i+Math.imul(v,J)|0)+Math.imul(g,K)|0,s=s+Math.imul(g,J)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,s=s+Math.imul(m,tt)|0;var Mt=(h+(n=n+Math.imul(l,rt)|0)|0)+((8191&(i=(i=i+Math.imul(l,nt)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,nt)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,C))+Math.imul(j,V)|0,s=Math.imul(j,C),n=n+Math.imul(T,q)|0,i=(i=i+Math.imul(T,Z)|0)+Math.imul(S,q)|0,s=s+Math.imul(S,Z)|0,n=n+Math.imul(x,U)|0,i=(i=i+Math.imul(x,G)|0)+Math.imul(P,U)|0,s=s+Math.imul(P,G)|0,n=n+Math.imul(w,K)|0,i=(i=i+Math.imul(w,J)|0)+Math.imul(M,K)|0,s=s+Math.imul(M,J)|0,n=n+Math.imul(v,$)|0,i=(i=i+Math.imul(v,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,s=s+Math.imul(m,nt)|0;var kt=(h+(n=n+Math.imul(l,st)|0)|0)+((8191&(i=(i=i+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(O,V),i=(i=Math.imul(O,C))+Math.imul(z,V)|0,s=Math.imul(z,C),n=n+Math.imul(D,q)|0,i=(i=i+Math.imul(D,Z)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,Z)|0,n=n+Math.imul(T,U)|0,i=(i=i+Math.imul(T,G)|0)+Math.imul(S,U)|0,s=s+Math.imul(S,G)|0,n=n+Math.imul(x,K)|0,i=(i=i+Math.imul(x,J)|0)+Math.imul(P,K)|0,s=s+Math.imul(P,J)|0,n=n+Math.imul(w,$)|0,i=(i=i+Math.imul(w,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,n=n+Math.imul(v,rt)|0,i=(i=i+Math.imul(v,nt)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,nt)|0,n=n+Math.imul(p,st)|0,i=(i=i+Math.imul(p,ot)|0)+Math.imul(m,st)|0,s=s+Math.imul(m,ot)|0;var xt=(h+(n=n+Math.imul(l,ut)|0)|0)+((8191&(i=(i=i+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(E,V),i=(i=Math.imul(E,C))+Math.imul(Y,V)|0,s=Math.imul(Y,C),n=n+Math.imul(O,q)|0,i=(i=i+Math.imul(O,Z)|0)+Math.imul(z,q)|0,s=s+Math.imul(z,Z)|0,n=n+Math.imul(D,U)|0,i=(i=i+Math.imul(D,G)|0)+Math.imul(j,U)|0,s=s+Math.imul(j,G)|0,n=n+Math.imul(T,K)|0,i=(i=i+Math.imul(T,J)|0)+Math.imul(S,K)|0,s=s+Math.imul(S,J)|0,n=n+Math.imul(x,$)|0,i=(i=i+Math.imul(x,tt)|0)+Math.imul(P,$)|0,s=s+Math.imul(P,tt)|0,n=n+Math.imul(w,rt)|0,i=(i=i+Math.imul(w,nt)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,nt)|0,n=n+Math.imul(v,st)|0,i=(i=i+Math.imul(v,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,s=s+Math.imul(m,ht)|0;var Pt=(h+(n=n+Math.imul(l,lt)|0)|0)+((8191&(i=(i=i+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(i>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,n=Math.imul(I,V),i=(i=Math.imul(I,C))+Math.imul(B,V)|0,s=Math.imul(B,C),n=n+Math.imul(E,q)|0,i=(i=i+Math.imul(E,Z)|0)+Math.imul(Y,q)|0,s=s+Math.imul(Y,Z)|0,n=n+Math.imul(O,U)|0,i=(i=i+Math.imul(O,G)|0)+Math.imul(z,U)|0,s=s+Math.imul(z,G)|0,n=n+Math.imul(D,K)|0,i=(i=i+Math.imul(D,J)|0)+Math.imul(j,K)|0,s=s+Math.imul(j,J)|0,n=n+Math.imul(T,$)|0,i=(i=i+Math.imul(T,tt)|0)+Math.imul(S,$)|0,s=s+Math.imul(S,tt)|0,n=n+Math.imul(x,rt)|0,i=(i=i+Math.imul(x,nt)|0)+Math.imul(P,rt)|0,s=s+Math.imul(P,nt)|0,n=n+Math.imul(w,st)|0,i=(i=i+Math.imul(w,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,n=n+Math.imul(v,ut)|0,i=(i=i+Math.imul(v,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0,n=n+Math.imul(p,lt)|0,i=(i=i+Math.imul(p,dt)|0)+Math.imul(m,lt)|0,s=s+Math.imul(m,dt)|0;var Lt=(h+(n=n+Math.imul(l,pt)|0)|0)+((8191&(i=(i=i+Math.imul(l,mt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,mt)|0)+(i>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,n=Math.imul(I,q),i=(i=Math.imul(I,Z))+Math.imul(B,q)|0,s=Math.imul(B,Z),n=n+Math.imul(E,U)|0,i=(i=i+Math.imul(E,G)|0)+Math.imul(Y,U)|0,s=s+Math.imul(Y,G)|0,n=n+Math.imul(O,K)|0,i=(i=i+Math.imul(O,J)|0)+Math.imul(z,K)|0,s=s+Math.imul(z,J)|0,n=n+Math.imul(D,$)|0,i=(i=i+Math.imul(D,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,n=n+Math.imul(T,rt)|0,i=(i=i+Math.imul(T,nt)|0)+Math.imul(S,rt)|0,s=s+Math.imul(S,nt)|0,n=n+Math.imul(x,st)|0,i=(i=i+Math.imul(x,ot)|0)+Math.imul(P,st)|0,s=s+Math.imul(P,ot)|0,n=n+Math.imul(w,ut)|0,i=(i=i+Math.imul(w,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,n=n+Math.imul(v,lt)|0,i=(i=i+Math.imul(v,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var Tt=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((s=s+Math.imul(m,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,n=Math.imul(I,U),i=(i=Math.imul(I,G))+Math.imul(B,U)|0,s=Math.imul(B,G),n=n+Math.imul(E,K)|0,i=(i=i+Math.imul(E,J)|0)+Math.imul(Y,K)|0,s=s+Math.imul(Y,J)|0,n=n+Math.imul(O,$)|0,i=(i=i+Math.imul(O,tt)|0)+Math.imul(z,$)|0,s=s+Math.imul(z,tt)|0,n=n+Math.imul(D,rt)|0,i=(i=i+Math.imul(D,nt)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,nt)|0,n=n+Math.imul(T,st)|0,i=(i=i+Math.imul(T,ot)|0)+Math.imul(S,st)|0,s=s+Math.imul(S,ot)|0,n=n+Math.imul(x,ut)|0,i=(i=i+Math.imul(x,ht)|0)+Math.imul(P,ut)|0,s=s+Math.imul(P,ht)|0,n=n+Math.imul(w,lt)|0,i=(i=i+Math.imul(w,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var St=(h+(n=n+Math.imul(v,pt)|0)|0)+((8191&(i=(i=i+Math.imul(v,mt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(I,K),i=(i=Math.imul(I,J))+Math.imul(B,K)|0,s=Math.imul(B,J),n=n+Math.imul(E,$)|0,i=(i=i+Math.imul(E,tt)|0)+Math.imul(Y,$)|0,s=s+Math.imul(Y,tt)|0,n=n+Math.imul(O,rt)|0,i=(i=i+Math.imul(O,nt)|0)+Math.imul(z,rt)|0,s=s+Math.imul(z,nt)|0,n=n+Math.imul(D,st)|0,i=(i=i+Math.imul(D,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,n=n+Math.imul(T,ut)|0,i=(i=i+Math.imul(T,ht)|0)+Math.imul(S,ut)|0,s=s+Math.imul(S,ht)|0,n=n+Math.imul(x,lt)|0,i=(i=i+Math.imul(x,dt)|0)+Math.imul(P,lt)|0,s=s+Math.imul(P,dt)|0;var At=(h+(n=n+Math.imul(w,pt)|0)|0)+((8191&(i=(i=i+Math.imul(w,mt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,mt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(I,$),i=(i=Math.imul(I,tt))+Math.imul(B,$)|0,s=Math.imul(B,tt),n=n+Math.imul(E,rt)|0,i=(i=i+Math.imul(E,nt)|0)+Math.imul(Y,rt)|0,s=s+Math.imul(Y,nt)|0,n=n+Math.imul(O,st)|0,i=(i=i+Math.imul(O,ot)|0)+Math.imul(z,st)|0,s=s+Math.imul(z,ot)|0,n=n+Math.imul(D,ut)|0,i=(i=i+Math.imul(D,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,n=n+Math.imul(T,lt)|0,i=(i=i+Math.imul(T,dt)|0)+Math.imul(S,lt)|0,s=s+Math.imul(S,dt)|0;var Dt=(h+(n=n+Math.imul(x,pt)|0)|0)+((8191&(i=(i=i+Math.imul(x,mt)|0)+Math.imul(P,pt)|0))<<13)|0;h=((s=s+Math.imul(P,mt)|0)+(i>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,n=Math.imul(I,rt),i=(i=Math.imul(I,nt))+Math.imul(B,rt)|0,s=Math.imul(B,nt),n=n+Math.imul(E,st)|0,i=(i=i+Math.imul(E,ot)|0)+Math.imul(Y,st)|0,s=s+Math.imul(Y,ot)|0,n=n+Math.imul(O,ut)|0,i=(i=i+Math.imul(O,ht)|0)+Math.imul(z,ut)|0,s=s+Math.imul(z,ht)|0,n=n+Math.imul(D,lt)|0,i=(i=i+Math.imul(D,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var jt=(h+(n=n+Math.imul(T,pt)|0)|0)+((8191&(i=(i=i+Math.imul(T,mt)|0)+Math.imul(S,pt)|0))<<13)|0;h=((s=s+Math.imul(S,mt)|0)+(i>>>13)|0)+(jt>>>26)|0,jt&=67108863,n=Math.imul(I,st),i=(i=Math.imul(I,ot))+Math.imul(B,st)|0,s=Math.imul(B,ot),n=n+Math.imul(E,ut)|0,i=(i=i+Math.imul(E,ht)|0)+Math.imul(Y,ut)|0,s=s+Math.imul(Y,ht)|0,n=n+Math.imul(O,lt)|0,i=(i=i+Math.imul(O,dt)|0)+Math.imul(z,lt)|0,s=s+Math.imul(z,dt)|0;var Ht=(h+(n=n+Math.imul(D,pt)|0)|0)+((8191&(i=(i=i+Math.imul(D,mt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,mt)|0)+(i>>>13)|0)+(Ht>>>26)|0,Ht&=67108863,n=Math.imul(I,ut),i=(i=Math.imul(I,ht))+Math.imul(B,ut)|0,s=Math.imul(B,ht),n=n+Math.imul(E,lt)|0,i=(i=i+Math.imul(E,dt)|0)+Math.imul(Y,lt)|0,s=s+Math.imul(Y,dt)|0;var Ot=(h+(n=n+Math.imul(O,pt)|0)|0)+((8191&(i=(i=i+Math.imul(O,mt)|0)+Math.imul(z,pt)|0))<<13)|0;h=((s=s+Math.imul(z,mt)|0)+(i>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,n=Math.imul(I,lt),i=(i=Math.imul(I,dt))+Math.imul(B,lt)|0,s=Math.imul(B,dt);var zt=(h+(n=n+Math.imul(E,pt)|0)|0)+((8191&(i=(i=i+Math.imul(E,mt)|0)+Math.imul(Y,pt)|0))<<13)|0;h=((s=s+Math.imul(Y,mt)|0)+(i>>>13)|0)+(zt>>>26)|0,zt&=67108863;var Nt=(h+(n=Math.imul(I,pt))|0)+((8191&(i=(i=Math.imul(I,mt))+Math.imul(B,pt)|0))<<13)|0;return h=((s=Math.imul(B,mt))+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=yt,u[1]=vt,u[2]=gt,u[3]=bt,u[4]=wt,u[5]=Mt,u[6]=kt,u[7]=xt,u[8]=Pt,u[9]=Lt,u[10]=Tt,u[11]=St,u[12]=At,u[13]=Dt,u[14]=jt,u[15]=Ht,u[16]=Ot,u[17]=zt,u[18]=Nt,0!==h&&(u[19]=h,r.length++),r};function m(t,e,r){return(new y).mulp(t,e,r)}function y(t,e){this.x=t,this.y=e}Math.imul||(p=f),s.prototype.mulTo=function(t,e){var r,n=this.length+t.length;return r=10===this.length&&10===t.length?p(this,t,e):n<63?f(this,t,e):n<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,s=0;s<r.length-1;s++){var o=i;i=0;for(var a=67108863&n,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),i+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,n=o,o=i}return 0!==n?r.words[s]=n:r.length--,r.strip()}(this,t,e):m(this,t,e),r},y.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},y.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},y.prototype.permute=function(t,e,r,n,i,s){for(var o=0;o<s;o++)n[o]=e[t[o]],i[o]=r[t[o]]},y.prototype.transform=function(t,e,r,n,i,s){this.permute(s,t,e,r,n,i);for(var o=1;o<i;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<i;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],m=n[c+f],y=r[c+f+o],v=n[c+f+o],g=l*y-d*v;v=l*v+d*y,y=g,r[c+f]=p+y,n[c+f]=m+v,r[c+f+o]=p-y,n[c+f+o]=m-v,f!==a&&(g=u*l-h*d,d=u*d+h*l,l=g)}},y.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},y.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},y.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},y.prototype.convert13b=function(t,e,r,i){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<i;++o)r[o]=0;n(0===s),n(0==(-8192&s))},y.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},y.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),s=this.stub(n),o=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),c=new Array(n),l=new Array(n),d=r.words;d.length=n,this.convert13b(t.words,t.length,o,n),this.convert13b(e.words,e.length,h,n),this.transform(o,s,a,u,n,i),this.transform(h,s,c,l,n,i);for(var f=0;f<n;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,n),this.transform(a,u,d,s,n,i),this.conjugate(d,s,n),this.normalize13b(d,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),m(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var e=0,r=0;r<this.length;r++){var i=(0|this.words[r])*t,s=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=(t.words[n]&1<<i)>>>i}return e}(t);if(0===e.length)return new s(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},s.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},s.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var i;n("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(i-=o,i=Math.max(0,i),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=i);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r)&&!!(this.words[r]&i)},s.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var i,s,o=t.length+r;this._expand(o);var a=0;for(i=0;i<t.length;i++){s=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&s}for(;i<this.length-r;i++)a=(s=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&s;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(s=-(0|this.words[i])+a)>>26,this.words[i]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,o=0|i.words[i.length-1];0!==(r=26-this._countBits(o))&&(i=i.ushln(r),n.iushln(r),o=0|i.words[i.length-1]);var a,u=n.length-i.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=n.clone()._ishlnsubmul(i,1,u);0===c.negative&&(n=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|n.words[i.length+l])+(0|n.words[i.length+l-1]);for(d=Math.min(d/o|0,67108863),n._ishlnsubmul(i,d,l);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(i,1,l),n.isZero()||(n.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),n.strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},s.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(i=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:i,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var i,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),s=r.cmp(n);return s<0||1===i&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){n(t<=67108863);for(var e=(1<<26)%t,r=0,i=this.length-1;i>=0;i--)r=(e*r+(0|this.words[i]))%t;return r},s.prototype.idivn=function(t){n(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*e;this.words[r]=i/t|0,e=i%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(c),o.isub(l)),i.iushrn(1),o.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),o.isub(u)):(r.isub(e),a.isub(i),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(i=0===e.cmpn(1)?o:a).cmpn(0)<0&&i.iadd(t),i},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var s=e;e=r,r=s}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){n("number"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var s=i,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new x(t)},s.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function g(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){g.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){g.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function M(){g.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function k(){g.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function x(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function P(t){x.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}g.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},g.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},g.prototype.split=function(t,e){t.iushrn(this.n,0,e)},g.prototype.imulK=function(t){return t.imul(this.k)},i(b,g),b.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,i=10;i<t.length;i++){var o=0|t.words[i];t.words[i-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[i-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(w,g),i(M,g),i(k,g),k.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(v[t])return v[t];var e;if("k256"===t)e=new b;else if("p224"===t)e=new w;else if("p192"===t)e=new M;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new k}return v[t]=e,e},x.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},x.prototype._verify2=function(t,e){n(0==(t.negative|e.negative),"red works only with positives"),n(t.red&&t.red===e.red,"red works only with red numbers")},x.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},x.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},x.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},x.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},x.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},x.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},x.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},x.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},x.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},x.prototype.isqr=function(t){return this.imul(t,t.clone())},x.prototype.sqr=function(t){return this.mul(t,t)},x.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),o=0;!i.isZero()&&0===i.andln(1);)o++,i.iushrn(1);n(!i.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,i),d=this.pow(t,i.addn(1).iushrn(1)),f=this.pow(t,i),p=o;0!==f.cmp(a);){for(var m=f,y=0;0!==m.cmp(a);y++)m=m.redSqr();n(y<p);var v=this.pow(l,new s(1).iushln(p-y-1));d=d.redMul(v),l=v.redSqr(),f=f.redMul(l),p=y}return d},x.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},x.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],c=u-1;c>=0;c--){var l=h>>c&1;i!==r[0]&&(i=this.sqr(i)),0!==l||0!==o?(o<<=1,o|=l,(4===++a||0===n&&0===c)&&(i=this.mul(i,r[o]),a=0,o=0)):a=0}u=26}return i},x.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},x.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new P(t)},i(P,x),P.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},P.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},P.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},P.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},P.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},8091:t=>{"use strict";function e(t,e){if(null==t)throw new TypeError("Cannot convert first argument to object");for(var r=Object(t),n=1;n<arguments.length;n++){var i=arguments[n];if(null!=i)for(var s=Object.keys(Object(i)),o=0,a=s.length;o<a;o++){var u=s[o],h=Object.getOwnPropertyDescriptor(i,u);void 0!==h&&h.enumerable&&(r[u]=i[u])}}return r}t.exports={assign:e,polyfill:function(){Object.assign||Object.defineProperty(Object,"assign",{enumerable:!1,configurable:!0,writable:!0,value:e})}}},46877:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=r(339);function i(t){return"string"==typeof t&&(!!/^(0x)?[0-9a-f]{512}$/i.test(t)&&!(!/^(0x)?[0-9a-f]{512}$/.test(t)&&!/^(0x)?[0-9A-F]{512}$/.test(t)))}function s(t,e){"object"==typeof e&&e.constructor===Uint8Array&&(e=n.bytesToHex(e));const r=n.keccak256(e).replace("0x","");for(let e=0;e<12;e+=4){const n=(parseInt(r.substr(e,2),16)<<8)+parseInt(r.substr(e+2,2),16)&2047,i=1<<n%4;if((o(t.charCodeAt(t.length-1-Math.floor(n/4)))&i)!==i)return!1}return!0}function o(t){if(t>=48&&t<=57)return t-48;if(t>=65&&t<=70)return t-55;if(t>=97&&t<=102)return t-87;throw new Error("invalid bloom")}function a(t){return"string"==typeof t&&(!!/^(0x)?[0-9a-f]{64}$/i.test(t)&&!(!/^(0x)?[0-9a-f]{64}$/.test(t)&&!/^(0x)?[0-9A-F]{64}$/.test(t)))}function u(t){return"string"==typeof t&&(!!t.match(/^(0x)?[0-9a-fA-F]{40}$/)||!!t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/))}e.isBloom=i,e.isInBloom=s,e.isUserEthereumAddressInBloom=function(t,e){if(!i(t))throw new Error("Invalid bloom given");if(!u(e))throw new Error(`Invalid ethereum address given: "${e}"`);return s(t,n.padLeft(e,64))},e.isContractAddressInBloom=function(t,e){if(!i(t))throw new Error("Invalid bloom given");if(!u(e))throw new Error(`Invalid contract address given: "${e}"`);return s(t,e)},e.isTopicInBloom=function(t,e){if(!i(t))throw new Error("Invalid bloom given");if(!a(e))throw new Error("Invalid topic");return s(t,e)},e.isTopic=a,e.isAddress=u},339:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=r(91094);function i(t){if(null==t)throw new Error("cannot convert null value to array");if("string"==typeof t){const e=t.match(/^(0x)?[0-9a-fA-F]*$/);if(!e)throw new Error("invalid hexidecimal string");if("0x"!==e[1])throw new Error("hex string must have 0x prefix");(t=t.substring(2)).length%2&&(t="0"+t);const r=[];for(let e=0;e<t.length;e+=2)r.push(parseInt(t.substr(e,2),16));return s(new Uint8Array(r))}if(function(t){if(!t||parseInt(String(t.length))!=t.length||"string"==typeof t)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(r<0||r>=256||parseInt(String(r))!=r)return!1}return!0}(t))return s(new Uint8Array(t));throw new Error("invalid arrayify value")}function s(t){return void 0!==t.slice||(t.slice=()=>{const e=Array.prototype.slice.call(arguments);return s(new Uint8Array(Array.prototype.slice.apply(t,e)))}),t}e.keccak256=function(t){return"0x"+n.keccak_256(i(t))},e.padLeft=(t,e)=>{const r=/^0x/i.test(t)||"number"==typeof t,n=e-(t=t.toString().replace(/^0x/i,"")).length+1>=0?e-t.length+1:0;return(r?"0x":"")+new Array(n).join("0")+t},e.bytesToHex=function(t){const e=[];for(let r=0;r<t.length;r++)e.push((t[r]>>>4).toString(16)),e.push((15&t[r]).toString(16));return`0x${e.join("").replace(/^0+/,"")}`},e.toByteArray=i},75443:(t,e,r)=>{"use strict";var n=r(23085).Buffer;Object.defineProperty(e,"__esModule",{value:!0}),e.createHashFunction=function(t){return function(e){var r=t();return r.update(e),n.from(r.digest())}}},82192:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=r(75443),i=r(2973);e.keccak224=n.createHashFunction((function(){return i("keccak224")})),e.keccak256=n.createHashFunction((function(){return i("keccak256")})),e.keccak384=n.createHashFunction((function(){return i("keccak384")})),e.keccak512=n.createHashFunction((function(){return i("keccak512")}))},2973:(t,e,r)=>{t.exports=r(71224)(r(66514))},71224:(t,e,r)=>{const n=r(73867),i=r(48425);t.exports=function(t){const e=n(t),r=i(t);return function(t,n){switch("string"==typeof t?t.toLowerCase():t){case"keccak224":return new e(1152,448,null,224,n);case"keccak256":return new e(1088,512,null,256,n);case"keccak384":return new e(832,768,null,384,n);case"keccak512":return new e(576,1024,null,512,n);case"sha3-224":return new e(1152,448,6,224,n);case"sha3-256":return new e(1088,512,6,256,n);case"sha3-384":return new e(832,768,6,384,n);case"sha3-512":return new e(576,1024,6,512,n);case"shake128":return new r(1344,256,31,n);case"shake256":return new r(1088,512,31,n);default:throw new Error("Invald algorithm: "+t)}}}},73867:(t,e,r)=>{var n=r(23085).Buffer;const{Transform:i}=r(88473);t.exports=t=>class e extends i{constructor(e,r,n,i,s){super(s),this._rate=e,this._capacity=r,this._delimitedSuffix=n,this._hashBitLength=i,this._options=s,this._state=new t,this._state.initialize(e,r),this._finalized=!1}_transform(t,e,r){let n=null;try{this.update(t,e)}catch(t){n=t}r(n)}_flush(t){let e=null;try{this.push(this.digest())}catch(t){e=t}t(e)}update(t,e){if(!n.isBuffer(t)&&"string"!=typeof t)throw new TypeError("Data must be a string or a buffer");if(this._finalized)throw new Error("Digest already called");return n.isBuffer(t)||(t=n.from(t,e)),this._state.absorb(t),this}digest(t){if(this._finalized)throw new Error("Digest already called");this._finalized=!0,this._delimitedSuffix&&this._state.absorbLastFewBits(this._delimitedSuffix);let e=this._state.squeeze(this._hashBitLength/8);return void 0!==t&&(e=e.toString(t)),this._resetState(),e}_resetState(){return this._state.initialize(this._rate,this._capacity),this}_clone(){const t=new e(this._rate,this._capacity,this._delimitedSuffix,this._hashBitLength,this._options);return this._state.copy(t._state),t._finalized=this._finalized,t}}},48425:(t,e,r)=>{var n=r(23085).Buffer;const{Transform:i}=r(88473);t.exports=t=>class e extends i{constructor(e,r,n,i){super(i),this._rate=e,this._capacity=r,this._delimitedSuffix=n,this._options=i,this._state=new t,this._state.initialize(e,r),this._finalized=!1}_transform(t,e,r){let n=null;try{this.update(t,e)}catch(t){n=t}r(n)}_flush(){}_read(t){this.push(this.squeeze(t))}update(t,e){if(!n.isBuffer(t)&&"string"!=typeof t)throw new TypeError("Data must be a string or a buffer");if(this._finalized)throw new Error("Squeeze already called");return n.isBuffer(t)||(t=n.from(t,e)),this._state.absorb(t),this}squeeze(t,e){this._finalized||(this._finalized=!0,this._state.absorbLastFewBits(this._delimitedSuffix));let r=this._state.squeeze(t);return void 0!==e&&(r=r.toString(e)),r}_resetState(){return this._state.initialize(this._rate,this._capacity),this}_clone(){const t=new e(this._rate,this._capacity,this._delimitedSuffix,this._options);return this._state.copy(t._state),t._finalized=this._finalized,t}}},29175:(t,e)=>{const r=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648];e.p1600=function(t){for(let e=0;e<24;++e){const n=t[0]^t[10]^t[20]^t[30]^t[40],i=t[1]^t[11]^t[21]^t[31]^t[41],s=t[2]^t[12]^t[22]^t[32]^t[42],o=t[3]^t[13]^t[23]^t[33]^t[43],a=t[4]^t[14]^t[24]^t[34]^t[44],u=t[5]^t[15]^t[25]^t[35]^t[45],h=t[6]^t[16]^t[26]^t[36]^t[46],c=t[7]^t[17]^t[27]^t[37]^t[47],l=t[8]^t[18]^t[28]^t[38]^t[48],d=t[9]^t[19]^t[29]^t[39]^t[49];let f=l^(s<<1|o>>>31),p=d^(o<<1|s>>>31);const m=t[0]^f,y=t[1]^p,v=t[10]^f,g=t[11]^p,b=t[20]^f,w=t[21]^p,M=t[30]^f,k=t[31]^p,x=t[40]^f,P=t[41]^p;f=n^(a<<1|u>>>31),p=i^(u<<1|a>>>31);const L=t[2]^f,T=t[3]^p,S=t[12]^f,A=t[13]^p,D=t[22]^f,j=t[23]^p,H=t[32]^f,O=t[33]^p,z=t[42]^f,N=t[43]^p;f=s^(h<<1|c>>>31),p=o^(c<<1|h>>>31);const E=t[4]^f,Y=t[5]^p,R=t[14]^f,I=t[15]^p,B=t[24]^f,X=t[25]^p,V=t[34]^f,C=t[35]^p,W=t[44]^f,q=t[45]^p;f=a^(l<<1|d>>>31),p=u^(d<<1|l>>>31);const Z=t[6]^f,F=t[7]^p,U=t[16]^f,G=t[17]^p,_=t[26]^f,K=t[27]^p,J=t[36]^f,Q=t[37]^p,$=t[46]^f,tt=t[47]^p;f=h^(n<<1|i>>>31),p=c^(i<<1|n>>>31);const et=t[8]^f,rt=t[9]^p,nt=t[18]^f,it=t[19]^p,st=t[28]^f,ot=t[29]^p,at=t[38]^f,ut=t[39]^p,ht=t[48]^f,ct=t[49]^p,lt=m,dt=y,ft=g<<4|v>>>28,pt=v<<4|g>>>28,mt=b<<3|w>>>29,yt=w<<3|b>>>29,vt=k<<9|M>>>23,gt=M<<9|k>>>23,bt=x<<18|P>>>14,wt=P<<18|x>>>14,Mt=L<<1|T>>>31,kt=T<<1|L>>>31,xt=A<<12|S>>>20,Pt=S<<12|A>>>20,Lt=D<<10|j>>>22,Tt=j<<10|D>>>22,St=O<<13|H>>>19,At=H<<13|O>>>19,Dt=z<<2|N>>>30,jt=N<<2|z>>>30,Ht=Y<<30|E>>>2,Ot=E<<30|Y>>>2,zt=R<<6|I>>>26,Nt=I<<6|R>>>26,Et=X<<11|B>>>21,Yt=B<<11|X>>>21,Rt=V<<15|C>>>17,It=C<<15|V>>>17,Bt=q<<29|W>>>3,Xt=W<<29|q>>>3,Vt=Z<<28|F>>>4,Ct=F<<28|Z>>>4,Wt=G<<23|U>>>9,qt=U<<23|G>>>9,Zt=_<<25|K>>>7,Ft=K<<25|_>>>7,Ut=J<<21|Q>>>11,Gt=Q<<21|J>>>11,_t=tt<<24|$>>>8,Kt=$<<24|tt>>>8,Jt=et<<27|rt>>>5,Qt=rt<<27|et>>>5,$t=nt<<20|it>>>12,te=it<<20|nt>>>12,ee=ot<<7|st>>>25,re=st<<7|ot>>>25,ne=at<<8|ut>>>24,ie=ut<<8|at>>>24,se=ht<<14|ct>>>18,oe=ct<<14|ht>>>18;t[0]=lt^~xt&Et,t[1]=dt^~Pt&Yt,t[10]=Vt^~$t&mt,t[11]=Ct^~te&yt,t[20]=Mt^~zt&Zt,t[21]=kt^~Nt&Ft,t[30]=Jt^~ft&Lt,t[31]=Qt^~pt&Tt,t[40]=Ht^~Wt&ee,t[41]=Ot^~qt&re,t[2]=xt^~Et&Ut,t[3]=Pt^~Yt&Gt,t[12]=$t^~mt&St,t[13]=te^~yt&At,t[22]=zt^~Zt&ne,t[23]=Nt^~Ft&ie,t[32]=ft^~Lt&Rt,t[33]=pt^~Tt&It,t[42]=Wt^~ee&vt,t[43]=qt^~re&gt,t[4]=Et^~Ut&se,t[5]=Yt^~Gt&oe,t[14]=mt^~St&Bt,t[15]=yt^~At&Xt,t[24]=Zt^~ne&bt,t[25]=Ft^~ie&wt,t[34]=Lt^~Rt&_t,t[35]=Tt^~It&Kt,t[44]=ee^~vt&Dt,t[45]=re^~gt&jt,t[6]=Ut^~se&lt,t[7]=Gt^~oe&dt,t[16]=St^~Bt&Vt,t[17]=At^~Xt&Ct,t[26]=ne^~bt&Mt,t[27]=ie^~wt&kt,t[36]=Rt^~_t&Jt,t[37]=It^~Kt&Qt,t[46]=vt^~Dt&Ht,t[47]=gt^~jt&Ot,t[8]=se^~lt&xt,t[9]=oe^~dt&Pt,t[18]=Bt^~Vt&$t,t[19]=Xt^~Ct&te,t[28]=bt^~Mt&zt,t[29]=wt^~kt&Nt,t[38]=_t^~Jt&ft,t[39]=Kt^~Qt&pt,t[48]=Dt^~Ht&Wt,t[49]=jt^~Ot&qt,t[0]^=r[2*e],t[1]^=r[2*e+1]}}},66514:(t,e,r)=>{var n=r(23085).Buffer;const i=r(29175);function s(){this.state=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this.blockSize=null,this.count=0,this.squeezing=!1}s.prototype.initialize=function(t,e){for(let t=0;t<50;++t)this.state[t]=0;this.blockSize=t/8,this.count=0,this.squeezing=!1},s.prototype.absorb=function(t){for(let e=0;e<t.length;++e)this.state[~~(this.count/4)]^=t[e]<<this.count%4*8,this.count+=1,this.count===this.blockSize&&(i.p1600(this.state),this.count=0)},s.prototype.absorbLastFewBits=function(t){this.state[~~(this.count/4)]^=t<<this.count%4*8,0!=(128&t)&&this.count===this.blockSize-1&&i.p1600(this.state),this.state[~~((this.blockSize-1)/4)]^=128<<(this.blockSize-1)%4*8,i.p1600(this.state),this.count=0,this.squeezing=!0},s.prototype.squeeze=function(t){this.squeezing||this.absorbLastFewBits(1);const e=n.alloc(t);for(let r=0;r<t;++r)e[r]=this.state[~~(this.count/4)]>>>this.count%4*8&255,this.count+=1,this.count===this.blockSize&&(i.p1600(this.state),this.count=0);return e},s.prototype.copy=function(t){for(let e=0;e<50;++e)t.state[e]=this.state[e];t.blockSize=this.blockSize,t.count=this.count,t.squeezing=this.squeezing},t.exports=s},90472:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=r(61798);e.getRandomBytes=function(t){return new Promise((function(e,r){n(t,(function(t,n){t?r(t):e(n)}))}))},e.getRandomBytesSync=function(t){return n(t)}},95053:function(t,e,r){"use strict";var n=this&&this.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,s){function o(t){try{u(n.next(t))}catch(t){s(t)}}function a(t){try{u(n.throw(t))}catch(t){s(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(o,a)}u((n=n.apply(t,e||[])).next())}))},i=this&&this.__generator||function(t,e){var r,n,i,s,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(s){return function(a){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(i=2&s[0]?n.return:s[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,s[1])).done)return i;switch(n=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(i=o.trys,(i=i.length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){o.label=s[1];break}if(6===s[0]&&o.label<i[1]){o.label=i[1],i=s;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(s);break}i[2]&&o.ops.pop(),o.trys.pop();continue}s=e.call(t,o)}catch(t){s=[6,t],n=0}finally{r=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,a])}}};Object.defineProperty(e,"__esModule",{value:!0});var s=r(17221),o=r(90472);e.createPrivateKey=function(){return n(this,void 0,void 0,(function(){var t;return i(this,(function(e){switch(e.label){case 0:return[4,o.getRandomBytes(32)];case 1:return t=e.sent(),s.privateKeyVerify(t)?[2,t]:[3,0];case 2:return[2]}}))}))},e.createPrivateKeySync=function(){for(;;){var t=o.getRandomBytesSync(32);if(s.privateKeyVerify(t))return t}},function(t){for(var r in t)e.hasOwnProperty(r)||(e[r]=t[r])}(r(17221))},48670:function(t,e,r){"use strict";var n=r(23085).Buffer,i=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r),Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[r]}})}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),s=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),o=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)"default"!==r&&Object.prototype.hasOwnProperty.call(t,r)&&i(e,t,r);return s(e,t),e},a=this&&this.__read||function(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var n,i,s=r.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(n=s.next()).done;)o.push(n.value)}catch(t){i={error:t}}finally{try{n&&!n.done&&(r=s.return)&&r.call(s)}finally{if(i)throw i.error}}return o},u=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.isZeroAddress=e.zeroAddress=e.importPublic=e.privateToAddress=e.privateToPublic=e.publicToAddress=e.pubToAddress=e.isValidPublic=e.isValidPrivate=e.generateAddress2=e.generateAddress=e.isValidChecksumAddress=e.toChecksumAddress=e.isValidAddress=e.Account=void 0;var h=u(r(69282)),c=u(r(13550)),l=o(r(51675)),d=r(95053),f=r(80884),p=r(56861),m=r(14651),y=r(45641),v=r(63746),g=r(2971),b=function(){function t(t,e,r,n){void 0===t&&(t=new c.default(0)),void 0===e&&(e=new c.default(0)),void 0===r&&(r=p.KECCAK256_RLP),void 0===n&&(n=p.KECCAK256_NULL),this.nonce=t,this.balance=e,this.stateRoot=r,this.codeHash=n,this._validate()}return t.fromAccountData=function(e){var r=e.nonce,n=e.balance,i=e.stateRoot,s=e.codeHash;return new t(r?new c.default((0,m.toBuffer)(r)):void 0,n?new c.default((0,m.toBuffer)(n)):void 0,i?(0,m.toBuffer)(i):void 0,s?(0,m.toBuffer)(s):void 0)},t.fromRlpSerializedAccount=function(t){var e=l.decode(t);if(!Array.isArray(e))throw new Error("Invalid serialized account input. Must be array");return this.fromValuesArray(e)},t.fromValuesArray=function(e){var r=a(e,4),n=r[0],i=r[1],s=r[2],o=r[3];return new t(new c.default(n),new c.default(i),s,o)},t.prototype._validate=function(){if(this.nonce.lt(new c.default(0)))throw new Error("nonce must be greater than zero");if(this.balance.lt(new c.default(0)))throw new Error("balance must be greater than zero");if(32!==this.stateRoot.length)throw new Error("stateRoot must have a length of 32");if(32!==this.codeHash.length)throw new Error("codeHash must have a length of 32")},t.prototype.raw=function(){return[(0,g.bnToUnpaddedBuffer)(this.nonce),(0,g.bnToUnpaddedBuffer)(this.balance),this.stateRoot,this.codeHash]},t.prototype.serialize=function(){return l.encode(this.raw())},t.prototype.isContract=function(){return!this.codeHash.equals(p.KECCAK256_NULL)},t.prototype.isEmpty=function(){return this.balance.isZero()&&this.nonce.isZero()&&this.codeHash.equals(p.KECCAK256_NULL)},t}();e.Account=b;e.isValidAddress=function(t){try{(0,v.assertIsString)(t)}catch(t){return!1}return/^0x[0-9a-fA-F]{40}$/.test(t)};e.toChecksumAddress=function(t,e){(0,v.assertIsHexString)(t);var r=(0,f.stripHexPrefix)(t).toLowerCase(),n="";e&&(n=(0,g.toType)(e,g.TypeOutput.BN).toString()+"0x");for(var i=(0,y.keccakFromString)(n+r).toString("hex"),s="0x",o=0;o<r.length;o++)parseInt(i[o],16)>=8?s+=r[o].toUpperCase():s+=r[o];return s};e.isValidChecksumAddress=function(t,r){return(0,e.isValidAddress)(t)&&(0,e.toChecksumAddress)(t,r)===t};e.generateAddress=function(t,e){(0,v.assertIsBuffer)(t),(0,v.assertIsBuffer)(e);var r=new c.default(e);return r.isZero()?(0,y.rlphash)([t,null]).slice(-20):(0,y.rlphash)([t,n.from(r.toArray())]).slice(-20)};e.generateAddress2=function(t,e,r){return(0,v.assertIsBuffer)(t),(0,v.assertIsBuffer)(e),(0,v.assertIsBuffer)(r),(0,h.default)(20===t.length),(0,h.default)(32===e.length),(0,y.keccak256)(n.concat([n.from("ff","hex"),t,e,(0,y.keccak256)(r)])).slice(-20)};e.isValidPrivate=function(t){return(0,d.privateKeyVerify)(t)};e.isValidPublic=function(t,e){return void 0===e&&(e=!1),(0,v.assertIsBuffer)(t),64===t.length?(0,d.publicKeyVerify)(n.concat([n.from([4]),t])):!!e&&(0,d.publicKeyVerify)(t)};e.pubToAddress=function(t,e){return void 0===e&&(e=!1),(0,v.assertIsBuffer)(t),e&&64!==t.length&&(t=n.from((0,d.publicKeyConvert)(t,!1).slice(1))),(0,h.default)(64===t.length),(0,y.keccak)(t).slice(-20)},e.publicToAddress=e.pubToAddress;e.privateToPublic=function(t){return(0,v.assertIsBuffer)(t),n.from((0,d.publicKeyCreate)(t,!1)).slice(1)};e.privateToAddress=function(t){return(0,e.publicToAddress)((0,e.privateToPublic)(t))};e.importPublic=function(t){return(0,v.assertIsBuffer)(t),64!==t.length&&(t=n.from((0,d.publicKeyConvert)(t,!1).slice(1))),t};e.zeroAddress=function(){var t=(0,m.zeros)(20);return(0,m.bufferToHex)(t)};e.isZeroAddress=function(t){try{(0,v.assertIsString)(t)}catch(t){return!1}return(0,e.zeroAddress)()===t}},6871:function(t,e,r){"use strict";var n=r(23085).Buffer,i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.Address=void 0;var s=i(r(69282)),o=i(r(13550)),a=r(14651),u=r(48670),h=function(){function t(t){(0,s.default)(20===t.length,"Invalid address length"),this.buf=t}return t.zero=function(){return new t((0,a.zeros)(20))},t.fromString=function(e){return(0,s.default)((0,u.isValidAddress)(e),"Invalid address"),new t((0,a.toBuffer)(e))},t.fromPublicKey=function(e){return(0,s.default)(n.isBuffer(e),"Public key should be Buffer"),new t((0,u.pubToAddress)(e))},t.fromPrivateKey=function(e){return(0,s.default)(n.isBuffer(e),"Private key should be Buffer"),new t((0,u.privateToAddress)(e))},t.generate=function(e,r){return(0,s.default)(o.default.isBN(r)),new t((0,u.generateAddress)(e.buf,r.toArrayLike(n)))},t.generate2=function(e,r,i){return(0,s.default)(n.isBuffer(r)),(0,s.default)(n.isBuffer(i)),new t((0,u.generateAddress2)(e.buf,r,i))},t.prototype.equals=function(t){return this.buf.equals(t.buf)},t.prototype.isZero=function(){return this.equals(t.zero())},t.prototype.isPrecompileOrSystemAddress=function(){var t=new o.default(this.buf),e=new o.default(0),r=new o.default("ffff","hex");return t.gte(e)&&t.lte(r)},t.prototype.toString=function(){return"0x"+this.buf.toString("hex")},t.prototype.toBuffer=function(){return n.from(this.buf)},t}();e.Address=h},14651:function(t,e,r){"use strict";var n=r(23085).Buffer,i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.baToJSON=e.addHexPrefix=e.toUnsigned=e.fromSigned=e.bufferToHex=e.bufferToInt=e.toBuffer=e.unpadHexString=e.unpadArray=e.unpadBuffer=e.setLengthRight=e.setLengthLeft=e.zeros=e.intToBuffer=e.intToHex=void 0;var s=i(r(13550)),o=r(80884),a=r(63746);e.intToHex=function(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("Received an invalid integer type: "+t);return"0x"+t.toString(16)};e.intToBuffer=function(t){var r=(0,e.intToHex)(t);return n.from((0,o.padToEven)(r.slice(2)),"hex")};e.zeros=function(t){return n.allocUnsafe(t).fill(0)};var u=function(t,r,n){var i=(0,e.zeros)(r);return n?t.length<r?(t.copy(i),i):t.slice(0,r):t.length<r?(t.copy(i,r-t.length),i):t.slice(-r)};e.setLengthLeft=function(t,e){return(0,a.assertIsBuffer)(t),u(t,e,!1)};e.setLengthRight=function(t,e){return(0,a.assertIsBuffer)(t),u(t,e,!0)};var h=function(t){for(var e=t[0];t.length>0&&"0"===e.toString();)e=(t=t.slice(1))[0];return t};e.unpadBuffer=function(t){return(0,a.assertIsBuffer)(t),h(t)};e.unpadArray=function(t){return(0,a.assertIsArray)(t),h(t)};e.unpadHexString=function(t){return(0,a.assertIsHexString)(t),t=(0,o.stripHexPrefix)(t),h(t)};e.toBuffer=function(t){if(null==t)return n.allocUnsafe(0);if(n.isBuffer(t))return n.from(t);if(Array.isArray(t)||t instanceof Uint8Array)return n.from(t);if("string"==typeof t){if(!(0,o.isHexString)(t))throw new Error("Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: "+t);return n.from((0,o.padToEven)((0,o.stripHexPrefix)(t)),"hex")}if("number"==typeof t)return(0,e.intToBuffer)(t);if(s.default.isBN(t))return t.toArrayLike(n);if(t.toArray)return n.from(t.toArray());if(t.toBuffer)return n.from(t.toBuffer());throw new Error("invalid type")};e.bufferToInt=function(t){return new s.default((0,e.toBuffer)(t)).toNumber()};e.bufferToHex=function(t){return"0x"+(t=(0,e.toBuffer)(t)).toString("hex")};e.fromSigned=function(t){return new s.default(t).fromTwos(256)};e.toUnsigned=function(t){return n.from(t.toTwos(256).toArray())};e.addHexPrefix=function(t){return"string"!=typeof t||(0,o.isHexPrefixed)(t)?t:"0x"+t};e.baToJSON=function(t){if(n.isBuffer(t))return"0x"+t.toString("hex");if(t instanceof Array){for(var r=[],i=0;i<t.length;i++)r.push((0,e.baToJSON)(t[i]));return r}}},56861:function(t,e,r){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.KECCAK256_RLP=e.KECCAK256_RLP_S=e.KECCAK256_RLP_ARRAY=e.KECCAK256_RLP_ARRAY_S=e.KECCAK256_NULL=e.KECCAK256_NULL_S=e.TWO_POW256=e.MAX_INTEGER=void 0;var i=r(48764).Buffer,s=n(r(13550));e.MAX_INTEGER=new s.default("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",16),e.TWO_POW256=new s.default("10000000000000000000000000000000000000000000000000000000000000000",16),e.KECCAK256_NULL_S="c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",e.KECCAK256_NULL=i.from(e.KECCAK256_NULL_S,"hex"),e.KECCAK256_RLP_ARRAY_S="1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",e.KECCAK256_RLP_ARRAY=i.from(e.KECCAK256_RLP_ARRAY_S,"hex"),e.KECCAK256_RLP_S="56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",e.KECCAK256_RLP=i.from(e.KECCAK256_RLP_S,"hex")},14538:function(t,e,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r),Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[r]}})}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),i=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),s=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)"default"!==r&&Object.prototype.hasOwnProperty.call(t,r)&&n(e,t,r);return i(e,t),e},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.rlp=e.BN=void 0;var a=o(r(13550));e.BN=a.default;var u=s(r(51675));e.rlp=u},45641:function(t,e,r){"use strict";var n=r(23085).Buffer,i=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r),Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[r]}})}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),s=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),o=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)"default"!==r&&Object.prototype.hasOwnProperty.call(t,r)&&i(e,t,r);return s(e,t),e};Object.defineProperty(e,"__esModule",{value:!0}),e.rlphash=e.ripemd160FromArray=e.ripemd160FromString=e.ripemd160=e.sha256FromArray=e.sha256FromString=e.sha256=e.keccakFromArray=e.keccakFromHexString=e.keccakFromString=e.keccak256=e.keccak=void 0;var a=r(82192),u=r(23482),h=o(r(51675)),c=r(14651),l=r(63746);e.keccak=function(t,e){switch(void 0===e&&(e=256),(0,l.assertIsBuffer)(t),e){case 224:return(0,a.keccak224)(t);case 256:return(0,a.keccak256)(t);case 384:return(0,a.keccak384)(t);case 512:return(0,a.keccak512)(t);default:throw new Error("Invald algorithm: keccak"+e)}};e.keccak256=function(t){return(0,e.keccak)(t)};e.keccakFromString=function(t,r){void 0===r&&(r=256),(0,l.assertIsString)(t);var i=n.from(t,"utf8");return(0,e.keccak)(i,r)};e.keccakFromHexString=function(t,r){return void 0===r&&(r=256),(0,l.assertIsHexString)(t),(0,e.keccak)((0,c.toBuffer)(t),r)};e.keccakFromArray=function(t,r){return void 0===r&&(r=256),(0,l.assertIsArray)(t),(0,e.keccak)((0,c.toBuffer)(t),r)};var d=function(t){return t=(0,c.toBuffer)(t),u("sha256").update(t).digest()};e.sha256=function(t){return(0,l.assertIsBuffer)(t),d(t)};e.sha256FromString=function(t){return(0,l.assertIsString)(t),d(t)};e.sha256FromArray=function(t){return(0,l.assertIsArray)(t),d(t)};var f=function(t,e){t=(0,c.toBuffer)(t);var r=u("rmd160").update(t).digest();return!0===e?(0,c.setLengthLeft)(r,32):r};e.ripemd160=function(t,e){return(0,l.assertIsBuffer)(t),f(t,e)};e.ripemd160FromString=function(t,e){return(0,l.assertIsString)(t),f(t,e)};e.ripemd160FromArray=function(t,e){return(0,l.assertIsArray)(t),f(t,e)};e.rlphash=function(t){return(0,e.keccak)(h.encode(t))}},63746:(t,e,r)=>{"use strict";var n=r(23085).Buffer;Object.defineProperty(e,"__esModule",{value:!0}),e.assertIsString=e.assertIsArray=e.assertIsBuffer=e.assertIsHexString=void 0;var i=r(80884);e.assertIsHexString=function(t){if(!(0,i.isHexString)(t))throw new Error("This method only supports 0x-prefixed hex strings but input was: "+t)};e.assertIsBuffer=function(t){if(!n.isBuffer(t))throw new Error("This method only supports Buffer but input was: "+t)};e.assertIsArray=function(t){if(!Array.isArray(t))throw new Error("This method only supports number arrays but input was: "+t)};e.assertIsString=function(t){if("string"!=typeof t)throw new Error("This method only supports strings but input was: "+t)}},22751:function(t,e,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r),Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[r]}})}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),i=this&&this.__exportStar||function(t,e){for(var r in t)"default"===r||Object.prototype.hasOwnProperty.call(e,r)||n(e,t,r)};Object.defineProperty(e,"__esModule",{value:!0}),e.isHexString=e.getKeys=e.fromAscii=e.fromUtf8=e.toAscii=e.toUtf8=e.arrayContainsArray=e.getBinarySize=e.padToEven=e.stripHexPrefix=e.isHexPrefixed=void 0,i(r(56861),e),i(r(48670),e),i(r(6871),e),i(r(45641),e),i(r(77112),e),i(r(14651),e),i(r(80867),e),i(r(14538),e),i(r(2971),e);var s=r(80884);Object.defineProperty(e,"isHexPrefixed",{enumerable:!0,get:function(){return s.isHexPrefixed}}),Object.defineProperty(e,"stripHexPrefix",{enumerable:!0,get:function(){return s.stripHexPrefix}}),Object.defineProperty(e,"padToEven",{enumerable:!0,get:function(){return s.padToEven}}),Object.defineProperty(e,"getBinarySize",{enumerable:!0,get:function(){return s.getBinarySize}}),Object.defineProperty(e,"arrayContainsArray",{enumerable:!0,get:function(){return s.arrayContainsArray}}),Object.defineProperty(e,"toUtf8",{enumerable:!0,get:function(){return s.toUtf8}}),Object.defineProperty(e,"toAscii",{enumerable:!0,get:function(){return s.toAscii}}),Object.defineProperty(e,"fromUtf8",{enumerable:!0,get:function(){return s.fromUtf8}}),Object.defineProperty(e,"fromAscii",{enumerable:!0,get:function(){return s.fromAscii}}),Object.defineProperty(e,"getKeys",{enumerable:!0,get:function(){return s.getKeys}}),Object.defineProperty(e,"isHexString",{enumerable:!0,get:function(){return s.isHexString}})},80867:function(t,e,r){"use strict";var n=r(23085).Buffer,i=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r),Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[r]}})}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),s=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),o=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)"default"!==r&&Object.prototype.hasOwnProperty.call(t,r)&&i(e,t,r);return s(e,t),e},a=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.defineProperties=void 0;var u=a(r(69282)),h=o(r(80884)),c=o(r(51675)),l=r(14651);e.defineProperties=function(t,e,r){if(t.raw=[],t._fields=[],t.toJSON=function(e){if(void 0===e&&(e=!1),e){var r={};return t._fields.forEach((function(e){r[e]="0x"+t[e].toString("hex")})),r}return(0,l.baToJSON)(t.raw)},t.serialize=function(){return c.encode(t.raw)},e.forEach((function(e,r){function i(){return t.raw[r]}function s(i){"00"!==(i=(0,l.toBuffer)(i)).toString("hex")||e.allowZero||(i=n.allocUnsafe(0)),e.allowLess&&e.length?(i=(0,l.unpadBuffer)(i),(0,u.default)(e.length>=i.length,"The field "+e.name+" must not have more "+e.length+" bytes")):e.allowZero&&0===i.length||!e.length||(0,u.default)(e.length===i.length,"The field "+e.name+" must have byte length of "+e.length),t.raw[r]=i}t._fields.push(e.name),Object.defineProperty(t,e.name,{enumerable:!0,configurable:!0,get:i,set:s}),e.default&&(t[e.name]=e.default),e.alias&&Object.defineProperty(t,e.alias,{enumerable:!1,configurable:!0,set:s,get:i})})),r)if("string"==typeof r&&(r=n.from(h.stripHexPrefix(r),"hex")),n.isBuffer(r)&&(r=c.decode(r)),Array.isArray(r)){if(r.length>t._fields.length)throw new Error("wrong number of fields in data");r.forEach((function(e,r){t[t._fields[r]]=(0,l.toBuffer)(e)}))}else{if("object"!=typeof r)throw new Error("invalid data");var i=Object.keys(r);e.forEach((function(e){-1!==i.indexOf(e.name)&&(t[e.name]=r[e.name]),-1!==i.indexOf(e.alias)&&(t[e.alias]=r[e.alias])}))}}},77112:function(t,e,r){"use strict";var n=r(23085).Buffer,i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.hashPersonalMessage=e.isValidSignature=e.fromRpcSig=e.toCompactSig=e.toRpcSig=e.ecrecover=e.ecsign=void 0;var s=r(95053),o=i(r(13550)),a=r(14651),u=r(45641),h=r(63746),c=r(2971);function l(t,e){var r=(0,c.toType)(t,c.TypeOutput.BN);if(!e)return r.subn(27);var n=(0,c.toType)(e,c.TypeOutput.BN);return r.sub(n.muln(2).addn(35))}function d(t){var e=new o.default(t);return e.eqn(0)||e.eqn(1)}e.ecsign=function(t,e,r){var i=(0,s.ecdsaSign)(t,e),o=i.signature,a=i.recid,u=n.from(o.slice(0,32)),h=n.from(o.slice(32,64));if(!r||"number"==typeof r){if(r&&!Number.isSafeInteger(r))throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)");return{r:u,s:h,v:r?a+(2*r+35):a+27}}return{r:u,s:h,v:(0,c.toType)(r,c.TypeOutput.BN).muln(2).addn(35).addn(a).toArrayLike(n)}};e.ecrecover=function(t,e,r,i,o){var u=n.concat([(0,a.setLengthLeft)(r,32),(0,a.setLengthLeft)(i,32)],64),h=l(e,o);if(!d(h))throw new Error("Invalid signature v value");var c=(0,s.ecdsaRecover)(u,h.toNumber(),t);return n.from((0,s.publicKeyConvert)(c,!1).slice(1))};e.toRpcSig=function(t,e,r,i){if(!d(l(t,i)))throw new Error("Invalid signature v value");return(0,a.bufferToHex)(n.concat([(0,a.setLengthLeft)(e,32),(0,a.setLengthLeft)(r,32),(0,a.toBuffer)(t)]))};e.toCompactSig=function(t,e,r,i){if(!d(l(t,i)))throw new Error("Invalid signature v value");var s=(0,c.toType)(t,c.TypeOutput.Number),o=r;return(s>28&&s%2==1||1===s||28===s)&&((o=n.from(r))[0]|=128),(0,a.bufferToHex)(n.concat([(0,a.setLengthLeft)(e,32),(0,a.setLengthLeft)(o,32)]))};e.fromRpcSig=function(t){var e,r,n,i=(0,a.toBuffer)(t);if(i.length>=65)e=i.slice(0,32),r=i.slice(32,64),n=(0,a.bufferToInt)(i.slice(64));else{if(64!==i.length)throw new Error("Invalid signature length");e=i.slice(0,32),r=i.slice(32,64),n=(0,a.bufferToInt)(i.slice(32,33))>>7,r[0]&=127}return n<27&&(n+=27),{v:n,r:e,s:r}};e.isValidSignature=function(t,e,r,n,i){void 0===n&&(n=!0);var s=new o.default("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0",16),a=new o.default("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141",16);if(32!==e.length||32!==r.length)return!1;if(!d(l(t,i)))return!1;var u=new o.default(e),h=new o.default(r);return!(u.isZero()||u.gt(a)||h.isZero()||h.gt(a))&&(!n||1!==h.cmp(s))};e.hashPersonalMessage=function(t){(0,h.assertIsBuffer)(t);var e=n.from("Ethereum Signed Message:\n"+t.length.toString(),"utf-8");return(0,u.keccak)(n.concat([e,t]))}},2971:function(t,e,r){"use strict";var n=r(23085).Buffer,i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.toType=e.TypeOutput=e.bnToRlp=e.bnToUnpaddedBuffer=e.bnToHex=void 0;var s,o=i(r(13550)),a=r(80884),u=r(14651);function h(t){return(0,u.unpadBuffer)(t.toArrayLike(n))}e.bnToHex=function(t){return"0x"+t.toString(16)},e.bnToUnpaddedBuffer=h,e.bnToRlp=function(t){return h(t)},function(t){t[t.Number=0]="Number",t[t.BN=1]="BN",t[t.Buffer=2]="Buffer",t[t.PrefixedHexString=3]="PrefixedHexString"}(s=e.TypeOutput||(e.TypeOutput={})),e.toType=function(t,e){if(null===t)return null;if(void 0!==t){if("string"==typeof t&&!(0,a.isHexString)(t))throw new Error("A string must be provided with a 0x-prefix, given: "+t);if("number"==typeof t&&!Number.isSafeInteger(t))throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)");var r=(0,u.toBuffer)(t);if(e===s.Buffer)return r;if(e===s.BN)return new o.default(r);if(e===s.Number){var n=new o.default(r),i=new o.default(Number.MAX_SAFE_INTEGER.toString());if(n.gt(i))throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)");return n.toNumber()}return"0x"+r.toString("hex")}}},94278:(t,e,r)=>{"use strict";var n=r(43614),i=r(83206),s=new n(0),o=new n(-1),a={noether:"0",wei:"1",kwei:"1000",Kwei:"1000",babbage:"1000",femtoether:"1000",mwei:"1000000",Mwei:"1000000",lovelace:"1000000",picoether:"1000000",gwei:"1000000000",Gwei:"1000000000",shannon:"1000000000",nanoether:"1000000000",nano:"1000000000",szabo:"1000000000000",microether:"1000000000000",micro:"1000000000000",finney:"1000000000000000",milliether:"1000000000000000",milli:"1000000000000000",ether:"1000000000000000000",kether:"1000000000000000000000",grand:"1000000000000000000000",mether:"1000000000000000000000000",gether:"1000000000000000000000000000",tether:"1000000000000000000000000000000"};function u(t){var e=t?t.toLowerCase():"ether",r=a[e];if("string"!=typeof r)throw new Error("[ethjs-unit] the unit provided "+t+" doesn't exists, please use the one of the following units "+JSON.stringify(a,null,2));return new n(r,10)}function h(t){if("string"==typeof t){if(!t.match(/^-?[0-9.]+$/))throw new Error("while converting number to string, invalid number value '"+t+"', should be a number matching (^-?[0-9.]+).");return t}if("number"==typeof t)return String(t);if("object"==typeof t&&t.toString&&(t.toTwos||t.dividedToIntegerBy))return t.toPrecision?String(t.toPrecision()):t.toString(10);throw new Error("while converting number to string, invalid number value '"+t+"' type "+typeof t+".")}t.exports={unitMap:a,numberToString:h,getValueOfUnit:u,fromWei:function(t,e,r){var n=i(t),h=n.lt(s),c=u(e),l=a[e].length-1||1,d=r||{};h&&(n=n.mul(o));for(var f=n.mod(c).toString(10);f.length<l;)f="0"+f;d.pad||(f=f.match(/^([0-9]*[1-9]|0)(0*)/)[1]);var p=n.div(c).toString(10);d.commify&&(p=p.replace(/\B(?=(\d{3})+(?!\d))/g,","));var m=p+("0"==f?"":"."+f);return h&&(m="-"+m),m},toWei:function(t,e){var r=h(t),i=u(e),s=a[e].length-1||1,c="-"===r.substring(0,1);if(c&&(r=r.substring(1)),"."===r)throw new Error("[ethjs-unit] while converting number "+t+" to wei, invalid value");var l=r.split(".");if(l.length>2)throw new Error("[ethjs-unit] while converting number "+t+" to wei,  too many decimal points");var d=l[0],f=l[1];if(d||(d="0"),f||(f="0"),f.length>s)throw new Error("[ethjs-unit] while converting number "+t+" to wei, too many decimal places");for(;f.length<s;)f+="0";d=new n(d),f=new n(f);var p=d.mul(i).add(f);return c&&(p=p.mul(o)),new n(p.toString(10),10)}}},43614:function(t,e,r){!function(t,e){"use strict";function n(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o=r(48764).Buffer}catch(t){}function a(t,e,r){for(var n=0,i=Math.min(t.length,r),s=e;s<i;s++){var o=t.charCodeAt(s)-48;n<<=4,n|=o>=49&&o<=54?o-49+10:o>=17&&o<=22?o-17+10:15&o}return n}function u(t,e,r,n){for(var i=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&i++,16===e?this._parseHex(t,i):this._parseBase(t,e,i),"-"===t[0]&&(this.negative=1),this.strip(),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var s,o,a=0;if("be"===r)for(i=t.length-1,s=0;i>=0;i-=3)o=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(i=0,s=0;i<t.length;i+=3)o=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,i,s=0;for(r=t.length-6,n=0;r>=e;r-=6)i=a(t,r,r+6),this.words[n]|=i<<s&67108863,this.words[n+1]|=i>>>26-s&4194303,(s+=24)>=26&&(s-=26,n++);r+6!==e&&(i=a(t,e,r+6),this.words[n]|=i<<s&67108863,this.words[n+1]|=i>>>26-s&4194303),this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var s=t.length-r,o=s%n,a=Math.min(s,s-o)+r,h=0,c=r;c<a;c+=n)h=u(t,c,c+n,e),this.imuln(i),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h);if(0!==o){var l=1;for(h=u(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h)}},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var h=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],c=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],l=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function d(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],s=0|e.words[0],o=i*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(i=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var i=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<i|s)).toString(16);r=0!==(s=a>>>24-i&16777215)||o!==this.length-1?h[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var d=c[t],f=l[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?m+r:h[d-m.length]+m+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return n(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var i=this.byteLength(),s=r||Math.max(1,i);n(i<=s,"byte array longer than desired length"),n(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-i;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){n("number"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},s.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,s=0;s<n.length;s++)e=(0|r.words[s])+(0|n.words[s])+i,this.words[s]=67108863&e,i=e>>>26;for(;0!==i&&s<r.length;s++)e=(0|r.words[s])+i,this.words[s]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var s=0,o=0;o<n.length;o++)s=(e=(0|r.words[o])-(0|n.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var f=function(t,e,r){var n,i,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,m=f>>>13,y=0|o[2],v=8191&y,g=y>>>13,b=0|o[3],w=8191&b,M=b>>>13,k=0|o[4],x=8191&k,P=k>>>13,L=0|o[5],T=8191&L,S=L>>>13,A=0|o[6],D=8191&A,j=A>>>13,H=0|o[7],O=8191&H,z=H>>>13,N=0|o[8],E=8191&N,Y=N>>>13,R=0|o[9],I=8191&R,B=R>>>13,X=0|a[0],V=8191&X,C=X>>>13,W=0|a[1],q=8191&W,Z=W>>>13,F=0|a[2],U=8191&F,G=F>>>13,_=0|a[3],K=8191&_,J=_>>>13,Q=0|a[4],$=8191&Q,tt=Q>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],st=8191&it,ot=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,mt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var yt=(h+(n=Math.imul(l,V))|0)+((8191&(i=(i=Math.imul(l,C))+Math.imul(d,V)|0))<<13)|0;h=((s=Math.imul(d,C))+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(p,V),i=(i=Math.imul(p,C))+Math.imul(m,V)|0,s=Math.imul(m,C);var vt=(h+(n=n+Math.imul(l,q)|0)|0)+((8191&(i=(i=i+Math.imul(l,Z)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,Z)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(v,V),i=(i=Math.imul(v,C))+Math.imul(g,V)|0,s=Math.imul(g,C),n=n+Math.imul(p,q)|0,i=(i=i+Math.imul(p,Z)|0)+Math.imul(m,q)|0,s=s+Math.imul(m,Z)|0;var gt=(h+(n=n+Math.imul(l,U)|0)|0)+((8191&(i=(i=i+Math.imul(l,G)|0)+Math.imul(d,U)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(w,V),i=(i=Math.imul(w,C))+Math.imul(M,V)|0,s=Math.imul(M,C),n=n+Math.imul(v,q)|0,i=(i=i+Math.imul(v,Z)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,Z)|0,n=n+Math.imul(p,U)|0,i=(i=i+Math.imul(p,G)|0)+Math.imul(m,U)|0,s=s+Math.imul(m,G)|0;var bt=(h+(n=n+Math.imul(l,K)|0)|0)+((8191&(i=(i=i+Math.imul(l,J)|0)+Math.imul(d,K)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(x,V),i=(i=Math.imul(x,C))+Math.imul(P,V)|0,s=Math.imul(P,C),n=n+Math.imul(w,q)|0,i=(i=i+Math.imul(w,Z)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,Z)|0,n=n+Math.imul(v,U)|0,i=(i=i+Math.imul(v,G)|0)+Math.imul(g,U)|0,s=s+Math.imul(g,G)|0,n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,J)|0)+Math.imul(m,K)|0,s=s+Math.imul(m,J)|0;var wt=(h+(n=n+Math.imul(l,$)|0)|0)+((8191&(i=(i=i+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(T,V),i=(i=Math.imul(T,C))+Math.imul(S,V)|0,s=Math.imul(S,C),n=n+Math.imul(x,q)|0,i=(i=i+Math.imul(x,Z)|0)+Math.imul(P,q)|0,s=s+Math.imul(P,Z)|0,n=n+Math.imul(w,U)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(M,U)|0,s=s+Math.imul(M,G)|0,n=n+Math.imul(v,K)|0,i=(i=i+Math.imul(v,J)|0)+Math.imul(g,K)|0,s=s+Math.imul(g,J)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,s=s+Math.imul(m,tt)|0;var Mt=(h+(n=n+Math.imul(l,rt)|0)|0)+((8191&(i=(i=i+Math.imul(l,nt)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,nt)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,C))+Math.imul(j,V)|0,s=Math.imul(j,C),n=n+Math.imul(T,q)|0,i=(i=i+Math.imul(T,Z)|0)+Math.imul(S,q)|0,s=s+Math.imul(S,Z)|0,n=n+Math.imul(x,U)|0,i=(i=i+Math.imul(x,G)|0)+Math.imul(P,U)|0,s=s+Math.imul(P,G)|0,n=n+Math.imul(w,K)|0,i=(i=i+Math.imul(w,J)|0)+Math.imul(M,K)|0,s=s+Math.imul(M,J)|0,n=n+Math.imul(v,$)|0,i=(i=i+Math.imul(v,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,s=s+Math.imul(m,nt)|0;var kt=(h+(n=n+Math.imul(l,st)|0)|0)+((8191&(i=(i=i+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(O,V),i=(i=Math.imul(O,C))+Math.imul(z,V)|0,s=Math.imul(z,C),n=n+Math.imul(D,q)|0,i=(i=i+Math.imul(D,Z)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,Z)|0,n=n+Math.imul(T,U)|0,i=(i=i+Math.imul(T,G)|0)+Math.imul(S,U)|0,s=s+Math.imul(S,G)|0,n=n+Math.imul(x,K)|0,i=(i=i+Math.imul(x,J)|0)+Math.imul(P,K)|0,s=s+Math.imul(P,J)|0,n=n+Math.imul(w,$)|0,i=(i=i+Math.imul(w,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,n=n+Math.imul(v,rt)|0,i=(i=i+Math.imul(v,nt)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,nt)|0,n=n+Math.imul(p,st)|0,i=(i=i+Math.imul(p,ot)|0)+Math.imul(m,st)|0,s=s+Math.imul(m,ot)|0;var xt=(h+(n=n+Math.imul(l,ut)|0)|0)+((8191&(i=(i=i+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(E,V),i=(i=Math.imul(E,C))+Math.imul(Y,V)|0,s=Math.imul(Y,C),n=n+Math.imul(O,q)|0,i=(i=i+Math.imul(O,Z)|0)+Math.imul(z,q)|0,s=s+Math.imul(z,Z)|0,n=n+Math.imul(D,U)|0,i=(i=i+Math.imul(D,G)|0)+Math.imul(j,U)|0,s=s+Math.imul(j,G)|0,n=n+Math.imul(T,K)|0,i=(i=i+Math.imul(T,J)|0)+Math.imul(S,K)|0,s=s+Math.imul(S,J)|0,n=n+Math.imul(x,$)|0,i=(i=i+Math.imul(x,tt)|0)+Math.imul(P,$)|0,s=s+Math.imul(P,tt)|0,n=n+Math.imul(w,rt)|0,i=(i=i+Math.imul(w,nt)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,nt)|0,n=n+Math.imul(v,st)|0,i=(i=i+Math.imul(v,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,s=s+Math.imul(m,ht)|0;var Pt=(h+(n=n+Math.imul(l,lt)|0)|0)+((8191&(i=(i=i+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(i>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,n=Math.imul(I,V),i=(i=Math.imul(I,C))+Math.imul(B,V)|0,s=Math.imul(B,C),n=n+Math.imul(E,q)|0,i=(i=i+Math.imul(E,Z)|0)+Math.imul(Y,q)|0,s=s+Math.imul(Y,Z)|0,n=n+Math.imul(O,U)|0,i=(i=i+Math.imul(O,G)|0)+Math.imul(z,U)|0,s=s+Math.imul(z,G)|0,n=n+Math.imul(D,K)|0,i=(i=i+Math.imul(D,J)|0)+Math.imul(j,K)|0,s=s+Math.imul(j,J)|0,n=n+Math.imul(T,$)|0,i=(i=i+Math.imul(T,tt)|0)+Math.imul(S,$)|0,s=s+Math.imul(S,tt)|0,n=n+Math.imul(x,rt)|0,i=(i=i+Math.imul(x,nt)|0)+Math.imul(P,rt)|0,s=s+Math.imul(P,nt)|0,n=n+Math.imul(w,st)|0,i=(i=i+Math.imul(w,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,n=n+Math.imul(v,ut)|0,i=(i=i+Math.imul(v,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0,n=n+Math.imul(p,lt)|0,i=(i=i+Math.imul(p,dt)|0)+Math.imul(m,lt)|0,s=s+Math.imul(m,dt)|0;var Lt=(h+(n=n+Math.imul(l,pt)|0)|0)+((8191&(i=(i=i+Math.imul(l,mt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,mt)|0)+(i>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,n=Math.imul(I,q),i=(i=Math.imul(I,Z))+Math.imul(B,q)|0,s=Math.imul(B,Z),n=n+Math.imul(E,U)|0,i=(i=i+Math.imul(E,G)|0)+Math.imul(Y,U)|0,s=s+Math.imul(Y,G)|0,n=n+Math.imul(O,K)|0,i=(i=i+Math.imul(O,J)|0)+Math.imul(z,K)|0,s=s+Math.imul(z,J)|0,n=n+Math.imul(D,$)|0,i=(i=i+Math.imul(D,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,n=n+Math.imul(T,rt)|0,i=(i=i+Math.imul(T,nt)|0)+Math.imul(S,rt)|0,s=s+Math.imul(S,nt)|0,n=n+Math.imul(x,st)|0,i=(i=i+Math.imul(x,ot)|0)+Math.imul(P,st)|0,s=s+Math.imul(P,ot)|0,n=n+Math.imul(w,ut)|0,i=(i=i+Math.imul(w,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,n=n+Math.imul(v,lt)|0,i=(i=i+Math.imul(v,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var Tt=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((s=s+Math.imul(m,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,n=Math.imul(I,U),i=(i=Math.imul(I,G))+Math.imul(B,U)|0,s=Math.imul(B,G),n=n+Math.imul(E,K)|0,i=(i=i+Math.imul(E,J)|0)+Math.imul(Y,K)|0,s=s+Math.imul(Y,J)|0,n=n+Math.imul(O,$)|0,i=(i=i+Math.imul(O,tt)|0)+Math.imul(z,$)|0,s=s+Math.imul(z,tt)|0,n=n+Math.imul(D,rt)|0,i=(i=i+Math.imul(D,nt)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,nt)|0,n=n+Math.imul(T,st)|0,i=(i=i+Math.imul(T,ot)|0)+Math.imul(S,st)|0,s=s+Math.imul(S,ot)|0,n=n+Math.imul(x,ut)|0,i=(i=i+Math.imul(x,ht)|0)+Math.imul(P,ut)|0,s=s+Math.imul(P,ht)|0,n=n+Math.imul(w,lt)|0,i=(i=i+Math.imul(w,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var St=(h+(n=n+Math.imul(v,pt)|0)|0)+((8191&(i=(i=i+Math.imul(v,mt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(I,K),i=(i=Math.imul(I,J))+Math.imul(B,K)|0,s=Math.imul(B,J),n=n+Math.imul(E,$)|0,i=(i=i+Math.imul(E,tt)|0)+Math.imul(Y,$)|0,s=s+Math.imul(Y,tt)|0,n=n+Math.imul(O,rt)|0,i=(i=i+Math.imul(O,nt)|0)+Math.imul(z,rt)|0,s=s+Math.imul(z,nt)|0,n=n+Math.imul(D,st)|0,i=(i=i+Math.imul(D,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,n=n+Math.imul(T,ut)|0,i=(i=i+Math.imul(T,ht)|0)+Math.imul(S,ut)|0,s=s+Math.imul(S,ht)|0,n=n+Math.imul(x,lt)|0,i=(i=i+Math.imul(x,dt)|0)+Math.imul(P,lt)|0,s=s+Math.imul(P,dt)|0;var At=(h+(n=n+Math.imul(w,pt)|0)|0)+((8191&(i=(i=i+Math.imul(w,mt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,mt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(I,$),i=(i=Math.imul(I,tt))+Math.imul(B,$)|0,s=Math.imul(B,tt),n=n+Math.imul(E,rt)|0,i=(i=i+Math.imul(E,nt)|0)+Math.imul(Y,rt)|0,s=s+Math.imul(Y,nt)|0,n=n+Math.imul(O,st)|0,i=(i=i+Math.imul(O,ot)|0)+Math.imul(z,st)|0,s=s+Math.imul(z,ot)|0,n=n+Math.imul(D,ut)|0,i=(i=i+Math.imul(D,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,n=n+Math.imul(T,lt)|0,i=(i=i+Math.imul(T,dt)|0)+Math.imul(S,lt)|0,s=s+Math.imul(S,dt)|0;var Dt=(h+(n=n+Math.imul(x,pt)|0)|0)+((8191&(i=(i=i+Math.imul(x,mt)|0)+Math.imul(P,pt)|0))<<13)|0;h=((s=s+Math.imul(P,mt)|0)+(i>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,n=Math.imul(I,rt),i=(i=Math.imul(I,nt))+Math.imul(B,rt)|0,s=Math.imul(B,nt),n=n+Math.imul(E,st)|0,i=(i=i+Math.imul(E,ot)|0)+Math.imul(Y,st)|0,s=s+Math.imul(Y,ot)|0,n=n+Math.imul(O,ut)|0,i=(i=i+Math.imul(O,ht)|0)+Math.imul(z,ut)|0,s=s+Math.imul(z,ht)|0,n=n+Math.imul(D,lt)|0,i=(i=i+Math.imul(D,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var jt=(h+(n=n+Math.imul(T,pt)|0)|0)+((8191&(i=(i=i+Math.imul(T,mt)|0)+Math.imul(S,pt)|0))<<13)|0;h=((s=s+Math.imul(S,mt)|0)+(i>>>13)|0)+(jt>>>26)|0,jt&=67108863,n=Math.imul(I,st),i=(i=Math.imul(I,ot))+Math.imul(B,st)|0,s=Math.imul(B,ot),n=n+Math.imul(E,ut)|0,i=(i=i+Math.imul(E,ht)|0)+Math.imul(Y,ut)|0,s=s+Math.imul(Y,ht)|0,n=n+Math.imul(O,lt)|0,i=(i=i+Math.imul(O,dt)|0)+Math.imul(z,lt)|0,s=s+Math.imul(z,dt)|0;var Ht=(h+(n=n+Math.imul(D,pt)|0)|0)+((8191&(i=(i=i+Math.imul(D,mt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,mt)|0)+(i>>>13)|0)+(Ht>>>26)|0,Ht&=67108863,n=Math.imul(I,ut),i=(i=Math.imul(I,ht))+Math.imul(B,ut)|0,s=Math.imul(B,ht),n=n+Math.imul(E,lt)|0,i=(i=i+Math.imul(E,dt)|0)+Math.imul(Y,lt)|0,s=s+Math.imul(Y,dt)|0;var Ot=(h+(n=n+Math.imul(O,pt)|0)|0)+((8191&(i=(i=i+Math.imul(O,mt)|0)+Math.imul(z,pt)|0))<<13)|0;h=((s=s+Math.imul(z,mt)|0)+(i>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,n=Math.imul(I,lt),i=(i=Math.imul(I,dt))+Math.imul(B,lt)|0,s=Math.imul(B,dt);var zt=(h+(n=n+Math.imul(E,pt)|0)|0)+((8191&(i=(i=i+Math.imul(E,mt)|0)+Math.imul(Y,pt)|0))<<13)|0;h=((s=s+Math.imul(Y,mt)|0)+(i>>>13)|0)+(zt>>>26)|0,zt&=67108863;var Nt=(h+(n=Math.imul(I,pt))|0)+((8191&(i=(i=Math.imul(I,mt))+Math.imul(B,pt)|0))<<13)|0;return h=((s=Math.imul(B,mt))+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=yt,u[1]=vt,u[2]=gt,u[3]=bt,u[4]=wt,u[5]=Mt,u[6]=kt,u[7]=xt,u[8]=Pt,u[9]=Lt,u[10]=Tt,u[11]=St,u[12]=At,u[13]=Dt,u[14]=jt,u[15]=Ht,u[16]=Ot,u[17]=zt,u[18]=Nt,0!==h&&(u[19]=h,r.length++),r};function p(t,e,r){return(new m).mulp(t,e,r)}function m(t,e){this.x=t,this.y=e}Math.imul||(f=d),s.prototype.mulTo=function(t,e){var r,n=this.length+t.length;return r=10===this.length&&10===t.length?f(this,t,e):n<63?d(this,t,e):n<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,s=0;s<r.length-1;s++){var o=i;i=0;for(var a=67108863&n,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),i+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,n=o,o=i}return 0!==n?r.words[s]=n:r.length--,r.strip()}(this,t,e):p(this,t,e),r},m.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},m.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},m.prototype.permute=function(t,e,r,n,i,s){for(var o=0;o<s;o++)n[o]=e[t[o]],i[o]=r[t[o]]},m.prototype.transform=function(t,e,r,n,i,s){this.permute(s,t,e,r,n,i);for(var o=1;o<i;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<i;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],m=n[c+f],y=r[c+f+o],v=n[c+f+o],g=l*y-d*v;v=l*v+d*y,y=g,r[c+f]=p+y,n[c+f]=m+v,r[c+f+o]=p-y,n[c+f+o]=m-v,f!==a&&(g=u*l-h*d,d=u*d+h*l,l=g)}},m.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},m.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},m.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},m.prototype.convert13b=function(t,e,r,i){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<i;++o)r[o]=0;n(0===s),n(0==(-8192&s))},m.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},m.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),s=this.stub(n),o=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),c=new Array(n),l=new Array(n),d=r.words;d.length=n,this.convert13b(t.words,t.length,o,n),this.convert13b(e.words,e.length,h,n),this.transform(o,s,a,u,n,i),this.transform(h,s,c,l,n,i);for(var f=0;f<n;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,n),this.transform(a,u,d,s,n,i),this.conjugate(d,s,n),this.normalize13b(d,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),p(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var e=0,r=0;r<this.length;r++){var i=(0|this.words[r])*t,s=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=(t.words[n]&1<<i)>>>i}return e}(t);if(0===e.length)return new s(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},s.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},s.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var i;n("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(i-=o,i=Math.max(0,i),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=i);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r)&&!!(this.words[r]&i)},s.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var i,s,o=t.length+r;this._expand(o);var a=0;for(i=0;i<t.length;i++){s=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&s}for(;i<this.length-r;i++)a=(s=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&s;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(s=-(0|this.words[i])+a)>>26,this.words[i]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,o=0|i.words[i.length-1];0!==(r=26-this._countBits(o))&&(i=i.ushln(r),n.iushln(r),o=0|i.words[i.length-1]);var a,u=n.length-i.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=n.clone()._ishlnsubmul(i,1,u);0===c.negative&&(n=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|n.words[i.length+l])+(0|n.words[i.length+l-1]);for(d=Math.min(d/o|0,67108863),n._ishlnsubmul(i,d,l);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(i,1,l),n.isZero()||(n.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),n.strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},s.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(i=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:i,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var i,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),s=r.cmp(n);return s<0||1===i&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){n(t<=67108863);for(var e=(1<<26)%t,r=0,i=this.length-1;i>=0;i--)r=(e*r+(0|this.words[i]))%t;return r},s.prototype.idivn=function(t){n(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*e;this.words[r]=i/t|0,e=i%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(c),o.isub(l)),i.iushrn(1),o.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),o.isub(u)):(r.isub(e),a.isub(i),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(i=0===e.cmpn(1)?o:a).cmpn(0)<0&&i.iadd(t),i},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var s=e;e=r,r=s}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){n("number"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var s=i,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new k(t)},s.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var y={k256:null,p224:null,p192:null,p25519:null};function v(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function g(){v.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function b(){v.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function w(){v.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function M(){v.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function k(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function x(t){k.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}v.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},v.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):r.strip(),r},v.prototype.split=function(t,e){t.iushrn(this.n,0,e)},v.prototype.imulK=function(t){return t.imul(this.k)},i(g,v),g.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,i=10;i<t.length;i++){var o=0|t.words[i];t.words[i-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[i-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},g.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(b,v),i(w,v),i(M,v),M.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(y[t])return y[t];var e;if("k256"===t)e=new g;else if("p224"===t)e=new b;else if("p192"===t)e=new w;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new M}return y[t]=e,e},k.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},k.prototype._verify2=function(t,e){n(0==(t.negative|e.negative),"red works only with positives"),n(t.red&&t.red===e.red,"red works only with red numbers")},k.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},k.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},k.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},k.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},k.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},k.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},k.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},k.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},k.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},k.prototype.isqr=function(t){return this.imul(t,t.clone())},k.prototype.sqr=function(t){return this.mul(t,t)},k.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),o=0;!i.isZero()&&0===i.andln(1);)o++,i.iushrn(1);n(!i.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,i),d=this.pow(t,i.addn(1).iushrn(1)),f=this.pow(t,i),p=o;0!==f.cmp(a);){for(var m=f,y=0;0!==m.cmp(a);y++)m=m.redSqr();n(y<p);var v=this.pow(l,new s(1).iushln(p-y-1));d=d.redMul(v),l=v.redSqr(),f=f.redMul(l),p=y}return d},k.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},k.prototype.pow=function(t,e){if(e.isZero())return new s(1);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],c=u-1;c>=0;c--){var l=h>>c&1;i!==r[0]&&(i=this.sqr(i)),0!==l||0!==o?(o<<=1,o|=l,(4===++a||0===n&&0===c)&&(i=this.mul(i,r[o]),a=0,o=0)):a=0}u=26}return i},k.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},k.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new x(t)},i(x,k),x.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},x.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},x.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},x.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},x.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},80884:(t,e,r)=>{"use strict";var n=r(23085).Buffer,i=r(23944),s=r(49604);function o(t){var e=t;if("string"!=typeof e)throw new Error("[ethjs-util] while padding to even, value must be string, is currently "+typeof e+", while padToEven.");return e.length%2&&(e="0"+e),e}function a(t){return"0x"+t.toString(16)}t.exports={arrayContainsArray:function(t,e,r){if(!0!==Array.isArray(t))throw new Error("[ethjs-util] method arrayContainsArray requires input 'superset' to be an array got type '"+typeof t+"'");if(!0!==Array.isArray(e))throw new Error("[ethjs-util] method arrayContainsArray requires input 'subset' to be an array got type '"+typeof e+"'");return e[Boolean(r)?"some":"every"]((function(e){return t.indexOf(e)>=0}))},intToBuffer:function(t){var e=a(t);return new n(o(e.slice(2)),"hex")},getBinarySize:function(t){if("string"!=typeof t)throw new Error("[ethjs-util] while getting binary size, method getBinarySize requires input 'str' to be type String, got '"+typeof t+"'.");return n.byteLength(t,"utf8")},isHexPrefixed:i,stripHexPrefix:s,padToEven:o,intToHex:a,fromAscii:function(t){for(var e="",r=0;r<t.length;r++){var n=t.charCodeAt(r).toString(16);e+=n.length<2?"0"+n:n}return"0x"+e},fromUtf8:function(t){return"0x"+o(new n(t,"utf8").toString("hex")).replace(/^0+|0+$/g,"")},toAscii:function(t){var e="",r=0,n=t.length;for("0x"===t.substring(0,2)&&(r=2);r<n;r+=2){var i=parseInt(t.substr(r,2),16);e+=String.fromCharCode(i)}return e},toUtf8:function(t){return new n(o(s(t).replace(/^0+|0+$/g,"")),"hex").toString("utf8")},getKeys:function(t,e,r){if(!Array.isArray(t))throw new Error("[ethjs-util] method getKeys expecting type Array as 'params' input, got '"+typeof t+"'");if("string"!=typeof e)throw new Error("[ethjs-util] method getKeys expecting type String for input 'key' got '"+typeof e+"'.");for(var n=[],i=0;i<t.length;i++){var s=t[i][e];if(r&&!s)s="";else if("string"!=typeof s)throw new Error("invalid abi");n.push(s)}return n},isHexString:function(t,e){return!("string"!=typeof t||!t.match(/^0x[0-9A-Fa-f]*$/))&&(!e||t.length===2+2*e)}}},26729:t=>{"use strict";var e=Object.prototype.hasOwnProperty,r="~";function n(){}function i(t,e,r){this.fn=t,this.context=e,this.once=r||!1}function s(t,e,n,s,o){if("function"!=typeof n)throw new TypeError("The listener must be a function");var a=new i(n,s||t,o),u=r?r+e:e;return t._events[u]?t._events[u].fn?t._events[u]=[t._events[u],a]:t._events[u].push(a):(t._events[u]=a,t._eventsCount++),t}function o(t,e){0==--t._eventsCount?t._events=new n:delete t._events[e]}function a(){this._events=new n,this._eventsCount=0}Object.create&&(n.prototype=Object.create(null),(new n).__proto__||(r=!1)),a.prototype.eventNames=function(){var t,n,i=[];if(0===this._eventsCount)return i;for(n in t=this._events)e.call(t,n)&&i.push(r?n.slice(1):n);return Object.getOwnPropertySymbols?i.concat(Object.getOwnPropertySymbols(t)):i},a.prototype.listeners=function(t){var e=r?r+t:t,n=this._events[e];if(!n)return[];if(n.fn)return[n.fn];for(var i=0,s=n.length,o=new Array(s);i<s;i++)o[i]=n[i].fn;return o},a.prototype.listenerCount=function(t){var e=r?r+t:t,n=this._events[e];return n?n.fn?1:n.length:0},a.prototype.emit=function(t,e,n,i,s,o){var a=r?r+t:t;if(!this._events[a])return!1;var u,h,c=this._events[a],l=arguments.length;if(c.fn){switch(c.once&&this.removeListener(t,c.fn,void 0,!0),l){case 1:return c.fn.call(c.context),!0;case 2:return c.fn.call(c.context,e),!0;case 3:return c.fn.call(c.context,e,n),!0;case 4:return c.fn.call(c.context,e,n,i),!0;case 5:return c.fn.call(c.context,e,n,i,s),!0;case 6:return c.fn.call(c.context,e,n,i,s,o),!0}for(h=1,u=new Array(l-1);h<l;h++)u[h-1]=arguments[h];c.fn.apply(c.context,u)}else{var d,f=c.length;for(h=0;h<f;h++)switch(c[h].once&&this.removeListener(t,c[h].fn,void 0,!0),l){case 1:c[h].fn.call(c[h].context);break;case 2:c[h].fn.call(c[h].context,e);break;case 3:c[h].fn.call(c[h].context,e,n);break;case 4:c[h].fn.call(c[h].context,e,n,i);break;default:if(!u)for(d=1,u=new Array(l-1);d<l;d++)u[d-1]=arguments[d];c[h].fn.apply(c[h].context,u)}}return!0},a.prototype.on=function(t,e,r){return s(this,t,e,r,!1)},a.prototype.once=function(t,e,r){return s(this,t,e,r,!0)},a.prototype.removeListener=function(t,e,n,i){var s=r?r+t:t;if(!this._events[s])return this;if(!e)return o(this,s),this;var a=this._events[s];if(a.fn)a.fn!==e||i&&!a.once||n&&a.context!==n||o(this,s);else{for(var u=0,h=[],c=a.length;u<c;u++)(a[u].fn!==e||i&&!a[u].once||n&&a[u].context!==n)&&h.push(a[u]);h.length?this._events[s]=1===h.length?h[0]:h:o(this,s)}return this},a.prototype.removeAllListeners=function(t){var e;return t?(e=r?r+t:t,this._events[e]&&o(this,e)):(this._events=new n,this._eventsCount=0),this},a.prototype.off=a.prototype.removeListener,a.prototype.addListener=a.prototype.on,a.prefixed=r,a.EventEmitter=a,t.exports=a},17187:t=>{"use strict";var e,r="object"==typeof Reflect?Reflect:null,n=r&&"function"==typeof r.apply?r.apply:function(t,e,r){return Function.prototype.apply.call(t,e,r)};e=r&&"function"==typeof r.ownKeys?r.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)};var i=Number.isNaN||function(t){return t!=t};function s(){s.init.call(this)}t.exports=s,t.exports.once=function(t,e){return new Promise((function(r,n){function i(r){t.removeListener(e,s),n(r)}function s(){"function"==typeof t.removeListener&&t.removeListener("error",i),r([].slice.call(arguments))}m(t,e,s,{once:!0}),"error"!==e&&function(t,e,r){"function"==typeof t.on&&m(t,"error",e,r)}(t,i,{once:!0})}))},s.EventEmitter=s,s.prototype._events=void 0,s.prototype._eventsCount=0,s.prototype._maxListeners=void 0;var o=10;function a(t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t)}function u(t){return void 0===t._maxListeners?s.defaultMaxListeners:t._maxListeners}function h(t,e,r,n){var i,s,o,h;if(a(r),void 0===(s=t._events)?(s=t._events=Object.create(null),t._eventsCount=0):(void 0!==s.newListener&&(t.emit("newListener",e,r.listener?r.listener:r),s=t._events),o=s[e]),void 0===o)o=s[e]=r,++t._eventsCount;else if("function"==typeof o?o=s[e]=n?[r,o]:[o,r]:n?o.unshift(r):o.push(r),(i=u(t))>0&&o.length>i&&!o.warned){o.warned=!0;var c=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");c.name="MaxListenersExceededWarning",c.emitter=t,c.type=e,c.count=o.length,h=c,console&&console.warn&&console.warn(h)}return t}function c(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function l(t,e,r){var n={fired:!1,wrapFn:void 0,target:t,type:e,listener:r},i=c.bind(n);return i.listener=r,n.wrapFn=i,i}function d(t,e,r){var n=t._events;if(void 0===n)return[];var i=n[e];return void 0===i?[]:"function"==typeof i?r?[i.listener||i]:[i]:r?function(t){for(var e=new Array(t.length),r=0;r<e.length;++r)e[r]=t[r].listener||t[r];return e}(i):p(i,i.length)}function f(t){var e=this._events;if(void 0!==e){var r=e[t];if("function"==typeof r)return 1;if(void 0!==r)return r.length}return 0}function p(t,e){for(var r=new Array(e),n=0;n<e;++n)r[n]=t[n];return r}function m(t,e,r,n){if("function"==typeof t.on)n.once?t.once(e,r):t.on(e,r);else{if("function"!=typeof t.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof t);t.addEventListener(e,(function i(s){n.once&&t.removeEventListener(e,i),r(s)}))}}Object.defineProperty(s,"defaultMaxListeners",{enumerable:!0,get:function(){return o},set:function(t){if("number"!=typeof t||t<0||i(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");o=t}}),s.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},s.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||i(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this._maxListeners=t,this},s.prototype.getMaxListeners=function(){return u(this)},s.prototype.emit=function(t){for(var e=[],r=1;r<arguments.length;r++)e.push(arguments[r]);var i="error"===t,s=this._events;if(void 0!==s)i=i&&void 0===s.error;else if(!i)return!1;if(i){var o;if(e.length>0&&(o=e[0]),o instanceof Error)throw o;var a=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw a.context=o,a}var u=s[t];if(void 0===u)return!1;if("function"==typeof u)n(u,this,e);else{var h=u.length,c=p(u,h);for(r=0;r<h;++r)n(c[r],this,e)}return!0},s.prototype.addListener=function(t,e){return h(this,t,e,!1)},s.prototype.on=s.prototype.addListener,s.prototype.prependListener=function(t,e){return h(this,t,e,!0)},s.prototype.once=function(t,e){return a(e),this.on(t,l(this,t,e)),this},s.prototype.prependOnceListener=function(t,e){return a(e),this.prependListener(t,l(this,t,e)),this},s.prototype.removeListener=function(t,e){var r,n,i,s,o;if(a(e),void 0===(n=this._events))return this;if(void 0===(r=n[t]))return this;if(r===e||r.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete n[t],n.removeListener&&this.emit("removeListener",t,r.listener||e));else if("function"!=typeof r){for(i=-1,s=r.length-1;s>=0;s--)if(r[s]===e||r[s].listener===e){o=r[s].listener,i=s;break}if(i<0)return this;0===i?r.shift():function(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}(r,i),1===r.length&&(n[t]=r[0]),void 0!==n.removeListener&&this.emit("removeListener",t,o||e)}return this},s.prototype.off=s.prototype.removeListener,s.prototype.removeAllListeners=function(t){var e,r,n;if(void 0===(r=this._events))return this;if(void 0===r.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==r[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete r[t]),this;if(0===arguments.length){var i,s=Object.keys(r);for(n=0;n<s.length;++n)"removeListener"!==(i=s[n])&&this.removeAllListeners(i);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(e=r[t]))this.removeListener(t,e);else if(void 0!==e)for(n=e.length-1;n>=0;n--)this.removeListener(t,e[n]);return this},s.prototype.listeners=function(t){return d(this,t,!0)},s.prototype.rawListeners=function(t){return d(this,t,!1)},s.listenerCount=function(t,e){return"function"==typeof t.listenerCount?t.listenerCount(e):f.call(t,e)},s.prototype.listenerCount=f,s.prototype.eventNames=function(){return this._eventsCount>0?e(this._events):[]}},13048:(t,e,r)=>{var n=r(89509).Buffer,i=r(62318);t.exports=function(t,e,r,s){if(n.isBuffer(t)||(t=n.from(t,"binary")),e&&(n.isBuffer(e)||(e=n.from(e,"binary")),8!==e.length))throw new RangeError("salt should be Buffer with 8 byte length");for(var o=r/8,a=n.alloc(o),u=n.alloc(s||0),h=n.alloc(0);o>0||s>0;){var c=new i;c.update(h),c.update(t),e&&c.update(e),h=c.digest();var l=0;if(o>0){var d=a.length-o;l=Math.min(o,h.length),h.copy(a,d,0,l),o-=l}if(l<h.length&&s>0){var f=u.length-s,p=Math.min(s,h.length-l);h.copy(u,f,l,l+p),s-=p}}return h.fill(0),{key:a,iv:u}}},21287:t=>{const e=["alarms","bookmarks","browserAction","commands","contextMenus","cookies","downloads","events","extension","extensionTypes","history","i18n","idle","notifications","pageAction","runtime","storage","tabs","webNavigation","webRequest","windows"],r="undefined"!=typeof chrome,n="undefined"!=typeof window,i="undefined"!=typeof browser;t.exports=function(){const t=this;if(e.forEach((function(e){if(t[e]=null,r)try{chrome[e]&&(t[e]=chrome[e])}catch(t){}if(n)try{window[e]&&(t[e]=window[e])}catch(t){}if(i){try{browser[e]&&(t[e]=browser[e])}catch(t){}try{t.api=browser.extension[e]}catch(t){}}})),i){try{browser&&browser.runtime&&(this.runtime=browser.runtime)}catch(t){}try{browser&&browser.browserAction&&(this.browserAction=browser.browserAction)}catch(t){}}}},75972:(t,e,r)=>{const n=r(21287);t.exports=new n},49804:t=>{var e=Object.prototype.hasOwnProperty,r=Object.prototype.toString;t.exports=function(t,n,i){if("[object Function]"!==r.call(n))throw new TypeError("iterator must be a function");var s=t.length;if(s===+s)for(var o=0;o<s;o++)n.call(i,t[o],o,t);else for(var a in t)e.call(t,a)&&n.call(i,t[a],a,t)}},17648:t=>{"use strict";var e="Function.prototype.bind called on incompatible ",r=Array.prototype.slice,n=Object.prototype.toString,i="[object Function]";t.exports=function(t){var s=this;if("function"!=typeof s||n.call(s)!==i)throw new TypeError(e+s);for(var o,a=r.call(arguments,1),u=function(){if(this instanceof o){var e=s.apply(this,a.concat(r.call(arguments)));return Object(e)===e?e:this}return s.apply(t,a.concat(r.call(arguments)))},h=Math.max(0,s.length-a.length),c=[],l=0;l<h;l++)c.push("$"+l);if(o=Function("binder","return function ("+c.join(",")+"){ return binder.apply(this,arguments); }")(u),s.prototype){var d=function(){};d.prototype=s.prototype,o.prototype=new d,d.prototype=null}return o}},58612:(t,e,r)=>{"use strict";var n=r(17648);t.exports=Function.prototype.bind||n},40210:(t,e,r)=>{"use strict";var n,i=SyntaxError,s=Function,o=TypeError,a=function(t){try{return s('"use strict"; return ('+t+").constructor;")()}catch(t){}},u=Object.getOwnPropertyDescriptor;if(u)try{u({},"")}catch(t){u=null}var h=function(){throw new o},c=u?function(){try{return h}catch(t){try{return u(arguments,"callee").get}catch(t){return h}}}():h,l=r(41405)(),d=Object.getPrototypeOf||function(t){return t.__proto__},f={},p="undefined"==typeof Uint8Array?n:d(Uint8Array),m={"%AggregateError%":"undefined"==typeof AggregateError?n:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?n:ArrayBuffer,"%ArrayIteratorPrototype%":l?d([][Symbol.iterator]()):n,"%AsyncFromSyncIteratorPrototype%":n,"%AsyncFunction%":f,"%AsyncGenerator%":f,"%AsyncGeneratorFunction%":f,"%AsyncIteratorPrototype%":f,"%Atomics%":"undefined"==typeof Atomics?n:Atomics,"%BigInt%":"undefined"==typeof BigInt?n:BigInt,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?n:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?n:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?n:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?n:FinalizationRegistry,"%Function%":s,"%GeneratorFunction%":f,"%Int8Array%":"undefined"==typeof Int8Array?n:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?n:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?n:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":l?d(d([][Symbol.iterator]())):n,"%JSON%":"object"==typeof JSON?JSON:n,"%Map%":"undefined"==typeof Map?n:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&l?d((new Map)[Symbol.iterator]()):n,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?n:Promise,"%Proxy%":"undefined"==typeof Proxy?n:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?n:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?n:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&l?d((new Set)[Symbol.iterator]()):n,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?n:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":l?d(""[Symbol.iterator]()):n,"%Symbol%":l?Symbol:n,"%SyntaxError%":i,"%ThrowTypeError%":c,"%TypedArray%":p,"%TypeError%":o,"%Uint8Array%":"undefined"==typeof Uint8Array?n:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?n:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?n:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?n:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?n:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?n:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?n:WeakSet},y=function t(e){var r;if("%AsyncFunction%"===e)r=a("async function () {}");else if("%GeneratorFunction%"===e)r=a("function* () {}");else if("%AsyncGeneratorFunction%"===e)r=a("async function* () {}");else if("%AsyncGenerator%"===e){var n=t("%AsyncGeneratorFunction%");n&&(r=n.prototype)}else if("%AsyncIteratorPrototype%"===e){var i=t("%AsyncGenerator%");i&&(r=d(i.prototype))}return m[e]=r,r},v={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},g=r(58612),b=r(17642),w=g.call(Function.call,Array.prototype.concat),M=g.call(Function.apply,Array.prototype.splice),k=g.call(Function.call,String.prototype.replace),x=g.call(Function.call,String.prototype.slice),P=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,L=/\\(\\)?/g,T=function(t){var e=x(t,0,1),r=x(t,-1);if("%"===e&&"%"!==r)throw new i("invalid intrinsic syntax, expected closing `%`");if("%"===r&&"%"!==e)throw new i("invalid intrinsic syntax, expected opening `%`");var n=[];return k(t,P,(function(t,e,r,i){n[n.length]=r?k(i,L,"$1"):e||t})),n},S=function(t,e){var r,n=t;if(b(v,n)&&(n="%"+(r=v[n])[0]+"%"),b(m,n)){var s=m[n];if(s===f&&(s=y(n)),void 0===s&&!e)throw new o("intrinsic "+t+" exists, but is not available. Please file an issue!");return{alias:r,name:n,value:s}}throw new i("intrinsic "+t+" does not exist!")};t.exports=function(t,e){if("string"!=typeof t||0===t.length)throw new o("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof e)throw new o('"allowMissing" argument must be a boolean');var r=T(t),n=r.length>0?r[0]:"",s=S("%"+n+"%",e),a=s.name,h=s.value,c=!1,l=s.alias;l&&(n=l[0],M(r,w([0,1],l)));for(var d=1,f=!0;d<r.length;d+=1){var p=r[d],y=x(p,0,1),v=x(p,-1);if(('"'===y||"'"===y||"`"===y||'"'===v||"'"===v||"`"===v)&&y!==v)throw new i("property names with quotes must have matching quotes");if("constructor"!==p&&f||(c=!0),b(m,a="%"+(n+="."+p)+"%"))h=m[a];else if(null!=h){if(!(p in h)){if(!e)throw new o("base intrinsic for "+t+" exists, but the property is not available.");return}if(u&&d+1>=r.length){var g=u(h,p);h=(f=!!g)&&"get"in g&&!("originalValue"in g.get)?g.get:h[p]}else f=b(h,p),h=h[p];f&&!c&&(m[a]=h)}}return h}},41405:(t,e,r)=>{"use strict";var n="undefined"!=typeof Symbol&&Symbol,i=r(55419);t.exports=function(){return"function"==typeof n&&("function"==typeof Symbol&&("symbol"==typeof n("foo")&&("symbol"==typeof Symbol("bar")&&i())))}},55419:t=>{"use strict";t.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var t={},e=Symbol("test"),r=Object(e);if("string"==typeof e)return!1;if("[object Symbol]"!==Object.prototype.toString.call(e))return!1;if("[object Symbol]"!==Object.prototype.toString.call(r))return!1;for(e in t[e]=42,t)return!1;if("function"==typeof Object.keys&&0!==Object.keys(t).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(t).length)return!1;var n=Object.getOwnPropertySymbols(t);if(1!==n.length||n[0]!==e)return!1;if(!Object.prototype.propertyIsEnumerable.call(t,e))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var i=Object.getOwnPropertyDescriptor(t,e);if(42!==i.value||!0!==i.enumerable)return!1}return!0}},96410:(t,e,r)=>{"use strict";var n=r(55419);t.exports=function(){return n()&&!!Symbol.toStringTag}},17642:(t,e,r)=>{"use strict";var n=r(58612);t.exports=n.call(Function.call,Object.prototype.hasOwnProperty)},3349:(t,e,r)=>{"use strict";var n=r(89509).Buffer,i=r(88473).Transform;function s(t){i.call(this),this._block=n.allocUnsafe(t),this._blockSize=t,this._blockOffset=0,this._length=[0,0,0,0],this._finalized=!1}r(35717)(s,i),s.prototype._transform=function(t,e,r){var n=null;try{this.update(t,e)}catch(t){n=t}r(n)},s.prototype._flush=function(t){var e=null;try{this.push(this.digest())}catch(t){e=t}t(e)},s.prototype.update=function(t,e){if(function(t,e){if(!n.isBuffer(t)&&"string"!=typeof t)throw new TypeError(e+" must be a string or a buffer")}(t,"Data"),this._finalized)throw new Error("Digest already called");n.isBuffer(t)||(t=n.from(t,e));for(var r=this._block,i=0;this._blockOffset+t.length-i>=this._blockSize;){for(var s=this._blockOffset;s<this._blockSize;)r[s++]=t[i++];this._update(),this._blockOffset=0}for(;i<t.length;)r[this._blockOffset++]=t[i++];for(var o=0,a=8*t.length;a>0;++o)this._length[o]+=a,(a=this._length[o]/4294967296|0)>0&&(this._length[o]-=4294967296*a);return this},s.prototype._update=function(){throw new Error("_update is not implemented")},s.prototype.digest=function(t){if(this._finalized)throw new Error("Digest already called");this._finalized=!0;var e=this._digest();void 0!==t&&(e=e.toString(t)),this._block.fill(0),this._blockOffset=0;for(var r=0;r<4;++r)this._length[r]=0;return e},s.prototype._digest=function(){throw new Error("_digest is not implemented")},t.exports=s},33715:(t,e,r)=>{var n=e;n.utils=r(26436),n.common=r(95772),n.sha=r(89041),n.ripemd=r(12949),n.hmac=r(52344),n.sha1=n.sha.sha1,n.sha256=n.sha.sha256,n.sha224=n.sha.sha224,n.sha384=n.sha.sha384,n.sha512=n.sha.sha512,n.ripemd160=n.ripemd.ripemd160},95772:(t,e,r)=>{"use strict";var n=r(26436),i=r(79746);function s(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}e.BlockHash=s,s.prototype.update=function(t,e){if(t=n.toArray(t,e),this.pending?this.pending=this.pending.concat(t):this.pending=t,this.pendingTotal+=t.length,this.pending.length>=this._delta8){var r=(t=this.pending).length%this._delta8;this.pending=t.slice(t.length-r,t.length),0===this.pending.length&&(this.pending=null),t=n.join32(t,0,t.length-r,this.endian);for(var i=0;i<t.length;i+=this._delta32)this._update(t,i,i+this._delta32)}return this},s.prototype.digest=function(t){return this.update(this._pad()),i(null===this.pending),this._digest(t)},s.prototype._pad=function(){var t=this.pendingTotal,e=this._delta8,r=e-(t+this.padLength)%e,n=new Array(r+this.padLength);n[0]=128;for(var i=1;i<r;i++)n[i]=0;if(t<<=3,"big"===this.endian){for(var s=8;s<this.padLength;s++)n[i++]=0;n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=t>>>24&255,n[i++]=t>>>16&255,n[i++]=t>>>8&255,n[i++]=255&t}else for(n[i++]=255&t,n[i++]=t>>>8&255,n[i++]=t>>>16&255,n[i++]=t>>>24&255,n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=0,s=8;s<this.padLength;s++)n[i++]=0;return n}},52344:(t,e,r)=>{"use strict";var n=r(26436),i=r(79746);function s(t,e,r){if(!(this instanceof s))return new s(t,e,r);this.Hash=t,this.blockSize=t.blockSize/8,this.outSize=t.outSize/8,this.inner=null,this.outer=null,this._init(n.toArray(e,r))}t.exports=s,s.prototype._init=function(t){t.length>this.blockSize&&(t=(new this.Hash).update(t).digest()),i(t.length<=this.blockSize);for(var e=t.length;e<this.blockSize;e++)t.push(0);for(e=0;e<t.length;e++)t[e]^=54;for(this.inner=(new this.Hash).update(t),e=0;e<t.length;e++)t[e]^=106;this.outer=(new this.Hash).update(t)},s.prototype.update=function(t,e){return this.inner.update(t,e),this},s.prototype.digest=function(t){return this.outer.update(this.inner.digest()),this.outer.digest(t)}},12949:(t,e,r)=>{"use strict";var n=r(26436),i=r(95772),s=n.rotl32,o=n.sum32,a=n.sum32_3,u=n.sum32_4,h=i.BlockHash;function c(){if(!(this instanceof c))return new c;h.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function l(t,e,r,n){return t<=15?e^r^n:t<=31?e&r|~e&n:t<=47?(e|~r)^n:t<=63?e&n|r&~n:e^(r|~n)}function d(t){return t<=15?0:t<=31?1518500249:t<=47?1859775393:t<=63?2400959708:2840853838}function f(t){return t<=15?1352829926:t<=31?1548603684:t<=47?1836072691:t<=63?2053994217:0}n.inherits(c,h),e.ripemd160=c,c.blockSize=512,c.outSize=160,c.hmacStrength=192,c.padLength=64,c.prototype._update=function(t,e){for(var r=this.h[0],n=this.h[1],i=this.h[2],h=this.h[3],c=this.h[4],g=r,b=n,w=i,M=h,k=c,x=0;x<80;x++){var P=o(s(u(r,l(x,n,i,h),t[p[x]+e],d(x)),y[x]),c);r=c,c=h,h=s(i,10),i=n,n=P,P=o(s(u(g,l(79-x,b,w,M),t[m[x]+e],f(x)),v[x]),k),g=k,k=M,M=s(w,10),w=b,b=P}P=a(this.h[1],i,M),this.h[1]=a(this.h[2],h,k),this.h[2]=a(this.h[3],c,g),this.h[3]=a(this.h[4],r,b),this.h[4]=a(this.h[0],n,w),this.h[0]=P},c.prototype._digest=function(t){return"hex"===t?n.toHex32(this.h,"little"):n.split32(this.h,"little")};var p=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],m=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],y=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],v=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},89041:(t,e,r)=>{"use strict";e.sha1=r(84761),e.sha224=r(10799),e.sha256=r(89344),e.sha384=r(80772),e.sha512=r(45900)},84761:(t,e,r)=>{"use strict";var n=r(26436),i=r(95772),s=r(37038),o=n.rotl32,a=n.sum32,u=n.sum32_5,h=s.ft_1,c=i.BlockHash,l=[1518500249,1859775393,2400959708,3395469782];function d(){if(!(this instanceof d))return new d;c.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}n.inherits(d,c),t.exports=d,d.blockSize=512,d.outSize=160,d.hmacStrength=80,d.padLength=64,d.prototype._update=function(t,e){for(var r=this.W,n=0;n<16;n++)r[n]=t[e+n];for(;n<r.length;n++)r[n]=o(r[n-3]^r[n-8]^r[n-14]^r[n-16],1);var i=this.h[0],s=this.h[1],c=this.h[2],d=this.h[3],f=this.h[4];for(n=0;n<r.length;n++){var p=~~(n/20),m=u(o(i,5),h(p,s,c,d),f,r[n],l[p]);f=d,d=c,c=o(s,30),s=i,i=m}this.h[0]=a(this.h[0],i),this.h[1]=a(this.h[1],s),this.h[2]=a(this.h[2],c),this.h[3]=a(this.h[3],d),this.h[4]=a(this.h[4],f)},d.prototype._digest=function(t){return"hex"===t?n.toHex32(this.h,"big"):n.split32(this.h,"big")}},10799:(t,e,r)=>{"use strict";var n=r(26436),i=r(89344);function s(){if(!(this instanceof s))return new s;i.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}n.inherits(s,i),t.exports=s,s.blockSize=512,s.outSize=224,s.hmacStrength=192,s.padLength=64,s.prototype._digest=function(t){return"hex"===t?n.toHex32(this.h.slice(0,7),"big"):n.split32(this.h.slice(0,7),"big")}},89344:(t,e,r)=>{"use strict";var n=r(26436),i=r(95772),s=r(37038),o=r(79746),a=n.sum32,u=n.sum32_4,h=n.sum32_5,c=s.ch32,l=s.maj32,d=s.s0_256,f=s.s1_256,p=s.g0_256,m=s.g1_256,y=i.BlockHash,v=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function g(){if(!(this instanceof g))return new g;y.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=v,this.W=new Array(64)}n.inherits(g,y),t.exports=g,g.blockSize=512,g.outSize=256,g.hmacStrength=192,g.padLength=64,g.prototype._update=function(t,e){for(var r=this.W,n=0;n<16;n++)r[n]=t[e+n];for(;n<r.length;n++)r[n]=u(m(r[n-2]),r[n-7],p(r[n-15]),r[n-16]);var i=this.h[0],s=this.h[1],y=this.h[2],v=this.h[3],g=this.h[4],b=this.h[5],w=this.h[6],M=this.h[7];for(o(this.k.length===r.length),n=0;n<r.length;n++){var k=h(M,f(g),c(g,b,w),this.k[n],r[n]),x=a(d(i),l(i,s,y));M=w,w=b,b=g,g=a(v,k),v=y,y=s,s=i,i=a(k,x)}this.h[0]=a(this.h[0],i),this.h[1]=a(this.h[1],s),this.h[2]=a(this.h[2],y),this.h[3]=a(this.h[3],v),this.h[4]=a(this.h[4],g),this.h[5]=a(this.h[5],b),this.h[6]=a(this.h[6],w),this.h[7]=a(this.h[7],M)},g.prototype._digest=function(t){return"hex"===t?n.toHex32(this.h,"big"):n.split32(this.h,"big")}},80772:(t,e,r)=>{"use strict";var n=r(26436),i=r(45900);function s(){if(!(this instanceof s))return new s;i.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}n.inherits(s,i),t.exports=s,s.blockSize=1024,s.outSize=384,s.hmacStrength=192,s.padLength=128,s.prototype._digest=function(t){return"hex"===t?n.toHex32(this.h.slice(0,12),"big"):n.split32(this.h.slice(0,12),"big")}},45900:(t,e,r)=>{"use strict";var n=r(26436),i=r(95772),s=r(79746),o=n.rotr64_hi,a=n.rotr64_lo,u=n.shr64_hi,h=n.shr64_lo,c=n.sum64,l=n.sum64_hi,d=n.sum64_lo,f=n.sum64_4_hi,p=n.sum64_4_lo,m=n.sum64_5_hi,y=n.sum64_5_lo,v=i.BlockHash,g=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function b(){if(!(this instanceof b))return new b;v.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=g,this.W=new Array(160)}function w(t,e,r,n,i){var s=t&r^~t&i;return s<0&&(s+=4294967296),s}function M(t,e,r,n,i,s){var o=e&n^~e&s;return o<0&&(o+=4294967296),o}function k(t,e,r,n,i){var s=t&r^t&i^r&i;return s<0&&(s+=4294967296),s}function x(t,e,r,n,i,s){var o=e&n^e&s^n&s;return o<0&&(o+=4294967296),o}function P(t,e){var r=o(t,e,28)^o(e,t,2)^o(e,t,7);return r<0&&(r+=4294967296),r}function L(t,e){var r=a(t,e,28)^a(e,t,2)^a(e,t,7);return r<0&&(r+=4294967296),r}function T(t,e){var r=o(t,e,14)^o(t,e,18)^o(e,t,9);return r<0&&(r+=4294967296),r}function S(t,e){var r=a(t,e,14)^a(t,e,18)^a(e,t,9);return r<0&&(r+=4294967296),r}function A(t,e){var r=o(t,e,1)^o(t,e,8)^u(t,e,7);return r<0&&(r+=4294967296),r}function D(t,e){var r=a(t,e,1)^a(t,e,8)^h(t,e,7);return r<0&&(r+=4294967296),r}function j(t,e){var r=o(t,e,19)^o(e,t,29)^u(t,e,6);return r<0&&(r+=4294967296),r}function H(t,e){var r=a(t,e,19)^a(e,t,29)^h(t,e,6);return r<0&&(r+=4294967296),r}n.inherits(b,v),t.exports=b,b.blockSize=1024,b.outSize=512,b.hmacStrength=192,b.padLength=128,b.prototype._prepareBlock=function(t,e){for(var r=this.W,n=0;n<32;n++)r[n]=t[e+n];for(;n<r.length;n+=2){var i=j(r[n-4],r[n-3]),s=H(r[n-4],r[n-3]),o=r[n-14],a=r[n-13],u=A(r[n-30],r[n-29]),h=D(r[n-30],r[n-29]),c=r[n-32],l=r[n-31];r[n]=f(i,s,o,a,u,h,c,l),r[n+1]=p(i,s,o,a,u,h,c,l)}},b.prototype._update=function(t,e){this._prepareBlock(t,e);var r=this.W,n=this.h[0],i=this.h[1],o=this.h[2],a=this.h[3],u=this.h[4],h=this.h[5],f=this.h[6],p=this.h[7],v=this.h[8],g=this.h[9],b=this.h[10],A=this.h[11],D=this.h[12],j=this.h[13],H=this.h[14],O=this.h[15];s(this.k.length===r.length);for(var z=0;z<r.length;z+=2){var N=H,E=O,Y=T(v,g),R=S(v,g),I=w(v,g,b,A,D),B=M(v,g,b,A,D,j),X=this.k[z],V=this.k[z+1],C=r[z],W=r[z+1],q=m(N,E,Y,R,I,B,X,V,C,W),Z=y(N,E,Y,R,I,B,X,V,C,W);N=P(n,i),E=L(n,i),Y=k(n,i,o,a,u),R=x(n,i,o,a,u,h);var F=l(N,E,Y,R),U=d(N,E,Y,R);H=D,O=j,D=b,j=A,b=v,A=g,v=l(f,p,q,Z),g=d(p,p,q,Z),f=u,p=h,u=o,h=a,o=n,a=i,n=l(q,Z,F,U),i=d(q,Z,F,U)}c(this.h,0,n,i),c(this.h,2,o,a),c(this.h,4,u,h),c(this.h,6,f,p),c(this.h,8,v,g),c(this.h,10,b,A),c(this.h,12,D,j),c(this.h,14,H,O)},b.prototype._digest=function(t){return"hex"===t?n.toHex32(this.h,"big"):n.split32(this.h,"big")}},37038:(t,e,r)=>{"use strict";var n=r(26436).rotr32;function i(t,e,r){return t&e^~t&r}function s(t,e,r){return t&e^t&r^e&r}function o(t,e,r){return t^e^r}e.ft_1=function(t,e,r,n){return 0===t?i(e,r,n):1===t||3===t?o(e,r,n):2===t?s(e,r,n):void 0},e.ch32=i,e.maj32=s,e.p32=o,e.s0_256=function(t){return n(t,2)^n(t,13)^n(t,22)},e.s1_256=function(t){return n(t,6)^n(t,11)^n(t,25)},e.g0_256=function(t){return n(t,7)^n(t,18)^t>>>3},e.g1_256=function(t){return n(t,17)^n(t,19)^t>>>10}},26436:(t,e,r)=>{"use strict";var n=r(79746),i=r(35717);function s(t,e){return 55296==(64512&t.charCodeAt(e))&&(!(e<0||e+1>=t.length)&&56320==(64512&t.charCodeAt(e+1)))}function o(t){return(t>>>24|t>>>8&65280|t<<8&16711680|(255&t)<<24)>>>0}function a(t){return 1===t.length?"0"+t:t}function u(t){return 7===t.length?"0"+t:6===t.length?"00"+t:5===t.length?"000"+t:4===t.length?"0000"+t:3===t.length?"00000"+t:2===t.length?"000000"+t:1===t.length?"0000000"+t:t}e.inherits=i,e.toArray=function(t,e){if(Array.isArray(t))return t.slice();if(!t)return[];var r=[];if("string"==typeof t)if(e){if("hex"===e)for((t=t.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(t="0"+t),i=0;i<t.length;i+=2)r.push(parseInt(t[i]+t[i+1],16))}else for(var n=0,i=0;i<t.length;i++){var o=t.charCodeAt(i);o<128?r[n++]=o:o<2048?(r[n++]=o>>6|192,r[n++]=63&o|128):s(t,i)?(o=65536+((1023&o)<<10)+(1023&t.charCodeAt(++i)),r[n++]=o>>18|240,r[n++]=o>>12&63|128,r[n++]=o>>6&63|128,r[n++]=63&o|128):(r[n++]=o>>12|224,r[n++]=o>>6&63|128,r[n++]=63&o|128)}else for(i=0;i<t.length;i++)r[i]=0|t[i];return r},e.toHex=function(t){for(var e="",r=0;r<t.length;r++)e+=a(t[r].toString(16));return e},e.htonl=o,e.toHex32=function(t,e){for(var r="",n=0;n<t.length;n++){var i=t[n];"little"===e&&(i=o(i)),r+=u(i.toString(16))}return r},e.zero2=a,e.zero8=u,e.join32=function(t,e,r,i){var s=r-e;n(s%4==0);for(var o=new Array(s/4),a=0,u=e;a<o.length;a++,u+=4){var h;h="big"===i?t[u]<<24|t[u+1]<<16|t[u+2]<<8|t[u+3]:t[u+3]<<24|t[u+2]<<16|t[u+1]<<8|t[u],o[a]=h>>>0}return o},e.split32=function(t,e){for(var r=new Array(4*t.length),n=0,i=0;n<t.length;n++,i+=4){var s=t[n];"big"===e?(r[i]=s>>>24,r[i+1]=s>>>16&255,r[i+2]=s>>>8&255,r[i+3]=255&s):(r[i+3]=s>>>24,r[i+2]=s>>>16&255,r[i+1]=s>>>8&255,r[i]=255&s)}return r},e.rotr32=function(t,e){return t>>>e|t<<32-e},e.rotl32=function(t,e){return t<<e|t>>>32-e},e.sum32=function(t,e){return t+e>>>0},e.sum32_3=function(t,e,r){return t+e+r>>>0},e.sum32_4=function(t,e,r,n){return t+e+r+n>>>0},e.sum32_5=function(t,e,r,n,i){return t+e+r+n+i>>>0},e.sum64=function(t,e,r,n){var i=t[e],s=n+t[e+1]>>>0,o=(s<n?1:0)+r+i;t[e]=o>>>0,t[e+1]=s},e.sum64_hi=function(t,e,r,n){return(e+n>>>0<e?1:0)+t+r>>>0},e.sum64_lo=function(t,e,r,n){return e+n>>>0},e.sum64_4_hi=function(t,e,r,n,i,s,o,a){var u=0,h=e;return u+=(h=h+n>>>0)<e?1:0,u+=(h=h+s>>>0)<s?1:0,t+r+i+o+(u+=(h=h+a>>>0)<a?1:0)>>>0},e.sum64_4_lo=function(t,e,r,n,i,s,o,a){return e+n+s+a>>>0},e.sum64_5_hi=function(t,e,r,n,i,s,o,a,u,h){var c=0,l=e;return c+=(l=l+n>>>0)<e?1:0,c+=(l=l+s>>>0)<s?1:0,c+=(l=l+a>>>0)<a?1:0,t+r+i+o+u+(c+=(l=l+h>>>0)<h?1:0)>>>0},e.sum64_5_lo=function(t,e,r,n,i,s,o,a,u,h){return e+n+s+a+h>>>0},e.rotr64_hi=function(t,e,r){return(e<<32-r|t>>>r)>>>0},e.rotr64_lo=function(t,e,r){return(t<<32-r|e>>>r)>>>0},e.shr64_hi=function(t,e,r){return t>>>r},e.shr64_lo=function(t,e,r){return(t<<32-r|e>>>r)>>>0}},2156:(t,e,r)=>{"use strict";var n=r(33715),i=r(34504),s=r(79746);function o(t){if(!(this instanceof o))return new o(t);this.hash=t.hash,this.predResist=!!t.predResist,this.outLen=this.hash.outSize,this.minEntropy=t.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var e=i.toArray(t.entropy,t.entropyEnc||"hex"),r=i.toArray(t.nonce,t.nonceEnc||"hex"),n=i.toArray(t.pers,t.persEnc||"hex");s(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(e,r,n)}t.exports=o,o.prototype._init=function(t,e,r){var n=t.concat(e).concat(r);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++)this.K[i]=0,this.V[i]=1;this._update(n),this._reseed=1,this.reseedInterval=281474976710656},o.prototype._hmac=function(){return new n.hmac(this.hash,this.K)},o.prototype._update=function(t){var e=this._hmac().update(this.V).update([0]);t&&(e=e.update(t)),this.K=e.digest(),this.V=this._hmac().update(this.V).digest(),t&&(this.K=this._hmac().update(this.V).update([1]).update(t).digest(),this.V=this._hmac().update(this.V).digest())},o.prototype.reseed=function(t,e,r,n){"string"!=typeof e&&(n=r,r=e,e=null),t=i.toArray(t,e),r=i.toArray(r,n),s(t.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(t.concat(r||[])),this._reseed=1},o.prototype.generate=function(t,e,r,n){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof e&&(n=r,r=e,e=null),r&&(r=i.toArray(r,n||"hex"),this._update(r));for(var s=[];s.length<t;)this.V=this._hmac().update(this.V).digest(),s=s.concat(this.V);var o=s.slice(0,t);return this._update(r),this._reseed++,i.encode(o,e)}},80645:(t,e)=>{
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
e.read=function(t,e,r,n,i){var s,o,a=8*i-n-1,u=(1<<a)-1,h=u>>1,c=-7,l=r?i-1:0,d=r?-1:1,f=t[e+l];for(l+=d,s=f&(1<<-c)-1,f>>=-c,c+=a;c>0;s=256*s+t[e+l],l+=d,c-=8);for(o=s&(1<<-c)-1,s>>=-c,c+=n;c>0;o=256*o+t[e+l],l+=d,c-=8);if(0===s)s=1-h;else{if(s===u)return o?NaN:1/0*(f?-1:1);o+=Math.pow(2,n),s-=h}return(f?-1:1)*o*Math.pow(2,s-n)},e.write=function(t,e,r,n,i,s){var o,a,u,h=8*s-i-1,c=(1<<h)-1,l=c>>1,d=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,f=n?0:s-1,p=n?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,o=c):(o=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-o))<1&&(o--,u*=2),(e+=o+l>=1?d/u:d*Math.pow(2,1-l))*u>=2&&(o++,u/=2),o+l>=c?(a=0,o=c):o+l>=1?(a=(e*u-1)*Math.pow(2,i),o+=l):(a=e*Math.pow(2,l-1)*Math.pow(2,i),o=0));i>=8;t[r+f]=255&a,f+=p,a/=256,i-=8);for(o=o<<i|a,h+=i;h>0;t[r+f]=255&o,f+=p,o/=256,h-=8);t[r+f-p]|=128*m}},35717:t=>{"function"==typeof Object.create?t.exports=function(t,e){e&&(t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}))}:t.exports=function(t,e){if(e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}}},82584:(t,e,r)=>{"use strict";var n=r(96410)(),i=r(21924)("Object.prototype.toString"),s=function(t){return!(n&&t&&"object"==typeof t&&Symbol.toStringTag in t)&&"[object Arguments]"===i(t)},o=function(t){return!!s(t)||null!==t&&"object"==typeof t&&"number"==typeof t.length&&t.length>=0&&"[object Array]"!==i(t)&&"[object Function]"===i(t.callee)},a=function(){return s(arguments)}();s.isLegacyArguments=o,t.exports=a?s:o},48662:(t,e,r)=>{"use strict";var n,i=Object.prototype.toString,s=Function.prototype.toString,o=/^\s*(?:function)?\*/,a=r(96410)(),u=Object.getPrototypeOf;t.exports=function(t){if("function"!=typeof t)return!1;if(o.test(s.call(t)))return!0;if(!a)return"[object GeneratorFunction]"===i.call(t);if(!u)return!1;if(void 0===n){var e=function(){if(!a)return!1;try{return Function("return function*() {}")()}catch(t){}}();n=!!e&&u(e)}return u(t)===n}},23944:t=>{t.exports=function(t){if("string"!=typeof t)throw new Error("[is-hex-prefixed] value must be type 'string', is currently type "+typeof t+", while checking isHexPrefixed.");return"0x"===t.slice(0,2)}},98611:t=>{"use strict";t.exports=function(t){return t!=t}},20360:(t,e,r)=>{"use strict";var n=r(55559),i=r(4289),s=r(98611),o=r(29415),a=r(23194),u=n(o(),Number);i(u,{getPolyfill:o,implementation:s,shim:a}),t.exports=u},29415:(t,e,r)=>{"use strict";var n=r(98611);t.exports=function(){return Number.isNaN&&Number.isNaN(NaN)&&!Number.isNaN("a")?Number.isNaN:n}},23194:(t,e,r)=>{"use strict";var n=r(4289),i=r(29415);t.exports=function(){var t=i();return n(Number,{isNaN:t},{isNaN:function(){return Number.isNaN!==t}}),t}},85692:(t,e,r)=>{"use strict";var n=r(49804),i=r(63083),s=r(21924),o=s("Object.prototype.toString"),a=r(96410)(),u="undefined"==typeof globalThis?r.g:globalThis,h=i(),c=s("Array.prototype.indexOf",!0)||function(t,e){for(var r=0;r<t.length;r+=1)if(t[r]===e)return r;return-1},l=s("String.prototype.slice"),d={},f=r(20882),p=Object.getPrototypeOf;a&&f&&p&&n(h,(function(t){var e=new u[t];if(Symbol.toStringTag in e){var r=p(e),n=f(r,Symbol.toStringTag);if(!n){var i=p(r);n=f(i,Symbol.toStringTag)}d[t]=n.get}}));t.exports=function(t){if(!t||"object"!=typeof t)return!1;if(!a||!(Symbol.toStringTag in t)){var e=l(o(t),8,-1);return c(h,e)>-1}return!!f&&function(t){var e=!1;return n(d,(function(r,n){if(!e)try{e=r.call(t)===n}catch(t){}})),e}(t)}},91094:(t,e,r)=>{var n,i=r(34155);
/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */
!function(){"use strict";var s="input is invalid type",o="object"==typeof window,a=o?window:{};a.JS_SHA3_NO_WINDOW&&(o=!1);var u=!o&&"object"==typeof self;!a.JS_SHA3_NO_NODE_JS&&"object"==typeof i&&i.versions&&i.versions.node?a=r.g:u&&(a=self);var h=!a.JS_SHA3_NO_COMMON_JS&&t.exports,c=r.amdO,l=!a.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,d="0123456789abcdef".split(""),f=[4,1024,262144,67108864],p=[0,8,16,24],m=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],y=[224,256,384,512],v=[128,256],g=["hex","buffer","arrayBuffer","array","digest"],b={128:168,256:136};!a.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)}),!l||!a.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(t){return"object"==typeof t&&t.buffer&&t.buffer.constructor===ArrayBuffer});for(var w=function(t,e,r){return function(n){return new E(t,e,t).update(n)[r]()}},M=function(t,e,r){return function(n,i){return new E(t,e,i).update(n)[r]()}},k=function(t,e,r){return function(e,n,i,s){return S["cshake"+t].update(e,n,i,s)[r]()}},x=function(t,e,r){return function(e,n,i,s){return S["kmac"+t].update(e,n,i,s)[r]()}},P=function(t,e,r,n){for(var i=0;i<g.length;++i){var s=g[i];t[s]=e(r,n,s)}return t},L=function(t,e){var r=w(t,e,"hex");return r.create=function(){return new E(t,e,t)},r.update=function(t){return r.create().update(t)},P(r,w,t,e)},T=[{name:"keccak",padding:[1,256,65536,16777216],bits:y,createMethod:L},{name:"sha3",padding:[6,1536,393216,100663296],bits:y,createMethod:L},{name:"shake",padding:[31,7936,2031616,520093696],bits:v,createMethod:function(t,e){var r=M(t,e,"hex");return r.create=function(r){return new E(t,e,r)},r.update=function(t,e){return r.create(e).update(t)},P(r,M,t,e)}},{name:"cshake",padding:f,bits:v,createMethod:function(t,e){var r=b[t],n=k(t,0,"hex");return n.create=function(n,i,s){return i||s?new E(t,e,n).bytepad([i,s],r):S["shake"+t].create(n)},n.update=function(t,e,r,i){return n.create(e,r,i).update(t)},P(n,k,t,e)}},{name:"kmac",padding:f,bits:v,createMethod:function(t,e){var r=b[t],n=x(t,0,"hex");return n.create=function(n,i,s){return new Y(t,e,i).bytepad(["KMAC",s],r).bytepad([n],r)},n.update=function(t,e,r,i){return n.create(t,r,i).update(e)},P(n,x,t,e)}}],S={},A=[],D=0;D<T.length;++D)for(var j=T[D],H=j.bits,O=0;O<H.length;++O){var z=j.name+"_"+H[O];if(A.push(z),S[z]=j.createMethod(H[O],j.padding),"sha3"!==j.name){var N=j.name+H[O];A.push(N),S[N]=S[z]}}function E(t,e,r){this.blocks=[],this.s=[],this.padding=e,this.outputBits=r,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(t<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=r>>5,this.extraBytes=(31&r)>>3;for(var n=0;n<50;++n)this.s[n]=0}function Y(t,e,r){E.call(this,t,e,r)}E.prototype.update=function(t){if(this.finalized)throw new Error("finalize already called");var e,r=typeof t;if("string"!==r){if("object"!==r)throw new Error(s);if(null===t)throw new Error(s);if(l&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||l&&ArrayBuffer.isView(t)))throw new Error(s);e=!0}for(var n,i,o=this.blocks,a=this.byteCount,u=t.length,h=this.blockCount,c=0,d=this.s;c<u;){if(this.reset)for(this.reset=!1,o[0]=this.block,n=1;n<h+1;++n)o[n]=0;if(e)for(n=this.start;c<u&&n<a;++c)o[n>>2]|=t[c]<<p[3&n++];else for(n=this.start;c<u&&n<a;++c)(i=t.charCodeAt(c))<128?o[n>>2]|=i<<p[3&n++]:i<2048?(o[n>>2]|=(192|i>>6)<<p[3&n++],o[n>>2]|=(128|63&i)<<p[3&n++]):i<55296||i>=57344?(o[n>>2]|=(224|i>>12)<<p[3&n++],o[n>>2]|=(128|i>>6&63)<<p[3&n++],o[n>>2]|=(128|63&i)<<p[3&n++]):(i=65536+((1023&i)<<10|1023&t.charCodeAt(++c)),o[n>>2]|=(240|i>>18)<<p[3&n++],o[n>>2]|=(128|i>>12&63)<<p[3&n++],o[n>>2]|=(128|i>>6&63)<<p[3&n++],o[n>>2]|=(128|63&i)<<p[3&n++]);if(this.lastByteIndex=n,n>=a){for(this.start=n-a,this.block=o[h],n=0;n<h;++n)d[n]^=o[n];R(d),this.reset=!0}else this.start=n}return this},E.prototype.encode=function(t,e){var r=255&t,n=1,i=[r];for(r=255&(t>>=8);r>0;)i.unshift(r),r=255&(t>>=8),++n;return e?i.push(n):i.unshift(n),this.update(i),i.length},E.prototype.encodeString=function(t){var e,r=typeof t;if("string"!==r){if("object"!==r)throw new Error(s);if(null===t)throw new Error(s);if(l&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||l&&ArrayBuffer.isView(t)))throw new Error(s);e=!0}var n=0,i=t.length;if(e)n=i;else for(var o=0;o<t.length;++o){var a=t.charCodeAt(o);a<128?n+=1:a<2048?n+=2:a<55296||a>=57344?n+=3:(a=65536+((1023&a)<<10|1023&t.charCodeAt(++o)),n+=4)}return n+=this.encode(8*n),this.update(t),n},E.prototype.bytepad=function(t,e){for(var r=this.encode(e),n=0;n<t.length;++n)r+=this.encodeString(t[n]);var i=e-r%e,s=[];return s.length=i,this.update(s),this},E.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var t=this.blocks,e=this.lastByteIndex,r=this.blockCount,n=this.s;if(t[e>>2]|=this.padding[3&e],this.lastByteIndex===this.byteCount)for(t[0]=t[r],e=1;e<r+1;++e)t[e]=0;for(t[r-1]|=2147483648,e=0;e<r;++e)n[e]^=t[e];R(n)}},E.prototype.toString=E.prototype.hex=function(){this.finalize();for(var t,e=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,s=0,o=0,a="";o<n;){for(s=0;s<e&&o<n;++s,++o)t=r[s],a+=d[t>>4&15]+d[15&t]+d[t>>12&15]+d[t>>8&15]+d[t>>20&15]+d[t>>16&15]+d[t>>28&15]+d[t>>24&15];o%e==0&&(R(r),s=0)}return i&&(t=r[s],a+=d[t>>4&15]+d[15&t],i>1&&(a+=d[t>>12&15]+d[t>>8&15]),i>2&&(a+=d[t>>20&15]+d[t>>16&15])),a},E.prototype.arrayBuffer=function(){this.finalize();var t,e=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,s=0,o=0,a=this.outputBits>>3;t=i?new ArrayBuffer(n+1<<2):new ArrayBuffer(a);for(var u=new Uint32Array(t);o<n;){for(s=0;s<e&&o<n;++s,++o)u[o]=r[s];o%e==0&&R(r)}return i&&(u[s]=r[s],t=t.slice(0,a)),t},E.prototype.buffer=E.prototype.arrayBuffer,E.prototype.digest=E.prototype.array=function(){this.finalize();for(var t,e,r=this.blockCount,n=this.s,i=this.outputBlocks,s=this.extraBytes,o=0,a=0,u=[];a<i;){for(o=0;o<r&&a<i;++o,++a)t=a<<2,e=n[o],u[t]=255&e,u[t+1]=e>>8&255,u[t+2]=e>>16&255,u[t+3]=e>>24&255;a%r==0&&R(n)}return s&&(t=a<<2,e=n[o],u[t]=255&e,s>1&&(u[t+1]=e>>8&255),s>2&&(u[t+2]=e>>16&255)),u},Y.prototype=new E,Y.prototype.finalize=function(){return this.encode(this.outputBits,!0),E.prototype.finalize.call(this)};var R=function(t){var e,r,n,i,s,o,a,u,h,c,l,d,f,p,y,v,g,b,w,M,k,x,P,L,T,S,A,D,j,H,O,z,N,E,Y,R,I,B,X,V,C,W,q,Z,F,U,G,_,K,J,Q,$,tt,et,rt,nt,it,st,ot,at,ut,ht,ct;for(n=0;n<48;n+=2)i=t[0]^t[10]^t[20]^t[30]^t[40],s=t[1]^t[11]^t[21]^t[31]^t[41],o=t[2]^t[12]^t[22]^t[32]^t[42],a=t[3]^t[13]^t[23]^t[33]^t[43],u=t[4]^t[14]^t[24]^t[34]^t[44],h=t[5]^t[15]^t[25]^t[35]^t[45],c=t[6]^t[16]^t[26]^t[36]^t[46],l=t[7]^t[17]^t[27]^t[37]^t[47],e=(d=t[8]^t[18]^t[28]^t[38]^t[48])^(o<<1|a>>>31),r=(f=t[9]^t[19]^t[29]^t[39]^t[49])^(a<<1|o>>>31),t[0]^=e,t[1]^=r,t[10]^=e,t[11]^=r,t[20]^=e,t[21]^=r,t[30]^=e,t[31]^=r,t[40]^=e,t[41]^=r,e=i^(u<<1|h>>>31),r=s^(h<<1|u>>>31),t[2]^=e,t[3]^=r,t[12]^=e,t[13]^=r,t[22]^=e,t[23]^=r,t[32]^=e,t[33]^=r,t[42]^=e,t[43]^=r,e=o^(c<<1|l>>>31),r=a^(l<<1|c>>>31),t[4]^=e,t[5]^=r,t[14]^=e,t[15]^=r,t[24]^=e,t[25]^=r,t[34]^=e,t[35]^=r,t[44]^=e,t[45]^=r,e=u^(d<<1|f>>>31),r=h^(f<<1|d>>>31),t[6]^=e,t[7]^=r,t[16]^=e,t[17]^=r,t[26]^=e,t[27]^=r,t[36]^=e,t[37]^=r,t[46]^=e,t[47]^=r,e=c^(i<<1|s>>>31),r=l^(s<<1|i>>>31),t[8]^=e,t[9]^=r,t[18]^=e,t[19]^=r,t[28]^=e,t[29]^=r,t[38]^=e,t[39]^=r,t[48]^=e,t[49]^=r,p=t[0],y=t[1],U=t[11]<<4|t[10]>>>28,G=t[10]<<4|t[11]>>>28,D=t[20]<<3|t[21]>>>29,j=t[21]<<3|t[20]>>>29,at=t[31]<<9|t[30]>>>23,ut=t[30]<<9|t[31]>>>23,W=t[40]<<18|t[41]>>>14,q=t[41]<<18|t[40]>>>14,E=t[2]<<1|t[3]>>>31,Y=t[3]<<1|t[2]>>>31,v=t[13]<<12|t[12]>>>20,g=t[12]<<12|t[13]>>>20,_=t[22]<<10|t[23]>>>22,K=t[23]<<10|t[22]>>>22,H=t[33]<<13|t[32]>>>19,O=t[32]<<13|t[33]>>>19,ht=t[42]<<2|t[43]>>>30,ct=t[43]<<2|t[42]>>>30,et=t[5]<<30|t[4]>>>2,rt=t[4]<<30|t[5]>>>2,R=t[14]<<6|t[15]>>>26,I=t[15]<<6|t[14]>>>26,b=t[25]<<11|t[24]>>>21,w=t[24]<<11|t[25]>>>21,J=t[34]<<15|t[35]>>>17,Q=t[35]<<15|t[34]>>>17,z=t[45]<<29|t[44]>>>3,N=t[44]<<29|t[45]>>>3,L=t[6]<<28|t[7]>>>4,T=t[7]<<28|t[6]>>>4,nt=t[17]<<23|t[16]>>>9,it=t[16]<<23|t[17]>>>9,B=t[26]<<25|t[27]>>>7,X=t[27]<<25|t[26]>>>7,M=t[36]<<21|t[37]>>>11,k=t[37]<<21|t[36]>>>11,$=t[47]<<24|t[46]>>>8,tt=t[46]<<24|t[47]>>>8,Z=t[8]<<27|t[9]>>>5,F=t[9]<<27|t[8]>>>5,S=t[18]<<20|t[19]>>>12,A=t[19]<<20|t[18]>>>12,st=t[29]<<7|t[28]>>>25,ot=t[28]<<7|t[29]>>>25,V=t[38]<<8|t[39]>>>24,C=t[39]<<8|t[38]>>>24,x=t[48]<<14|t[49]>>>18,P=t[49]<<14|t[48]>>>18,t[0]=p^~v&b,t[1]=y^~g&w,t[10]=L^~S&D,t[11]=T^~A&j,t[20]=E^~R&B,t[21]=Y^~I&X,t[30]=Z^~U&_,t[31]=F^~G&K,t[40]=et^~nt&st,t[41]=rt^~it&ot,t[2]=v^~b&M,t[3]=g^~w&k,t[12]=S^~D&H,t[13]=A^~j&O,t[22]=R^~B&V,t[23]=I^~X&C,t[32]=U^~_&J,t[33]=G^~K&Q,t[42]=nt^~st&at,t[43]=it^~ot&ut,t[4]=b^~M&x,t[5]=w^~k&P,t[14]=D^~H&z,t[15]=j^~O&N,t[24]=B^~V&W,t[25]=X^~C&q,t[34]=_^~J&$,t[35]=K^~Q&tt,t[44]=st^~at&ht,t[45]=ot^~ut&ct,t[6]=M^~x&p,t[7]=k^~P&y,t[16]=H^~z&L,t[17]=O^~N&T,t[26]=V^~W&E,t[27]=C^~q&Y,t[36]=J^~$&Z,t[37]=Q^~tt&F,t[46]=at^~ht&et,t[47]=ut^~ct&rt,t[8]=x^~p&v,t[9]=P^~y&g,t[18]=z^~L&S,t[19]=N^~T&A,t[28]=W^~E&R,t[29]=q^~Y&I,t[38]=$^~Z&U,t[39]=tt^~F&G,t[48]=ht^~et&nt,t[49]=ct^~rt&it,t[0]^=m[n],t[1]^=m[n+1]};if(h)t.exports=S;else{for(D=0;D<A.length;++D)a[A[D]]=S[A[D]];c&&(void 0===(n=function(){return S}.call(e,r,e,t))||(t.exports=n))}}()},2043:function(t,e,r){var n,i;!function(s,o){"use strict";n=function(){var t=function(){},e="undefined",r=typeof window!==e&&typeof window.navigator!==e&&/Trident\/|MSIE /.test(window.navigator.userAgent),n=["trace","debug","info","warn","error"];function i(t,e){var r=t[e];if("function"==typeof r.bind)return r.bind(t);try{return Function.prototype.bind.call(r,t)}catch(e){return function(){return Function.prototype.apply.apply(r,[t,arguments])}}}function s(){console.log&&(console.log.apply?console.log.apply(console,arguments):Function.prototype.apply.apply(console.log,[console,arguments])),console.trace&&console.trace()}function o(n){return"debug"===n&&(n="log"),typeof console!==e&&("trace"===n&&r?s:void 0!==console[n]?i(console,n):void 0!==console.log?i(console,"log"):t)}function a(e,r){for(var i=0;i<n.length;i++){var s=n[i];this[s]=i<e?t:this.methodFactory(s,e,r)}this.log=this.debug}function u(t,r,n){return function(){typeof console!==e&&(a.call(this,r,n),this[t].apply(this,arguments))}}function h(t,e,r){return o(t)||u.apply(this,arguments)}function c(t,r,i){var s,o=this,u="loglevel";function c(t){var r=(n[t]||"silent").toUpperCase();if(typeof window!==e&&u){try{return void(window.localStorage[u]=r)}catch(t){}try{window.document.cookie=encodeURIComponent(u)+"="+r+";"}catch(t){}}}function l(){var t;if(typeof window!==e&&u){try{t=window.localStorage[u]}catch(t){}if(typeof t===e)try{var r=window.document.cookie,n=r.indexOf(encodeURIComponent(u)+"=");-1!==n&&(t=/^([^;]+)/.exec(r.slice(n))[1])}catch(t){}return void 0===o.levels[t]&&(t=void 0),t}}"string"==typeof t?u+=":"+t:"symbol"==typeof t&&(u=void 0),o.name=t,o.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},o.methodFactory=i||h,o.getLevel=function(){return s},o.setLevel=function(r,n){if("string"==typeof r&&void 0!==o.levels[r.toUpperCase()]&&(r=o.levels[r.toUpperCase()]),!("number"==typeof r&&r>=0&&r<=o.levels.SILENT))throw"log.setLevel() called with invalid level: "+r;if(s=r,!1!==n&&c(r),a.call(o,r,t),typeof console===e&&r<o.levels.SILENT)return"No console available for logging"},o.setDefaultLevel=function(t){l()||o.setLevel(t,!1)},o.enableAll=function(t){o.setLevel(o.levels.TRACE,t)},o.disableAll=function(t){o.setLevel(o.levels.SILENT,t)};var d=l();null==d&&(d=null==r?"WARN":r),o.setLevel(d,!1)}var l=new c,d={};l.getLogger=function(t){if("symbol"!=typeof t&&"string"!=typeof t||""===t)throw new TypeError("You must supply a name when creating a logger.");var e=d[t];return e||(e=d[t]=new c(t,l.getLevel(),l.methodFactory)),e};var f=typeof window!==e?window.log:void 0;return l.noConflict=function(){return typeof window!==e&&window.log===l&&(window.log=f),l},l.getLoggers=function(){return d},l.default=l,l},void 0===(i="function"==typeof n?n.call(e,r,e,t):n)||(t.exports=i)}()},62318:(t,e,r)=>{"use strict";var n=r(35717),i=r(3349),s=r(89509).Buffer,o=new Array(16);function a(){i.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878}function u(t,e){return t<<e|t>>>32-e}function h(t,e,r,n,i,s,o){return u(t+(e&r|~e&n)+i+s|0,o)+e|0}function c(t,e,r,n,i,s,o){return u(t+(e&n|r&~n)+i+s|0,o)+e|0}function l(t,e,r,n,i,s,o){return u(t+(e^r^n)+i+s|0,o)+e|0}function d(t,e,r,n,i,s,o){return u(t+(r^(e|~n))+i+s|0,o)+e|0}n(a,i),a.prototype._update=function(){for(var t=o,e=0;e<16;++e)t[e]=this._block.readInt32LE(4*e);var r=this._a,n=this._b,i=this._c,s=this._d;r=h(r,n,i,s,t[0],3614090360,7),s=h(s,r,n,i,t[1],3905402710,12),i=h(i,s,r,n,t[2],606105819,17),n=h(n,i,s,r,t[3],3250441966,22),r=h(r,n,i,s,t[4],4118548399,7),s=h(s,r,n,i,t[5],1200080426,12),i=h(i,s,r,n,t[6],2821735955,17),n=h(n,i,s,r,t[7],4249261313,22),r=h(r,n,i,s,t[8],1770035416,7),s=h(s,r,n,i,t[9],2336552879,12),i=h(i,s,r,n,t[10],4294925233,17),n=h(n,i,s,r,t[11],2304563134,22),r=h(r,n,i,s,t[12],1804603682,7),s=h(s,r,n,i,t[13],4254626195,12),i=h(i,s,r,n,t[14],2792965006,17),r=c(r,n=h(n,i,s,r,t[15],1236535329,22),i,s,t[1],4129170786,5),s=c(s,r,n,i,t[6],3225465664,9),i=c(i,s,r,n,t[11],643717713,14),n=c(n,i,s,r,t[0],3921069994,20),r=c(r,n,i,s,t[5],3593408605,5),s=c(s,r,n,i,t[10],38016083,9),i=c(i,s,r,n,t[15],3634488961,14),n=c(n,i,s,r,t[4],3889429448,20),r=c(r,n,i,s,t[9],568446438,5),s=c(s,r,n,i,t[14],3275163606,9),i=c(i,s,r,n,t[3],4107603335,14),n=c(n,i,s,r,t[8],1163531501,20),r=c(r,n,i,s,t[13],2850285829,5),s=c(s,r,n,i,t[2],4243563512,9),i=c(i,s,r,n,t[7],1735328473,14),r=l(r,n=c(n,i,s,r,t[12],2368359562,20),i,s,t[5],4294588738,4),s=l(s,r,n,i,t[8],2272392833,11),i=l(i,s,r,n,t[11],1839030562,16),n=l(n,i,s,r,t[14],4259657740,23),r=l(r,n,i,s,t[1],2763975236,4),s=l(s,r,n,i,t[4],1272893353,11),i=l(i,s,r,n,t[7],4139469664,16),n=l(n,i,s,r,t[10],3200236656,23),r=l(r,n,i,s,t[13],681279174,4),s=l(s,r,n,i,t[0],3936430074,11),i=l(i,s,r,n,t[3],3572445317,16),n=l(n,i,s,r,t[6],76029189,23),r=l(r,n,i,s,t[9],3654602809,4),s=l(s,r,n,i,t[12],3873151461,11),i=l(i,s,r,n,t[15],530742520,16),r=d(r,n=l(n,i,s,r,t[2],3299628645,23),i,s,t[0],4096336452,6),s=d(s,r,n,i,t[7],1126891415,10),i=d(i,s,r,n,t[14],2878612391,15),n=d(n,i,s,r,t[5],4237533241,21),r=d(r,n,i,s,t[12],1700485571,6),s=d(s,r,n,i,t[3],2399980690,10),i=d(i,s,r,n,t[10],4293915773,15),n=d(n,i,s,r,t[1],2240044497,21),r=d(r,n,i,s,t[8],1873313359,6),s=d(s,r,n,i,t[15],4264355552,10),i=d(i,s,r,n,t[6],2734768916,15),n=d(n,i,s,r,t[13],1309151649,21),r=d(r,n,i,s,t[4],4149444226,6),s=d(s,r,n,i,t[11],3174756917,10),i=d(i,s,r,n,t[2],718787259,15),n=d(n,i,s,r,t[9],3951481745,21),this._a=this._a+r|0,this._b=this._b+n|0,this._c=this._c+i|0,this._d=this._d+s|0},a.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var t=s.allocUnsafe(16);return t.writeInt32LE(this._a,0),t.writeInt32LE(this._b,4),t.writeInt32LE(this._c,8),t.writeInt32LE(this._d,12),t},t.exports=a},74841:(t,e)=>{"use strict";function r(...t){const e=(t,e)=>r=>t(e(r));return{encode:Array.from(t).reverse().reduce(((t,r)=>t?e(t,r.encode):r.encode),void 0),decode:t.reduce(((t,r)=>t?e(t,r.decode):r.decode),void 0)}}function n(t){return{encode:e=>{if(!Array.isArray(e)||e.length&&"number"!=typeof e[0])throw new Error("alphabet.encode input should be an array of numbers");return e.map((e=>{if(e<0||e>=t.length)throw new Error(`Digit index outside alphabet: ${e} (alphabet: ${t.length})`);return t[e]}))},decode:e=>{if(!Array.isArray(e)||e.length&&"string"!=typeof e[0])throw new Error("alphabet.decode input should be array of strings");return e.map((e=>{const r=t.indexOf(e);if(-1===r)throw new Error(`Unknown letter: "${e}". Allowed: ${t}`);return r}))}}}function i(t=""){return{encode:e=>{if(!Array.isArray(e)||e.length&&"string"!=typeof e[0])throw new Error("join.encode input should be array of strings");return e.join(t)},decode:e=>{if("string"!=typeof e)throw new Error("join.decode input should be string");return e.split(t)}}}function s(t,e="="){return{encode(r){if(!Array.isArray(r)||r.length&&"string"!=typeof r[0])throw new Error("padding.encode input should be array of strings");for(;r.length*t%8;)r.push(e);return r},decode(r){if(!Array.isArray(r)||r.length&&"string"!=typeof r[0])throw new Error("padding.encode input should be array of strings");let n=r.length;if(n*t%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;n>0&&r[n-1]===e;)if(n--,!(n*t%8))throw new Error("Invalid padding: string has too much padding");return r.slice(0,n)}}}function o(t){return{encode:t=>t,decode:e=>t(e)}}function a(t,e,r){if(!t.length)return[];let n=0;const i=[],s=Array.from(t);for(;;){let t=0,o=!0;for(let i=n;i<s.length;i++){const a=e*t+s[i];t=a%r,s[i]=Math.floor(a/r),o&&(s[i]?o=!1:n=i)}if(i.push(t),o)break}for(let e=0;e<t.length-1&&0===t[e];e++)i.push(0);return i.reverse()}function u(t,e,r,n){let i=0,s=0;const o=2**r-1,a=[];for(const n of t)for(i=i<<e|n,s+=e;s>=r;s-=r)a.push(i>>s-r&o);if(i=i<<r-s&o,!n&&s>=e)throw new Error("Excess padding");if(!n&&i)throw new Error(`Non-zero padding: ${i}`);return n&&s>0&&a.push(i),a}function h(t,e=!1){return{encode:r=>{if(!(r instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return u(Array.from(r),8,t,!e)},decode:r=>{if(!Array.isArray(r)||r.length&&"number"!=typeof r[0])throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(u(r,t,8,e))}}}function c(t){return function(...e){try{return t.apply(null,e)}catch(t){}}}function l(t,e){return{encode(r){if(!(r instanceof Uint8Array))throw new Error("checksum.encode: input should be Uint8Array");const n=e(r).slice(0,t),i=new Uint8Array(r.length+t);return i.set(r),i.set(n,r.length),i},decode(r){if(!(r instanceof Uint8Array))throw new Error("checksum.decode: input should be Uint8Array");const n=r.slice(0,-t),i=e(n).slice(0,t),s=r.slice(-t);for(let e=0;e<t;e++)if(i[e]!==s[e])throw new Error("Invalid checksum");return n}}}
/*! micro-base - MIT License (c) 2021 Paul Miller (paulmillr.com) */
e.qX=e.d3=e.$v=e.KA=e.S_=e.Jq=e.tH=e.US=e.pJ=e.YU=void 0,e.YU=r(h(4),n("0123456789ABCDEF"),i("")),e.pJ=r(h(5),n("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),s(5),i("")),r(h(5),n("0123456789ABCDEFGHIJKLMNOPQRSTUV"),s(5),i("")),r(h(5),n("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),i(""),o((t=>t.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1")))),e.US=r(h(6),n("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),s(6),i("")),e.tH=r(h(6),n("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),s(6),i(""));const d=t=>{return r((e=58,{encode:t=>{if(!(t instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return a(Array.from(t),256,e)},decode:t=>{if(!Array.isArray(t)||t.length&&"number"!=typeof t[0])throw new Error("radix.decode input should be array of strings");return Uint8Array.from(a(t,e,256))}}),n(t),i(""));var e};e.Jq=d("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),d("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),d("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"),e.S_={encode(t){let r="";for(let n=0;n<t.length;n+=8){const i=t.subarray(n,n+8);r+=e.Jq.encode(i).padStart(8===i.length?11:7,"1")}return r},decode(t){let r=[];for(let n=0;n<t.length;n+=11)r=r.concat(Array.from(e.Jq.decode(t.slice(n,n+11))));return Uint8Array.from(r)}};const f=r(n("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),i("")),p=[996825010,642813549,513874426,1027748829,705979059];function m(t){const e=t>>25;let r=(33554431&t)<<5;for(let t=0;t<p.length;t++)1==(e>>t&1)&&(r^=p[t]);return r}function y(t,e,r=1){const n=t.length;let i=1;for(let e=0;e<n;e++){const r=t.charCodeAt(e);if(r<33||r>126)throw new Error(`Invalid prefix (${t})`);i=m(i)^r>>5}i=m(i);for(let e=0;e<n;e++)i=m(i)^31&t.charCodeAt(e);for(let t of e)i=m(i)^t;for(let t=0;t<6;t++)i=m(i);return i^=r,f.encode(u([i%2**30],30,5,!1))}function v(t){const e="bech32"===t?1:734539939,r=h(5),n=r.decode,i=r.encode,s=c(n);function o(t,r=90){if("string"!=typeof t)throw new Error("bech32.decode input should be string, not "+typeof t);if(t.length<8||!1!==r&&t.length>r)throw new TypeError(`Wrong string length: ${t.length} (${t}). Expected (8..${r})`);const n=t.toLowerCase();if(t!==n&&t!==t.toUpperCase())throw new Error("String must be lowercase or uppercase");const i=(t=n).lastIndexOf("1");if(0===i||-1===i)throw new Error('Letter "1" must be present between prefix and data only');const[s,o]=[t.slice(0,i),t.slice(i+1)];if(o.length<6)throw new Error("Data must be at least 6 characters long");const a=f.decode(o).slice(0,-6),u=y(s,a,e);if(!o.endsWith(u))throw new Error(`Invalid checksum in ${t}: expected "${u}"`);return{prefix:s,words:a}}return{encode:function(t,r,n=90){if("string"!=typeof t)throw new Error("bech32.decode prefix should be string, not "+typeof t);if(!Array.isArray(r)||r.length&&"number"!=typeof r[0])throw new Error("bech32.decode words should be array of numbers, not "+typeof r);const i=t.length+7+r.length;if(!1!==n&&i>n)throw new TypeError(`Length ${i} exceeds limit ${n}`);return`${t=t.toLowerCase()}1${f.encode(r)}${y(t,r,e)}`},decode:o,decodeToBytes:function(t){const{prefix:e,words:r}=o(t,!1);return{prefix:e,words:r,bytes:n(r)}},decodeUnsafe:c(o),fromWords:n,fromWordsUnsafe:s,toWords:i}}v("bech32"),v("bech32m"),e.KA={encode:t=>(new TextDecoder).decode(t),decode:t=>(new TextEncoder).encode(t)},e.$v=r(h(4),n("0123456789abcdef"),i(""),o((t=>{if("string"!=typeof t||t.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof t} with length ${t.length}`);return t.toLowerCase()})));const g={utf8:e.KA,hex:e.$v,base16:e.YU,base32:e.pJ,base64:e.US,base64url:e.tH,base58:e.Jq,base58xmr:e.S_},b=`Invalid encoding type. Available types: ${Object.keys(g).join(", ")}`;e.d3=(t,e)=>{if("string"!=typeof t||!g.hasOwnProperty(t))throw new TypeError(b);if(!(e instanceof Uint8Array))throw new TypeError("bytesToString() expects Uint8Array");return g[t].encode(e)},e.d3;e.qX=(t,e)=>{if(!g.hasOwnProperty(t))throw new TypeError(b);if("string"!=typeof e)throw new TypeError("stringToBytes() expects string");return g[t].decode(e)},e.qX},63047:(t,e,r)=>{var n=r(96240),i=r(29931);function s(t){this.rand=t||new i.Rand}t.exports=s,s.create=function(t){return new s(t)},s.prototype._randbelow=function(t){var e=t.bitLength(),r=Math.ceil(e/8);do{var i=new n(this.rand.generate(r))}while(i.cmp(t)>=0);return i},s.prototype._randrange=function(t,e){var r=e.sub(t);return t.add(this._randbelow(r))},s.prototype.test=function(t,e,r){var i=t.bitLength(),s=n.mont(t),o=new n(1).toRed(s);e||(e=Math.max(1,i/48|0));for(var a=t.subn(1),u=0;!a.testn(u);u++);for(var h=t.shrn(u),c=a.toRed(s);e>0;e--){var l=this._randrange(new n(2),a);r&&r(l);var d=l.toRed(s).redPow(h);if(0!==d.cmp(o)&&0!==d.cmp(c)){for(var f=1;f<u;f++){if(0===(d=d.redSqr()).cmp(o))return!1;if(0===d.cmp(c))break}if(f===u)return!1}}return!0},s.prototype.getDivisor=function(t,e){var r=t.bitLength(),i=n.mont(t),s=new n(1).toRed(i);e||(e=Math.max(1,r/48|0));for(var o=t.subn(1),a=0;!o.testn(a);a++);for(var u=t.shrn(a),h=o.toRed(i);e>0;e--){var c=this._randrange(new n(2),o),l=t.gcd(c);if(0!==l.cmpn(1))return l;var d=c.toRed(i).redPow(u);if(0!==d.cmp(s)&&0!==d.cmp(h)){for(var f=1;f<a;f++){if(0===(d=d.redSqr()).cmp(s))return d.fromRed().subn(1).gcd(t);if(0===d.cmp(h))break}if(f===a)return(d=d.redSqr()).fromRed().subn(1).gcd(t)}}return!1}},96240:function(t,e,r){!function(t,e){"use strict";function n(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(56619).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(t,e,r){var n=a(t,r);return r-1>=e&&(n|=a(t,r-1)<<4),n}function h(t,e,r,n){for(var i=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<t.length&&(16===e?this._parseHex(t,i,r):(this._parseBase(t,e,i),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var s,o,a=0;if("be"===r)for(i=t.length-1,s=0;i>=0;i-=3)o=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(i=0,s=0;i<t.length;i+=3)o=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,s=0,o=0;if("be"===r)for(n=t.length-1;n>=e;n-=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;else for(n=(t.length-e)%2==0?e+1:e;n<t.length;n+=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var s=t.length-r,o=s%n,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=n)u=h(t,c,c+n,e),this.imuln(i),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],s=0|e.words[0],o=i*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(i=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var i=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<i|s)).toString(16);r=0!==(s=a>>>24-i&16777215)||o!==this.length-1?c[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],f=d[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?m+r:c[h-m.length]+m+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return n(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var i=this.byteLength(),s=r||Math.max(1,i);n(i<=s,"byte array longer than desired length"),n(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-i;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){n("number"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},s.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,s=0;s<n.length;s++)e=(0|r.words[s])+(0|n.words[s])+i,this.words[s]=67108863&e,i=e>>>26;for(;0!==i&&s<r.length;s++)e=(0|r.words[s])+i,this.words[s]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var s=0,o=0;o<n.length;o++)s=(e=(0|r.words[o])-(0|n.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,r){var n,i,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,m=f>>>13,y=0|o[2],v=8191&y,g=y>>>13,b=0|o[3],w=8191&b,M=b>>>13,k=0|o[4],x=8191&k,P=k>>>13,L=0|o[5],T=8191&L,S=L>>>13,A=0|o[6],D=8191&A,j=A>>>13,H=0|o[7],O=8191&H,z=H>>>13,N=0|o[8],E=8191&N,Y=N>>>13,R=0|o[9],I=8191&R,B=R>>>13,X=0|a[0],V=8191&X,C=X>>>13,W=0|a[1],q=8191&W,Z=W>>>13,F=0|a[2],U=8191&F,G=F>>>13,_=0|a[3],K=8191&_,J=_>>>13,Q=0|a[4],$=8191&Q,tt=Q>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],st=8191&it,ot=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,mt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var yt=(h+(n=Math.imul(l,V))|0)+((8191&(i=(i=Math.imul(l,C))+Math.imul(d,V)|0))<<13)|0;h=((s=Math.imul(d,C))+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(p,V),i=(i=Math.imul(p,C))+Math.imul(m,V)|0,s=Math.imul(m,C);var vt=(h+(n=n+Math.imul(l,q)|0)|0)+((8191&(i=(i=i+Math.imul(l,Z)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,Z)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(v,V),i=(i=Math.imul(v,C))+Math.imul(g,V)|0,s=Math.imul(g,C),n=n+Math.imul(p,q)|0,i=(i=i+Math.imul(p,Z)|0)+Math.imul(m,q)|0,s=s+Math.imul(m,Z)|0;var gt=(h+(n=n+Math.imul(l,U)|0)|0)+((8191&(i=(i=i+Math.imul(l,G)|0)+Math.imul(d,U)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(w,V),i=(i=Math.imul(w,C))+Math.imul(M,V)|0,s=Math.imul(M,C),n=n+Math.imul(v,q)|0,i=(i=i+Math.imul(v,Z)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,Z)|0,n=n+Math.imul(p,U)|0,i=(i=i+Math.imul(p,G)|0)+Math.imul(m,U)|0,s=s+Math.imul(m,G)|0;var bt=(h+(n=n+Math.imul(l,K)|0)|0)+((8191&(i=(i=i+Math.imul(l,J)|0)+Math.imul(d,K)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(x,V),i=(i=Math.imul(x,C))+Math.imul(P,V)|0,s=Math.imul(P,C),n=n+Math.imul(w,q)|0,i=(i=i+Math.imul(w,Z)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,Z)|0,n=n+Math.imul(v,U)|0,i=(i=i+Math.imul(v,G)|0)+Math.imul(g,U)|0,s=s+Math.imul(g,G)|0,n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,J)|0)+Math.imul(m,K)|0,s=s+Math.imul(m,J)|0;var wt=(h+(n=n+Math.imul(l,$)|0)|0)+((8191&(i=(i=i+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(T,V),i=(i=Math.imul(T,C))+Math.imul(S,V)|0,s=Math.imul(S,C),n=n+Math.imul(x,q)|0,i=(i=i+Math.imul(x,Z)|0)+Math.imul(P,q)|0,s=s+Math.imul(P,Z)|0,n=n+Math.imul(w,U)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(M,U)|0,s=s+Math.imul(M,G)|0,n=n+Math.imul(v,K)|0,i=(i=i+Math.imul(v,J)|0)+Math.imul(g,K)|0,s=s+Math.imul(g,J)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,s=s+Math.imul(m,tt)|0;var Mt=(h+(n=n+Math.imul(l,rt)|0)|0)+((8191&(i=(i=i+Math.imul(l,nt)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,nt)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,C))+Math.imul(j,V)|0,s=Math.imul(j,C),n=n+Math.imul(T,q)|0,i=(i=i+Math.imul(T,Z)|0)+Math.imul(S,q)|0,s=s+Math.imul(S,Z)|0,n=n+Math.imul(x,U)|0,i=(i=i+Math.imul(x,G)|0)+Math.imul(P,U)|0,s=s+Math.imul(P,G)|0,n=n+Math.imul(w,K)|0,i=(i=i+Math.imul(w,J)|0)+Math.imul(M,K)|0,s=s+Math.imul(M,J)|0,n=n+Math.imul(v,$)|0,i=(i=i+Math.imul(v,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,s=s+Math.imul(m,nt)|0;var kt=(h+(n=n+Math.imul(l,st)|0)|0)+((8191&(i=(i=i+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(O,V),i=(i=Math.imul(O,C))+Math.imul(z,V)|0,s=Math.imul(z,C),n=n+Math.imul(D,q)|0,i=(i=i+Math.imul(D,Z)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,Z)|0,n=n+Math.imul(T,U)|0,i=(i=i+Math.imul(T,G)|0)+Math.imul(S,U)|0,s=s+Math.imul(S,G)|0,n=n+Math.imul(x,K)|0,i=(i=i+Math.imul(x,J)|0)+Math.imul(P,K)|0,s=s+Math.imul(P,J)|0,n=n+Math.imul(w,$)|0,i=(i=i+Math.imul(w,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,n=n+Math.imul(v,rt)|0,i=(i=i+Math.imul(v,nt)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,nt)|0,n=n+Math.imul(p,st)|0,i=(i=i+Math.imul(p,ot)|0)+Math.imul(m,st)|0,s=s+Math.imul(m,ot)|0;var xt=(h+(n=n+Math.imul(l,ut)|0)|0)+((8191&(i=(i=i+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(E,V),i=(i=Math.imul(E,C))+Math.imul(Y,V)|0,s=Math.imul(Y,C),n=n+Math.imul(O,q)|0,i=(i=i+Math.imul(O,Z)|0)+Math.imul(z,q)|0,s=s+Math.imul(z,Z)|0,n=n+Math.imul(D,U)|0,i=(i=i+Math.imul(D,G)|0)+Math.imul(j,U)|0,s=s+Math.imul(j,G)|0,n=n+Math.imul(T,K)|0,i=(i=i+Math.imul(T,J)|0)+Math.imul(S,K)|0,s=s+Math.imul(S,J)|0,n=n+Math.imul(x,$)|0,i=(i=i+Math.imul(x,tt)|0)+Math.imul(P,$)|0,s=s+Math.imul(P,tt)|0,n=n+Math.imul(w,rt)|0,i=(i=i+Math.imul(w,nt)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,nt)|0,n=n+Math.imul(v,st)|0,i=(i=i+Math.imul(v,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,s=s+Math.imul(m,ht)|0;var Pt=(h+(n=n+Math.imul(l,lt)|0)|0)+((8191&(i=(i=i+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(i>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,n=Math.imul(I,V),i=(i=Math.imul(I,C))+Math.imul(B,V)|0,s=Math.imul(B,C),n=n+Math.imul(E,q)|0,i=(i=i+Math.imul(E,Z)|0)+Math.imul(Y,q)|0,s=s+Math.imul(Y,Z)|0,n=n+Math.imul(O,U)|0,i=(i=i+Math.imul(O,G)|0)+Math.imul(z,U)|0,s=s+Math.imul(z,G)|0,n=n+Math.imul(D,K)|0,i=(i=i+Math.imul(D,J)|0)+Math.imul(j,K)|0,s=s+Math.imul(j,J)|0,n=n+Math.imul(T,$)|0,i=(i=i+Math.imul(T,tt)|0)+Math.imul(S,$)|0,s=s+Math.imul(S,tt)|0,n=n+Math.imul(x,rt)|0,i=(i=i+Math.imul(x,nt)|0)+Math.imul(P,rt)|0,s=s+Math.imul(P,nt)|0,n=n+Math.imul(w,st)|0,i=(i=i+Math.imul(w,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,n=n+Math.imul(v,ut)|0,i=(i=i+Math.imul(v,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0,n=n+Math.imul(p,lt)|0,i=(i=i+Math.imul(p,dt)|0)+Math.imul(m,lt)|0,s=s+Math.imul(m,dt)|0;var Lt=(h+(n=n+Math.imul(l,pt)|0)|0)+((8191&(i=(i=i+Math.imul(l,mt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,mt)|0)+(i>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,n=Math.imul(I,q),i=(i=Math.imul(I,Z))+Math.imul(B,q)|0,s=Math.imul(B,Z),n=n+Math.imul(E,U)|0,i=(i=i+Math.imul(E,G)|0)+Math.imul(Y,U)|0,s=s+Math.imul(Y,G)|0,n=n+Math.imul(O,K)|0,i=(i=i+Math.imul(O,J)|0)+Math.imul(z,K)|0,s=s+Math.imul(z,J)|0,n=n+Math.imul(D,$)|0,i=(i=i+Math.imul(D,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,n=n+Math.imul(T,rt)|0,i=(i=i+Math.imul(T,nt)|0)+Math.imul(S,rt)|0,s=s+Math.imul(S,nt)|0,n=n+Math.imul(x,st)|0,i=(i=i+Math.imul(x,ot)|0)+Math.imul(P,st)|0,s=s+Math.imul(P,ot)|0,n=n+Math.imul(w,ut)|0,i=(i=i+Math.imul(w,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,n=n+Math.imul(v,lt)|0,i=(i=i+Math.imul(v,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var Tt=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((s=s+Math.imul(m,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,n=Math.imul(I,U),i=(i=Math.imul(I,G))+Math.imul(B,U)|0,s=Math.imul(B,G),n=n+Math.imul(E,K)|0,i=(i=i+Math.imul(E,J)|0)+Math.imul(Y,K)|0,s=s+Math.imul(Y,J)|0,n=n+Math.imul(O,$)|0,i=(i=i+Math.imul(O,tt)|0)+Math.imul(z,$)|0,s=s+Math.imul(z,tt)|0,n=n+Math.imul(D,rt)|0,i=(i=i+Math.imul(D,nt)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,nt)|0,n=n+Math.imul(T,st)|0,i=(i=i+Math.imul(T,ot)|0)+Math.imul(S,st)|0,s=s+Math.imul(S,ot)|0,n=n+Math.imul(x,ut)|0,i=(i=i+Math.imul(x,ht)|0)+Math.imul(P,ut)|0,s=s+Math.imul(P,ht)|0,n=n+Math.imul(w,lt)|0,i=(i=i+Math.imul(w,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var St=(h+(n=n+Math.imul(v,pt)|0)|0)+((8191&(i=(i=i+Math.imul(v,mt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(I,K),i=(i=Math.imul(I,J))+Math.imul(B,K)|0,s=Math.imul(B,J),n=n+Math.imul(E,$)|0,i=(i=i+Math.imul(E,tt)|0)+Math.imul(Y,$)|0,s=s+Math.imul(Y,tt)|0,n=n+Math.imul(O,rt)|0,i=(i=i+Math.imul(O,nt)|0)+Math.imul(z,rt)|0,s=s+Math.imul(z,nt)|0,n=n+Math.imul(D,st)|0,i=(i=i+Math.imul(D,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,n=n+Math.imul(T,ut)|0,i=(i=i+Math.imul(T,ht)|0)+Math.imul(S,ut)|0,s=s+Math.imul(S,ht)|0,n=n+Math.imul(x,lt)|0,i=(i=i+Math.imul(x,dt)|0)+Math.imul(P,lt)|0,s=s+Math.imul(P,dt)|0;var At=(h+(n=n+Math.imul(w,pt)|0)|0)+((8191&(i=(i=i+Math.imul(w,mt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,mt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(I,$),i=(i=Math.imul(I,tt))+Math.imul(B,$)|0,s=Math.imul(B,tt),n=n+Math.imul(E,rt)|0,i=(i=i+Math.imul(E,nt)|0)+Math.imul(Y,rt)|0,s=s+Math.imul(Y,nt)|0,n=n+Math.imul(O,st)|0,i=(i=i+Math.imul(O,ot)|0)+Math.imul(z,st)|0,s=s+Math.imul(z,ot)|0,n=n+Math.imul(D,ut)|0,i=(i=i+Math.imul(D,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,n=n+Math.imul(T,lt)|0,i=(i=i+Math.imul(T,dt)|0)+Math.imul(S,lt)|0,s=s+Math.imul(S,dt)|0;var Dt=(h+(n=n+Math.imul(x,pt)|0)|0)+((8191&(i=(i=i+Math.imul(x,mt)|0)+Math.imul(P,pt)|0))<<13)|0;h=((s=s+Math.imul(P,mt)|0)+(i>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,n=Math.imul(I,rt),i=(i=Math.imul(I,nt))+Math.imul(B,rt)|0,s=Math.imul(B,nt),n=n+Math.imul(E,st)|0,i=(i=i+Math.imul(E,ot)|0)+Math.imul(Y,st)|0,s=s+Math.imul(Y,ot)|0,n=n+Math.imul(O,ut)|0,i=(i=i+Math.imul(O,ht)|0)+Math.imul(z,ut)|0,s=s+Math.imul(z,ht)|0,n=n+Math.imul(D,lt)|0,i=(i=i+Math.imul(D,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var jt=(h+(n=n+Math.imul(T,pt)|0)|0)+((8191&(i=(i=i+Math.imul(T,mt)|0)+Math.imul(S,pt)|0))<<13)|0;h=((s=s+Math.imul(S,mt)|0)+(i>>>13)|0)+(jt>>>26)|0,jt&=67108863,n=Math.imul(I,st),i=(i=Math.imul(I,ot))+Math.imul(B,st)|0,s=Math.imul(B,ot),n=n+Math.imul(E,ut)|0,i=(i=i+Math.imul(E,ht)|0)+Math.imul(Y,ut)|0,s=s+Math.imul(Y,ht)|0,n=n+Math.imul(O,lt)|0,i=(i=i+Math.imul(O,dt)|0)+Math.imul(z,lt)|0,s=s+Math.imul(z,dt)|0;var Ht=(h+(n=n+Math.imul(D,pt)|0)|0)+((8191&(i=(i=i+Math.imul(D,mt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,mt)|0)+(i>>>13)|0)+(Ht>>>26)|0,Ht&=67108863,n=Math.imul(I,ut),i=(i=Math.imul(I,ht))+Math.imul(B,ut)|0,s=Math.imul(B,ht),n=n+Math.imul(E,lt)|0,i=(i=i+Math.imul(E,dt)|0)+Math.imul(Y,lt)|0,s=s+Math.imul(Y,dt)|0;var Ot=(h+(n=n+Math.imul(O,pt)|0)|0)+((8191&(i=(i=i+Math.imul(O,mt)|0)+Math.imul(z,pt)|0))<<13)|0;h=((s=s+Math.imul(z,mt)|0)+(i>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,n=Math.imul(I,lt),i=(i=Math.imul(I,dt))+Math.imul(B,lt)|0,s=Math.imul(B,dt);var zt=(h+(n=n+Math.imul(E,pt)|0)|0)+((8191&(i=(i=i+Math.imul(E,mt)|0)+Math.imul(Y,pt)|0))<<13)|0;h=((s=s+Math.imul(Y,mt)|0)+(i>>>13)|0)+(zt>>>26)|0,zt&=67108863;var Nt=(h+(n=Math.imul(I,pt))|0)+((8191&(i=(i=Math.imul(I,mt))+Math.imul(B,pt)|0))<<13)|0;return h=((s=Math.imul(B,mt))+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=yt,u[1]=vt,u[2]=gt,u[3]=bt,u[4]=wt,u[5]=Mt,u[6]=kt,u[7]=xt,u[8]=Pt,u[9]=Lt,u[10]=Tt,u[11]=St,u[12]=At,u[13]=Dt,u[14]=jt,u[15]=Ht,u[16]=Ot,u[17]=zt,u[18]=Nt,0!==h&&(u[19]=h,r.length++),r};function m(t,e,r){return(new y).mulp(t,e,r)}function y(t,e){this.x=t,this.y=e}Math.imul||(p=f),s.prototype.mulTo=function(t,e){var r,n=this.length+t.length;return r=10===this.length&&10===t.length?p(this,t,e):n<63?f(this,t,e):n<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,s=0;s<r.length-1;s++){var o=i;i=0;for(var a=67108863&n,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),i+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,n=o,o=i}return 0!==n?r.words[s]=n:r.length--,r.strip()}(this,t,e):m(this,t,e),r},y.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},y.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},y.prototype.permute=function(t,e,r,n,i,s){for(var o=0;o<s;o++)n[o]=e[t[o]],i[o]=r[t[o]]},y.prototype.transform=function(t,e,r,n,i,s){this.permute(s,t,e,r,n,i);for(var o=1;o<i;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<i;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],m=n[c+f],y=r[c+f+o],v=n[c+f+o],g=l*y-d*v;v=l*v+d*y,y=g,r[c+f]=p+y,n[c+f]=m+v,r[c+f+o]=p-y,n[c+f+o]=m-v,f!==a&&(g=u*l-h*d,d=u*d+h*l,l=g)}},y.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},y.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},y.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},y.prototype.convert13b=function(t,e,r,i){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<i;++o)r[o]=0;n(0===s),n(0==(-8192&s))},y.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},y.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),s=this.stub(n),o=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),c=new Array(n),l=new Array(n),d=r.words;d.length=n,this.convert13b(t.words,t.length,o,n),this.convert13b(e.words,e.length,h,n),this.transform(o,s,a,u,n,i),this.transform(h,s,c,l,n,i);for(var f=0;f<n;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,n),this.transform(a,u,d,s,n,i),this.conjugate(d,s,n),this.normalize13b(d,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),m(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var e=0,r=0;r<this.length;r++){var i=(0|this.words[r])*t,s=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=(t.words[n]&1<<i)>>>i}return e}(t);if(0===e.length)return new s(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},s.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},s.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var i;n("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(i-=o,i=Math.max(0,i),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=i);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r)&&!!(this.words[r]&i)},s.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var i,s,o=t.length+r;this._expand(o);var a=0;for(i=0;i<t.length;i++){s=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&s}for(;i<this.length-r;i++)a=(s=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&s;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(s=-(0|this.words[i])+a)>>26,this.words[i]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,o=0|i.words[i.length-1];0!==(r=26-this._countBits(o))&&(i=i.ushln(r),n.iushln(r),o=0|i.words[i.length-1]);var a,u=n.length-i.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=n.clone()._ishlnsubmul(i,1,u);0===c.negative&&(n=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|n.words[i.length+l])+(0|n.words[i.length+l-1]);for(d=Math.min(d/o|0,67108863),n._ishlnsubmul(i,d,l);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(i,1,l),n.isZero()||(n.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),n.strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},s.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(i=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:i,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var i,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),s=r.cmp(n);return s<0||1===i&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){n(t<=67108863);for(var e=(1<<26)%t,r=0,i=this.length-1;i>=0;i--)r=(e*r+(0|this.words[i]))%t;return r},s.prototype.idivn=function(t){n(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*e;this.words[r]=i/t|0,e=i%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(c),o.isub(l)),i.iushrn(1),o.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),o.isub(u)):(r.isub(e),a.isub(i),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(i=0===e.cmpn(1)?o:a).cmpn(0)<0&&i.iadd(t),i},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var s=e;e=r,r=s}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){n("number"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var s=i,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new x(t)},s.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function g(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){g.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){g.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function M(){g.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function k(){g.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function x(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function P(t){x.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}g.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},g.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},g.prototype.split=function(t,e){t.iushrn(this.n,0,e)},g.prototype.imulK=function(t){return t.imul(this.k)},i(b,g),b.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,i=10;i<t.length;i++){var o=0|t.words[i];t.words[i-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[i-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(w,g),i(M,g),i(k,g),k.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(v[t])return v[t];var e;if("k256"===t)e=new b;else if("p224"===t)e=new w;else if("p192"===t)e=new M;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new k}return v[t]=e,e},x.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},x.prototype._verify2=function(t,e){n(0==(t.negative|e.negative),"red works only with positives"),n(t.red&&t.red===e.red,"red works only with red numbers")},x.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},x.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},x.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},x.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},x.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},x.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},x.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},x.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},x.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},x.prototype.isqr=function(t){return this.imul(t,t.clone())},x.prototype.sqr=function(t){return this.mul(t,t)},x.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),o=0;!i.isZero()&&0===i.andln(1);)o++,i.iushrn(1);n(!i.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,i),d=this.pow(t,i.addn(1).iushrn(1)),f=this.pow(t,i),p=o;0!==f.cmp(a);){for(var m=f,y=0;0!==m.cmp(a);y++)m=m.redSqr();n(y<p);var v=this.pow(l,new s(1).iushln(p-y-1));d=d.redMul(v),l=v.redSqr(),f=f.redMul(l),p=y}return d},x.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},x.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],c=u-1;c>=0;c--){var l=h>>c&1;i!==r[0]&&(i=this.sqr(i)),0!==l||0!==o?(o<<=1,o|=l,(4===++a||0===n&&0===c)&&(i=this.mul(i,r[o]),a=0,o=0)):a=0}u=26}return i},x.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},x.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new P(t)},i(P,x),P.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},P.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},P.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},P.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},P.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},79746:t=>{function e(t,e){if(!t)throw new Error(e||"Assertion failed")}t.exports=e,e.equal=function(t,e,r){if(t!=e)throw new Error(r||"Assertion failed: "+t+" != "+e)}},34504:(t,e)=>{"use strict";var r=e;function n(t){return 1===t.length?"0"+t:t}function i(t){for(var e="",r=0;r<t.length;r++)e+=n(t[r].toString(16));return e}r.toArray=function(t,e){if(Array.isArray(t))return t.slice();if(!t)return[];var r=[];if("string"!=typeof t){for(var n=0;n<t.length;n++)r[n]=0|t[n];return r}if("hex"===e){(t=t.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(t="0"+t);for(n=0;n<t.length;n+=2)r.push(parseInt(t[n]+t[n+1],16))}else for(n=0;n<t.length;n++){var i=t.charCodeAt(n),s=i>>8,o=255&i;s?r.push(s,o):r.push(o)}return r},r.zero2=n,r.toHex=i,r.encode=function(t,e){return"hex"===e?i(t):t}},42786:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("af",{months:"Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember".split("_"),monthsShort:"Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des".split("_"),weekdays:"Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag".split("_"),weekdaysShort:"Son_Maa_Din_Woe_Don_Vry_Sat".split("_"),weekdaysMin:"So_Ma_Di_Wo_Do_Vr_Sa".split("_"),meridiemParse:/vm|nm/i,isPM:function(t){return/^nm$/i.test(t)},meridiem:function(t,e,r){return t<12?r?"vm":"VM":r?"nm":"NM"},longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Vandag om] LT",nextDay:"[Môre om] LT",nextWeek:"dddd [om] LT",lastDay:"[Gister om] LT",lastWeek:"[Laas] dddd [om] LT",sameElse:"L"},relativeTime:{future:"oor %s",past:"%s gelede",s:"'n paar sekondes",ss:"%d sekondes",m:"'n minuut",mm:"%d minute",h:"'n uur",hh:"%d ure",d:"'n dag",dd:"%d dae",M:"'n maand",MM:"%d maande",y:"'n jaar",yy:"%d jaar"},dayOfMonthOrdinalParse:/\d{1,2}(ste|de)/,ordinal:function(t){return t+(1===t||8===t||t>=20?"ste":"de")},week:{dow:1,doy:4}})}(r(30381))},14130:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e=function(t){return 0===t?0:1===t?1:2===t?2:t%100>=3&&t%100<=10?3:t%100>=11?4:5},r={s:["أقل من ثانية","ثانية واحدة",["ثانيتان","ثانيتين"],"%d ثوان","%d ثانية","%d ثانية"],m:["أقل من دقيقة","دقيقة واحدة",["دقيقتان","دقيقتين"],"%d دقائق","%d دقيقة","%d دقيقة"],h:["أقل من ساعة","ساعة واحدة",["ساعتان","ساعتين"],"%d ساعات","%d ساعة","%d ساعة"],d:["أقل من يوم","يوم واحد",["يومان","يومين"],"%d أيام","%d يومًا","%d يوم"],M:["أقل من شهر","شهر واحد",["شهران","شهرين"],"%d أشهر","%d شهرا","%d شهر"],y:["أقل من عام","عام واحد",["عامان","عامين"],"%d أعوام","%d عامًا","%d عام"]},n=function(t){return function(n,i,s,o){var a=e(n),u=r[t][e(n)];return 2===a&&(u=u[i?0:1]),u.replace(/%d/i,n)}},i=["جانفي","فيفري","مارس","أفريل","ماي","جوان","جويلية","أوت","سبتمبر","أكتوبر","نوفمبر","ديسمبر"];t.defineLocale("ar-dz",{months:i,monthsShort:i,weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"D/‏M/‏YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},meridiemParse:/ص|م/,isPM:function(t){return"م"===t},meridiem:function(t,e,r){return t<12?"ص":"م"},calendar:{sameDay:"[اليوم عند الساعة] LT",nextDay:"[غدًا عند الساعة] LT",nextWeek:"dddd [عند الساعة] LT",lastDay:"[أمس عند الساعة] LT",lastWeek:"dddd [عند الساعة] LT",sameElse:"L"},relativeTime:{future:"بعد %s",past:"منذ %s",s:n("s"),ss:n("s"),m:n("m"),mm:n("m"),h:n("h"),hh:n("h"),d:n("d"),dd:n("d"),M:n("M"),MM:n("M"),y:n("y"),yy:n("y")},postformat:function(t){return t.replace(/,/g,"،")},week:{dow:0,doy:4}})}(r(30381))},96135:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("ar-kw",{months:"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),monthsShort:"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),weekdays:"الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[اليوم على الساعة] LT",nextDay:"[غدا على الساعة] LT",nextWeek:"dddd [على الساعة] LT",lastDay:"[أمس على الساعة] LT",lastWeek:"dddd [على الساعة] LT",sameElse:"L"},relativeTime:{future:"في %s",past:"منذ %s",s:"ثوان",ss:"%d ثانية",m:"دقيقة",mm:"%d دقائق",h:"ساعة",hh:"%d ساعات",d:"يوم",dd:"%d أيام",M:"شهر",MM:"%d أشهر",y:"سنة",yy:"%d سنوات"},week:{dow:0,doy:12}})}(r(30381))},56440:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9",0:"0"},r=function(t){return 0===t?0:1===t?1:2===t?2:t%100>=3&&t%100<=10?3:t%100>=11?4:5},n={s:["أقل من ثانية","ثانية واحدة",["ثانيتان","ثانيتين"],"%d ثوان","%d ثانية","%d ثانية"],m:["أقل من دقيقة","دقيقة واحدة",["دقيقتان","دقيقتين"],"%d دقائق","%d دقيقة","%d دقيقة"],h:["أقل من ساعة","ساعة واحدة",["ساعتان","ساعتين"],"%d ساعات","%d ساعة","%d ساعة"],d:["أقل من يوم","يوم واحد",["يومان","يومين"],"%d أيام","%d يومًا","%d يوم"],M:["أقل من شهر","شهر واحد",["شهران","شهرين"],"%d أشهر","%d شهرا","%d شهر"],y:["أقل من عام","عام واحد",["عامان","عامين"],"%d أعوام","%d عامًا","%d عام"]},i=function(t){return function(e,i,s,o){var a=r(e),u=n[t][r(e)];return 2===a&&(u=u[i?0:1]),u.replace(/%d/i,e)}},s=["يناير","فبراير","مارس","أبريل","مايو","يونيو","يوليو","أغسطس","سبتمبر","أكتوبر","نوفمبر","ديسمبر"];t.defineLocale("ar-ly",{months:s,monthsShort:s,weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"D/‏M/‏YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},meridiemParse:/ص|م/,isPM:function(t){return"م"===t},meridiem:function(t,e,r){return t<12?"ص":"م"},calendar:{sameDay:"[اليوم عند الساعة] LT",nextDay:"[غدًا عند الساعة] LT",nextWeek:"dddd [عند الساعة] LT",lastDay:"[أمس عند الساعة] LT",lastWeek:"dddd [عند الساعة] LT",sameElse:"L"},relativeTime:{future:"بعد %s",past:"منذ %s",s:i("s"),ss:i("s"),m:i("m"),mm:i("m"),h:i("h"),hh:i("h"),d:i("d"),dd:i("d"),M:i("M"),MM:i("M"),y:i("y"),yy:i("y")},preparse:function(t){return t.replace(/،/g,",")},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]})).replace(/,/g,"،")},week:{dow:6,doy:12}})}(r(30381))},47702:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("ar-ma",{months:"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),monthsShort:"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[اليوم على الساعة] LT",nextDay:"[غدا على الساعة] LT",nextWeek:"dddd [على الساعة] LT",lastDay:"[أمس على الساعة] LT",lastWeek:"dddd [على الساعة] LT",sameElse:"L"},relativeTime:{future:"في %s",past:"منذ %s",s:"ثوان",ss:"%d ثانية",m:"دقيقة",mm:"%d دقائق",h:"ساعة",hh:"%d ساعات",d:"يوم",dd:"%d أيام",M:"شهر",MM:"%d أشهر",y:"سنة",yy:"%d سنوات"},week:{dow:1,doy:4}})}(r(30381))},16040:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"١",2:"٢",3:"٣",4:"٤",5:"٥",6:"٦",7:"٧",8:"٨",9:"٩",0:"٠"},r={"١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","٠":"0"};t.defineLocale("ar-sa",{months:"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),monthsShort:"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},meridiemParse:/ص|م/,isPM:function(t){return"م"===t},meridiem:function(t,e,r){return t<12?"ص":"م"},calendar:{sameDay:"[اليوم على الساعة] LT",nextDay:"[غدا على الساعة] LT",nextWeek:"dddd [على الساعة] LT",lastDay:"[أمس على الساعة] LT",lastWeek:"dddd [على الساعة] LT",sameElse:"L"},relativeTime:{future:"في %s",past:"منذ %s",s:"ثوان",ss:"%d ثانية",m:"دقيقة",mm:"%d دقائق",h:"ساعة",hh:"%d ساعات",d:"يوم",dd:"%d أيام",M:"شهر",MM:"%d أشهر",y:"سنة",yy:"%d سنوات"},preparse:function(t){return t.replace(/[١٢٣٤٥٦٧٨٩٠]/g,(function(t){return r[t]})).replace(/،/g,",")},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]})).replace(/,/g,"،")},week:{dow:0,doy:6}})}(r(30381))},37100:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("ar-tn",{months:"جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),monthsShort:"جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[اليوم على الساعة] LT",nextDay:"[غدا على الساعة] LT",nextWeek:"dddd [على الساعة] LT",lastDay:"[أمس على الساعة] LT",lastWeek:"dddd [على الساعة] LT",sameElse:"L"},relativeTime:{future:"في %s",past:"منذ %s",s:"ثوان",ss:"%d ثانية",m:"دقيقة",mm:"%d دقائق",h:"ساعة",hh:"%d ساعات",d:"يوم",dd:"%d أيام",M:"شهر",MM:"%d أشهر",y:"سنة",yy:"%d سنوات"},week:{dow:1,doy:4}})}(r(30381))},30867:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"١",2:"٢",3:"٣",4:"٤",5:"٥",6:"٦",7:"٧",8:"٨",9:"٩",0:"٠"},r={"١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","٠":"0"},n=function(t){return 0===t?0:1===t?1:2===t?2:t%100>=3&&t%100<=10?3:t%100>=11?4:5},i={s:["أقل من ثانية","ثانية واحدة",["ثانيتان","ثانيتين"],"%d ثوان","%d ثانية","%d ثانية"],m:["أقل من دقيقة","دقيقة واحدة",["دقيقتان","دقيقتين"],"%d دقائق","%d دقيقة","%d دقيقة"],h:["أقل من ساعة","ساعة واحدة",["ساعتان","ساعتين"],"%d ساعات","%d ساعة","%d ساعة"],d:["أقل من يوم","يوم واحد",["يومان","يومين"],"%d أيام","%d يومًا","%d يوم"],M:["أقل من شهر","شهر واحد",["شهران","شهرين"],"%d أشهر","%d شهرا","%d شهر"],y:["أقل من عام","عام واحد",["عامان","عامين"],"%d أعوام","%d عامًا","%d عام"]},s=function(t){return function(e,r,s,o){var a=n(e),u=i[t][n(e)];return 2===a&&(u=u[r?0:1]),u.replace(/%d/i,e)}},o=["يناير","فبراير","مارس","أبريل","مايو","يونيو","يوليو","أغسطس","سبتمبر","أكتوبر","نوفمبر","ديسمبر"];t.defineLocale("ar",{months:o,monthsShort:o,weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"D/‏M/‏YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},meridiemParse:/ص|م/,isPM:function(t){return"م"===t},meridiem:function(t,e,r){return t<12?"ص":"م"},calendar:{sameDay:"[اليوم عند الساعة] LT",nextDay:"[غدًا عند الساعة] LT",nextWeek:"dddd [عند الساعة] LT",lastDay:"[أمس عند الساعة] LT",lastWeek:"dddd [عند الساعة] LT",sameElse:"L"},relativeTime:{future:"بعد %s",past:"منذ %s",s:s("s"),ss:s("s"),m:s("m"),mm:s("m"),h:s("h"),hh:s("h"),d:s("d"),dd:s("d"),M:s("M"),MM:s("M"),y:s("y"),yy:s("y")},preparse:function(t){return t.replace(/[١٢٣٤٥٦٧٨٩٠]/g,(function(t){return r[t]})).replace(/،/g,",")},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]})).replace(/,/g,"،")},week:{dow:6,doy:12}})}(r(30381))},31083:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"-inci",5:"-inci",8:"-inci",70:"-inci",80:"-inci",2:"-nci",7:"-nci",20:"-nci",50:"-nci",3:"-üncü",4:"-üncü",100:"-üncü",6:"-ncı",9:"-uncu",10:"-uncu",30:"-uncu",60:"-ıncı",90:"-ıncı"};t.defineLocale("az",{months:"yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr".split("_"),monthsShort:"yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek".split("_"),weekdays:"Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə".split("_"),weekdaysShort:"Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən".split("_"),weekdaysMin:"Bz_BE_ÇA_Çə_CA_Cü_Şə".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[bugün saat] LT",nextDay:"[sabah saat] LT",nextWeek:"[gələn həftə] dddd [saat] LT",lastDay:"[dünən] LT",lastWeek:"[keçən həftə] dddd [saat] LT",sameElse:"L"},relativeTime:{future:"%s sonra",past:"%s əvvəl",s:"bir neçə saniyə",ss:"%d saniyə",m:"bir dəqiqə",mm:"%d dəqiqə",h:"bir saat",hh:"%d saat",d:"bir gün",dd:"%d gün",M:"bir ay",MM:"%d ay",y:"bir il",yy:"%d il"},meridiemParse:/gecə|səhər|gündüz|axşam/,isPM:function(t){return/^(gündüz|axşam)$/.test(t)},meridiem:function(t,e,r){return t<4?"gecə":t<12?"səhər":t<17?"gündüz":"axşam"},dayOfMonthOrdinalParse:/\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,ordinal:function(t){if(0===t)return t+"-ıncı";var r=t%10,n=t%100-r,i=t>=100?100:null;return t+(e[r]||e[n]||e[i])},week:{dow:1,doy:7}})}(r(30381))},9808:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e){var r=t.split("_");return e%10==1&&e%100!=11?r[0]:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?r[1]:r[2]}function r(t,r,n){return"m"===n?r?"хвіліна":"хвіліну":"h"===n?r?"гадзіна":"гадзіну":t+" "+e({ss:r?"секунда_секунды_секунд":"секунду_секунды_секунд",mm:r?"хвіліна_хвіліны_хвілін":"хвіліну_хвіліны_хвілін",hh:r?"гадзіна_гадзіны_гадзін":"гадзіну_гадзіны_гадзін",dd:"дзень_дні_дзён",MM:"месяц_месяцы_месяцаў",yy:"год_гады_гадоў"}[n],+t)}t.defineLocale("be",{months:{format:"студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня".split("_"),standalone:"студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань".split("_")},monthsShort:"студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж".split("_"),weekdays:{format:"нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу".split("_"),standalone:"нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота".split("_"),isFormat:/\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/},weekdaysShort:"нд_пн_ат_ср_чц_пт_сб".split("_"),weekdaysMin:"нд_пн_ат_ср_чц_пт_сб".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY г.",LLL:"D MMMM YYYY г., HH:mm",LLLL:"dddd, D MMMM YYYY г., HH:mm"},calendar:{sameDay:"[Сёння ў] LT",nextDay:"[Заўтра ў] LT",lastDay:"[Учора ў] LT",nextWeek:function(){return"[У] dddd [ў] LT"},lastWeek:function(){switch(this.day()){case 0:case 3:case 5:case 6:return"[У мінулую] dddd [ў] LT";case 1:case 2:case 4:return"[У мінулы] dddd [ў] LT"}},sameElse:"L"},relativeTime:{future:"праз %s",past:"%s таму",s:"некалькі секунд",m:r,mm:r,h:r,hh:r,d:"дзень",dd:r,M:"месяц",MM:r,y:"год",yy:r},meridiemParse:/ночы|раніцы|дня|вечара/,isPM:function(t){return/^(дня|вечара)$/.test(t)},meridiem:function(t,e,r){return t<4?"ночы":t<12?"раніцы":t<17?"дня":"вечара"},dayOfMonthOrdinalParse:/\d{1,2}-(і|ы|га)/,ordinal:function(t,e){switch(e){case"M":case"d":case"DDD":case"w":case"W":return t%10!=2&&t%10!=3||t%100==12||t%100==13?t+"-ы":t+"-і";case"D":return t+"-га";default:return t}},week:{dow:1,doy:7}})}(r(30381))},68338:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("bg",{months:"януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември".split("_"),monthsShort:"яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек".split("_"),weekdays:"неделя_понеделник_вторник_сряда_четвъртък_петък_събота".split("_"),weekdaysShort:"нед_пон_вто_сря_чет_пет_съб".split("_"),weekdaysMin:"нд_пн_вт_ср_чт_пт_сб".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"D.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY H:mm",LLLL:"dddd, D MMMM YYYY H:mm"},calendar:{sameDay:"[Днес в] LT",nextDay:"[Утре в] LT",nextWeek:"dddd [в] LT",lastDay:"[Вчера в] LT",lastWeek:function(){switch(this.day()){case 0:case 3:case 6:return"[Миналата] dddd [в] LT";case 1:case 2:case 4:case 5:return"[Миналия] dddd [в] LT"}},sameElse:"L"},relativeTime:{future:"след %s",past:"преди %s",s:"няколко секунди",ss:"%d секунди",m:"минута",mm:"%d минути",h:"час",hh:"%d часа",d:"ден",dd:"%d дена",w:"седмица",ww:"%d седмици",M:"месец",MM:"%d месеца",y:"година",yy:"%d години"},dayOfMonthOrdinalParse:/\d{1,2}-(ев|ен|ти|ви|ри|ми)/,ordinal:function(t){var e=t%10,r=t%100;return 0===t?t+"-ев":0===r?t+"-ен":r>10&&r<20?t+"-ти":1===e?t+"-ви":2===e?t+"-ри":7===e||8===e?t+"-ми":t+"-ти"},week:{dow:1,doy:7}})}(r(30381))},67438:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("bm",{months:"Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo".split("_"),monthsShort:"Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des".split("_"),weekdays:"Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri".split("_"),weekdaysShort:"Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib".split("_"),weekdaysMin:"Ka_Nt_Ta_Ar_Al_Ju_Si".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"MMMM [tile] D [san] YYYY",LLL:"MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm",LLLL:"dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm"},calendar:{sameDay:"[Bi lɛrɛ] LT",nextDay:"[Sini lɛrɛ] LT",nextWeek:"dddd [don lɛrɛ] LT",lastDay:"[Kunu lɛrɛ] LT",lastWeek:"dddd [tɛmɛnen lɛrɛ] LT",sameElse:"L"},relativeTime:{future:"%s kɔnɔ",past:"a bɛ %s bɔ",s:"sanga dama dama",ss:"sekondi %d",m:"miniti kelen",mm:"miniti %d",h:"lɛrɛ kelen",hh:"lɛrɛ %d",d:"tile kelen",dd:"tile %d",M:"kalo kelen",MM:"kalo %d",y:"san kelen",yy:"san %d"},week:{dow:1,doy:4}})}(r(30381))},76225:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"১",2:"২",3:"৩",4:"৪",5:"৫",6:"৬",7:"৭",8:"৮",9:"৯",0:"০"},r={"১":"1","২":"2","৩":"3","৪":"4","৫":"5","৬":"6","৭":"7","৮":"8","৯":"9","০":"0"};t.defineLocale("bn-bd",{months:"জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর".split("_"),monthsShort:"জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে".split("_"),weekdays:"রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার".split("_"),weekdaysShort:"রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি".split("_"),weekdaysMin:"রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি".split("_"),longDateFormat:{LT:"A h:mm সময়",LTS:"A h:mm:ss সময়",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm সময়",LLLL:"dddd, D MMMM YYYY, A h:mm সময়"},calendar:{sameDay:"[আজ] LT",nextDay:"[আগামীকাল] LT",nextWeek:"dddd, LT",lastDay:"[গতকাল] LT",lastWeek:"[গত] dddd, LT",sameElse:"L"},relativeTime:{future:"%s পরে",past:"%s আগে",s:"কয়েক সেকেন্ড",ss:"%d সেকেন্ড",m:"এক মিনিট",mm:"%d মিনিট",h:"এক ঘন্টা",hh:"%d ঘন্টা",d:"এক দিন",dd:"%d দিন",M:"এক মাস",MM:"%d মাস",y:"এক বছর",yy:"%d বছর"},preparse:function(t){return t.replace(/[১২৩৪৫৬৭৮৯০]/g,(function(t){return r[t]}))},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]}))},meridiemParse:/রাত|ভোর|সকাল|দুপুর|বিকাল|সন্ধ্যা|রাত/,meridiemHour:function(t,e){return 12===t&&(t=0),"রাত"===e?t<4?t:t+12:"ভোর"===e||"সকাল"===e?t:"দুপুর"===e?t>=3?t:t+12:"বিকাল"===e||"সন্ধ্যা"===e?t+12:void 0},meridiem:function(t,e,r){return t<4?"রাত":t<6?"ভোর":t<12?"সকাল":t<15?"দুপুর":t<18?"বিকাল":t<20?"সন্ধ্যা":"রাত"},week:{dow:0,doy:6}})}(r(30381))},8905:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"১",2:"২",3:"৩",4:"৪",5:"৫",6:"৬",7:"৭",8:"৮",9:"৯",0:"০"},r={"১":"1","২":"2","৩":"3","৪":"4","৫":"5","৬":"6","৭":"7","৮":"8","৯":"9","০":"0"};t.defineLocale("bn",{months:"জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর".split("_"),monthsShort:"জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে".split("_"),weekdays:"রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার".split("_"),weekdaysShort:"রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি".split("_"),weekdaysMin:"রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি".split("_"),longDateFormat:{LT:"A h:mm সময়",LTS:"A h:mm:ss সময়",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm সময়",LLLL:"dddd, D MMMM YYYY, A h:mm সময়"},calendar:{sameDay:"[আজ] LT",nextDay:"[আগামীকাল] LT",nextWeek:"dddd, LT",lastDay:"[গতকাল] LT",lastWeek:"[গত] dddd, LT",sameElse:"L"},relativeTime:{future:"%s পরে",past:"%s আগে",s:"কয়েক সেকেন্ড",ss:"%d সেকেন্ড",m:"এক মিনিট",mm:"%d মিনিট",h:"এক ঘন্টা",hh:"%d ঘন্টা",d:"এক দিন",dd:"%d দিন",M:"এক মাস",MM:"%d মাস",y:"এক বছর",yy:"%d বছর"},preparse:function(t){return t.replace(/[১২৩৪৫৬৭৮৯০]/g,(function(t){return r[t]}))},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]}))},meridiemParse:/রাত|সকাল|দুপুর|বিকাল|রাত/,meridiemHour:function(t,e){return 12===t&&(t=0),"রাত"===e&&t>=4||"দুপুর"===e&&t<5||"বিকাল"===e?t+12:t},meridiem:function(t,e,r){return t<4?"রাত":t<10?"সকাল":t<17?"দুপুর":t<20?"বিকাল":"রাত"},week:{dow:0,doy:6}})}(r(30381))},11560:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"༡",2:"༢",3:"༣",4:"༤",5:"༥",6:"༦",7:"༧",8:"༨",9:"༩",0:"༠"},r={"༡":"1","༢":"2","༣":"3","༤":"4","༥":"5","༦":"6","༧":"7","༨":"8","༩":"9","༠":"0"};t.defineLocale("bo",{months:"ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split("_"),monthsShort:"ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12".split("_"),monthsShortRegex:/^(ཟླ་\d{1,2})/,monthsParseExact:!0,weekdays:"གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་".split("_"),weekdaysShort:"ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split("_"),weekdaysMin:"ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན".split("_"),longDateFormat:{LT:"A h:mm",LTS:"A h:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm",LLLL:"dddd, D MMMM YYYY, A h:mm"},calendar:{sameDay:"[དི་རིང] LT",nextDay:"[སང་ཉིན] LT",nextWeek:"[བདུན་ཕྲག་རྗེས་མ], LT",lastDay:"[ཁ་སང] LT",lastWeek:"[བདུན་ཕྲག་མཐའ་མ] dddd, LT",sameElse:"L"},relativeTime:{future:"%s ལ་",past:"%s སྔན་ལ",s:"ལམ་སང",ss:"%d སྐར་ཆ།",m:"སྐར་མ་གཅིག",mm:"%d སྐར་མ",h:"ཆུ་ཚོད་གཅིག",hh:"%d ཆུ་ཚོད",d:"ཉིན་གཅིག",dd:"%d ཉིན་",M:"ཟླ་བ་གཅིག",MM:"%d ཟླ་བ",y:"ལོ་གཅིག",yy:"%d ལོ"},preparse:function(t){return t.replace(/[༡༢༣༤༥༦༧༨༩༠]/g,(function(t){return r[t]}))},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]}))},meridiemParse:/མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,meridiemHour:function(t,e){return 12===t&&(t=0),"མཚན་མོ"===e&&t>=4||"ཉིན་གུང"===e&&t<5||"དགོང་དག"===e?t+12:t},meridiem:function(t,e,r){return t<4?"མཚན་མོ":t<10?"ཞོགས་ཀས":t<17?"ཉིན་གུང":t<20?"དགོང་དག":"མཚན་མོ"},week:{dow:0,doy:6}})}(r(30381))},1278:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e,r){return t+" "+i({mm:"munutenn",MM:"miz",dd:"devezh"}[r],t)}function r(t){switch(n(t)){case 1:case 3:case 4:case 5:case 9:return t+" bloaz";default:return t+" vloaz"}}function n(t){return t>9?n(t%10):t}function i(t,e){return 2===e?s(t):t}function s(t){var e={m:"v",b:"v",d:"z"};return void 0===e[t.charAt(0)]?t:e[t.charAt(0)]+t.substring(1)}var o=[/^gen/i,/^c[ʼ\']hwe/i,/^meu/i,/^ebr/i,/^mae/i,/^(mez|eve)/i,/^gou/i,/^eos/i,/^gwe/i,/^her/i,/^du/i,/^ker/i],a=/^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,u=/^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,h=/^(gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,c=[/^sul/i,/^lun/i,/^meurzh/i,/^merc[ʼ\']her/i,/^yaou/i,/^gwener/i,/^sadorn/i],l=[/^Sul/i,/^Lun/i,/^Meu/i,/^Mer/i,/^Yao/i,/^Gwe/i,/^Sad/i],d=[/^Su/i,/^Lu/i,/^Me([^r]|$)/i,/^Mer/i,/^Ya/i,/^Gw/i,/^Sa/i];t.defineLocale("br",{months:"Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split("_"),monthsShort:"Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split("_"),weekdays:"Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn".split("_"),weekdaysShort:"Sul_Lun_Meu_Mer_Yao_Gwe_Sad".split("_"),weekdaysMin:"Su_Lu_Me_Mer_Ya_Gw_Sa".split("_"),weekdaysParse:d,fullWeekdaysParse:c,shortWeekdaysParse:l,minWeekdaysParse:d,monthsRegex:a,monthsShortRegex:a,monthsStrictRegex:u,monthsShortStrictRegex:h,monthsParse:o,longMonthsParse:o,shortMonthsParse:o,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D [a viz] MMMM YYYY",LLL:"D [a viz] MMMM YYYY HH:mm",LLLL:"dddd, D [a viz] MMMM YYYY HH:mm"},calendar:{sameDay:"[Hiziv da] LT",nextDay:"[Warcʼhoazh da] LT",nextWeek:"dddd [da] LT",lastDay:"[Decʼh da] LT",lastWeek:"dddd [paset da] LT",sameElse:"L"},relativeTime:{future:"a-benn %s",past:"%s ʼzo",s:"un nebeud segondennoù",ss:"%d eilenn",m:"ur vunutenn",mm:e,h:"un eur",hh:"%d eur",d:"un devezh",dd:e,M:"ur miz",MM:e,y:"ur bloaz",yy:r},dayOfMonthOrdinalParse:/\d{1,2}(añ|vet)/,ordinal:function(t){return t+(1===t?"añ":"vet")},week:{dow:1,doy:4},meridiemParse:/a.m.|g.m./,isPM:function(t){return"g.m."===t},meridiem:function(t,e,r){return t<12?"a.m.":"g.m."}})}(r(30381))},80622:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e,r){var n=t+" ";switch(r){case"ss":return n+=1===t?"sekunda":2===t||3===t||4===t?"sekunde":"sekundi";case"m":return e?"jedna minuta":"jedne minute";case"mm":return n+=1===t?"minuta":2===t||3===t||4===t?"minute":"minuta";case"h":return e?"jedan sat":"jednog sata";case"hh":return n+=1===t?"sat":2===t||3===t||4===t?"sata":"sati";case"dd":return n+=1===t?"dan":"dana";case"MM":return n+=1===t?"mjesec":2===t||3===t||4===t?"mjeseca":"mjeseci";case"yy":return n+=1===t?"godina":2===t||3===t||4===t?"godine":"godina"}}t.defineLocale("bs",{months:"januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar".split("_"),monthsShort:"jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),weekdaysShort:"ned._pon._uto._sri._čet._pet._sub.".split("_"),weekdaysMin:"ne_po_ut_sr_če_pe_su".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm",LLLL:"dddd, D. MMMM YYYY H:mm"},calendar:{sameDay:"[danas u] LT",nextDay:"[sutra u] LT",nextWeek:function(){switch(this.day()){case 0:return"[u] [nedjelju] [u] LT";case 3:return"[u] [srijedu] [u] LT";case 6:return"[u] [subotu] [u] LT";case 1:case 2:case 4:case 5:return"[u] dddd [u] LT"}},lastDay:"[jučer u] LT",lastWeek:function(){switch(this.day()){case 0:case 3:return"[prošlu] dddd [u] LT";case 6:return"[prošle] [subote] [u] LT";case 1:case 2:case 4:case 5:return"[prošli] dddd [u] LT"}},sameElse:"L"},relativeTime:{future:"za %s",past:"prije %s",s:"par sekundi",ss:e,m:e,mm:e,h:e,hh:e,d:"dan",dd:e,M:"mjesec",MM:e,y:"godinu",yy:e},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:7}})}(r(30381))},2468:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("ca",{months:{standalone:"gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre".split("_"),format:"de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split("_"),isFormat:/D[oD]?(\s)+MMMM/},monthsShort:"gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.".split("_"),monthsParseExact:!0,weekdays:"diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte".split("_"),weekdaysShort:"dg._dl._dt._dc._dj._dv._ds.".split("_"),weekdaysMin:"dg_dl_dt_dc_dj_dv_ds".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM [de] YYYY",ll:"D MMM YYYY",LLL:"D MMMM [de] YYYY [a les] H:mm",lll:"D MMM YYYY, H:mm",LLLL:"dddd D MMMM [de] YYYY [a les] H:mm",llll:"ddd D MMM YYYY, H:mm"},calendar:{sameDay:function(){return"[avui a "+(1!==this.hours()?"les":"la")+"] LT"},nextDay:function(){return"[demà a "+(1!==this.hours()?"les":"la")+"] LT"},nextWeek:function(){return"dddd [a "+(1!==this.hours()?"les":"la")+"] LT"},lastDay:function(){return"[ahir a "+(1!==this.hours()?"les":"la")+"] LT"},lastWeek:function(){return"[el] dddd [passat a "+(1!==this.hours()?"les":"la")+"] LT"},sameElse:"L"},relativeTime:{future:"d'aquí %s",past:"fa %s",s:"uns segons",ss:"%d segons",m:"un minut",mm:"%d minuts",h:"una hora",hh:"%d hores",d:"un dia",dd:"%d dies",M:"un mes",MM:"%d mesos",y:"un any",yy:"%d anys"},dayOfMonthOrdinalParse:/\d{1,2}(r|n|t|è|a)/,ordinal:function(t,e){var r=1===t?"r":2===t?"n":3===t?"r":4===t?"t":"è";return"w"!==e&&"W"!==e||(r="a"),t+r},week:{dow:1,doy:4}})}(r(30381))},5822:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e="leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec".split("_"),r="led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro".split("_"),n=[/^led/i,/^úno/i,/^bře/i,/^dub/i,/^kvě/i,/^(čvn|červen$|června)/i,/^(čvc|červenec|července)/i,/^srp/i,/^zář/i,/^říj/i,/^lis/i,/^pro/i],i=/^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;function s(t){return t>1&&t<5&&1!=~~(t/10)}function o(t,e,r,n){var i=t+" ";switch(r){case"s":return e||n?"pár sekund":"pár sekundami";case"ss":return e||n?i+(s(t)?"sekundy":"sekund"):i+"sekundami";case"m":return e?"minuta":n?"minutu":"minutou";case"mm":return e||n?i+(s(t)?"minuty":"minut"):i+"minutami";case"h":return e?"hodina":n?"hodinu":"hodinou";case"hh":return e||n?i+(s(t)?"hodiny":"hodin"):i+"hodinami";case"d":return e||n?"den":"dnem";case"dd":return e||n?i+(s(t)?"dny":"dní"):i+"dny";case"M":return e||n?"měsíc":"měsícem";case"MM":return e||n?i+(s(t)?"měsíce":"měsíců"):i+"měsíci";case"y":return e||n?"rok":"rokem";case"yy":return e||n?i+(s(t)?"roky":"let"):i+"lety"}}t.defineLocale("cs",{months:e,monthsShort:r,monthsRegex:i,monthsShortRegex:i,monthsStrictRegex:/^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,monthsShortStrictRegex:/^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,monthsParse:n,longMonthsParse:n,shortMonthsParse:n,weekdays:"neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota".split("_"),weekdaysShort:"ne_po_út_st_čt_pá_so".split("_"),weekdaysMin:"ne_po_út_st_čt_pá_so".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm",LLLL:"dddd D. MMMM YYYY H:mm",l:"D. M. YYYY"},calendar:{sameDay:"[dnes v] LT",nextDay:"[zítra v] LT",nextWeek:function(){switch(this.day()){case 0:return"[v neděli v] LT";case 1:case 2:return"[v] dddd [v] LT";case 3:return"[ve středu v] LT";case 4:return"[ve čtvrtek v] LT";case 5:return"[v pátek v] LT";case 6:return"[v sobotu v] LT"}},lastDay:"[včera v] LT",lastWeek:function(){switch(this.day()){case 0:return"[minulou neděli v] LT";case 1:case 2:return"[minulé] dddd [v] LT";case 3:return"[minulou středu v] LT";case 4:case 5:return"[minulý] dddd [v] LT";case 6:return"[minulou sobotu v] LT"}},sameElse:"L"},relativeTime:{future:"za %s",past:"před %s",s:o,ss:o,m:o,mm:o,h:o,hh:o,d:o,dd:o,M:o,MM:o,y:o,yy:o},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},50877:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("cv",{months:"кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав".split("_"),monthsShort:"кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш".split("_"),weekdays:"вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун".split("_"),weekdaysShort:"выр_тун_ытл_юн_кӗҫ_эрн_шӑм".split("_"),weekdaysMin:"вр_тн_ыт_юн_кҫ_эр_шм".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD-MM-YYYY",LL:"YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]",LLL:"YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm",LLLL:"dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm"},calendar:{sameDay:"[Паян] LT [сехетре]",nextDay:"[Ыран] LT [сехетре]",lastDay:"[Ӗнер] LT [сехетре]",nextWeek:"[Ҫитес] dddd LT [сехетре]",lastWeek:"[Иртнӗ] dddd LT [сехетре]",sameElse:"L"},relativeTime:{future:function(t){return t+(/сехет$/i.exec(t)?"рен":/ҫул$/i.exec(t)?"тан":"ран")},past:"%s каялла",s:"пӗр-ик ҫеккунт",ss:"%d ҫеккунт",m:"пӗр минут",mm:"%d минут",h:"пӗр сехет",hh:"%d сехет",d:"пӗр кун",dd:"%d кун",M:"пӗр уйӑх",MM:"%d уйӑх",y:"пӗр ҫул",yy:"%d ҫул"},dayOfMonthOrdinalParse:/\d{1,2}-мӗш/,ordinal:"%d-мӗш",week:{dow:1,doy:7}})}(r(30381))},47373:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("cy",{months:"Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr".split("_"),monthsShort:"Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag".split("_"),weekdays:"Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn".split("_"),weekdaysShort:"Sul_Llun_Maw_Mer_Iau_Gwe_Sad".split("_"),weekdaysMin:"Su_Ll_Ma_Me_Ia_Gw_Sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Heddiw am] LT",nextDay:"[Yfory am] LT",nextWeek:"dddd [am] LT",lastDay:"[Ddoe am] LT",lastWeek:"dddd [diwethaf am] LT",sameElse:"L"},relativeTime:{future:"mewn %s",past:"%s yn ôl",s:"ychydig eiliadau",ss:"%d eiliad",m:"munud",mm:"%d munud",h:"awr",hh:"%d awr",d:"diwrnod",dd:"%d diwrnod",M:"mis",MM:"%d mis",y:"blwyddyn",yy:"%d flynedd"},dayOfMonthOrdinalParse:/\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,ordinal:function(t){var e="";return t>20?e=40===t||50===t||60===t||80===t||100===t?"fed":"ain":t>0&&(e=["","af","il","ydd","ydd","ed","ed","ed","fed","fed","fed","eg","fed","eg","eg","fed","eg","eg","fed","eg","fed"][t]),t+e},week:{dow:1,doy:4}})}(r(30381))},24780:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("da",{months:"januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december".split("_"),monthsShort:"jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),weekdays:"søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),weekdaysShort:"søn_man_tir_ons_tor_fre_lør".split("_"),weekdaysMin:"sø_ma_ti_on_to_fr_lø".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY HH:mm",LLLL:"dddd [d.] D. MMMM YYYY [kl.] HH:mm"},calendar:{sameDay:"[i dag kl.] LT",nextDay:"[i morgen kl.] LT",nextWeek:"på dddd [kl.] LT",lastDay:"[i går kl.] LT",lastWeek:"[i] dddd[s kl.] LT",sameElse:"L"},relativeTime:{future:"om %s",past:"%s siden",s:"få sekunder",ss:"%d sekunder",m:"et minut",mm:"%d minutter",h:"en time",hh:"%d timer",d:"en dag",dd:"%d dage",M:"en måned",MM:"%d måneder",y:"et år",yy:"%d år"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},60217:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e,r,n){var i={m:["eine Minute","einer Minute"],h:["eine Stunde","einer Stunde"],d:["ein Tag","einem Tag"],dd:[t+" Tage",t+" Tagen"],w:["eine Woche","einer Woche"],M:["ein Monat","einem Monat"],MM:[t+" Monate",t+" Monaten"],y:["ein Jahr","einem Jahr"],yy:[t+" Jahre",t+" Jahren"]};return e?i[r][0]:i[r][1]}t.defineLocale("de-at",{months:"Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),monthsShort:"Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),monthsParseExact:!0,weekdays:"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),weekdaysShort:"So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),weekdaysMin:"So_Mo_Di_Mi_Do_Fr_Sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY HH:mm",LLLL:"dddd, D. MMMM YYYY HH:mm"},calendar:{sameDay:"[heute um] LT [Uhr]",sameElse:"L",nextDay:"[morgen um] LT [Uhr]",nextWeek:"dddd [um] LT [Uhr]",lastDay:"[gestern um] LT [Uhr]",lastWeek:"[letzten] dddd [um] LT [Uhr]"},relativeTime:{future:"in %s",past:"vor %s",s:"ein paar Sekunden",ss:"%d Sekunden",m:e,mm:"%d Minuten",h:e,hh:"%d Stunden",d:e,dd:e,w:e,ww:"%d Wochen",M:e,MM:e,y:e,yy:e},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},60894:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e,r,n){var i={m:["eine Minute","einer Minute"],h:["eine Stunde","einer Stunde"],d:["ein Tag","einem Tag"],dd:[t+" Tage",t+" Tagen"],w:["eine Woche","einer Woche"],M:["ein Monat","einem Monat"],MM:[t+" Monate",t+" Monaten"],y:["ein Jahr","einem Jahr"],yy:[t+" Jahre",t+" Jahren"]};return e?i[r][0]:i[r][1]}t.defineLocale("de-ch",{months:"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),monthsShort:"Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),monthsParseExact:!0,weekdays:"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),weekdaysShort:"So_Mo_Di_Mi_Do_Fr_Sa".split("_"),weekdaysMin:"So_Mo_Di_Mi_Do_Fr_Sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY HH:mm",LLLL:"dddd, D. MMMM YYYY HH:mm"},calendar:{sameDay:"[heute um] LT [Uhr]",sameElse:"L",nextDay:"[morgen um] LT [Uhr]",nextWeek:"dddd [um] LT [Uhr]",lastDay:"[gestern um] LT [Uhr]",lastWeek:"[letzten] dddd [um] LT [Uhr]"},relativeTime:{future:"in %s",past:"vor %s",s:"ein paar Sekunden",ss:"%d Sekunden",m:e,mm:"%d Minuten",h:e,hh:"%d Stunden",d:e,dd:e,w:e,ww:"%d Wochen",M:e,MM:e,y:e,yy:e},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},59740:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e,r,n){var i={m:["eine Minute","einer Minute"],h:["eine Stunde","einer Stunde"],d:["ein Tag","einem Tag"],dd:[t+" Tage",t+" Tagen"],w:["eine Woche","einer Woche"],M:["ein Monat","einem Monat"],MM:[t+" Monate",t+" Monaten"],y:["ein Jahr","einem Jahr"],yy:[t+" Jahre",t+" Jahren"]};return e?i[r][0]:i[r][1]}t.defineLocale("de",{months:"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),monthsShort:"Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),monthsParseExact:!0,weekdays:"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),weekdaysShort:"So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),weekdaysMin:"So_Mo_Di_Mi_Do_Fr_Sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY HH:mm",LLLL:"dddd, D. MMMM YYYY HH:mm"},calendar:{sameDay:"[heute um] LT [Uhr]",sameElse:"L",nextDay:"[morgen um] LT [Uhr]",nextWeek:"dddd [um] LT [Uhr]",lastDay:"[gestern um] LT [Uhr]",lastWeek:"[letzten] dddd [um] LT [Uhr]"},relativeTime:{future:"in %s",past:"vor %s",s:"ein paar Sekunden",ss:"%d Sekunden",m:e,mm:"%d Minuten",h:e,hh:"%d Stunden",d:e,dd:e,w:e,ww:"%d Wochen",M:e,MM:e,y:e,yy:e},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},5300:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e=["ޖެނުއަރީ","ފެބްރުއަރީ","މާރިޗު","އޭޕްރީލު","މޭ","ޖޫން","ޖުލައި","އޯގަސްޓު","ސެޕްޓެމްބަރު","އޮކްޓޯބަރު","ނޮވެމްބަރު","ޑިސެމްބަރު"],r=["އާދިއްތަ","ހޯމަ","އަންގާރަ","ބުދަ","ބުރާސްފަތި","ހުކުރު","ހޮނިހިރު"];t.defineLocale("dv",{months:e,monthsShort:e,weekdays:r,weekdaysShort:r,weekdaysMin:"އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"D/M/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},meridiemParse:/މކ|މފ/,isPM:function(t){return"މފ"===t},meridiem:function(t,e,r){return t<12?"މކ":"މފ"},calendar:{sameDay:"[މިއަދު] LT",nextDay:"[މާދަމާ] LT",nextWeek:"dddd LT",lastDay:"[އިއްޔެ] LT",lastWeek:"[ފާއިތުވި] dddd LT",sameElse:"L"},relativeTime:{future:"ތެރޭގައި %s",past:"ކުރިން %s",s:"ސިކުންތުކޮޅެއް",ss:"d% ސިކުންތު",m:"މިނިޓެއް",mm:"މިނިޓު %d",h:"ގަޑިއިރެއް",hh:"ގަޑިއިރު %d",d:"ދުވަހެއް",dd:"ދުވަސް %d",M:"މަހެއް",MM:"މަސް %d",y:"އަހަރެއް",yy:"އަހަރު %d"},preparse:function(t){return t.replace(/،/g,",")},postformat:function(t){return t.replace(/,/g,"،")},week:{dow:7,doy:12}})}(r(30381))},50837:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t){return"undefined"!=typeof Function&&t instanceof Function||"[object Function]"===Object.prototype.toString.call(t)}t.defineLocale("el",{monthsNominativeEl:"Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος".split("_"),monthsGenitiveEl:"Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου".split("_"),months:function(t,e){return t?"string"==typeof e&&/D/.test(e.substring(0,e.indexOf("MMMM")))?this._monthsGenitiveEl[t.month()]:this._monthsNominativeEl[t.month()]:this._monthsNominativeEl},monthsShort:"Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ".split("_"),weekdays:"Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο".split("_"),weekdaysShort:"Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ".split("_"),weekdaysMin:"Κυ_Δε_Τρ_Τε_Πε_Πα_Σα".split("_"),meridiem:function(t,e,r){return t>11?r?"μμ":"ΜΜ":r?"πμ":"ΠΜ"},isPM:function(t){return"μ"===(t+"").toLowerCase()[0]},meridiemParse:/[ΠΜ]\.?Μ?\.?/i,longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY h:mm A",LLLL:"dddd, D MMMM YYYY h:mm A"},calendarEl:{sameDay:"[Σήμερα {}] LT",nextDay:"[Αύριο {}] LT",nextWeek:"dddd [{}] LT",lastDay:"[Χθες {}] LT",lastWeek:function(){return 6===this.day()?"[το προηγούμενο] dddd [{}] LT":"[την προηγούμενη] dddd [{}] LT"},sameElse:"L"},calendar:function(t,r){var n=this._calendarEl[t],i=r&&r.hours();return e(n)&&(n=n.apply(r)),n.replace("{}",i%12==1?"στη":"στις")},relativeTime:{future:"σε %s",past:"%s πριν",s:"λίγα δευτερόλεπτα",ss:"%d δευτερόλεπτα",m:"ένα λεπτό",mm:"%d λεπτά",h:"μία ώρα",hh:"%d ώρες",d:"μία μέρα",dd:"%d μέρες",M:"ένας μήνας",MM:"%d μήνες",y:"ένας χρόνος",yy:"%d χρόνια"},dayOfMonthOrdinalParse:/\d{1,2}η/,ordinal:"%dη",week:{dow:1,doy:4}})}(r(30381))},78348:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("en-au",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY h:mm A",LLLL:"dddd, D MMMM YYYY h:mm A"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(t){var e=t%10;return t+(1==~~(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th")},week:{dow:0,doy:4}})}(r(30381))},77925:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("en-ca",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"YYYY-MM-DD",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(t){var e=t%10;return t+(1==~~(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th")}})}(r(30381))},22243:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("en-gb",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(t){var e=t%10;return t+(1==~~(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th")},week:{dow:1,doy:4}})}(r(30381))},46436:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("en-ie",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(t){var e=t%10;return t+(1==~~(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th")},week:{dow:1,doy:4}})}(r(30381))},47207:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("en-il",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(t){var e=t%10;return t+(1==~~(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th")}})}(r(30381))},44175:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("en-in",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY h:mm A",LLLL:"dddd, D MMMM YYYY h:mm A"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(t){var e=t%10;return t+(1==~~(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th")},week:{dow:0,doy:6}})}(r(30381))},76319:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("en-nz",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY h:mm A",LLLL:"dddd, D MMMM YYYY h:mm A"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(t){var e=t%10;return t+(1==~~(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th")},week:{dow:1,doy:4}})}(r(30381))},31662:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("en-sg",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(t){var e=t%10;return t+(1==~~(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th")},week:{dow:1,doy:4}})}(r(30381))},92915:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("eo",{months:"januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro".split("_"),monthsShort:"jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec".split("_"),weekdays:"dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato".split("_"),weekdaysShort:"dim_lun_mard_merk_ĵaŭ_ven_sab".split("_"),weekdaysMin:"di_lu_ma_me_ĵa_ve_sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY-MM-DD",LL:"[la] D[-an de] MMMM, YYYY",LLL:"[la] D[-an de] MMMM, YYYY HH:mm",LLLL:"dddd[n], [la] D[-an de] MMMM, YYYY HH:mm",llll:"ddd, [la] D[-an de] MMM, YYYY HH:mm"},meridiemParse:/[ap]\.t\.m/i,isPM:function(t){return"p"===t.charAt(0).toLowerCase()},meridiem:function(t,e,r){return t>11?r?"p.t.m.":"P.T.M.":r?"a.t.m.":"A.T.M."},calendar:{sameDay:"[Hodiaŭ je] LT",nextDay:"[Morgaŭ je] LT",nextWeek:"dddd[n je] LT",lastDay:"[Hieraŭ je] LT",lastWeek:"[pasintan] dddd[n je] LT",sameElse:"L"},relativeTime:{future:"post %s",past:"antaŭ %s",s:"kelkaj sekundoj",ss:"%d sekundoj",m:"unu minuto",mm:"%d minutoj",h:"unu horo",hh:"%d horoj",d:"unu tago",dd:"%d tagoj",M:"unu monato",MM:"%d monatoj",y:"unu jaro",yy:"%d jaroj"},dayOfMonthOrdinalParse:/\d{1,2}a/,ordinal:"%da",week:{dow:1,doy:7}})}(r(30381))},55251:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e="ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),r="ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),n=[/^ene/i,/^feb/i,/^mar/i,/^abr/i,/^may/i,/^jun/i,/^jul/i,/^ago/i,/^sep/i,/^oct/i,/^nov/i,/^dic/i],i=/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;t.defineLocale("es-do",{months:"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),monthsShort:function(t,n){return t?/-MMM-/.test(n)?r[t.month()]:e[t.month()]:e},monthsRegex:i,monthsShortRegex:i,monthsStrictRegex:/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,monthsShortStrictRegex:/^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,monthsParse:n,longMonthsParse:n,shortMonthsParse:n,weekdays:"domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),weekdaysShort:"dom._lun._mar._mié._jue._vie._sáb.".split("_"),weekdaysMin:"do_lu_ma_mi_ju_vi_sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY h:mm A",LLLL:"dddd, D [de] MMMM [de] YYYY h:mm A"},calendar:{sameDay:function(){return"[hoy a la"+(1!==this.hours()?"s":"")+"] LT"},nextDay:function(){return"[mañana a la"+(1!==this.hours()?"s":"")+"] LT"},nextWeek:function(){return"dddd [a la"+(1!==this.hours()?"s":"")+"] LT"},lastDay:function(){return"[ayer a la"+(1!==this.hours()?"s":"")+"] LT"},lastWeek:function(){return"[el] dddd [pasado a la"+(1!==this.hours()?"s":"")+"] LT"},sameElse:"L"},relativeTime:{future:"en %s",past:"hace %s",s:"unos segundos",ss:"%d segundos",m:"un minuto",mm:"%d minutos",h:"una hora",hh:"%d horas",d:"un día",dd:"%d días",w:"una semana",ww:"%d semanas",M:"un mes",MM:"%d meses",y:"un año",yy:"%d años"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4}})}(r(30381))},96112:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e="ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),r="ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),n=[/^ene/i,/^feb/i,/^mar/i,/^abr/i,/^may/i,/^jun/i,/^jul/i,/^ago/i,/^sep/i,/^oct/i,/^nov/i,/^dic/i],i=/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;t.defineLocale("es-mx",{months:"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),monthsShort:function(t,n){return t?/-MMM-/.test(n)?r[t.month()]:e[t.month()]:e},monthsRegex:i,monthsShortRegex:i,monthsStrictRegex:/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,monthsShortStrictRegex:/^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,monthsParse:n,longMonthsParse:n,shortMonthsParse:n,weekdays:"domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),weekdaysShort:"dom._lun._mar._mié._jue._vie._sáb.".split("_"),weekdaysMin:"do_lu_ma_mi_ju_vi_sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY H:mm",LLLL:"dddd, D [de] MMMM [de] YYYY H:mm"},calendar:{sameDay:function(){return"[hoy a la"+(1!==this.hours()?"s":"")+"] LT"},nextDay:function(){return"[mañana a la"+(1!==this.hours()?"s":"")+"] LT"},nextWeek:function(){return"dddd [a la"+(1!==this.hours()?"s":"")+"] LT"},lastDay:function(){return"[ayer a la"+(1!==this.hours()?"s":"")+"] LT"},lastWeek:function(){return"[el] dddd [pasado a la"+(1!==this.hours()?"s":"")+"] LT"},sameElse:"L"},relativeTime:{future:"en %s",past:"hace %s",s:"unos segundos",ss:"%d segundos",m:"un minuto",mm:"%d minutos",h:"una hora",hh:"%d horas",d:"un día",dd:"%d días",w:"una semana",ww:"%d semanas",M:"un mes",MM:"%d meses",y:"un año",yy:"%d años"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:0,doy:4},invalidDate:"Fecha inválida"})}(r(30381))},71146:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e="ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),r="ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),n=[/^ene/i,/^feb/i,/^mar/i,/^abr/i,/^may/i,/^jun/i,/^jul/i,/^ago/i,/^sep/i,/^oct/i,/^nov/i,/^dic/i],i=/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;t.defineLocale("es-us",{months:"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),monthsShort:function(t,n){return t?/-MMM-/.test(n)?r[t.month()]:e[t.month()]:e},monthsRegex:i,monthsShortRegex:i,monthsStrictRegex:/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,monthsShortStrictRegex:/^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,monthsParse:n,longMonthsParse:n,shortMonthsParse:n,weekdays:"domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),weekdaysShort:"dom._lun._mar._mié._jue._vie._sáb.".split("_"),weekdaysMin:"do_lu_ma_mi_ju_vi_sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"MM/DD/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY h:mm A",LLLL:"dddd, D [de] MMMM [de] YYYY h:mm A"},calendar:{sameDay:function(){return"[hoy a la"+(1!==this.hours()?"s":"")+"] LT"},nextDay:function(){return"[mañana a la"+(1!==this.hours()?"s":"")+"] LT"},nextWeek:function(){return"dddd [a la"+(1!==this.hours()?"s":"")+"] LT"},lastDay:function(){return"[ayer a la"+(1!==this.hours()?"s":"")+"] LT"},lastWeek:function(){return"[el] dddd [pasado a la"+(1!==this.hours()?"s":"")+"] LT"},sameElse:"L"},relativeTime:{future:"en %s",past:"hace %s",s:"unos segundos",ss:"%d segundos",m:"un minuto",mm:"%d minutos",h:"una hora",hh:"%d horas",d:"un día",dd:"%d días",w:"una semana",ww:"%d semanas",M:"un mes",MM:"%d meses",y:"un año",yy:"%d años"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:0,doy:6}})}(r(30381))},55655:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e="ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),r="ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),n=[/^ene/i,/^feb/i,/^mar/i,/^abr/i,/^may/i,/^jun/i,/^jul/i,/^ago/i,/^sep/i,/^oct/i,/^nov/i,/^dic/i],i=/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;t.defineLocale("es",{months:"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),monthsShort:function(t,n){return t?/-MMM-/.test(n)?r[t.month()]:e[t.month()]:e},monthsRegex:i,monthsShortRegex:i,monthsStrictRegex:/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,monthsShortStrictRegex:/^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,monthsParse:n,longMonthsParse:n,shortMonthsParse:n,weekdays:"domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),weekdaysShort:"dom._lun._mar._mié._jue._vie._sáb.".split("_"),weekdaysMin:"do_lu_ma_mi_ju_vi_sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY H:mm",LLLL:"dddd, D [de] MMMM [de] YYYY H:mm"},calendar:{sameDay:function(){return"[hoy a la"+(1!==this.hours()?"s":"")+"] LT"},nextDay:function(){return"[mañana a la"+(1!==this.hours()?"s":"")+"] LT"},nextWeek:function(){return"dddd [a la"+(1!==this.hours()?"s":"")+"] LT"},lastDay:function(){return"[ayer a la"+(1!==this.hours()?"s":"")+"] LT"},lastWeek:function(){return"[el] dddd [pasado a la"+(1!==this.hours()?"s":"")+"] LT"},sameElse:"L"},relativeTime:{future:"en %s",past:"hace %s",s:"unos segundos",ss:"%d segundos",m:"un minuto",mm:"%d minutos",h:"una hora",hh:"%d horas",d:"un día",dd:"%d días",w:"una semana",ww:"%d semanas",M:"un mes",MM:"%d meses",y:"un año",yy:"%d años"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4},invalidDate:"Fecha inválida"})}(r(30381))},5603:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e,r,n){var i={s:["mõne sekundi","mõni sekund","paar sekundit"],ss:[t+"sekundi",t+"sekundit"],m:["ühe minuti","üks minut"],mm:[t+" minuti",t+" minutit"],h:["ühe tunni","tund aega","üks tund"],hh:[t+" tunni",t+" tundi"],d:["ühe päeva","üks päev"],M:["kuu aja","kuu aega","üks kuu"],MM:[t+" kuu",t+" kuud"],y:["ühe aasta","aasta","üks aasta"],yy:[t+" aasta",t+" aastat"]};return e?i[r][2]?i[r][2]:i[r][1]:n?i[r][0]:i[r][1]}t.defineLocale("et",{months:"jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember".split("_"),monthsShort:"jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets".split("_"),weekdays:"pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev".split("_"),weekdaysShort:"P_E_T_K_N_R_L".split("_"),weekdaysMin:"P_E_T_K_N_R_L".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm",LLLL:"dddd, D. MMMM YYYY H:mm"},calendar:{sameDay:"[Täna,] LT",nextDay:"[Homme,] LT",nextWeek:"[Järgmine] dddd LT",lastDay:"[Eile,] LT",lastWeek:"[Eelmine] dddd LT",sameElse:"L"},relativeTime:{future:"%s pärast",past:"%s tagasi",s:e,ss:e,m:e,mm:e,h:e,hh:e,d:e,dd:"%d päeva",M:e,MM:e,y:e,yy:e},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},77763:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("eu",{months:"urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua".split("_"),monthsShort:"urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.".split("_"),monthsParseExact:!0,weekdays:"igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata".split("_"),weekdaysShort:"ig._al._ar._az._og._ol._lr.".split("_"),weekdaysMin:"ig_al_ar_az_og_ol_lr".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY-MM-DD",LL:"YYYY[ko] MMMM[ren] D[a]",LLL:"YYYY[ko] MMMM[ren] D[a] HH:mm",LLLL:"dddd, YYYY[ko] MMMM[ren] D[a] HH:mm",l:"YYYY-M-D",ll:"YYYY[ko] MMM D[a]",lll:"YYYY[ko] MMM D[a] HH:mm",llll:"ddd, YYYY[ko] MMM D[a] HH:mm"},calendar:{sameDay:"[gaur] LT[etan]",nextDay:"[bihar] LT[etan]",nextWeek:"dddd LT[etan]",lastDay:"[atzo] LT[etan]",lastWeek:"[aurreko] dddd LT[etan]",sameElse:"L"},relativeTime:{future:"%s barru",past:"duela %s",s:"segundo batzuk",ss:"%d segundo",m:"minutu bat",mm:"%d minutu",h:"ordu bat",hh:"%d ordu",d:"egun bat",dd:"%d egun",M:"hilabete bat",MM:"%d hilabete",y:"urte bat",yy:"%d urte"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:7}})}(r(30381))},76959:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"۱",2:"۲",3:"۳",4:"۴",5:"۵",6:"۶",7:"۷",8:"۸",9:"۹",0:"۰"},r={"۱":"1","۲":"2","۳":"3","۴":"4","۵":"5","۶":"6","۷":"7","۸":"8","۹":"9","۰":"0"};t.defineLocale("fa",{months:"ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),monthsShort:"ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),weekdays:"یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),weekdaysShort:"یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),weekdaysMin:"ی_د_س_چ_پ_ج_ش".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},meridiemParse:/قبل از ظهر|بعد از ظهر/,isPM:function(t){return/بعد از ظهر/.test(t)},meridiem:function(t,e,r){return t<12?"قبل از ظهر":"بعد از ظهر"},calendar:{sameDay:"[امروز ساعت] LT",nextDay:"[فردا ساعت] LT",nextWeek:"dddd [ساعت] LT",lastDay:"[دیروز ساعت] LT",lastWeek:"dddd [پیش] [ساعت] LT",sameElse:"L"},relativeTime:{future:"در %s",past:"%s پیش",s:"چند ثانیه",ss:"%d ثانیه",m:"یک دقیقه",mm:"%d دقیقه",h:"یک ساعت",hh:"%d ساعت",d:"یک روز",dd:"%d روز",M:"یک ماه",MM:"%d ماه",y:"یک سال",yy:"%d سال"},preparse:function(t){return t.replace(/[۰-۹]/g,(function(t){return r[t]})).replace(/،/g,",")},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]})).replace(/,/g,"،")},dayOfMonthOrdinalParse:/\d{1,2}م/,ordinal:"%dم",week:{dow:6,doy:12}})}(r(30381))},11897:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e="nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän".split(" "),r=["nolla","yhden","kahden","kolmen","neljän","viiden","kuuden",e[7],e[8],e[9]];function n(t,e,r,n){var s="";switch(r){case"s":return n?"muutaman sekunnin":"muutama sekunti";case"ss":s=n?"sekunnin":"sekuntia";break;case"m":return n?"minuutin":"minuutti";case"mm":s=n?"minuutin":"minuuttia";break;case"h":return n?"tunnin":"tunti";case"hh":s=n?"tunnin":"tuntia";break;case"d":return n?"päivän":"päivä";case"dd":s=n?"päivän":"päivää";break;case"M":return n?"kuukauden":"kuukausi";case"MM":s=n?"kuukauden":"kuukautta";break;case"y":return n?"vuoden":"vuosi";case"yy":s=n?"vuoden":"vuotta"}return s=i(t,n)+" "+s}function i(t,n){return t<10?n?r[t]:e[t]:t}t.defineLocale("fi",{months:"tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu".split("_"),monthsShort:"tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu".split("_"),weekdays:"sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai".split("_"),weekdaysShort:"su_ma_ti_ke_to_pe_la".split("_"),weekdaysMin:"su_ma_ti_ke_to_pe_la".split("_"),longDateFormat:{LT:"HH.mm",LTS:"HH.mm.ss",L:"DD.MM.YYYY",LL:"Do MMMM[ta] YYYY",LLL:"Do MMMM[ta] YYYY, [klo] HH.mm",LLLL:"dddd, Do MMMM[ta] YYYY, [klo] HH.mm",l:"D.M.YYYY",ll:"Do MMM YYYY",lll:"Do MMM YYYY, [klo] HH.mm",llll:"ddd, Do MMM YYYY, [klo] HH.mm"},calendar:{sameDay:"[tänään] [klo] LT",nextDay:"[huomenna] [klo] LT",nextWeek:"dddd [klo] LT",lastDay:"[eilen] [klo] LT",lastWeek:"[viime] dddd[na] [klo] LT",sameElse:"L"},relativeTime:{future:"%s päästä",past:"%s sitten",s:n,ss:n,m:n,mm:n,h:n,hh:n,d:n,dd:n,M:n,MM:n,y:n,yy:n},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},42549:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("fil",{months:"Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split("_"),monthsShort:"Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),weekdays:"Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),weekdaysShort:"Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),weekdaysMin:"Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"MM/D/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY HH:mm",LLLL:"dddd, MMMM DD, YYYY HH:mm"},calendar:{sameDay:"LT [ngayong araw]",nextDay:"[Bukas ng] LT",nextWeek:"LT [sa susunod na] dddd",lastDay:"LT [kahapon]",lastWeek:"LT [noong nakaraang] dddd",sameElse:"L"},relativeTime:{future:"sa loob ng %s",past:"%s ang nakalipas",s:"ilang segundo",ss:"%d segundo",m:"isang minuto",mm:"%d minuto",h:"isang oras",hh:"%d oras",d:"isang araw",dd:"%d araw",M:"isang buwan",MM:"%d buwan",y:"isang taon",yy:"%d taon"},dayOfMonthOrdinalParse:/\d{1,2}/,ordinal:function(t){return t},week:{dow:1,doy:4}})}(r(30381))},94694:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("fo",{months:"januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember".split("_"),monthsShort:"jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),weekdays:"sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur".split("_"),weekdaysShort:"sun_mán_týs_mik_hós_frí_ley".split("_"),weekdaysMin:"su_má_tý_mi_hó_fr_le".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D. MMMM, YYYY HH:mm"},calendar:{sameDay:"[Í dag kl.] LT",nextDay:"[Í morgin kl.] LT",nextWeek:"dddd [kl.] LT",lastDay:"[Í gjár kl.] LT",lastWeek:"[síðstu] dddd [kl] LT",sameElse:"L"},relativeTime:{future:"um %s",past:"%s síðani",s:"fá sekund",ss:"%d sekundir",m:"ein minuttur",mm:"%d minuttir",h:"ein tími",hh:"%d tímar",d:"ein dagur",dd:"%d dagar",M:"ein mánaður",MM:"%d mánaðir",y:"eitt ár",yy:"%d ár"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},63049:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("fr-ca",{months:"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),monthsShort:"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),monthsParseExact:!0,weekdays:"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),weekdaysShort:"dim._lun._mar._mer._jeu._ven._sam.".split("_"),weekdaysMin:"di_lu_ma_me_je_ve_sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY-MM-DD",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[Aujourd’hui à] LT",nextDay:"[Demain à] LT",nextWeek:"dddd [à] LT",lastDay:"[Hier à] LT",lastWeek:"dddd [dernier à] LT",sameElse:"L"},relativeTime:{future:"dans %s",past:"il y a %s",s:"quelques secondes",ss:"%d secondes",m:"une minute",mm:"%d minutes",h:"une heure",hh:"%d heures",d:"un jour",dd:"%d jours",M:"un mois",MM:"%d mois",y:"un an",yy:"%d ans"},dayOfMonthOrdinalParse:/\d{1,2}(er|e)/,ordinal:function(t,e){switch(e){default:return t+(1===t?"er":"e");case"w":case"W":return t+(1===t?"re":"e")}}})}(r(30381))},52330:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("fr-ch",{months:"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),monthsShort:"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),monthsParseExact:!0,weekdays:"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),weekdaysShort:"dim._lun._mar._mer._jeu._ven._sam.".split("_"),weekdaysMin:"di_lu_ma_me_je_ve_sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[Aujourd’hui à] LT",nextDay:"[Demain à] LT",nextWeek:"dddd [à] LT",lastDay:"[Hier à] LT",lastWeek:"dddd [dernier à] LT",sameElse:"L"},relativeTime:{future:"dans %s",past:"il y a %s",s:"quelques secondes",ss:"%d secondes",m:"une minute",mm:"%d minutes",h:"une heure",hh:"%d heures",d:"un jour",dd:"%d jours",M:"un mois",MM:"%d mois",y:"un an",yy:"%d ans"},dayOfMonthOrdinalParse:/\d{1,2}(er|e)/,ordinal:function(t,e){switch(e){default:return t+(1===t?"er":"e");case"w":case"W":return t+(1===t?"re":"e")}},week:{dow:1,doy:4}})}(r(30381))},94470:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e=/^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,r=/(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?)/i,n=/(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,i=[/^janv/i,/^févr/i,/^mars/i,/^avr/i,/^mai/i,/^juin/i,/^juil/i,/^août/i,/^sept/i,/^oct/i,/^nov/i,/^déc/i];t.defineLocale("fr",{months:"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),monthsShort:"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),monthsRegex:n,monthsShortRegex:n,monthsStrictRegex:e,monthsShortStrictRegex:r,monthsParse:i,longMonthsParse:i,shortMonthsParse:i,weekdays:"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),weekdaysShort:"dim._lun._mar._mer._jeu._ven._sam.".split("_"),weekdaysMin:"di_lu_ma_me_je_ve_sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[Aujourd’hui à] LT",nextDay:"[Demain à] LT",nextWeek:"dddd [à] LT",lastDay:"[Hier à] LT",lastWeek:"dddd [dernier à] LT",sameElse:"L"},relativeTime:{future:"dans %s",past:"il y a %s",s:"quelques secondes",ss:"%d secondes",m:"une minute",mm:"%d minutes",h:"une heure",hh:"%d heures",d:"un jour",dd:"%d jours",w:"une semaine",ww:"%d semaines",M:"un mois",MM:"%d mois",y:"un an",yy:"%d ans"},dayOfMonthOrdinalParse:/\d{1,2}(er|)/,ordinal:function(t,e){switch(e){case"D":return t+(1===t?"er":"");default:return t+(1===t?"er":"e");case"w":case"W":return t+(1===t?"re":"e")}},week:{dow:1,doy:4}})}(r(30381))},5044:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e="jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.".split("_"),r="jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_");t.defineLocale("fy",{months:"jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber".split("_"),monthsShort:function(t,n){return t?/-MMM-/.test(n)?r[t.month()]:e[t.month()]:e},monthsParseExact:!0,weekdays:"snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon".split("_"),weekdaysShort:"si._mo._ti._wo._to._fr._so.".split("_"),weekdaysMin:"Si_Mo_Ti_Wo_To_Fr_So".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD-MM-YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[hjoed om] LT",nextDay:"[moarn om] LT",nextWeek:"dddd [om] LT",lastDay:"[juster om] LT",lastWeek:"[ôfrûne] dddd [om] LT",sameElse:"L"},relativeTime:{future:"oer %s",past:"%s lyn",s:"in pear sekonden",ss:"%d sekonden",m:"ien minút",mm:"%d minuten",h:"ien oere",hh:"%d oeren",d:"ien dei",dd:"%d dagen",M:"ien moanne",MM:"%d moannen",y:"ien jier",yy:"%d jierren"},dayOfMonthOrdinalParse:/\d{1,2}(ste|de)/,ordinal:function(t){return t+(1===t||8===t||t>=20?"ste":"de")},week:{dow:1,doy:4}})}(r(30381))},29295:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e=["Eanáir","Feabhra","Márta","Aibreán","Bealtaine","Meitheamh","Iúil","Lúnasa","Meán Fómhair","Deireadh Fómhair","Samhain","Nollaig"],r=["Ean","Feabh","Márt","Aib","Beal","Meith","Iúil","Lún","M.F.","D.F.","Samh","Noll"],n=["Dé Domhnaigh","Dé Luain","Dé Máirt","Dé Céadaoin","Déardaoin","Dé hAoine","Dé Sathairn"],i=["Domh","Luan","Máirt","Céad","Déar","Aoine","Sath"],s=["Do","Lu","Má","Cé","Dé","A","Sa"];t.defineLocale("ga",{months:e,monthsShort:r,monthsParseExact:!0,weekdays:n,weekdaysShort:i,weekdaysMin:s,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Inniu ag] LT",nextDay:"[Amárach ag] LT",nextWeek:"dddd [ag] LT",lastDay:"[Inné ag] LT",lastWeek:"dddd [seo caite] [ag] LT",sameElse:"L"},relativeTime:{future:"i %s",past:"%s ó shin",s:"cúpla soicind",ss:"%d soicind",m:"nóiméad",mm:"%d nóiméad",h:"uair an chloig",hh:"%d uair an chloig",d:"lá",dd:"%d lá",M:"mí",MM:"%d míonna",y:"bliain",yy:"%d bliain"},dayOfMonthOrdinalParse:/\d{1,2}(d|na|mh)/,ordinal:function(t){return t+(1===t?"d":t%10==2?"na":"mh")},week:{dow:1,doy:4}})}(r(30381))},2101:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e=["Am Faoilleach","An Gearran","Am Màrt","An Giblean","An Cèitean","An t-Ògmhios","An t-Iuchar","An Lùnastal","An t-Sultain","An Dàmhair","An t-Samhain","An Dùbhlachd"],r=["Faoi","Gear","Màrt","Gibl","Cèit","Ògmh","Iuch","Lùn","Sult","Dàmh","Samh","Dùbh"],n=["Didòmhnaich","Diluain","Dimàirt","Diciadain","Diardaoin","Dihaoine","Disathairne"],i=["Did","Dil","Dim","Dic","Dia","Dih","Dis"],s=["Dò","Lu","Mà","Ci","Ar","Ha","Sa"];t.defineLocale("gd",{months:e,monthsShort:r,monthsParseExact:!0,weekdays:n,weekdaysShort:i,weekdaysMin:s,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[An-diugh aig] LT",nextDay:"[A-màireach aig] LT",nextWeek:"dddd [aig] LT",lastDay:"[An-dè aig] LT",lastWeek:"dddd [seo chaidh] [aig] LT",sameElse:"L"},relativeTime:{future:"ann an %s",past:"bho chionn %s",s:"beagan diogan",ss:"%d diogan",m:"mionaid",mm:"%d mionaidean",h:"uair",hh:"%d uairean",d:"latha",dd:"%d latha",M:"mìos",MM:"%d mìosan",y:"bliadhna",yy:"%d bliadhna"},dayOfMonthOrdinalParse:/\d{1,2}(d|na|mh)/,ordinal:function(t){return t+(1===t?"d":t%10==2?"na":"mh")},week:{dow:1,doy:4}})}(r(30381))},38794:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("gl",{months:"xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro".split("_"),monthsShort:"xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"domingo_luns_martes_mércores_xoves_venres_sábado".split("_"),weekdaysShort:"dom._lun._mar._mér._xov._ven._sáb.".split("_"),weekdaysMin:"do_lu_ma_mé_xo_ve_sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY H:mm",LLLL:"dddd, D [de] MMMM [de] YYYY H:mm"},calendar:{sameDay:function(){return"[hoxe "+(1!==this.hours()?"ás":"á")+"] LT"},nextDay:function(){return"[mañá "+(1!==this.hours()?"ás":"á")+"] LT"},nextWeek:function(){return"dddd ["+(1!==this.hours()?"ás":"a")+"] LT"},lastDay:function(){return"[onte "+(1!==this.hours()?"á":"a")+"] LT"},lastWeek:function(){return"[o] dddd [pasado "+(1!==this.hours()?"ás":"a")+"] LT"},sameElse:"L"},relativeTime:{future:function(t){return 0===t.indexOf("un")?"n"+t:"en "+t},past:"hai %s",s:"uns segundos",ss:"%d segundos",m:"un minuto",mm:"%d minutos",h:"unha hora",hh:"%d horas",d:"un día",dd:"%d días",M:"un mes",MM:"%d meses",y:"un ano",yy:"%d anos"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4}})}(r(30381))},27884:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e,r,n){var i={s:["थोडया सॅकंडांनी","थोडे सॅकंड"],ss:[t+" सॅकंडांनी",t+" सॅकंड"],m:["एका मिणटान","एक मिनूट"],mm:[t+" मिणटांनी",t+" मिणटां"],h:["एका वरान","एक वर"],hh:[t+" वरांनी",t+" वरां"],d:["एका दिसान","एक दीस"],dd:[t+" दिसांनी",t+" दीस"],M:["एका म्हयन्यान","एक म्हयनो"],MM:[t+" म्हयन्यानी",t+" म्हयने"],y:["एका वर्सान","एक वर्स"],yy:[t+" वर्सांनी",t+" वर्सां"]};return n?i[r][0]:i[r][1]}t.defineLocale("gom-deva",{months:{standalone:"जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर".split("_"),format:"जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या".split("_"),isFormat:/MMMM(\s)+D[oD]?/},monthsShort:"जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.".split("_"),monthsParseExact:!0,weekdays:"आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार".split("_"),weekdaysShort:"आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.".split("_"),weekdaysMin:"आ_सो_मं_बु_ब्रे_सु_शे".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"A h:mm [वाजतां]",LTS:"A h:mm:ss [वाजतां]",L:"DD-MM-YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY A h:mm [वाजतां]",LLLL:"dddd, MMMM Do, YYYY, A h:mm [वाजतां]",llll:"ddd, D MMM YYYY, A h:mm [वाजतां]"},calendar:{sameDay:"[आयज] LT",nextDay:"[फाल्यां] LT",nextWeek:"[फुडलो] dddd[,] LT",lastDay:"[काल] LT",lastWeek:"[फाटलो] dddd[,] LT",sameElse:"L"},relativeTime:{future:"%s",past:"%s आदीं",s:e,ss:e,m:e,mm:e,h:e,hh:e,d:e,dd:e,M:e,MM:e,y:e,yy:e},dayOfMonthOrdinalParse:/\d{1,2}(वेर)/,ordinal:function(t,e){return"D"===e?t+"वेर":t},week:{dow:0,doy:3},meridiemParse:/राती|सकाळीं|दनपारां|सांजे/,meridiemHour:function(t,e){return 12===t&&(t=0),"राती"===e?t<4?t:t+12:"सकाळीं"===e?t:"दनपारां"===e?t>12?t:t+12:"सांजे"===e?t+12:void 0},meridiem:function(t,e,r){return t<4?"राती":t<12?"सकाळीं":t<16?"दनपारां":t<20?"सांजे":"राती"}})}(r(30381))},23168:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e,r,n){var i={s:["thoddea sekondamni","thodde sekond"],ss:[t+" sekondamni",t+" sekond"],m:["eka mintan","ek minut"],mm:[t+" mintamni",t+" mintam"],h:["eka voran","ek vor"],hh:[t+" voramni",t+" voram"],d:["eka disan","ek dis"],dd:[t+" disamni",t+" dis"],M:["eka mhoinean","ek mhoino"],MM:[t+" mhoineamni",t+" mhoine"],y:["eka vorsan","ek voros"],yy:[t+" vorsamni",t+" vorsam"]};return n?i[r][0]:i[r][1]}t.defineLocale("gom-latn",{months:{standalone:"Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr".split("_"),format:"Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea".split("_"),isFormat:/MMMM(\s)+D[oD]?/},monthsShort:"Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.".split("_"),monthsParseExact:!0,weekdays:"Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var".split("_"),weekdaysShort:"Ait._Som._Mon._Bud._Bre._Suk._Son.".split("_"),weekdaysMin:"Ai_Sm_Mo_Bu_Br_Su_Sn".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"A h:mm [vazta]",LTS:"A h:mm:ss [vazta]",L:"DD-MM-YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY A h:mm [vazta]",LLLL:"dddd, MMMM Do, YYYY, A h:mm [vazta]",llll:"ddd, D MMM YYYY, A h:mm [vazta]"},calendar:{sameDay:"[Aiz] LT",nextDay:"[Faleam] LT",nextWeek:"[Fuddlo] dddd[,] LT",lastDay:"[Kal] LT",lastWeek:"[Fattlo] dddd[,] LT",sameElse:"L"},relativeTime:{future:"%s",past:"%s adim",s:e,ss:e,m:e,mm:e,h:e,hh:e,d:e,dd:e,M:e,MM:e,y:e,yy:e},dayOfMonthOrdinalParse:/\d{1,2}(er)/,ordinal:function(t,e){return"D"===e?t+"er":t},week:{dow:0,doy:3},meridiemParse:/rati|sokallim|donparam|sanje/,meridiemHour:function(t,e){return 12===t&&(t=0),"rati"===e?t<4?t:t+12:"sokallim"===e?t:"donparam"===e?t>12?t:t+12:"sanje"===e?t+12:void 0},meridiem:function(t,e,r){return t<4?"rati":t<12?"sokallim":t<16?"donparam":t<20?"sanje":"rati"}})}(r(30381))},95349:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"૧",2:"૨",3:"૩",4:"૪",5:"૫",6:"૬",7:"૭",8:"૮",9:"૯",0:"૦"},r={"૧":"1","૨":"2","૩":"3","૪":"4","૫":"5","૬":"6","૭":"7","૮":"8","૯":"9","૦":"0"};t.defineLocale("gu",{months:"જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર".split("_"),monthsShort:"જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.".split("_"),monthsParseExact:!0,weekdays:"રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર".split("_"),weekdaysShort:"રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ".split("_"),weekdaysMin:"ર_સો_મં_બુ_ગુ_શુ_શ".split("_"),longDateFormat:{LT:"A h:mm વાગ્યે",LTS:"A h:mm:ss વાગ્યે",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm વાગ્યે",LLLL:"dddd, D MMMM YYYY, A h:mm વાગ્યે"},calendar:{sameDay:"[આજ] LT",nextDay:"[કાલે] LT",nextWeek:"dddd, LT",lastDay:"[ગઇકાલે] LT",lastWeek:"[પાછલા] dddd, LT",sameElse:"L"},relativeTime:{future:"%s મા",past:"%s પહેલા",s:"અમુક પળો",ss:"%d સેકંડ",m:"એક મિનિટ",mm:"%d મિનિટ",h:"એક કલાક",hh:"%d કલાક",d:"એક દિવસ",dd:"%d દિવસ",M:"એક મહિનો",MM:"%d મહિનો",y:"એક વર્ષ",yy:"%d વર્ષ"},preparse:function(t){return t.replace(/[૧૨૩૪૫૬૭૮૯૦]/g,(function(t){return r[t]}))},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]}))},meridiemParse:/રાત|બપોર|સવાર|સાંજ/,meridiemHour:function(t,e){return 12===t&&(t=0),"રાત"===e?t<4?t:t+12:"સવાર"===e?t:"બપોર"===e?t>=10?t:t+12:"સાંજ"===e?t+12:void 0},meridiem:function(t,e,r){return t<4?"રાત":t<10?"સવાર":t<17?"બપોર":t<20?"સાંજ":"રાત"},week:{dow:0,doy:6}})}(r(30381))},24206:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("he",{months:"ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר".split("_"),monthsShort:"ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳".split("_"),weekdays:"ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת".split("_"),weekdaysShort:"א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳".split("_"),weekdaysMin:"א_ב_ג_ד_ה_ו_ש".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D [ב]MMMM YYYY",LLL:"D [ב]MMMM YYYY HH:mm",LLLL:"dddd, D [ב]MMMM YYYY HH:mm",l:"D/M/YYYY",ll:"D MMM YYYY",lll:"D MMM YYYY HH:mm",llll:"ddd, D MMM YYYY HH:mm"},calendar:{sameDay:"[היום ב־]LT",nextDay:"[מחר ב־]LT",nextWeek:"dddd [בשעה] LT",lastDay:"[אתמול ב־]LT",lastWeek:"[ביום] dddd [האחרון בשעה] LT",sameElse:"L"},relativeTime:{future:"בעוד %s",past:"לפני %s",s:"מספר שניות",ss:"%d שניות",m:"דקה",mm:"%d דקות",h:"שעה",hh:function(t){return 2===t?"שעתיים":t+" שעות"},d:"יום",dd:function(t){return 2===t?"יומיים":t+" ימים"},M:"חודש",MM:function(t){return 2===t?"חודשיים":t+" חודשים"},y:"שנה",yy:function(t){return 2===t?"שנתיים":t%10==0&&10!==t?t+" שנה":t+" שנים"}},meridiemParse:/אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,isPM:function(t){return/^(אחה"צ|אחרי הצהריים|בערב)$/.test(t)},meridiem:function(t,e,r){return t<5?"לפנות בוקר":t<10?"בבוקר":t<12?r?'לפנה"צ':"לפני הצהריים":t<18?r?'אחה"צ':"אחרי הצהריים":"בערב"}})}(r(30381))},30094:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"१",2:"२",3:"३",4:"४",5:"५",6:"६",7:"७",8:"८",9:"९",0:"०"},r={"१":"1","२":"2","३":"3","४":"4","५":"5","६":"6","७":"7","८":"8","९":"9","०":"0"},n=[/^जन/i,/^फ़र|फर/i,/^मार्च/i,/^अप्रै/i,/^मई/i,/^जून/i,/^जुल/i,/^अग/i,/^सितं|सित/i,/^अक्टू/i,/^नव|नवं/i,/^दिसं|दिस/i],i=[/^जन/i,/^फ़र/i,/^मार्च/i,/^अप्रै/i,/^मई/i,/^जून/i,/^जुल/i,/^अग/i,/^सित/i,/^अक्टू/i,/^नव/i,/^दिस/i];t.defineLocale("hi",{months:{format:"जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर".split("_"),standalone:"जनवरी_फरवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितंबर_अक्टूबर_नवंबर_दिसंबर".split("_")},monthsShort:"जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.".split("_"),weekdays:"रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),weekdaysShort:"रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि".split("_"),weekdaysMin:"र_सो_मं_बु_गु_शु_श".split("_"),longDateFormat:{LT:"A h:mm बजे",LTS:"A h:mm:ss बजे",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm बजे",LLLL:"dddd, D MMMM YYYY, A h:mm बजे"},monthsParse:n,longMonthsParse:n,shortMonthsParse:i,monthsRegex:/^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,monthsShortRegex:/^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,monthsStrictRegex:/^(जनवरी?|फ़रवरी|फरवरी?|मार्च?|अप्रैल?|मई?|जून?|जुलाई?|अगस्त?|सितम्बर|सितंबर|सित?\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर?|दिसम्बर|दिसंबर?)/i,monthsShortStrictRegex:/^(जन\.?|फ़र\.?|मार्च?|अप्रै\.?|मई?|जून?|जुल\.?|अग\.?|सित\.?|अक्टू\.?|नव\.?|दिस\.?)/i,calendar:{sameDay:"[आज] LT",nextDay:"[कल] LT",nextWeek:"dddd, LT",lastDay:"[कल] LT",lastWeek:"[पिछले] dddd, LT",sameElse:"L"},relativeTime:{future:"%s में",past:"%s पहले",s:"कुछ ही क्षण",ss:"%d सेकंड",m:"एक मिनट",mm:"%d मिनट",h:"एक घंटा",hh:"%d घंटे",d:"एक दिन",dd:"%d दिन",M:"एक महीने",MM:"%d महीने",y:"एक वर्ष",yy:"%d वर्ष"},preparse:function(t){return t.replace(/[१२३४५६७८९०]/g,(function(t){return r[t]}))},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]}))},meridiemParse:/रात|सुबह|दोपहर|शाम/,meridiemHour:function(t,e){return 12===t&&(t=0),"रात"===e?t<4?t:t+12:"सुबह"===e?t:"दोपहर"===e?t>=10?t:t+12:"शाम"===e?t+12:void 0},meridiem:function(t,e,r){return t<4?"रात":t<10?"सुबह":t<17?"दोपहर":t<20?"शाम":"रात"},week:{dow:0,doy:6}})}(r(30381))},30316:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e,r){var n=t+" ";switch(r){case"ss":return n+=1===t?"sekunda":2===t||3===t||4===t?"sekunde":"sekundi";case"m":return e?"jedna minuta":"jedne minute";case"mm":return n+=1===t?"minuta":2===t||3===t||4===t?"minute":"minuta";case"h":return e?"jedan sat":"jednog sata";case"hh":return n+=1===t?"sat":2===t||3===t||4===t?"sata":"sati";case"dd":return n+=1===t?"dan":"dana";case"MM":return n+=1===t?"mjesec":2===t||3===t||4===t?"mjeseca":"mjeseci";case"yy":return n+=1===t?"godina":2===t||3===t||4===t?"godine":"godina"}}t.defineLocale("hr",{months:{format:"siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca".split("_"),standalone:"siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac".split("_")},monthsShort:"sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.".split("_"),monthsParseExact:!0,weekdays:"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),weekdaysShort:"ned._pon._uto._sri._čet._pet._sub.".split("_"),weekdaysMin:"ne_po_ut_sr_če_pe_su".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"Do MMMM YYYY",LLL:"Do MMMM YYYY H:mm",LLLL:"dddd, Do MMMM YYYY H:mm"},calendar:{sameDay:"[danas u] LT",nextDay:"[sutra u] LT",nextWeek:function(){switch(this.day()){case 0:return"[u] [nedjelju] [u] LT";case 3:return"[u] [srijedu] [u] LT";case 6:return"[u] [subotu] [u] LT";case 1:case 2:case 4:case 5:return"[u] dddd [u] LT"}},lastDay:"[jučer u] LT",lastWeek:function(){switch(this.day()){case 0:return"[prošlu] [nedjelju] [u] LT";case 3:return"[prošlu] [srijedu] [u] LT";case 6:return"[prošle] [subote] [u] LT";case 1:case 2:case 4:case 5:return"[prošli] dddd [u] LT"}},sameElse:"L"},relativeTime:{future:"za %s",past:"prije %s",s:"par sekundi",ss:e,m:e,mm:e,h:e,hh:e,d:"dan",dd:e,M:"mjesec",MM:e,y:"godinu",yy:e},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:7}})}(r(30381))},22138:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e="vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton".split(" ");function r(t,e,r,n){var i=t;switch(r){case"s":return n||e?"néhány másodperc":"néhány másodperce";case"ss":return i+(n||e)?" másodperc":" másodperce";case"m":return"egy"+(n||e?" perc":" perce");case"mm":return i+(n||e?" perc":" perce");case"h":return"egy"+(n||e?" óra":" órája");case"hh":return i+(n||e?" óra":" órája");case"d":return"egy"+(n||e?" nap":" napja");case"dd":return i+(n||e?" nap":" napja");case"M":return"egy"+(n||e?" hónap":" hónapja");case"MM":return i+(n||e?" hónap":" hónapja");case"y":return"egy"+(n||e?" év":" éve");case"yy":return i+(n||e?" év":" éve")}return""}function n(t){return(t?"":"[múlt] ")+"["+e[this.day()]+"] LT[-kor]"}t.defineLocale("hu",{months:"január_február_március_április_május_június_július_augusztus_szeptember_október_november_december".split("_"),monthsShort:"jan._feb._márc._ápr._máj._jún._júl._aug._szept._okt._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat".split("_"),weekdaysShort:"vas_hét_kedd_sze_csüt_pén_szo".split("_"),weekdaysMin:"v_h_k_sze_cs_p_szo".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"YYYY.MM.DD.",LL:"YYYY. MMMM D.",LLL:"YYYY. MMMM D. H:mm",LLLL:"YYYY. MMMM D., dddd H:mm"},meridiemParse:/de|du/i,isPM:function(t){return"u"===t.charAt(1).toLowerCase()},meridiem:function(t,e,r){return t<12?!0===r?"de":"DE":!0===r?"du":"DU"},calendar:{sameDay:"[ma] LT[-kor]",nextDay:"[holnap] LT[-kor]",nextWeek:function(){return n.call(this,!0)},lastDay:"[tegnap] LT[-kor]",lastWeek:function(){return n.call(this,!1)},sameElse:"L"},relativeTime:{future:"%s múlva",past:"%s",s:r,ss:r,m:r,mm:r,h:r,hh:r,d:r,dd:r,M:r,MM:r,y:r,yy:r},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},11423:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("hy-am",{months:{format:"հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի".split("_"),standalone:"հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր".split("_")},monthsShort:"հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ".split("_"),weekdays:"կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ".split("_"),weekdaysShort:"կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),weekdaysMin:"կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY թ.",LLL:"D MMMM YYYY թ., HH:mm",LLLL:"dddd, D MMMM YYYY թ., HH:mm"},calendar:{sameDay:"[այսօր] LT",nextDay:"[վաղը] LT",lastDay:"[երեկ] LT",nextWeek:function(){return"dddd [օրը ժամը] LT"},lastWeek:function(){return"[անցած] dddd [օրը ժամը] LT"},sameElse:"L"},relativeTime:{future:"%s հետո",past:"%s առաջ",s:"մի քանի վայրկյան",ss:"%d վայրկյան",m:"րոպե",mm:"%d րոպե",h:"ժամ",hh:"%d ժամ",d:"օր",dd:"%d օր",M:"ամիս",MM:"%d ամիս",y:"տարի",yy:"%d տարի"},meridiemParse:/գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,isPM:function(t){return/^(ցերեկվա|երեկոյան)$/.test(t)},meridiem:function(t){return t<4?"գիշերվա":t<12?"առավոտվա":t<17?"ցերեկվա":"երեկոյան"},dayOfMonthOrdinalParse:/\d{1,2}|\d{1,2}-(ին|րդ)/,ordinal:function(t,e){switch(e){case"DDD":case"w":case"W":case"DDDo":return 1===t?t+"-ին":t+"-րդ";default:return t}},week:{dow:1,doy:7}})}(r(30381))},29218:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("id",{months:"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember".split("_"),monthsShort:"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des".split("_"),weekdays:"Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu".split("_"),weekdaysShort:"Min_Sen_Sel_Rab_Kam_Jum_Sab".split("_"),weekdaysMin:"Mg_Sn_Sl_Rb_Km_Jm_Sb".split("_"),longDateFormat:{LT:"HH.mm",LTS:"HH.mm.ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY [pukul] HH.mm",LLLL:"dddd, D MMMM YYYY [pukul] HH.mm"},meridiemParse:/pagi|siang|sore|malam/,meridiemHour:function(t,e){return 12===t&&(t=0),"pagi"===e?t:"siang"===e?t>=11?t:t+12:"sore"===e||"malam"===e?t+12:void 0},meridiem:function(t,e,r){return t<11?"pagi":t<15?"siang":t<19?"sore":"malam"},calendar:{sameDay:"[Hari ini pukul] LT",nextDay:"[Besok pukul] LT",nextWeek:"dddd [pukul] LT",lastDay:"[Kemarin pukul] LT",lastWeek:"dddd [lalu pukul] LT",sameElse:"L"},relativeTime:{future:"dalam %s",past:"%s yang lalu",s:"beberapa detik",ss:"%d detik",m:"semenit",mm:"%d menit",h:"sejam",hh:"%d jam",d:"sehari",dd:"%d hari",M:"sebulan",MM:"%d bulan",y:"setahun",yy:"%d tahun"},week:{dow:0,doy:6}})}(r(30381))},90135:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t){return t%100==11||t%10!=1}function r(t,r,n,i){var s=t+" ";switch(n){case"s":return r||i?"nokkrar sekúndur":"nokkrum sekúndum";case"ss":return e(t)?s+(r||i?"sekúndur":"sekúndum"):s+"sekúnda";case"m":return r?"mínúta":"mínútu";case"mm":return e(t)?s+(r||i?"mínútur":"mínútum"):r?s+"mínúta":s+"mínútu";case"hh":return e(t)?s+(r||i?"klukkustundir":"klukkustundum"):s+"klukkustund";case"d":return r?"dagur":i?"dag":"degi";case"dd":return e(t)?r?s+"dagar":s+(i?"daga":"dögum"):r?s+"dagur":s+(i?"dag":"degi");case"M":return r?"mánuður":i?"mánuð":"mánuði";case"MM":return e(t)?r?s+"mánuðir":s+(i?"mánuði":"mánuðum"):r?s+"mánuður":s+(i?"mánuð":"mánuði");case"y":return r||i?"ár":"ári";case"yy":return e(t)?s+(r||i?"ár":"árum"):s+(r||i?"ár":"ári")}}t.defineLocale("is",{months:"janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember".split("_"),monthsShort:"jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des".split("_"),weekdays:"sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur".split("_"),weekdaysShort:"sun_mán_þri_mið_fim_fös_lau".split("_"),weekdaysMin:"Su_Má_Þr_Mi_Fi_Fö_La".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY [kl.] H:mm",LLLL:"dddd, D. MMMM YYYY [kl.] H:mm"},calendar:{sameDay:"[í dag kl.] LT",nextDay:"[á morgun kl.] LT",nextWeek:"dddd [kl.] LT",lastDay:"[í gær kl.] LT",lastWeek:"[síðasta] dddd [kl.] LT",sameElse:"L"},relativeTime:{future:"eftir %s",past:"fyrir %s síðan",s:r,ss:r,m:r,mm:r,h:"klukkustund",hh:r,d:r,dd:r,M:r,MM:r,y:r,yy:r},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},10150:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("it-ch",{months:"gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),monthsShort:"gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),weekdays:"domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato".split("_"),weekdaysShort:"dom_lun_mar_mer_gio_ven_sab".split("_"),weekdaysMin:"do_lu_ma_me_gi_ve_sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[Oggi alle] LT",nextDay:"[Domani alle] LT",nextWeek:"dddd [alle] LT",lastDay:"[Ieri alle] LT",lastWeek:function(){return 0===this.day()?"[la scorsa] dddd [alle] LT":"[lo scorso] dddd [alle] LT"},sameElse:"L"},relativeTime:{future:function(t){return(/^[0-9].+$/.test(t)?"tra":"in")+" "+t},past:"%s fa",s:"alcuni secondi",ss:"%d secondi",m:"un minuto",mm:"%d minuti",h:"un'ora",hh:"%d ore",d:"un giorno",dd:"%d giorni",M:"un mese",MM:"%d mesi",y:"un anno",yy:"%d anni"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4}})}(r(30381))},90626:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("it",{months:"gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),monthsShort:"gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),weekdays:"domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato".split("_"),weekdaysShort:"dom_lun_mar_mer_gio_ven_sab".split("_"),weekdaysMin:"do_lu_ma_me_gi_ve_sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:function(){return"[Oggi a"+(this.hours()>1?"lle ":0===this.hours()?" ":"ll'")+"]LT"},nextDay:function(){return"[Domani a"+(this.hours()>1?"lle ":0===this.hours()?" ":"ll'")+"]LT"},nextWeek:function(){return"dddd [a"+(this.hours()>1?"lle ":0===this.hours()?" ":"ll'")+"]LT"},lastDay:function(){return"[Ieri a"+(this.hours()>1?"lle ":0===this.hours()?" ":"ll'")+"]LT"},lastWeek:function(){return 0===this.day()?"[La scorsa] dddd [a"+(this.hours()>1?"lle ":0===this.hours()?" ":"ll'")+"]LT":"[Lo scorso] dddd [a"+(this.hours()>1?"lle ":0===this.hours()?" ":"ll'")+"]LT"},sameElse:"L"},relativeTime:{future:"tra %s",past:"%s fa",s:"alcuni secondi",ss:"%d secondi",m:"un minuto",mm:"%d minuti",h:"un'ora",hh:"%d ore",d:"un giorno",dd:"%d giorni",w:"una settimana",ww:"%d settimane",M:"un mese",MM:"%d mesi",y:"un anno",yy:"%d anni"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4}})}(r(30381))},39183:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("ja",{eras:[{since:"2019-05-01",offset:1,name:"令和",narrow:"㋿",abbr:"R"},{since:"1989-01-08",until:"2019-04-30",offset:1,name:"平成",narrow:"㍻",abbr:"H"},{since:"1926-12-25",until:"1989-01-07",offset:1,name:"昭和",narrow:"㍼",abbr:"S"},{since:"1912-07-30",until:"1926-12-24",offset:1,name:"大正",narrow:"㍽",abbr:"T"},{since:"1873-01-01",until:"1912-07-29",offset:6,name:"明治",narrow:"㍾",abbr:"M"},{since:"0001-01-01",until:"1873-12-31",offset:1,name:"西暦",narrow:"AD",abbr:"AD"},{since:"0000-12-31",until:-1/0,offset:1,name:"紀元前",narrow:"BC",abbr:"BC"}],eraYearOrdinalRegex:/(元|\d+)年/,eraYearOrdinalParse:function(t,e){return"元"===e[1]?1:parseInt(e[1]||t,10)},months:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),monthsShort:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),weekdays:"日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日".split("_"),weekdaysShort:"日_月_火_水_木_金_土".split("_"),weekdaysMin:"日_月_火_水_木_金_土".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY/MM/DD",LL:"YYYY年M月D日",LLL:"YYYY年M月D日 HH:mm",LLLL:"YYYY年M月D日 dddd HH:mm",l:"YYYY/MM/DD",ll:"YYYY年M月D日",lll:"YYYY年M月D日 HH:mm",llll:"YYYY年M月D日(ddd) HH:mm"},meridiemParse:/午前|午後/i,isPM:function(t){return"午後"===t},meridiem:function(t,e,r){return t<12?"午前":"午後"},calendar:{sameDay:"[今日] LT",nextDay:"[明日] LT",nextWeek:function(t){return t.week()!==this.week()?"[来週]dddd LT":"dddd LT"},lastDay:"[昨日] LT",lastWeek:function(t){return this.week()!==t.week()?"[先週]dddd LT":"dddd LT"},sameElse:"L"},dayOfMonthOrdinalParse:/\d{1,2}日/,ordinal:function(t,e){switch(e){case"y":return 1===t?"元年":t+"年";case"d":case"D":case"DDD":return t+"日";default:return t}},relativeTime:{future:"%s後",past:"%s前",s:"数秒",ss:"%d秒",m:"1分",mm:"%d分",h:"1時間",hh:"%d時間",d:"1日",dd:"%d日",M:"1ヶ月",MM:"%dヶ月",y:"1年",yy:"%d年"}})}(r(30381))},24286:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("jv",{months:"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember".split("_"),monthsShort:"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des".split("_"),weekdays:"Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu".split("_"),weekdaysShort:"Min_Sen_Sel_Reb_Kem_Jem_Sep".split("_"),weekdaysMin:"Mg_Sn_Sl_Rb_Km_Jm_Sp".split("_"),longDateFormat:{LT:"HH.mm",LTS:"HH.mm.ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY [pukul] HH.mm",LLLL:"dddd, D MMMM YYYY [pukul] HH.mm"},meridiemParse:/enjing|siyang|sonten|ndalu/,meridiemHour:function(t,e){return 12===t&&(t=0),"enjing"===e?t:"siyang"===e?t>=11?t:t+12:"sonten"===e||"ndalu"===e?t+12:void 0},meridiem:function(t,e,r){return t<11?"enjing":t<15?"siyang":t<19?"sonten":"ndalu"},calendar:{sameDay:"[Dinten puniko pukul] LT",nextDay:"[Mbenjang pukul] LT",nextWeek:"dddd [pukul] LT",lastDay:"[Kala wingi pukul] LT",lastWeek:"dddd [kepengker pukul] LT",sameElse:"L"},relativeTime:{future:"wonten ing %s",past:"%s ingkang kepengker",s:"sawetawis detik",ss:"%d detik",m:"setunggal menit",mm:"%d menit",h:"setunggal jam",hh:"%d jam",d:"sedinten",dd:"%d dinten",M:"sewulan",MM:"%d wulan",y:"setaun",yy:"%d taun"},week:{dow:1,doy:7}})}(r(30381))},12105:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("ka",{months:"იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი".split("_"),monthsShort:"იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ".split("_"),weekdays:{standalone:"კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი".split("_"),format:"კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს".split("_"),isFormat:/(წინა|შემდეგ)/},weekdaysShort:"კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ".split("_"),weekdaysMin:"კვ_ორ_სა_ოთ_ხუ_პა_შა".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[დღეს] LT[-ზე]",nextDay:"[ხვალ] LT[-ზე]",lastDay:"[გუშინ] LT[-ზე]",nextWeek:"[შემდეგ] dddd LT[-ზე]",lastWeek:"[წინა] dddd LT-ზე",sameElse:"L"},relativeTime:{future:function(t){return t.replace(/(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/,(function(t,e,r){return"ი"===r?e+"ში":e+r+"ში"}))},past:function(t){return/(წამი|წუთი|საათი|დღე|თვე)/.test(t)?t.replace(/(ი|ე)$/,"ის წინ"):/წელი/.test(t)?t.replace(/წელი$/,"წლის წინ"):t},s:"რამდენიმე წამი",ss:"%d წამი",m:"წუთი",mm:"%d წუთი",h:"საათი",hh:"%d საათი",d:"დღე",dd:"%d დღე",M:"თვე",MM:"%d თვე",y:"წელი",yy:"%d წელი"},dayOfMonthOrdinalParse:/0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,ordinal:function(t){return 0===t?t:1===t?t+"-ლი":t<20||t<=100&&t%20==0||t%100==0?"მე-"+t:t+"-ე"},week:{dow:1,doy:7}})}(r(30381))},47772:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={0:"-ші",1:"-ші",2:"-ші",3:"-ші",4:"-ші",5:"-ші",6:"-шы",7:"-ші",8:"-ші",9:"-шы",10:"-шы",20:"-шы",30:"-шы",40:"-шы",50:"-ші",60:"-шы",70:"-ші",80:"-ші",90:"-шы",100:"-ші"};t.defineLocale("kk",{months:"қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан".split("_"),monthsShort:"қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел".split("_"),weekdays:"жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі".split("_"),weekdaysShort:"жек_дүй_сей_сәр_бей_жұм_сен".split("_"),weekdaysMin:"жк_дй_сй_ср_бй_жм_сн".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Бүгін сағат] LT",nextDay:"[Ертең сағат] LT",nextWeek:"dddd [сағат] LT",lastDay:"[Кеше сағат] LT",lastWeek:"[Өткен аптаның] dddd [сағат] LT",sameElse:"L"},relativeTime:{future:"%s ішінде",past:"%s бұрын",s:"бірнеше секунд",ss:"%d секунд",m:"бір минут",mm:"%d минут",h:"бір сағат",hh:"%d сағат",d:"бір күн",dd:"%d күн",M:"бір ай",MM:"%d ай",y:"бір жыл",yy:"%d жыл"},dayOfMonthOrdinalParse:/\d{1,2}-(ші|шы)/,ordinal:function(t){var r=t%10,n=t>=100?100:null;return t+(e[t]||e[r]||e[n])},week:{dow:1,doy:7}})}(r(30381))},18758:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"១",2:"២",3:"៣",4:"៤",5:"៥",6:"៦",7:"៧",8:"៨",9:"៩",0:"០"},r={"១":"1","២":"2","៣":"3","៤":"4","៥":"5","៦":"6","៧":"7","៨":"8","៩":"9","០":"0"};t.defineLocale("km",{months:"មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),monthsShort:"មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),weekdays:"អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),weekdaysShort:"អា_ច_អ_ព_ព្រ_សុ_ស".split("_"),weekdaysMin:"អា_ច_អ_ព_ព្រ_សុ_ស".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},meridiemParse:/ព្រឹក|ល្ងាច/,isPM:function(t){return"ល្ងាច"===t},meridiem:function(t,e,r){return t<12?"ព្រឹក":"ល្ងាច"},calendar:{sameDay:"[ថ្ងៃនេះ ម៉ោង] LT",nextDay:"[ស្អែក ម៉ោង] LT",nextWeek:"dddd [ម៉ោង] LT",lastDay:"[ម្សិលមិញ ម៉ោង] LT",lastWeek:"dddd [សប្តាហ៍មុន] [ម៉ោង] LT",sameElse:"L"},relativeTime:{future:"%sទៀត",past:"%sមុន",s:"ប៉ុន្មានវិនាទី",ss:"%d វិនាទី",m:"មួយនាទី",mm:"%d នាទី",h:"មួយម៉ោង",hh:"%d ម៉ោង",d:"មួយថ្ងៃ",dd:"%d ថ្ងៃ",M:"មួយខែ",MM:"%d ខែ",y:"មួយឆ្នាំ",yy:"%d ឆ្នាំ"},dayOfMonthOrdinalParse:/ទី\d{1,2}/,ordinal:"ទី%d",preparse:function(t){return t.replace(/[១២៣៤៥៦៧៨៩០]/g,(function(t){return r[t]}))},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]}))},week:{dow:1,doy:4}})}(r(30381))},79282:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"೧",2:"೨",3:"೩",4:"೪",5:"೫",6:"೬",7:"೭",8:"೮",9:"೯",0:"೦"},r={"೧":"1","೨":"2","೩":"3","೪":"4","೫":"5","೬":"6","೭":"7","೮":"8","೯":"9","೦":"0"};t.defineLocale("kn",{months:"ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್".split("_"),monthsShort:"ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ".split("_"),monthsParseExact:!0,weekdays:"ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ".split("_"),weekdaysShort:"ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ".split("_"),weekdaysMin:"ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ".split("_"),longDateFormat:{LT:"A h:mm",LTS:"A h:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm",LLLL:"dddd, D MMMM YYYY, A h:mm"},calendar:{sameDay:"[ಇಂದು] LT",nextDay:"[ನಾಳೆ] LT",nextWeek:"dddd, LT",lastDay:"[ನಿನ್ನೆ] LT",lastWeek:"[ಕೊನೆಯ] dddd, LT",sameElse:"L"},relativeTime:{future:"%s ನಂತರ",past:"%s ಹಿಂದೆ",s:"ಕೆಲವು ಕ್ಷಣಗಳು",ss:"%d ಸೆಕೆಂಡುಗಳು",m:"ಒಂದು ನಿಮಿಷ",mm:"%d ನಿಮಿಷ",h:"ಒಂದು ಗಂಟೆ",hh:"%d ಗಂಟೆ",d:"ಒಂದು ದಿನ",dd:"%d ದಿನ",M:"ಒಂದು ತಿಂಗಳು",MM:"%d ತಿಂಗಳು",y:"ಒಂದು ವರ್ಷ",yy:"%d ವರ್ಷ"},preparse:function(t){return t.replace(/[೧೨೩೪೫೬೭೮೯೦]/g,(function(t){return r[t]}))},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]}))},meridiemParse:/ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,meridiemHour:function(t,e){return 12===t&&(t=0),"ರಾತ್ರಿ"===e?t<4?t:t+12:"ಬೆಳಿಗ್ಗೆ"===e?t:"ಮಧ್ಯಾಹ್ನ"===e?t>=10?t:t+12:"ಸಂಜೆ"===e?t+12:void 0},meridiem:function(t,e,r){return t<4?"ರಾತ್ರಿ":t<10?"ಬೆಳಿಗ್ಗೆ":t<17?"ಮಧ್ಯಾಹ್ನ":t<20?"ಸಂಜೆ":"ರಾತ್ರಿ"},dayOfMonthOrdinalParse:/\d{1,2}(ನೇ)/,ordinal:function(t){return t+"ನೇ"},week:{dow:0,doy:6}})}(r(30381))},33730:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("ko",{months:"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),monthsShort:"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),weekdays:"일요일_월요일_화요일_수요일_목요일_금요일_토요일".split("_"),weekdaysShort:"일_월_화_수_목_금_토".split("_"),weekdaysMin:"일_월_화_수_목_금_토".split("_"),longDateFormat:{LT:"A h:mm",LTS:"A h:mm:ss",L:"YYYY.MM.DD.",LL:"YYYY년 MMMM D일",LLL:"YYYY년 MMMM D일 A h:mm",LLLL:"YYYY년 MMMM D일 dddd A h:mm",l:"YYYY.MM.DD.",ll:"YYYY년 MMMM D일",lll:"YYYY년 MMMM D일 A h:mm",llll:"YYYY년 MMMM D일 dddd A h:mm"},calendar:{sameDay:"오늘 LT",nextDay:"내일 LT",nextWeek:"dddd LT",lastDay:"어제 LT",lastWeek:"지난주 dddd LT",sameElse:"L"},relativeTime:{future:"%s 후",past:"%s 전",s:"몇 초",ss:"%d초",m:"1분",mm:"%d분",h:"한 시간",hh:"%d시간",d:"하루",dd:"%d일",M:"한 달",MM:"%d달",y:"일 년",yy:"%d년"},dayOfMonthOrdinalParse:/\d{1,2}(일|월|주)/,ordinal:function(t,e){switch(e){case"d":case"D":case"DDD":return t+"일";case"M":return t+"월";case"w":case"W":return t+"주";default:return t}},meridiemParse:/오전|오후/,isPM:function(t){return"오후"===t},meridiem:function(t,e,r){return t<12?"오전":"오후"}})}(r(30381))},1408:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"١",2:"٢",3:"٣",4:"٤",5:"٥",6:"٦",7:"٧",8:"٨",9:"٩",0:"٠"},r={"١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","٠":"0"},n=["کانونی دووەم","شوبات","ئازار","نیسان","ئایار","حوزەیران","تەمموز","ئاب","ئەیلوول","تشرینی یەكەم","تشرینی دووەم","كانونی یەکەم"];t.defineLocale("ku",{months:n,monthsShort:n,weekdays:"یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌".split("_"),weekdaysShort:"یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌".split("_"),weekdaysMin:"ی_د_س_چ_پ_ه_ش".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},meridiemParse:/ئێواره‌|به‌یانی/,isPM:function(t){return/ئێواره‌/.test(t)},meridiem:function(t,e,r){return t<12?"به‌یانی":"ئێواره‌"},calendar:{sameDay:"[ئه‌مرۆ كاتژمێر] LT",nextDay:"[به‌یانی كاتژمێر] LT",nextWeek:"dddd [كاتژمێر] LT",lastDay:"[دوێنێ كاتژمێر] LT",lastWeek:"dddd [كاتژمێر] LT",sameElse:"L"},relativeTime:{future:"له‌ %s",past:"%s",s:"چه‌ند چركه‌یه‌ك",ss:"چركه‌ %d",m:"یه‌ك خوله‌ك",mm:"%d خوله‌ك",h:"یه‌ك كاتژمێر",hh:"%d كاتژمێر",d:"یه‌ك ڕۆژ",dd:"%d ڕۆژ",M:"یه‌ك مانگ",MM:"%d مانگ",y:"یه‌ك ساڵ",yy:"%d ساڵ"},preparse:function(t){return t.replace(/[١٢٣٤٥٦٧٨٩٠]/g,(function(t){return r[t]})).replace(/،/g,",")},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]})).replace(/,/g,"،")},week:{dow:6,doy:12}})}(r(30381))},33291:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={0:"-чү",1:"-чи",2:"-чи",3:"-чү",4:"-чү",5:"-чи",6:"-чы",7:"-чи",8:"-чи",9:"-чу",10:"-чу",20:"-чы",30:"-чу",40:"-чы",50:"-чү",60:"-чы",70:"-чи",80:"-чи",90:"-чу",100:"-чү"};t.defineLocale("ky",{months:"январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_"),monthsShort:"янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек".split("_"),weekdays:"Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби".split("_"),weekdaysShort:"Жек_Дүй_Шей_Шар_Бей_Жум_Ише".split("_"),weekdaysMin:"Жк_Дй_Шй_Шр_Бй_Жм_Иш".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Бүгүн саат] LT",nextDay:"[Эртең саат] LT",nextWeek:"dddd [саат] LT",lastDay:"[Кечээ саат] LT",lastWeek:"[Өткөн аптанын] dddd [күнү] [саат] LT",sameElse:"L"},relativeTime:{future:"%s ичинде",past:"%s мурун",s:"бирнече секунд",ss:"%d секунд",m:"бир мүнөт",mm:"%d мүнөт",h:"бир саат",hh:"%d саат",d:"бир күн",dd:"%d күн",M:"бир ай",MM:"%d ай",y:"бир жыл",yy:"%d жыл"},dayOfMonthOrdinalParse:/\d{1,2}-(чи|чы|чү|чу)/,ordinal:function(t){var r=t%10,n=t>=100?100:null;return t+(e[t]||e[r]||e[n])},week:{dow:1,doy:7}})}(r(30381))},36841:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e,r,n){var i={m:["eng Minutt","enger Minutt"],h:["eng Stonn","enger Stonn"],d:["een Dag","engem Dag"],M:["ee Mount","engem Mount"],y:["ee Joer","engem Joer"]};return e?i[r][0]:i[r][1]}function r(t){return i(t.substr(0,t.indexOf(" ")))?"a "+t:"an "+t}function n(t){return i(t.substr(0,t.indexOf(" ")))?"viru "+t:"virun "+t}function i(t){if(t=parseInt(t,10),isNaN(t))return!1;if(t<0)return!0;if(t<10)return 4<=t&&t<=7;if(t<100){var e=t%10;return i(0===e?t/10:e)}if(t<1e4){for(;t>=10;)t/=10;return i(t)}return i(t/=1e3)}t.defineLocale("lb",{months:"Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),monthsShort:"Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),monthsParseExact:!0,weekdays:"Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg".split("_"),weekdaysShort:"So._Mé._Dë._Më._Do._Fr._Sa.".split("_"),weekdaysMin:"So_Mé_Dë_Më_Do_Fr_Sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm [Auer]",LTS:"H:mm:ss [Auer]",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm [Auer]",LLLL:"dddd, D. MMMM YYYY H:mm [Auer]"},calendar:{sameDay:"[Haut um] LT",sameElse:"L",nextDay:"[Muer um] LT",nextWeek:"dddd [um] LT",lastDay:"[Gëschter um] LT",lastWeek:function(){switch(this.day()){case 2:case 4:return"[Leschten] dddd [um] LT";default:return"[Leschte] dddd [um] LT"}}},relativeTime:{future:r,past:n,s:"e puer Sekonnen",ss:"%d Sekonnen",m:e,mm:"%d Minutten",h:e,hh:"%d Stonnen",d:e,dd:"%d Deeg",M:e,MM:"%d Méint",y:e,yy:"%d Joer"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},55466:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("lo",{months:"ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split("_"),monthsShort:"ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split("_"),weekdays:"ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),weekdaysShort:"ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),weekdaysMin:"ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"ວັນdddd D MMMM YYYY HH:mm"},meridiemParse:/ຕອນເຊົ້າ|ຕອນແລງ/,isPM:function(t){return"ຕອນແລງ"===t},meridiem:function(t,e,r){return t<12?"ຕອນເຊົ້າ":"ຕອນແລງ"},calendar:{sameDay:"[ມື້ນີ້ເວລາ] LT",nextDay:"[ມື້ອື່ນເວລາ] LT",nextWeek:"[ວັນ]dddd[ໜ້າເວລາ] LT",lastDay:"[ມື້ວານນີ້ເວລາ] LT",lastWeek:"[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT",sameElse:"L"},relativeTime:{future:"ອີກ %s",past:"%sຜ່ານມາ",s:"ບໍ່ເທົ່າໃດວິນາທີ",ss:"%d ວິນາທີ",m:"1 ນາທີ",mm:"%d ນາທີ",h:"1 ຊົ່ວໂມງ",hh:"%d ຊົ່ວໂມງ",d:"1 ມື້",dd:"%d ມື້",M:"1 ເດືອນ",MM:"%d ເດືອນ",y:"1 ປີ",yy:"%d ປີ"},dayOfMonthOrdinalParse:/(ທີ່)\d{1,2}/,ordinal:function(t){return"ທີ່"+t}})}(r(30381))},57010:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={ss:"sekundė_sekundžių_sekundes",m:"minutė_minutės_minutę",mm:"minutės_minučių_minutes",h:"valanda_valandos_valandą",hh:"valandos_valandų_valandas",d:"diena_dienos_dieną",dd:"dienos_dienų_dienas",M:"mėnuo_mėnesio_mėnesį",MM:"mėnesiai_mėnesių_mėnesius",y:"metai_metų_metus",yy:"metai_metų_metus"};function r(t,e,r,n){return e?"kelios sekundės":n?"kelių sekundžių":"kelias sekundes"}function n(t,e,r,n){return e?s(r)[0]:n?s(r)[1]:s(r)[2]}function i(t){return t%10==0||t>10&&t<20}function s(t){return e[t].split("_")}function o(t,e,r,o){var a=t+" ";return 1===t?a+n(t,e,r[0],o):e?a+(i(t)?s(r)[1]:s(r)[0]):o?a+s(r)[1]:a+(i(t)?s(r)[1]:s(r)[2])}t.defineLocale("lt",{months:{format:"sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio".split("_"),standalone:"sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis".split("_"),isFormat:/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/},monthsShort:"sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd".split("_"),weekdays:{format:"sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį".split("_"),standalone:"sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis".split("_"),isFormat:/dddd HH:mm/},weekdaysShort:"Sek_Pir_Ant_Tre_Ket_Pen_Šeš".split("_"),weekdaysMin:"S_P_A_T_K_Pn_Š".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY-MM-DD",LL:"YYYY [m.] MMMM D [d.]",LLL:"YYYY [m.] MMMM D [d.], HH:mm [val.]",LLLL:"YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]",l:"YYYY-MM-DD",ll:"YYYY [m.] MMMM D [d.]",lll:"YYYY [m.] MMMM D [d.], HH:mm [val.]",llll:"YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]"},calendar:{sameDay:"[Šiandien] LT",nextDay:"[Rytoj] LT",nextWeek:"dddd LT",lastDay:"[Vakar] LT",lastWeek:"[Praėjusį] dddd LT",sameElse:"L"},relativeTime:{future:"po %s",past:"prieš %s",s:r,ss:o,m:n,mm:o,h:n,hh:o,d:n,dd:o,M:n,MM:o,y:n,yy:o},dayOfMonthOrdinalParse:/\d{1,2}-oji/,ordinal:function(t){return t+"-oji"},week:{dow:1,doy:4}})}(r(30381))},37595:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={ss:"sekundes_sekundēm_sekunde_sekundes".split("_"),m:"minūtes_minūtēm_minūte_minūtes".split("_"),mm:"minūtes_minūtēm_minūte_minūtes".split("_"),h:"stundas_stundām_stunda_stundas".split("_"),hh:"stundas_stundām_stunda_stundas".split("_"),d:"dienas_dienām_diena_dienas".split("_"),dd:"dienas_dienām_diena_dienas".split("_"),M:"mēneša_mēnešiem_mēnesis_mēneši".split("_"),MM:"mēneša_mēnešiem_mēnesis_mēneši".split("_"),y:"gada_gadiem_gads_gadi".split("_"),yy:"gada_gadiem_gads_gadi".split("_")};function r(t,e,r){return r?e%10==1&&e%100!=11?t[2]:t[3]:e%10==1&&e%100!=11?t[0]:t[1]}function n(t,n,i){return t+" "+r(e[i],t,n)}function i(t,n,i){return r(e[i],t,n)}function s(t,e){return e?"dažas sekundes":"dažām sekundēm"}t.defineLocale("lv",{months:"janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris".split("_"),monthsShort:"jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec".split("_"),weekdays:"svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena".split("_"),weekdaysShort:"Sv_P_O_T_C_Pk_S".split("_"),weekdaysMin:"Sv_P_O_T_C_Pk_S".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY.",LL:"YYYY. [gada] D. MMMM",LLL:"YYYY. [gada] D. MMMM, HH:mm",LLLL:"YYYY. [gada] D. MMMM, dddd, HH:mm"},calendar:{sameDay:"[Šodien pulksten] LT",nextDay:"[Rīt pulksten] LT",nextWeek:"dddd [pulksten] LT",lastDay:"[Vakar pulksten] LT",lastWeek:"[Pagājušā] dddd [pulksten] LT",sameElse:"L"},relativeTime:{future:"pēc %s",past:"pirms %s",s,ss:n,m:i,mm:n,h:i,hh:n,d:i,dd:n,M:i,MM:n,y:i,yy:n},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},39861:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={words:{ss:["sekund","sekunda","sekundi"],m:["jedan minut","jednog minuta"],mm:["minut","minuta","minuta"],h:["jedan sat","jednog sata"],hh:["sat","sata","sati"],dd:["dan","dana","dana"],MM:["mjesec","mjeseca","mjeseci"],yy:["godina","godine","godina"]},correctGrammaticalCase:function(t,e){return 1===t?e[0]:t>=2&&t<=4?e[1]:e[2]},translate:function(t,r,n){var i=e.words[n];return 1===n.length?r?i[0]:i[1]:t+" "+e.correctGrammaticalCase(t,i)}};t.defineLocale("me",{months:"januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split("_"),monthsShort:"jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),weekdaysShort:"ned._pon._uto._sri._čet._pet._sub.".split("_"),weekdaysMin:"ne_po_ut_sr_če_pe_su".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm",LLLL:"dddd, D. MMMM YYYY H:mm"},calendar:{sameDay:"[danas u] LT",nextDay:"[sjutra u] LT",nextWeek:function(){switch(this.day()){case 0:return"[u] [nedjelju] [u] LT";case 3:return"[u] [srijedu] [u] LT";case 6:return"[u] [subotu] [u] LT";case 1:case 2:case 4:case 5:return"[u] dddd [u] LT"}},lastDay:"[juče u] LT",lastWeek:function(){return["[prošle] [nedjelje] [u] LT","[prošlog] [ponedjeljka] [u] LT","[prošlog] [utorka] [u] LT","[prošle] [srijede] [u] LT","[prošlog] [četvrtka] [u] LT","[prošlog] [petka] [u] LT","[prošle] [subote] [u] LT"][this.day()]},sameElse:"L"},relativeTime:{future:"za %s",past:"prije %s",s:"nekoliko sekundi",ss:e.translate,m:e.translate,mm:e.translate,h:e.translate,hh:e.translate,d:"dan",dd:e.translate,M:"mjesec",MM:e.translate,y:"godinu",yy:e.translate},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:7}})}(r(30381))},35493:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("mi",{months:"Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea".split("_"),monthsShort:"Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki".split("_"),monthsRegex:/(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,monthsStrictRegex:/(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,monthsShortRegex:/(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,monthsShortStrictRegex:/(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,weekdays:"Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei".split("_"),weekdaysShort:"Ta_Ma_Tū_We_Tāi_Pa_Hā".split("_"),weekdaysMin:"Ta_Ma_Tū_We_Tāi_Pa_Hā".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY [i] HH:mm",LLLL:"dddd, D MMMM YYYY [i] HH:mm"},calendar:{sameDay:"[i teie mahana, i] LT",nextDay:"[apopo i] LT",nextWeek:"dddd [i] LT",lastDay:"[inanahi i] LT",lastWeek:"dddd [whakamutunga i] LT",sameElse:"L"},relativeTime:{future:"i roto i %s",past:"%s i mua",s:"te hēkona ruarua",ss:"%d hēkona",m:"he meneti",mm:"%d meneti",h:"te haora",hh:"%d haora",d:"he ra",dd:"%d ra",M:"he marama",MM:"%d marama",y:"he tau",yy:"%d tau"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4}})}(r(30381))},95966:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("mk",{months:"јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември".split("_"),monthsShort:"јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек".split("_"),weekdays:"недела_понеделник_вторник_среда_четврток_петок_сабота".split("_"),weekdaysShort:"нед_пон_вто_сре_чет_пет_саб".split("_"),weekdaysMin:"нe_пo_вт_ср_че_пе_сa".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"D.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY H:mm",LLLL:"dddd, D MMMM YYYY H:mm"},calendar:{sameDay:"[Денес во] LT",nextDay:"[Утре во] LT",nextWeek:"[Во] dddd [во] LT",lastDay:"[Вчера во] LT",lastWeek:function(){switch(this.day()){case 0:case 3:case 6:return"[Изминатата] dddd [во] LT";case 1:case 2:case 4:case 5:return"[Изминатиот] dddd [во] LT"}},sameElse:"L"},relativeTime:{future:"за %s",past:"пред %s",s:"неколку секунди",ss:"%d секунди",m:"една минута",mm:"%d минути",h:"еден час",hh:"%d часа",d:"еден ден",dd:"%d дена",M:"еден месец",MM:"%d месеци",y:"една година",yy:"%d години"},dayOfMonthOrdinalParse:/\d{1,2}-(ев|ен|ти|ви|ри|ми)/,ordinal:function(t){var e=t%10,r=t%100;return 0===t?t+"-ев":0===r?t+"-ен":r>10&&r<20?t+"-ти":1===e?t+"-ви":2===e?t+"-ри":7===e||8===e?t+"-ми":t+"-ти"},week:{dow:1,doy:7}})}(r(30381))},87341:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("ml",{months:"ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ".split("_"),monthsShort:"ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.".split("_"),monthsParseExact:!0,weekdays:"ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച".split("_"),weekdaysShort:"ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി".split("_"),weekdaysMin:"ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ".split("_"),longDateFormat:{LT:"A h:mm -നു",LTS:"A h:mm:ss -നു",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm -നു",LLLL:"dddd, D MMMM YYYY, A h:mm -നു"},calendar:{sameDay:"[ഇന്ന്] LT",nextDay:"[നാളെ] LT",nextWeek:"dddd, LT",lastDay:"[ഇന്നലെ] LT",lastWeek:"[കഴിഞ്ഞ] dddd, LT",sameElse:"L"},relativeTime:{future:"%s കഴിഞ്ഞ്",past:"%s മുൻപ്",s:"അൽപ നിമിഷങ്ങൾ",ss:"%d സെക്കൻഡ്",m:"ഒരു മിനിറ്റ്",mm:"%d മിനിറ്റ്",h:"ഒരു മണിക്കൂർ",hh:"%d മണിക്കൂർ",d:"ഒരു ദിവസം",dd:"%d ദിവസം",M:"ഒരു മാസം",MM:"%d മാസം",y:"ഒരു വർഷം",yy:"%d വർഷം"},meridiemParse:/രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,meridiemHour:function(t,e){return 12===t&&(t=0),"രാത്രി"===e&&t>=4||"ഉച്ച കഴിഞ്ഞ്"===e||"വൈകുന്നേരം"===e?t+12:t},meridiem:function(t,e,r){return t<4?"രാത്രി":t<12?"രാവിലെ":t<17?"ഉച്ച കഴിഞ്ഞ്":t<20?"വൈകുന്നേരം":"രാത്രി"}})}(r(30381))},5115:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e,r,n){switch(r){case"s":return e?"хэдхэн секунд":"хэдхэн секундын";case"ss":return t+(e?" секунд":" секундын");case"m":case"mm":return t+(e?" минут":" минутын");case"h":case"hh":return t+(e?" цаг":" цагийн");case"d":case"dd":return t+(e?" өдөр":" өдрийн");case"M":case"MM":return t+(e?" сар":" сарын");case"y":case"yy":return t+(e?" жил":" жилийн");default:return t}}t.defineLocale("mn",{months:"Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар".split("_"),monthsShort:"1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар".split("_"),monthsParseExact:!0,weekdays:"Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба".split("_"),weekdaysShort:"Ням_Дав_Мяг_Лха_Пүр_Баа_Бям".split("_"),weekdaysMin:"Ня_Да_Мя_Лх_Пү_Ба_Бя".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY-MM-DD",LL:"YYYY оны MMMMын D",LLL:"YYYY оны MMMMын D HH:mm",LLLL:"dddd, YYYY оны MMMMын D HH:mm"},meridiemParse:/ҮӨ|ҮХ/i,isPM:function(t){return"ҮХ"===t},meridiem:function(t,e,r){return t<12?"ҮӨ":"ҮХ"},calendar:{sameDay:"[Өнөөдөр] LT",nextDay:"[Маргааш] LT",nextWeek:"[Ирэх] dddd LT",lastDay:"[Өчигдөр] LT",lastWeek:"[Өнгөрсөн] dddd LT",sameElse:"L"},relativeTime:{future:"%s дараа",past:"%s өмнө",s:e,ss:e,m:e,mm:e,h:e,hh:e,d:e,dd:e,M:e,MM:e,y:e,yy:e},dayOfMonthOrdinalParse:/\d{1,2} өдөр/,ordinal:function(t,e){switch(e){case"d":case"D":case"DDD":return t+" өдөр";default:return t}}})}(r(30381))},10370:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"१",2:"२",3:"३",4:"४",5:"५",6:"६",7:"७",8:"८",9:"९",0:"०"},r={"१":"1","२":"2","३":"3","४":"4","५":"5","६":"6","७":"7","८":"8","९":"9","०":"0"};function n(t,e,r,n){var i="";if(e)switch(r){case"s":i="काही सेकंद";break;case"ss":i="%d सेकंद";break;case"m":i="एक मिनिट";break;case"mm":i="%d मिनिटे";break;case"h":i="एक तास";break;case"hh":i="%d तास";break;case"d":i="एक दिवस";break;case"dd":i="%d दिवस";break;case"M":i="एक महिना";break;case"MM":i="%d महिने";break;case"y":i="एक वर्ष";break;case"yy":i="%d वर्षे"}else switch(r){case"s":i="काही सेकंदां";break;case"ss":i="%d सेकंदां";break;case"m":i="एका मिनिटा";break;case"mm":i="%d मिनिटां";break;case"h":i="एका तासा";break;case"hh":i="%d तासां";break;case"d":i="एका दिवसा";break;case"dd":i="%d दिवसां";break;case"M":i="एका महिन्या";break;case"MM":i="%d महिन्यां";break;case"y":i="एका वर्षा";break;case"yy":i="%d वर्षां"}return i.replace(/%d/i,t)}t.defineLocale("mr",{months:"जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर".split("_"),monthsShort:"जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.".split("_"),monthsParseExact:!0,weekdays:"रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),weekdaysShort:"रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि".split("_"),weekdaysMin:"र_सो_मं_बु_गु_शु_श".split("_"),longDateFormat:{LT:"A h:mm वाजता",LTS:"A h:mm:ss वाजता",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm वाजता",LLLL:"dddd, D MMMM YYYY, A h:mm वाजता"},calendar:{sameDay:"[आज] LT",nextDay:"[उद्या] LT",nextWeek:"dddd, LT",lastDay:"[काल] LT",lastWeek:"[मागील] dddd, LT",sameElse:"L"},relativeTime:{future:"%sमध्ये",past:"%sपूर्वी",s:n,ss:n,m:n,mm:n,h:n,hh:n,d:n,dd:n,M:n,MM:n,y:n,yy:n},preparse:function(t){return t.replace(/[१२३४५६७८९०]/g,(function(t){return r[t]}))},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]}))},meridiemParse:/पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,meridiemHour:function(t,e){return 12===t&&(t=0),"पहाटे"===e||"सकाळी"===e?t:"दुपारी"===e||"सायंकाळी"===e||"रात्री"===e?t>=12?t:t+12:void 0},meridiem:function(t,e,r){return t>=0&&t<6?"पहाटे":t<12?"सकाळी":t<17?"दुपारी":t<20?"सायंकाळी":"रात्री"},week:{dow:0,doy:6}})}(r(30381))},41237:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("ms-my",{months:"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),monthsShort:"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),weekdays:"Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),weekdaysShort:"Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),weekdaysMin:"Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),longDateFormat:{LT:"HH.mm",LTS:"HH.mm.ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY [pukul] HH.mm",LLLL:"dddd, D MMMM YYYY [pukul] HH.mm"},meridiemParse:/pagi|tengahari|petang|malam/,meridiemHour:function(t,e){return 12===t&&(t=0),"pagi"===e?t:"tengahari"===e?t>=11?t:t+12:"petang"===e||"malam"===e?t+12:void 0},meridiem:function(t,e,r){return t<11?"pagi":t<15?"tengahari":t<19?"petang":"malam"},calendar:{sameDay:"[Hari ini pukul] LT",nextDay:"[Esok pukul] LT",nextWeek:"dddd [pukul] LT",lastDay:"[Kelmarin pukul] LT",lastWeek:"dddd [lepas pukul] LT",sameElse:"L"},relativeTime:{future:"dalam %s",past:"%s yang lepas",s:"beberapa saat",ss:"%d saat",m:"seminit",mm:"%d minit",h:"sejam",hh:"%d jam",d:"sehari",dd:"%d hari",M:"sebulan",MM:"%d bulan",y:"setahun",yy:"%d tahun"},week:{dow:1,doy:7}})}(r(30381))},9847:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("ms",{months:"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),monthsShort:"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),weekdays:"Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),weekdaysShort:"Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),weekdaysMin:"Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),longDateFormat:{LT:"HH.mm",LTS:"HH.mm.ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY [pukul] HH.mm",LLLL:"dddd, D MMMM YYYY [pukul] HH.mm"},meridiemParse:/pagi|tengahari|petang|malam/,meridiemHour:function(t,e){return 12===t&&(t=0),"pagi"===e?t:"tengahari"===e?t>=11?t:t+12:"petang"===e||"malam"===e?t+12:void 0},meridiem:function(t,e,r){return t<11?"pagi":t<15?"tengahari":t<19?"petang":"malam"},calendar:{sameDay:"[Hari ini pukul] LT",nextDay:"[Esok pukul] LT",nextWeek:"dddd [pukul] LT",lastDay:"[Kelmarin pukul] LT",lastWeek:"dddd [lepas pukul] LT",sameElse:"L"},relativeTime:{future:"dalam %s",past:"%s yang lepas",s:"beberapa saat",ss:"%d saat",m:"seminit",mm:"%d minit",h:"sejam",hh:"%d jam",d:"sehari",dd:"%d hari",M:"sebulan",MM:"%d bulan",y:"setahun",yy:"%d tahun"},week:{dow:1,doy:7}})}(r(30381))},72126:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("mt",{months:"Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru".split("_"),monthsShort:"Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ".split("_"),weekdays:"Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt".split("_"),weekdaysShort:"Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib".split("_"),weekdaysMin:"Ħa_Tn_Tl_Er_Ħa_Ġi_Si".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Illum fil-]LT",nextDay:"[Għada fil-]LT",nextWeek:"dddd [fil-]LT",lastDay:"[Il-bieraħ fil-]LT",lastWeek:"dddd [li għadda] [fil-]LT",sameElse:"L"},relativeTime:{future:"f’ %s",past:"%s ilu",s:"ftit sekondi",ss:"%d sekondi",m:"minuta",mm:"%d minuti",h:"siegħa",hh:"%d siegħat",d:"ġurnata",dd:"%d ġranet",M:"xahar",MM:"%d xhur",y:"sena",yy:"%d sni"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4}})}(r(30381))},56165:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"၁",2:"၂",3:"၃",4:"၄",5:"၅",6:"၆",7:"၇",8:"၈",9:"၉",0:"၀"},r={"၁":"1","၂":"2","၃":"3","၄":"4","၅":"5","၆":"6","၇":"7","၈":"8","၉":"9","၀":"0"};t.defineLocale("my",{months:"ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ".split("_"),monthsShort:"ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ".split("_"),weekdays:"တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ".split("_"),weekdaysShort:"နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),weekdaysMin:"နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[ယနေ.] LT [မှာ]",nextDay:"[မနက်ဖြန်] LT [မှာ]",nextWeek:"dddd LT [မှာ]",lastDay:"[မနေ.က] LT [မှာ]",lastWeek:"[ပြီးခဲ့သော] dddd LT [မှာ]",sameElse:"L"},relativeTime:{future:"လာမည့် %s မှာ",past:"လွန်ခဲ့သော %s က",s:"စက္ကန်.အနည်းငယ်",ss:"%d စက္ကန့်",m:"တစ်မိနစ်",mm:"%d မိနစ်",h:"တစ်နာရီ",hh:"%d နာရီ",d:"တစ်ရက်",dd:"%d ရက်",M:"တစ်လ",MM:"%d လ",y:"တစ်နှစ်",yy:"%d နှစ်"},preparse:function(t){return t.replace(/[၁၂၃၄၅၆၇၈၉၀]/g,(function(t){return r[t]}))},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]}))},week:{dow:1,doy:4}})}(r(30381))},64924:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("nb",{months:"januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),monthsShort:"jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.".split("_"),monthsParseExact:!0,weekdays:"søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),weekdaysShort:"sø._ma._ti._on._to._fr._lø.".split("_"),weekdaysMin:"sø_ma_ti_on_to_fr_lø".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY [kl.] HH:mm",LLLL:"dddd D. MMMM YYYY [kl.] HH:mm"},calendar:{sameDay:"[i dag kl.] LT",nextDay:"[i morgen kl.] LT",nextWeek:"dddd [kl.] LT",lastDay:"[i går kl.] LT",lastWeek:"[forrige] dddd [kl.] LT",sameElse:"L"},relativeTime:{future:"om %s",past:"%s siden",s:"noen sekunder",ss:"%d sekunder",m:"ett minutt",mm:"%d minutter",h:"en time",hh:"%d timer",d:"en dag",dd:"%d dager",w:"en uke",ww:"%d uker",M:"en måned",MM:"%d måneder",y:"ett år",yy:"%d år"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},16744:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"१",2:"२",3:"३",4:"४",5:"५",6:"६",7:"७",8:"८",9:"९",0:"०"},r={"१":"1","२":"2","३":"3","४":"4","५":"5","६":"6","७":"7","८":"8","९":"9","०":"0"};t.defineLocale("ne",{months:"जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर".split("_"),monthsShort:"जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.".split("_"),monthsParseExact:!0,weekdays:"आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार".split("_"),weekdaysShort:"आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.".split("_"),weekdaysMin:"आ._सो._मं._बु._बि._शु._श.".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"Aको h:mm बजे",LTS:"Aको h:mm:ss बजे",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, Aको h:mm बजे",LLLL:"dddd, D MMMM YYYY, Aको h:mm बजे"},preparse:function(t){return t.replace(/[१२३४५६७८९०]/g,(function(t){return r[t]}))},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]}))},meridiemParse:/राति|बिहान|दिउँसो|साँझ/,meridiemHour:function(t,e){return 12===t&&(t=0),"राति"===e?t<4?t:t+12:"बिहान"===e?t:"दिउँसो"===e?t>=10?t:t+12:"साँझ"===e?t+12:void 0},meridiem:function(t,e,r){return t<3?"राति":t<12?"बिहान":t<16?"दिउँसो":t<20?"साँझ":"राति"},calendar:{sameDay:"[आज] LT",nextDay:"[भोलि] LT",nextWeek:"[आउँदो] dddd[,] LT",lastDay:"[हिजो] LT",lastWeek:"[गएको] dddd[,] LT",sameElse:"L"},relativeTime:{future:"%sमा",past:"%s अगाडि",s:"केही क्षण",ss:"%d सेकेण्ड",m:"एक मिनेट",mm:"%d मिनेट",h:"एक घण्टा",hh:"%d घण्टा",d:"एक दिन",dd:"%d दिन",M:"एक महिना",MM:"%d महिना",y:"एक बर्ष",yy:"%d बर्ष"},week:{dow:0,doy:6}})}(r(30381))},59814:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e="jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_"),r="jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_"),n=[/^jan/i,/^feb/i,/^maart|mrt.?$/i,/^apr/i,/^mei$/i,/^jun[i.]?$/i,/^jul[i.]?$/i,/^aug/i,/^sep/i,/^okt/i,/^nov/i,/^dec/i],i=/^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;t.defineLocale("nl-be",{months:"januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),monthsShort:function(t,n){return t?/-MMM-/.test(n)?r[t.month()]:e[t.month()]:e},monthsRegex:i,monthsShortRegex:i,monthsStrictRegex:/^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,monthsShortStrictRegex:/^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,monthsParse:n,longMonthsParse:n,shortMonthsParse:n,weekdays:"zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),weekdaysShort:"zo._ma._di._wo._do._vr._za.".split("_"),weekdaysMin:"zo_ma_di_wo_do_vr_za".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[vandaag om] LT",nextDay:"[morgen om] LT",nextWeek:"dddd [om] LT",lastDay:"[gisteren om] LT",lastWeek:"[afgelopen] dddd [om] LT",sameElse:"L"},relativeTime:{future:"over %s",past:"%s geleden",s:"een paar seconden",ss:"%d seconden",m:"één minuut",mm:"%d minuten",h:"één uur",hh:"%d uur",d:"één dag",dd:"%d dagen",M:"één maand",MM:"%d maanden",y:"één jaar",yy:"%d jaar"},dayOfMonthOrdinalParse:/\d{1,2}(ste|de)/,ordinal:function(t){return t+(1===t||8===t||t>=20?"ste":"de")},week:{dow:1,doy:4}})}(r(30381))},93901:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e="jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_"),r="jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_"),n=[/^jan/i,/^feb/i,/^maart|mrt.?$/i,/^apr/i,/^mei$/i,/^jun[i.]?$/i,/^jul[i.]?$/i,/^aug/i,/^sep/i,/^okt/i,/^nov/i,/^dec/i],i=/^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;t.defineLocale("nl",{months:"januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),monthsShort:function(t,n){return t?/-MMM-/.test(n)?r[t.month()]:e[t.month()]:e},monthsRegex:i,monthsShortRegex:i,monthsStrictRegex:/^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,monthsShortStrictRegex:/^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,monthsParse:n,longMonthsParse:n,shortMonthsParse:n,weekdays:"zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),weekdaysShort:"zo._ma._di._wo._do._vr._za.".split("_"),weekdaysMin:"zo_ma_di_wo_do_vr_za".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD-MM-YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[vandaag om] LT",nextDay:"[morgen om] LT",nextWeek:"dddd [om] LT",lastDay:"[gisteren om] LT",lastWeek:"[afgelopen] dddd [om] LT",sameElse:"L"},relativeTime:{future:"over %s",past:"%s geleden",s:"een paar seconden",ss:"%d seconden",m:"één minuut",mm:"%d minuten",h:"één uur",hh:"%d uur",d:"één dag",dd:"%d dagen",w:"één week",ww:"%d weken",M:"één maand",MM:"%d maanden",y:"één jaar",yy:"%d jaar"},dayOfMonthOrdinalParse:/\d{1,2}(ste|de)/,ordinal:function(t){return t+(1===t||8===t||t>=20?"ste":"de")},week:{dow:1,doy:4}})}(r(30381))},83877:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("nn",{months:"januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),monthsShort:"jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.".split("_"),monthsParseExact:!0,weekdays:"sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag".split("_"),weekdaysShort:"su._må._ty._on._to._fr._lau.".split("_"),weekdaysMin:"su_må_ty_on_to_fr_la".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY [kl.] H:mm",LLLL:"dddd D. MMMM YYYY [kl.] HH:mm"},calendar:{sameDay:"[I dag klokka] LT",nextDay:"[I morgon klokka] LT",nextWeek:"dddd [klokka] LT",lastDay:"[I går klokka] LT",lastWeek:"[Føregåande] dddd [klokka] LT",sameElse:"L"},relativeTime:{future:"om %s",past:"%s sidan",s:"nokre sekund",ss:"%d sekund",m:"eit minutt",mm:"%d minutt",h:"ein time",hh:"%d timar",d:"ein dag",dd:"%d dagar",w:"ei veke",ww:"%d veker",M:"ein månad",MM:"%d månader",y:"eit år",yy:"%d år"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},92135:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("oc-lnc",{months:{standalone:"genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre".split("_"),format:"de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre".split("_"),isFormat:/D[oD]?(\s)+MMMM/},monthsShort:"gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte".split("_"),weekdaysShort:"dg._dl._dm._dc._dj._dv._ds.".split("_"),weekdaysMin:"dg_dl_dm_dc_dj_dv_ds".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM [de] YYYY",ll:"D MMM YYYY",LLL:"D MMMM [de] YYYY [a] H:mm",lll:"D MMM YYYY, H:mm",LLLL:"dddd D MMMM [de] YYYY [a] H:mm",llll:"ddd D MMM YYYY, H:mm"},calendar:{sameDay:"[uèi a] LT",nextDay:"[deman a] LT",nextWeek:"dddd [a] LT",lastDay:"[ièr a] LT",lastWeek:"dddd [passat a] LT",sameElse:"L"},relativeTime:{future:"d'aquí %s",past:"fa %s",s:"unas segondas",ss:"%d segondas",m:"una minuta",mm:"%d minutas",h:"una ora",hh:"%d oras",d:"un jorn",dd:"%d jorns",M:"un mes",MM:"%d meses",y:"un an",yy:"%d ans"},dayOfMonthOrdinalParse:/\d{1,2}(r|n|t|è|a)/,ordinal:function(t,e){var r=1===t?"r":2===t?"n":3===t?"r":4===t?"t":"è";return"w"!==e&&"W"!==e||(r="a"),t+r},week:{dow:1,doy:4}})}(r(30381))},15858:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"੧",2:"੨",3:"੩",4:"੪",5:"੫",6:"੬",7:"੭",8:"੮",9:"੯",0:"੦"},r={"੧":"1","੨":"2","੩":"3","੪":"4","੫":"5","੬":"6","੭":"7","੮":"8","੯":"9","੦":"0"};t.defineLocale("pa-in",{months:"ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split("_"),monthsShort:"ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split("_"),weekdays:"ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ".split("_"),weekdaysShort:"ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),weekdaysMin:"ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),longDateFormat:{LT:"A h:mm ਵਜੇ",LTS:"A h:mm:ss ਵਜੇ",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm ਵਜੇ",LLLL:"dddd, D MMMM YYYY, A h:mm ਵਜੇ"},calendar:{sameDay:"[ਅਜ] LT",nextDay:"[ਕਲ] LT",nextWeek:"[ਅਗਲਾ] dddd, LT",lastDay:"[ਕਲ] LT",lastWeek:"[ਪਿਛਲੇ] dddd, LT",sameElse:"L"},relativeTime:{future:"%s ਵਿੱਚ",past:"%s ਪਿਛਲੇ",s:"ਕੁਝ ਸਕਿੰਟ",ss:"%d ਸਕਿੰਟ",m:"ਇਕ ਮਿੰਟ",mm:"%d ਮਿੰਟ",h:"ਇੱਕ ਘੰਟਾ",hh:"%d ਘੰਟੇ",d:"ਇੱਕ ਦਿਨ",dd:"%d ਦਿਨ",M:"ਇੱਕ ਮਹੀਨਾ",MM:"%d ਮਹੀਨੇ",y:"ਇੱਕ ਸਾਲ",yy:"%d ਸਾਲ"},preparse:function(t){return t.replace(/[੧੨੩੪੫੬੭੮੯੦]/g,(function(t){return r[t]}))},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]}))},meridiemParse:/ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,meridiemHour:function(t,e){return 12===t&&(t=0),"ਰਾਤ"===e?t<4?t:t+12:"ਸਵੇਰ"===e?t:"ਦੁਪਹਿਰ"===e?t>=10?t:t+12:"ਸ਼ਾਮ"===e?t+12:void 0},meridiem:function(t,e,r){return t<4?"ਰਾਤ":t<10?"ਸਵੇਰ":t<17?"ਦੁਪਹਿਰ":t<20?"ਸ਼ਾਮ":"ਰਾਤ"},week:{dow:0,doy:6}})}(r(30381))},64495:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e="styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień".split("_"),r="stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia".split("_"),n=[/^sty/i,/^lut/i,/^mar/i,/^kwi/i,/^maj/i,/^cze/i,/^lip/i,/^sie/i,/^wrz/i,/^paź/i,/^lis/i,/^gru/i];function i(t){return t%10<5&&t%10>1&&~~(t/10)%10!=1}function s(t,e,r){var n=t+" ";switch(r){case"ss":return n+(i(t)?"sekundy":"sekund");case"m":return e?"minuta":"minutę";case"mm":return n+(i(t)?"minuty":"minut");case"h":return e?"godzina":"godzinę";case"hh":return n+(i(t)?"godziny":"godzin");case"ww":return n+(i(t)?"tygodnie":"tygodni");case"MM":return n+(i(t)?"miesiące":"miesięcy");case"yy":return n+(i(t)?"lata":"lat")}}t.defineLocale("pl",{months:function(t,n){return t?/D MMMM/.test(n)?r[t.month()]:e[t.month()]:e},monthsShort:"sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru".split("_"),monthsParse:n,longMonthsParse:n,shortMonthsParse:n,weekdays:"niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota".split("_"),weekdaysShort:"ndz_pon_wt_śr_czw_pt_sob".split("_"),weekdaysMin:"Nd_Pn_Wt_Śr_Cz_Pt_So".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Dziś o] LT",nextDay:"[Jutro o] LT",nextWeek:function(){switch(this.day()){case 0:return"[W niedzielę o] LT";case 2:return"[We wtorek o] LT";case 3:return"[W środę o] LT";case 6:return"[W sobotę o] LT";default:return"[W] dddd [o] LT"}},lastDay:"[Wczoraj o] LT",lastWeek:function(){switch(this.day()){case 0:return"[W zeszłą niedzielę o] LT";case 3:return"[W zeszłą środę o] LT";case 6:return"[W zeszłą sobotę o] LT";default:return"[W zeszły] dddd [o] LT"}},sameElse:"L"},relativeTime:{future:"za %s",past:"%s temu",s:"kilka sekund",ss:s,m:s,mm:s,h:s,hh:s,d:"1 dzień",dd:"%d dni",w:"tydzień",ww:s,M:"miesiąc",MM:s,y:"rok",yy:s},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},57971:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("pt-br",{months:"janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),monthsShort:"jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),weekdays:"domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado".split("_"),weekdaysShort:"dom_seg_ter_qua_qui_sex_sáb".split("_"),weekdaysMin:"do_2ª_3ª_4ª_5ª_6ª_sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY [às] HH:mm",LLLL:"dddd, D [de] MMMM [de] YYYY [às] HH:mm"},calendar:{sameDay:"[Hoje às] LT",nextDay:"[Amanhã às] LT",nextWeek:"dddd [às] LT",lastDay:"[Ontem às] LT",lastWeek:function(){return 0===this.day()||6===this.day()?"[Último] dddd [às] LT":"[Última] dddd [às] LT"},sameElse:"L"},relativeTime:{future:"em %s",past:"há %s",s:"poucos segundos",ss:"%d segundos",m:"um minuto",mm:"%d minutos",h:"uma hora",hh:"%d horas",d:"um dia",dd:"%d dias",M:"um mês",MM:"%d meses",y:"um ano",yy:"%d anos"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",invalidDate:"Data inválida"})}(r(30381))},89520:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("pt",{months:"janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),monthsShort:"jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),weekdays:"Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado".split("_"),weekdaysShort:"Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),weekdaysMin:"Do_2ª_3ª_4ª_5ª_6ª_Sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY HH:mm",LLLL:"dddd, D [de] MMMM [de] YYYY HH:mm"},calendar:{sameDay:"[Hoje às] LT",nextDay:"[Amanhã às] LT",nextWeek:"dddd [às] LT",lastDay:"[Ontem às] LT",lastWeek:function(){return 0===this.day()||6===this.day()?"[Último] dddd [às] LT":"[Última] dddd [às] LT"},sameElse:"L"},relativeTime:{future:"em %s",past:"há %s",s:"segundos",ss:"%d segundos",m:"um minuto",mm:"%d minutos",h:"uma hora",hh:"%d horas",d:"um dia",dd:"%d dias",w:"uma semana",ww:"%d semanas",M:"um mês",MM:"%d meses",y:"um ano",yy:"%d anos"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4}})}(r(30381))},96459:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e,r){var n=" ";return(t%100>=20||t>=100&&t%100==0)&&(n=" de "),t+n+{ss:"secunde",mm:"minute",hh:"ore",dd:"zile",ww:"săptămâni",MM:"luni",yy:"ani"}[r]}t.defineLocale("ro",{months:"ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie".split("_"),monthsShort:"ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"duminică_luni_marți_miercuri_joi_vineri_sâmbătă".split("_"),weekdaysShort:"Dum_Lun_Mar_Mie_Joi_Vin_Sâm".split("_"),weekdaysMin:"Du_Lu_Ma_Mi_Jo_Vi_Sâ".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY H:mm",LLLL:"dddd, D MMMM YYYY H:mm"},calendar:{sameDay:"[azi la] LT",nextDay:"[mâine la] LT",nextWeek:"dddd [la] LT",lastDay:"[ieri la] LT",lastWeek:"[fosta] dddd [la] LT",sameElse:"L"},relativeTime:{future:"peste %s",past:"%s în urmă",s:"câteva secunde",ss:e,m:"un minut",mm:e,h:"o oră",hh:e,d:"o zi",dd:e,w:"o săptămână",ww:e,M:"o lună",MM:e,y:"un an",yy:e},week:{dow:1,doy:7}})}(r(30381))},21793:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e){var r=t.split("_");return e%10==1&&e%100!=11?r[0]:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?r[1]:r[2]}function r(t,r,n){return"m"===n?r?"минута":"минуту":t+" "+e({ss:r?"секунда_секунды_секунд":"секунду_секунды_секунд",mm:r?"минута_минуты_минут":"минуту_минуты_минут",hh:"час_часа_часов",dd:"день_дня_дней",ww:"неделя_недели_недель",MM:"месяц_месяца_месяцев",yy:"год_года_лет"}[n],+t)}var n=[/^янв/i,/^фев/i,/^мар/i,/^апр/i,/^ма[йя]/i,/^июн/i,/^июл/i,/^авг/i,/^сен/i,/^окт/i,/^ноя/i,/^дек/i];t.defineLocale("ru",{months:{format:"января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря".split("_"),standalone:"январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_")},monthsShort:{format:"янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.".split("_"),standalone:"янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.".split("_")},weekdays:{standalone:"воскресенье_понедельник_вторник_среда_четверг_пятница_суббота".split("_"),format:"воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу".split("_"),isFormat:/\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/},weekdaysShort:"вс_пн_вт_ср_чт_пт_сб".split("_"),weekdaysMin:"вс_пн_вт_ср_чт_пт_сб".split("_"),monthsParse:n,longMonthsParse:n,shortMonthsParse:n,monthsRegex:/^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,monthsShortRegex:/^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,monthsStrictRegex:/^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,monthsShortStrictRegex:/^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY г.",LLL:"D MMMM YYYY г., H:mm",LLLL:"dddd, D MMMM YYYY г., H:mm"},calendar:{sameDay:"[Сегодня, в] LT",nextDay:"[Завтра, в] LT",lastDay:"[Вчера, в] LT",nextWeek:function(t){if(t.week()===this.week())return 2===this.day()?"[Во] dddd, [в] LT":"[В] dddd, [в] LT";switch(this.day()){case 0:return"[В следующее] dddd, [в] LT";case 1:case 2:case 4:return"[В следующий] dddd, [в] LT";case 3:case 5:case 6:return"[В следующую] dddd, [в] LT"}},lastWeek:function(t){if(t.week()===this.week())return 2===this.day()?"[Во] dddd, [в] LT":"[В] dddd, [в] LT";switch(this.day()){case 0:return"[В прошлое] dddd, [в] LT";case 1:case 2:case 4:return"[В прошлый] dddd, [в] LT";case 3:case 5:case 6:return"[В прошлую] dddd, [в] LT"}},sameElse:"L"},relativeTime:{future:"через %s",past:"%s назад",s:"несколько секунд",ss:r,m:r,mm:r,h:"час",hh:r,d:"день",dd:r,w:"неделя",ww:r,M:"месяц",MM:r,y:"год",yy:r},meridiemParse:/ночи|утра|дня|вечера/i,isPM:function(t){return/^(дня|вечера)$/.test(t)},meridiem:function(t,e,r){return t<4?"ночи":t<12?"утра":t<17?"дня":"вечера"},dayOfMonthOrdinalParse:/\d{1,2}-(й|го|я)/,ordinal:function(t,e){switch(e){case"M":case"d":case"DDD":return t+"-й";case"D":return t+"-го";case"w":case"W":return t+"-я";default:return t}},week:{dow:1,doy:4}})}(r(30381))},40950:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e=["جنوري","فيبروري","مارچ","اپريل","مئي","جون","جولاءِ","آگسٽ","سيپٽمبر","آڪٽوبر","نومبر","ڊسمبر"],r=["آچر","سومر","اڱارو","اربع","خميس","جمع","ڇنڇر"];t.defineLocale("sd",{months:e,monthsShort:e,weekdays:r,weekdaysShort:r,weekdaysMin:r,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd، D MMMM YYYY HH:mm"},meridiemParse:/صبح|شام/,isPM:function(t){return"شام"===t},meridiem:function(t,e,r){return t<12?"صبح":"شام"},calendar:{sameDay:"[اڄ] LT",nextDay:"[سڀاڻي] LT",nextWeek:"dddd [اڳين هفتي تي] LT",lastDay:"[ڪالهه] LT",lastWeek:"[گزريل هفتي] dddd [تي] LT",sameElse:"L"},relativeTime:{future:"%s پوء",past:"%s اڳ",s:"چند سيڪنڊ",ss:"%d سيڪنڊ",m:"هڪ منٽ",mm:"%d منٽ",h:"هڪ ڪلاڪ",hh:"%d ڪلاڪ",d:"هڪ ڏينهن",dd:"%d ڏينهن",M:"هڪ مهينو",MM:"%d مهينا",y:"هڪ سال",yy:"%d سال"},preparse:function(t){return t.replace(/،/g,",")},postformat:function(t){return t.replace(/,/g,"،")},week:{dow:1,doy:4}})}(r(30381))},10490:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("se",{months:"ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu".split("_"),monthsShort:"ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov".split("_"),weekdays:"sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat".split("_"),weekdaysShort:"sotn_vuos_maŋ_gask_duor_bear_láv".split("_"),weekdaysMin:"s_v_m_g_d_b_L".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"MMMM D. [b.] YYYY",LLL:"MMMM D. [b.] YYYY [ti.] HH:mm",LLLL:"dddd, MMMM D. [b.] YYYY [ti.] HH:mm"},calendar:{sameDay:"[otne ti] LT",nextDay:"[ihttin ti] LT",nextWeek:"dddd [ti] LT",lastDay:"[ikte ti] LT",lastWeek:"[ovddit] dddd [ti] LT",sameElse:"L"},relativeTime:{future:"%s geažes",past:"maŋit %s",s:"moadde sekunddat",ss:"%d sekunddat",m:"okta minuhta",mm:"%d minuhtat",h:"okta diimmu",hh:"%d diimmut",d:"okta beaivi",dd:"%d beaivvit",M:"okta mánnu",MM:"%d mánut",y:"okta jahki",yy:"%d jagit"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},90124:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("si",{months:"ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්".split("_"),monthsShort:"ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ".split("_"),weekdays:"ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා".split("_"),weekdaysShort:"ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන".split("_"),weekdaysMin:"ඉ_ස_අ_බ_බ්‍ර_සි_සෙ".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"a h:mm",LTS:"a h:mm:ss",L:"YYYY/MM/DD",LL:"YYYY MMMM D",LLL:"YYYY MMMM D, a h:mm",LLLL:"YYYY MMMM D [වැනි] dddd, a h:mm:ss"},calendar:{sameDay:"[අද] LT[ට]",nextDay:"[හෙට] LT[ට]",nextWeek:"dddd LT[ට]",lastDay:"[ඊයේ] LT[ට]",lastWeek:"[පසුගිය] dddd LT[ට]",sameElse:"L"},relativeTime:{future:"%sකින්",past:"%sකට පෙර",s:"තත්පර කිහිපය",ss:"තත්පර %d",m:"මිනිත්තුව",mm:"මිනිත්තු %d",h:"පැය",hh:"පැය %d",d:"දිනය",dd:"දින %d",M:"මාසය",MM:"මාස %d",y:"වසර",yy:"වසර %d"},dayOfMonthOrdinalParse:/\d{1,2} වැනි/,ordinal:function(t){return t+" වැනි"},meridiemParse:/පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,isPM:function(t){return"ප.ව."===t||"පස් වරු"===t},meridiem:function(t,e,r){return t>11?r?"ප.ව.":"පස් වරු":r?"පෙ.ව.":"පෙර වරු"}})}(r(30381))},64249:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e="január_február_marec_apríl_máj_jún_júl_august_september_október_november_december".split("_"),r="jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec".split("_");function n(t){return t>1&&t<5}function i(t,e,r,i){var s=t+" ";switch(r){case"s":return e||i?"pár sekúnd":"pár sekundami";case"ss":return e||i?s+(n(t)?"sekundy":"sekúnd"):s+"sekundami";case"m":return e?"minúta":i?"minútu":"minútou";case"mm":return e||i?s+(n(t)?"minúty":"minút"):s+"minútami";case"h":return e?"hodina":i?"hodinu":"hodinou";case"hh":return e||i?s+(n(t)?"hodiny":"hodín"):s+"hodinami";case"d":return e||i?"deň":"dňom";case"dd":return e||i?s+(n(t)?"dni":"dní"):s+"dňami";case"M":return e||i?"mesiac":"mesiacom";case"MM":return e||i?s+(n(t)?"mesiace":"mesiacov"):s+"mesiacmi";case"y":return e||i?"rok":"rokom";case"yy":return e||i?s+(n(t)?"roky":"rokov"):s+"rokmi"}}t.defineLocale("sk",{months:e,monthsShort:r,weekdays:"nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota".split("_"),weekdaysShort:"ne_po_ut_st_št_pi_so".split("_"),weekdaysMin:"ne_po_ut_st_št_pi_so".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm",LLLL:"dddd D. MMMM YYYY H:mm"},calendar:{sameDay:"[dnes o] LT",nextDay:"[zajtra o] LT",nextWeek:function(){switch(this.day()){case 0:return"[v nedeľu o] LT";case 1:case 2:return"[v] dddd [o] LT";case 3:return"[v stredu o] LT";case 4:return"[vo štvrtok o] LT";case 5:return"[v piatok o] LT";case 6:return"[v sobotu o] LT"}},lastDay:"[včera o] LT",lastWeek:function(){switch(this.day()){case 0:return"[minulú nedeľu o] LT";case 1:case 2:case 4:case 5:return"[minulý] dddd [o] LT";case 3:return"[minulú stredu o] LT";case 6:return"[minulú sobotu o] LT"}},sameElse:"L"},relativeTime:{future:"za %s",past:"pred %s",s:i,ss:i,m:i,mm:i,h:i,hh:i,d:i,dd:i,M:i,MM:i,y:i,yy:i},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},14985:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e,r,n){var i=t+" ";switch(r){case"s":return e||n?"nekaj sekund":"nekaj sekundami";case"ss":return i+=1===t?e?"sekundo":"sekundi":2===t?e||n?"sekundi":"sekundah":t<5?e||n?"sekunde":"sekundah":"sekund";case"m":return e?"ena minuta":"eno minuto";case"mm":return i+=1===t?e?"minuta":"minuto":2===t?e||n?"minuti":"minutama":t<5?e||n?"minute":"minutami":e||n?"minut":"minutami";case"h":return e?"ena ura":"eno uro";case"hh":return i+=1===t?e?"ura":"uro":2===t?e||n?"uri":"urama":t<5?e||n?"ure":"urami":e||n?"ur":"urami";case"d":return e||n?"en dan":"enim dnem";case"dd":return i+=1===t?e||n?"dan":"dnem":2===t?e||n?"dni":"dnevoma":e||n?"dni":"dnevi";case"M":return e||n?"en mesec":"enim mesecem";case"MM":return i+=1===t?e||n?"mesec":"mesecem":2===t?e||n?"meseca":"mesecema":t<5?e||n?"mesece":"meseci":e||n?"mesecev":"meseci";case"y":return e||n?"eno leto":"enim letom";case"yy":return i+=1===t?e||n?"leto":"letom":2===t?e||n?"leti":"letoma":t<5?e||n?"leta":"leti":e||n?"let":"leti"}}t.defineLocale("sl",{months:"januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december".split("_"),monthsShort:"jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota".split("_"),weekdaysShort:"ned._pon._tor._sre._čet._pet._sob.".split("_"),weekdaysMin:"ne_po_to_sr_če_pe_so".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD. MM. YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm",LLLL:"dddd, D. MMMM YYYY H:mm"},calendar:{sameDay:"[danes ob] LT",nextDay:"[jutri ob] LT",nextWeek:function(){switch(this.day()){case 0:return"[v] [nedeljo] [ob] LT";case 3:return"[v] [sredo] [ob] LT";case 6:return"[v] [soboto] [ob] LT";case 1:case 2:case 4:case 5:return"[v] dddd [ob] LT"}},lastDay:"[včeraj ob] LT",lastWeek:function(){switch(this.day()){case 0:return"[prejšnjo] [nedeljo] [ob] LT";case 3:return"[prejšnjo] [sredo] [ob] LT";case 6:return"[prejšnjo] [soboto] [ob] LT";case 1:case 2:case 4:case 5:return"[prejšnji] dddd [ob] LT"}},sameElse:"L"},relativeTime:{future:"čez %s",past:"pred %s",s:e,ss:e,m:e,mm:e,h:e,hh:e,d:e,dd:e,M:e,MM:e,y:e,yy:e},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:7}})}(r(30381))},51104:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("sq",{months:"Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor".split("_"),monthsShort:"Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj".split("_"),weekdays:"E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë".split("_"),weekdaysShort:"Die_Hën_Mar_Mër_Enj_Pre_Sht".split("_"),weekdaysMin:"D_H_Ma_Më_E_P_Sh".split("_"),weekdaysParseExact:!0,meridiemParse:/PD|MD/,isPM:function(t){return"M"===t.charAt(0)},meridiem:function(t,e,r){return t<12?"PD":"MD"},longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Sot në] LT",nextDay:"[Nesër në] LT",nextWeek:"dddd [në] LT",lastDay:"[Dje në] LT",lastWeek:"dddd [e kaluar në] LT",sameElse:"L"},relativeTime:{future:"në %s",past:"%s më parë",s:"disa sekonda",ss:"%d sekonda",m:"një minutë",mm:"%d minuta",h:"një orë",hh:"%d orë",d:"një ditë",dd:"%d ditë",M:"një muaj",MM:"%d muaj",y:"një vit",yy:"%d vite"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},79915:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={words:{ss:["секунда","секунде","секунди"],m:["један минут","једне минуте"],mm:["минут","минуте","минута"],h:["један сат","једног сата"],hh:["сат","сата","сати"],dd:["дан","дана","дана"],MM:["месец","месеца","месеци"],yy:["година","године","година"]},correctGrammaticalCase:function(t,e){return 1===t?e[0]:t>=2&&t<=4?e[1]:e[2]},translate:function(t,r,n){var i=e.words[n];return 1===n.length?r?i[0]:i[1]:t+" "+e.correctGrammaticalCase(t,i)}};t.defineLocale("sr-cyrl",{months:"јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар".split("_"),monthsShort:"јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.".split("_"),monthsParseExact:!0,weekdays:"недеља_понедељак_уторак_среда_четвртак_петак_субота".split("_"),weekdaysShort:"нед._пон._уто._сре._чет._пет._суб.".split("_"),weekdaysMin:"не_по_ут_ср_че_пе_су".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"D. M. YYYY.",LL:"D. MMMM YYYY.",LLL:"D. MMMM YYYY. H:mm",LLLL:"dddd, D. MMMM YYYY. H:mm"},calendar:{sameDay:"[данас у] LT",nextDay:"[сутра у] LT",nextWeek:function(){switch(this.day()){case 0:return"[у] [недељу] [у] LT";case 3:return"[у] [среду] [у] LT";case 6:return"[у] [суботу] [у] LT";case 1:case 2:case 4:case 5:return"[у] dddd [у] LT"}},lastDay:"[јуче у] LT",lastWeek:function(){return["[прошле] [недеље] [у] LT","[прошлог] [понедељка] [у] LT","[прошлог] [уторка] [у] LT","[прошле] [среде] [у] LT","[прошлог] [четвртка] [у] LT","[прошлог] [петка] [у] LT","[прошле] [суботе] [у] LT"][this.day()]},sameElse:"L"},relativeTime:{future:"за %s",past:"пре %s",s:"неколико секунди",ss:e.translate,m:e.translate,mm:e.translate,h:e.translate,hh:e.translate,d:"дан",dd:e.translate,M:"месец",MM:e.translate,y:"годину",yy:e.translate},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:7}})}(r(30381))},49131:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={words:{ss:["sekunda","sekunde","sekundi"],m:["jedan minut","jedne minute"],mm:["minut","minute","minuta"],h:["jedan sat","jednog sata"],hh:["sat","sata","sati"],dd:["dan","dana","dana"],MM:["mesec","meseca","meseci"],yy:["godina","godine","godina"]},correctGrammaticalCase:function(t,e){return 1===t?e[0]:t>=2&&t<=4?e[1]:e[2]},translate:function(t,r,n){var i=e.words[n];return 1===n.length?r?i[0]:i[1]:t+" "+e.correctGrammaticalCase(t,i)}};t.defineLocale("sr",{months:"januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split("_"),monthsShort:"jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota".split("_"),weekdaysShort:"ned._pon._uto._sre._čet._pet._sub.".split("_"),weekdaysMin:"ne_po_ut_sr_če_pe_su".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"D. M. YYYY.",LL:"D. MMMM YYYY.",LLL:"D. MMMM YYYY. H:mm",LLLL:"dddd, D. MMMM YYYY. H:mm"},calendar:{sameDay:"[danas u] LT",nextDay:"[sutra u] LT",nextWeek:function(){switch(this.day()){case 0:return"[u] [nedelju] [u] LT";case 3:return"[u] [sredu] [u] LT";case 6:return"[u] [subotu] [u] LT";case 1:case 2:case 4:case 5:return"[u] dddd [u] LT"}},lastDay:"[juče u] LT",lastWeek:function(){return["[prošle] [nedelje] [u] LT","[prošlog] [ponedeljka] [u] LT","[prošlog] [utorka] [u] LT","[prošle] [srede] [u] LT","[prošlog] [četvrtka] [u] LT","[prošlog] [petka] [u] LT","[prošle] [subote] [u] LT"][this.day()]},sameElse:"L"},relativeTime:{future:"za %s",past:"pre %s",s:"nekoliko sekundi",ss:e.translate,m:e.translate,mm:e.translate,h:e.translate,hh:e.translate,d:"dan",dd:e.translate,M:"mesec",MM:e.translate,y:"godinu",yy:e.translate},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:7}})}(r(30381))},95606:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("ss",{months:"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split("_"),monthsShort:"Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo".split("_"),weekdays:"Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo".split("_"),weekdaysShort:"Lis_Umb_Lsb_Les_Lsi_Lsh_Umg".split("_"),weekdaysMin:"Li_Us_Lb_Lt_Ls_Lh_Ug".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY h:mm A",LLLL:"dddd, D MMMM YYYY h:mm A"},calendar:{sameDay:"[Namuhla nga] LT",nextDay:"[Kusasa nga] LT",nextWeek:"dddd [nga] LT",lastDay:"[Itolo nga] LT",lastWeek:"dddd [leliphelile] [nga] LT",sameElse:"L"},relativeTime:{future:"nga %s",past:"wenteka nga %s",s:"emizuzwana lomcane",ss:"%d mzuzwana",m:"umzuzu",mm:"%d emizuzu",h:"lihora",hh:"%d emahora",d:"lilanga",dd:"%d emalanga",M:"inyanga",MM:"%d tinyanga",y:"umnyaka",yy:"%d iminyaka"},meridiemParse:/ekuseni|emini|entsambama|ebusuku/,meridiem:function(t,e,r){return t<11?"ekuseni":t<15?"emini":t<19?"entsambama":"ebusuku"},meridiemHour:function(t,e){return 12===t&&(t=0),"ekuseni"===e?t:"emini"===e?t>=11?t:t+12:"entsambama"===e||"ebusuku"===e?0===t?0:t+12:void 0},dayOfMonthOrdinalParse:/\d{1,2}/,ordinal:"%d",week:{dow:1,doy:4}})}(r(30381))},98760:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("sv",{months:"januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december".split("_"),monthsShort:"jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),weekdays:"söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag".split("_"),weekdaysShort:"sön_mån_tis_ons_tor_fre_lör".split("_"),weekdaysMin:"sö_må_ti_on_to_fr_lö".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY-MM-DD",LL:"D MMMM YYYY",LLL:"D MMMM YYYY [kl.] HH:mm",LLLL:"dddd D MMMM YYYY [kl.] HH:mm",lll:"D MMM YYYY HH:mm",llll:"ddd D MMM YYYY HH:mm"},calendar:{sameDay:"[Idag] LT",nextDay:"[Imorgon] LT",lastDay:"[Igår] LT",nextWeek:"[På] dddd LT",lastWeek:"[I] dddd[s] LT",sameElse:"L"},relativeTime:{future:"om %s",past:"för %s sedan",s:"några sekunder",ss:"%d sekunder",m:"en minut",mm:"%d minuter",h:"en timme",hh:"%d timmar",d:"en dag",dd:"%d dagar",M:"en månad",MM:"%d månader",y:"ett år",yy:"%d år"},dayOfMonthOrdinalParse:/\d{1,2}(\:e|\:a)/,ordinal:function(t){var e=t%10;return t+(1==~~(t%100/10)?":e":1===e||2===e?":a":":e")},week:{dow:1,doy:4}})}(r(30381))},91172:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("sw",{months:"Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba".split("_"),monthsShort:"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des".split("_"),weekdays:"Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi".split("_"),weekdaysShort:"Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos".split("_"),weekdaysMin:"J2_J3_J4_J5_Al_Ij_J1".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"hh:mm A",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[leo saa] LT",nextDay:"[kesho saa] LT",nextWeek:"[wiki ijayo] dddd [saat] LT",lastDay:"[jana] LT",lastWeek:"[wiki iliyopita] dddd [saat] LT",sameElse:"L"},relativeTime:{future:"%s baadaye",past:"tokea %s",s:"hivi punde",ss:"sekunde %d",m:"dakika moja",mm:"dakika %d",h:"saa limoja",hh:"masaa %d",d:"siku moja",dd:"siku %d",M:"mwezi mmoja",MM:"miezi %d",y:"mwaka mmoja",yy:"miaka %d"},week:{dow:1,doy:7}})}(r(30381))},27333:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"௧",2:"௨",3:"௩",4:"௪",5:"௫",6:"௬",7:"௭",8:"௮",9:"௯",0:"௦"},r={"௧":"1","௨":"2","௩":"3","௪":"4","௫":"5","௬":"6","௭":"7","௮":"8","௯":"9","௦":"0"};t.defineLocale("ta",{months:"ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split("_"),monthsShort:"ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split("_"),weekdays:"ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை".split("_"),weekdaysShort:"ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி".split("_"),weekdaysMin:"ஞா_தி_செ_பு_வி_வெ_ச".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, HH:mm",LLLL:"dddd, D MMMM YYYY, HH:mm"},calendar:{sameDay:"[இன்று] LT",nextDay:"[நாளை] LT",nextWeek:"dddd, LT",lastDay:"[நேற்று] LT",lastWeek:"[கடந்த வாரம்] dddd, LT",sameElse:"L"},relativeTime:{future:"%s இல்",past:"%s முன்",s:"ஒரு சில விநாடிகள்",ss:"%d விநாடிகள்",m:"ஒரு நிமிடம்",mm:"%d நிமிடங்கள்",h:"ஒரு மணி நேரம்",hh:"%d மணி நேரம்",d:"ஒரு நாள்",dd:"%d நாட்கள்",M:"ஒரு மாதம்",MM:"%d மாதங்கள்",y:"ஒரு வருடம்",yy:"%d ஆண்டுகள்"},dayOfMonthOrdinalParse:/\d{1,2}வது/,ordinal:function(t){return t+"வது"},preparse:function(t){return t.replace(/[௧௨௩௪௫௬௭௮௯௦]/g,(function(t){return r[t]}))},postformat:function(t){return t.replace(/\d/g,(function(t){return e[t]}))},meridiemParse:/யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,meridiem:function(t,e,r){return t<2?" யாமம்":t<6?" வைகறை":t<10?" காலை":t<14?" நண்பகல்":t<18?" எற்பாடு":t<22?" மாலை":" யாமம்"},meridiemHour:function(t,e){return 12===t&&(t=0),"யாமம்"===e?t<2?t:t+12:"வைகறை"===e||"காலை"===e||"நண்பகல்"===e&&t>=10?t:t+12},week:{dow:0,doy:6}})}(r(30381))},23110:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("te",{months:"జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్".split("_"),monthsShort:"జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.".split("_"),monthsParseExact:!0,weekdays:"ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం".split("_"),weekdaysShort:"ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని".split("_"),weekdaysMin:"ఆ_సో_మం_బు_గు_శు_శ".split("_"),longDateFormat:{LT:"A h:mm",LTS:"A h:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm",LLLL:"dddd, D MMMM YYYY, A h:mm"},calendar:{sameDay:"[నేడు] LT",nextDay:"[రేపు] LT",nextWeek:"dddd, LT",lastDay:"[నిన్న] LT",lastWeek:"[గత] dddd, LT",sameElse:"L"},relativeTime:{future:"%s లో",past:"%s క్రితం",s:"కొన్ని క్షణాలు",ss:"%d సెకన్లు",m:"ఒక నిమిషం",mm:"%d నిమిషాలు",h:"ఒక గంట",hh:"%d గంటలు",d:"ఒక రోజు",dd:"%d రోజులు",M:"ఒక నెల",MM:"%d నెలలు",y:"ఒక సంవత్సరం",yy:"%d సంవత్సరాలు"},dayOfMonthOrdinalParse:/\d{1,2}వ/,ordinal:"%dవ",meridiemParse:/రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,meridiemHour:function(t,e){return 12===t&&(t=0),"రాత్రి"===e?t<4?t:t+12:"ఉదయం"===e?t:"మధ్యాహ్నం"===e?t>=10?t:t+12:"సాయంత్రం"===e?t+12:void 0},meridiem:function(t,e,r){return t<4?"రాత్రి":t<10?"ఉదయం":t<17?"మధ్యాహ్నం":t<20?"సాయంత్రం":"రాత్రి"},week:{dow:0,doy:6}})}(r(30381))},52095:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("tet",{months:"Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru".split("_"),monthsShort:"Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split("_"),weekdays:"Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu".split("_"),weekdaysShort:"Dom_Seg_Ters_Kua_Kint_Sest_Sab".split("_"),weekdaysMin:"Do_Seg_Te_Ku_Ki_Ses_Sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Ohin iha] LT",nextDay:"[Aban iha] LT",nextWeek:"dddd [iha] LT",lastDay:"[Horiseik iha] LT",lastWeek:"dddd [semana kotuk] [iha] LT",sameElse:"L"},relativeTime:{future:"iha %s",past:"%s liuba",s:"segundu balun",ss:"segundu %d",m:"minutu ida",mm:"minutu %d",h:"oras ida",hh:"oras %d",d:"loron ida",dd:"loron %d",M:"fulan ida",MM:"fulan %d",y:"tinan ida",yy:"tinan %d"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(t){var e=t%10;return t+(1==~~(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th")},week:{dow:1,doy:4}})}(r(30381))},27321:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={0:"-ум",1:"-ум",2:"-юм",3:"-юм",4:"-ум",5:"-ум",6:"-ум",7:"-ум",8:"-ум",9:"-ум",10:"-ум",12:"-ум",13:"-ум",20:"-ум",30:"-юм",40:"-ум",50:"-ум",60:"-ум",70:"-ум",80:"-ум",90:"-ум",100:"-ум"};t.defineLocale("tg",{months:{format:"январи_феврали_марти_апрели_майи_июни_июли_августи_сентябри_октябри_ноябри_декабри".split("_"),standalone:"январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр".split("_")},monthsShort:"янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split("_"),weekdays:"якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе".split("_"),weekdaysShort:"яшб_дшб_сшб_чшб_пшб_ҷум_шнб".split("_"),weekdaysMin:"яш_дш_сш_чш_пш_ҷм_шб".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Имрӯз соати] LT",nextDay:"[Фардо соати] LT",lastDay:"[Дирӯз соати] LT",nextWeek:"dddd[и] [ҳафтаи оянда соати] LT",lastWeek:"dddd[и] [ҳафтаи гузашта соати] LT",sameElse:"L"},relativeTime:{future:"баъди %s",past:"%s пеш",s:"якчанд сония",m:"як дақиқа",mm:"%d дақиқа",h:"як соат",hh:"%d соат",d:"як рӯз",dd:"%d рӯз",M:"як моҳ",MM:"%d моҳ",y:"як сол",yy:"%d сол"},meridiemParse:/шаб|субҳ|рӯз|бегоҳ/,meridiemHour:function(t,e){return 12===t&&(t=0),"шаб"===e?t<4?t:t+12:"субҳ"===e?t:"рӯз"===e?t>=11?t:t+12:"бегоҳ"===e?t+12:void 0},meridiem:function(t,e,r){return t<4?"шаб":t<11?"субҳ":t<16?"рӯз":t<19?"бегоҳ":"шаб"},dayOfMonthOrdinalParse:/\d{1,2}-(ум|юм)/,ordinal:function(t){var r=t%10,n=t>=100?100:null;return t+(e[t]||e[r]||e[n])},week:{dow:1,doy:7}})}(r(30381))},9041:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("th",{months:"มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม".split("_"),monthsShort:"ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.".split("_"),monthsParseExact:!0,weekdays:"อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์".split("_"),weekdaysShort:"อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์".split("_"),weekdaysMin:"อา._จ._อ._พ._พฤ._ศ._ส.".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY เวลา H:mm",LLLL:"วันddddที่ D MMMM YYYY เวลา H:mm"},meridiemParse:/ก่อนเที่ยง|หลังเที่ยง/,isPM:function(t){return"หลังเที่ยง"===t},meridiem:function(t,e,r){return t<12?"ก่อนเที่ยง":"หลังเที่ยง"},calendar:{sameDay:"[วันนี้ เวลา] LT",nextDay:"[พรุ่งนี้ เวลา] LT",nextWeek:"dddd[หน้า เวลา] LT",lastDay:"[เมื่อวานนี้ เวลา] LT",lastWeek:"[วัน]dddd[ที่แล้ว เวลา] LT",sameElse:"L"},relativeTime:{future:"อีก %s",past:"%sที่แล้ว",s:"ไม่กี่วินาที",ss:"%d วินาที",m:"1 นาที",mm:"%d นาที",h:"1 ชั่วโมง",hh:"%d ชั่วโมง",d:"1 วัน",dd:"%d วัน",w:"1 สัปดาห์",ww:"%d สัปดาห์",M:"1 เดือน",MM:"%d เดือน",y:"1 ปี",yy:"%d ปี"}})}(r(30381))},19005:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"'inji",5:"'inji",8:"'inji",70:"'inji",80:"'inji",2:"'nji",7:"'nji",20:"'nji",50:"'nji",3:"'ünji",4:"'ünji",100:"'ünji",6:"'njy",9:"'unjy",10:"'unjy",30:"'unjy",60:"'ynjy",90:"'ynjy"};t.defineLocale("tk",{months:"Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr".split("_"),monthsShort:"Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek".split("_"),weekdays:"Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe".split("_"),weekdaysShort:"Ýek_Duş_Siş_Çar_Pen_Ann_Şen".split("_"),weekdaysMin:"Ýk_Dş_Sş_Çr_Pn_An_Şn".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[bugün sagat] LT",nextDay:"[ertir sagat] LT",nextWeek:"[indiki] dddd [sagat] LT",lastDay:"[düýn] LT",lastWeek:"[geçen] dddd [sagat] LT",sameElse:"L"},relativeTime:{future:"%s soň",past:"%s öň",s:"birnäçe sekunt",m:"bir minut",mm:"%d minut",h:"bir sagat",hh:"%d sagat",d:"bir gün",dd:"%d gün",M:"bir aý",MM:"%d aý",y:"bir ýyl",yy:"%d ýyl"},ordinal:function(t,r){switch(r){case"d":case"D":case"Do":case"DD":return t;default:if(0===t)return t+"'unjy";var n=t%10,i=t%100-n,s=t>=100?100:null;return t+(e[n]||e[i]||e[s])}},week:{dow:1,doy:7}})}(r(30381))},75768:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("tl-ph",{months:"Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split("_"),monthsShort:"Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),weekdays:"Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),weekdaysShort:"Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),weekdaysMin:"Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"MM/D/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY HH:mm",LLLL:"dddd, MMMM DD, YYYY HH:mm"},calendar:{sameDay:"LT [ngayong araw]",nextDay:"[Bukas ng] LT",nextWeek:"LT [sa susunod na] dddd",lastDay:"LT [kahapon]",lastWeek:"LT [noong nakaraang] dddd",sameElse:"L"},relativeTime:{future:"sa loob ng %s",past:"%s ang nakalipas",s:"ilang segundo",ss:"%d segundo",m:"isang minuto",mm:"%d minuto",h:"isang oras",hh:"%d oras",d:"isang araw",dd:"%d araw",M:"isang buwan",MM:"%d buwan",y:"isang taon",yy:"%d taon"},dayOfMonthOrdinalParse:/\d{1,2}/,ordinal:function(t){return t},week:{dow:1,doy:4}})}(r(30381))},89444:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e="pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut".split("_");function r(t){var e=t;return e=-1!==t.indexOf("jaj")?e.slice(0,-3)+"leS":-1!==t.indexOf("jar")?e.slice(0,-3)+"waQ":-1!==t.indexOf("DIS")?e.slice(0,-3)+"nem":e+" pIq"}function n(t){var e=t;return e=-1!==t.indexOf("jaj")?e.slice(0,-3)+"Hu’":-1!==t.indexOf("jar")?e.slice(0,-3)+"wen":-1!==t.indexOf("DIS")?e.slice(0,-3)+"ben":e+" ret"}function i(t,e,r,n){var i=s(t);switch(r){case"ss":return i+" lup";case"mm":return i+" tup";case"hh":return i+" rep";case"dd":return i+" jaj";case"MM":return i+" jar";case"yy":return i+" DIS"}}function s(t){var r=Math.floor(t%1e3/100),n=Math.floor(t%100/10),i=t%10,s="";return r>0&&(s+=e[r]+"vatlh"),n>0&&(s+=(""!==s?" ":"")+e[n]+"maH"),i>0&&(s+=(""!==s?" ":"")+e[i]),""===s?"pagh":s}t.defineLocale("tlh",{months:"tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’".split("_"),monthsShort:"jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’".split("_"),monthsParseExact:!0,weekdays:"lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),weekdaysShort:"lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),weekdaysMin:"lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[DaHjaj] LT",nextDay:"[wa’leS] LT",nextWeek:"LLL",lastDay:"[wa’Hu’] LT",lastWeek:"LLL",sameElse:"L"},relativeTime:{future:r,past:n,s:"puS lup",ss:i,m:"wa’ tup",mm:i,h:"wa’ rep",hh:i,d:"wa’ jaj",dd:i,M:"wa’ jar",MM:i,y:"wa’ DIS",yy:i},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},72397:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e={1:"'inci",5:"'inci",8:"'inci",70:"'inci",80:"'inci",2:"'nci",7:"'nci",20:"'nci",50:"'nci",3:"'üncü",4:"'üncü",100:"'üncü",6:"'ncı",9:"'uncu",10:"'uncu",30:"'uncu",60:"'ıncı",90:"'ıncı"};t.defineLocale("tr",{months:"Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık".split("_"),monthsShort:"Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara".split("_"),weekdays:"Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi".split("_"),weekdaysShort:"Paz_Pts_Sal_Çar_Per_Cum_Cts".split("_"),weekdaysMin:"Pz_Pt_Sa_Ça_Pe_Cu_Ct".split("_"),meridiem:function(t,e,r){return t<12?r?"öö":"ÖÖ":r?"ös":"ÖS"},meridiemParse:/öö|ÖÖ|ös|ÖS/,isPM:function(t){return"ös"===t||"ÖS"===t},longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[bugün saat] LT",nextDay:"[yarın saat] LT",nextWeek:"[gelecek] dddd [saat] LT",lastDay:"[dün] LT",lastWeek:"[geçen] dddd [saat] LT",sameElse:"L"},relativeTime:{future:"%s sonra",past:"%s önce",s:"birkaç saniye",ss:"%d saniye",m:"bir dakika",mm:"%d dakika",h:"bir saat",hh:"%d saat",d:"bir gün",dd:"%d gün",w:"bir hafta",ww:"%d hafta",M:"bir ay",MM:"%d ay",y:"bir yıl",yy:"%d yıl"},ordinal:function(t,r){switch(r){case"d":case"D":case"Do":case"DD":return t;default:if(0===t)return t+"'ıncı";var n=t%10,i=t%100-n,s=t>=100?100:null;return t+(e[n]||e[i]||e[s])}},week:{dow:1,doy:7}})}(r(30381))},28254:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e,r,n){var i={s:["viensas secunds","'iensas secunds"],ss:[t+" secunds",t+" secunds"],m:["'n míut","'iens míut"],mm:[t+" míuts",t+" míuts"],h:["'n þora","'iensa þora"],hh:[t+" þoras",t+" þoras"],d:["'n ziua","'iensa ziua"],dd:[t+" ziuas",t+" ziuas"],M:["'n mes","'iens mes"],MM:[t+" mesen",t+" mesen"],y:["'n ar","'iens ar"],yy:[t+" ars",t+" ars"]};return n||e?i[r][0]:i[r][1]}t.defineLocale("tzl",{months:"Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar".split("_"),monthsShort:"Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec".split("_"),weekdays:"Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi".split("_"),weekdaysShort:"Súl_Lún_Mai_Már_Xhú_Vié_Sát".split("_"),weekdaysMin:"Sú_Lú_Ma_Má_Xh_Vi_Sá".split("_"),longDateFormat:{LT:"HH.mm",LTS:"HH.mm.ss",L:"DD.MM.YYYY",LL:"D. MMMM [dallas] YYYY",LLL:"D. MMMM [dallas] YYYY HH.mm",LLLL:"dddd, [li] D. MMMM [dallas] YYYY HH.mm"},meridiemParse:/d\'o|d\'a/i,isPM:function(t){return"d'o"===t.toLowerCase()},meridiem:function(t,e,r){return t>11?r?"d'o":"D'O":r?"d'a":"D'A"},calendar:{sameDay:"[oxhi à] LT",nextDay:"[demà à] LT",nextWeek:"dddd [à] LT",lastDay:"[ieiri à] LT",lastWeek:"[sür el] dddd [lasteu à] LT",sameElse:"L"},relativeTime:{future:"osprei %s",past:"ja%s",s:e,ss:e,m:e,mm:e,h:e,hh:e,d:e,dd:e,M:e,MM:e,y:e,yy:e},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(r(30381))},30699:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("tzm-latn",{months:"innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),monthsShort:"innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),weekdays:"asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),weekdaysShort:"asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),weekdaysMin:"asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[asdkh g] LT",nextDay:"[aska g] LT",nextWeek:"dddd [g] LT",lastDay:"[assant g] LT",lastWeek:"dddd [g] LT",sameElse:"L"},relativeTime:{future:"dadkh s yan %s",past:"yan %s",s:"imik",ss:"%d imik",m:"minuḍ",mm:"%d minuḍ",h:"saɛa",hh:"%d tassaɛin",d:"ass",dd:"%d ossan",M:"ayowr",MM:"%d iyyirn",y:"asgas",yy:"%d isgasn"},week:{dow:6,doy:12}})}(r(30381))},51106:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("tzm",{months:"ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),monthsShort:"ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),weekdays:"ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),weekdaysShort:"ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),weekdaysMin:"ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[ⴰⵙⴷⵅ ⴴ] LT",nextDay:"[ⴰⵙⴽⴰ ⴴ] LT",nextWeek:"dddd [ⴴ] LT",lastDay:"[ⴰⵚⴰⵏⵜ ⴴ] LT",lastWeek:"dddd [ⴴ] LT",sameElse:"L"},relativeTime:{future:"ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s",past:"ⵢⴰⵏ %s",s:"ⵉⵎⵉⴽ",ss:"%d ⵉⵎⵉⴽ",m:"ⵎⵉⵏⵓⴺ",mm:"%d ⵎⵉⵏⵓⴺ",h:"ⵙⴰⵄⴰ",hh:"%d ⵜⴰⵙⵙⴰⵄⵉⵏ",d:"ⴰⵙⵙ",dd:"%d oⵙⵙⴰⵏ",M:"ⴰⵢoⵓⵔ",MM:"%d ⵉⵢⵢⵉⵔⵏ",y:"ⴰⵙⴳⴰⵙ",yy:"%d ⵉⵙⴳⴰⵙⵏ"},week:{dow:6,doy:12}})}(r(30381))},9288:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("ug-cn",{months:"يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر".split("_"),monthsShort:"يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر".split("_"),weekdays:"يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە".split("_"),weekdaysShort:"يە_دۈ_سە_چا_پە_جۈ_شە".split("_"),weekdaysMin:"يە_دۈ_سە_چا_پە_جۈ_شە".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY-MM-DD",LL:"YYYY-يىلىM-ئاينىڭD-كۈنى",LLL:"YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm",LLLL:"dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm"},meridiemParse:/يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,meridiemHour:function(t,e){return 12===t&&(t=0),"يېرىم كېچە"===e||"سەھەر"===e||"چۈشتىن بۇرۇن"===e?t:"چۈشتىن كېيىن"===e||"كەچ"===e?t+12:t>=11?t:t+12},meridiem:function(t,e,r){var n=100*t+e;return n<600?"يېرىم كېچە":n<900?"سەھەر":n<1130?"چۈشتىن بۇرۇن":n<1230?"چۈش":n<1800?"چۈشتىن كېيىن":"كەچ"},calendar:{sameDay:"[بۈگۈن سائەت] LT",nextDay:"[ئەتە سائەت] LT",nextWeek:"[كېلەركى] dddd [سائەت] LT",lastDay:"[تۆنۈگۈن] LT",lastWeek:"[ئالدىنقى] dddd [سائەت] LT",sameElse:"L"},relativeTime:{future:"%s كېيىن",past:"%s بۇرۇن",s:"نەچچە سېكونت",ss:"%d سېكونت",m:"بىر مىنۇت",mm:"%d مىنۇت",h:"بىر سائەت",hh:"%d سائەت",d:"بىر كۈن",dd:"%d كۈن",M:"بىر ئاي",MM:"%d ئاي",y:"بىر يىل",yy:"%d يىل"},dayOfMonthOrdinalParse:/\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,ordinal:function(t,e){switch(e){case"d":case"D":case"DDD":return t+"-كۈنى";case"w":case"W":return t+"-ھەپتە";default:return t}},preparse:function(t){return t.replace(/،/g,",")},postformat:function(t){return t.replace(/,/g,"،")},week:{dow:1,doy:7}})}(r(30381))},67691:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
function e(t,e){var r=t.split("_");return e%10==1&&e%100!=11?r[0]:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?r[1]:r[2]}function r(t,r,n){return"m"===n?r?"хвилина":"хвилину":"h"===n?r?"година":"годину":t+" "+e({ss:r?"секунда_секунди_секунд":"секунду_секунди_секунд",mm:r?"хвилина_хвилини_хвилин":"хвилину_хвилини_хвилин",hh:r?"година_години_годин":"годину_години_годин",dd:"день_дні_днів",MM:"місяць_місяці_місяців",yy:"рік_роки_років"}[n],+t)}function n(t,e){var r={nominative:"неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота".split("_"),accusative:"неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу".split("_"),genitive:"неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи".split("_")};return!0===t?r.nominative.slice(1,7).concat(r.nominative.slice(0,1)):t?r[/(\[[ВвУу]\]) ?dddd/.test(e)?"accusative":/\[?(?:минулої|наступної)? ?\] ?dddd/.test(e)?"genitive":"nominative"][t.day()]:r.nominative}function i(t){return function(){return t+"о"+(11===this.hours()?"б":"")+"] LT"}}t.defineLocale("uk",{months:{format:"січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня".split("_"),standalone:"січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень".split("_")},monthsShort:"січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд".split("_"),weekdays:n,weekdaysShort:"нд_пн_вт_ср_чт_пт_сб".split("_"),weekdaysMin:"нд_пн_вт_ср_чт_пт_сб".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY р.",LLL:"D MMMM YYYY р., HH:mm",LLLL:"dddd, D MMMM YYYY р., HH:mm"},calendar:{sameDay:i("[Сьогодні "),nextDay:i("[Завтра "),lastDay:i("[Вчора "),nextWeek:i("[У] dddd ["),lastWeek:function(){switch(this.day()){case 0:case 3:case 5:case 6:return i("[Минулої] dddd [").call(this);case 1:case 2:case 4:return i("[Минулого] dddd [").call(this)}},sameElse:"L"},relativeTime:{future:"за %s",past:"%s тому",s:"декілька секунд",ss:r,m:r,mm:r,h:"годину",hh:r,d:"день",dd:r,M:"місяць",MM:r,y:"рік",yy:r},meridiemParse:/ночі|ранку|дня|вечора/,isPM:function(t){return/^(дня|вечора)$/.test(t)},meridiem:function(t,e,r){return t<4?"ночі":t<12?"ранку":t<17?"дня":"вечора"},dayOfMonthOrdinalParse:/\d{1,2}-(й|го)/,ordinal:function(t,e){switch(e){case"M":case"d":case"DDD":case"w":case"W":return t+"-й";case"D":return t+"-го";default:return t}},week:{dow:1,doy:7}})}(r(30381))},13795:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
var e=["جنوری","فروری","مارچ","اپریل","مئی","جون","جولائی","اگست","ستمبر","اکتوبر","نومبر","دسمبر"],r=["اتوار","پیر","منگل","بدھ","جمعرات","جمعہ","ہفتہ"];t.defineLocale("ur",{months:e,monthsShort:e,weekdays:r,weekdaysShort:r,weekdaysMin:r,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd، D MMMM YYYY HH:mm"},meridiemParse:/صبح|شام/,isPM:function(t){return"شام"===t},meridiem:function(t,e,r){return t<12?"صبح":"شام"},calendar:{sameDay:"[آج بوقت] LT",nextDay:"[کل بوقت] LT",nextWeek:"dddd [بوقت] LT",lastDay:"[گذشتہ روز بوقت] LT",lastWeek:"[گذشتہ] dddd [بوقت] LT",sameElse:"L"},relativeTime:{future:"%s بعد",past:"%s قبل",s:"چند سیکنڈ",ss:"%d سیکنڈ",m:"ایک منٹ",mm:"%d منٹ",h:"ایک گھنٹہ",hh:"%d گھنٹے",d:"ایک دن",dd:"%d دن",M:"ایک ماہ",MM:"%d ماہ",y:"ایک سال",yy:"%d سال"},preparse:function(t){return t.replace(/،/g,",")},postformat:function(t){return t.replace(/,/g,"،")},week:{dow:1,doy:4}})}(r(30381))},60588:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("uz-latn",{months:"Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr".split("_"),monthsShort:"Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek".split("_"),weekdays:"Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba".split("_"),weekdaysShort:"Yak_Dush_Sesh_Chor_Pay_Jum_Shan".split("_"),weekdaysMin:"Ya_Du_Se_Cho_Pa_Ju_Sha".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"D MMMM YYYY, dddd HH:mm"},calendar:{sameDay:"[Bugun soat] LT [da]",nextDay:"[Ertaga] LT [da]",nextWeek:"dddd [kuni soat] LT [da]",lastDay:"[Kecha soat] LT [da]",lastWeek:"[O'tgan] dddd [kuni soat] LT [da]",sameElse:"L"},relativeTime:{future:"Yaqin %s ichida",past:"Bir necha %s oldin",s:"soniya",ss:"%d soniya",m:"bir daqiqa",mm:"%d daqiqa",h:"bir soat",hh:"%d soat",d:"bir kun",dd:"%d kun",M:"bir oy",MM:"%d oy",y:"bir yil",yy:"%d yil"},week:{dow:1,doy:7}})}(r(30381))},6791:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("uz",{months:"январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр".split("_"),monthsShort:"янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split("_"),weekdays:"Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба".split("_"),weekdaysShort:"Якш_Душ_Сеш_Чор_Пай_Жум_Шан".split("_"),weekdaysMin:"Як_Ду_Се_Чо_Па_Жу_Ша".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"D MMMM YYYY, dddd HH:mm"},calendar:{sameDay:"[Бугун соат] LT [да]",nextDay:"[Эртага] LT [да]",nextWeek:"dddd [куни соат] LT [да]",lastDay:"[Кеча соат] LT [да]",lastWeek:"[Утган] dddd [куни соат] LT [да]",sameElse:"L"},relativeTime:{future:"Якин %s ичида",past:"Бир неча %s олдин",s:"фурсат",ss:"%d фурсат",m:"бир дакика",mm:"%d дакика",h:"бир соат",hh:"%d соат",d:"бир кун",dd:"%d кун",M:"бир ой",MM:"%d ой",y:"бир йил",yy:"%d йил"},week:{dow:1,doy:7}})}(r(30381))},65666:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("vi",{months:"tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12".split("_"),monthsShort:"Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12".split("_"),monthsParseExact:!0,weekdays:"chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy".split("_"),weekdaysShort:"CN_T2_T3_T4_T5_T6_T7".split("_"),weekdaysMin:"CN_T2_T3_T4_T5_T6_T7".split("_"),weekdaysParseExact:!0,meridiemParse:/sa|ch/i,isPM:function(t){return/^ch$/i.test(t)},meridiem:function(t,e,r){return t<12?r?"sa":"SA":r?"ch":"CH"},longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM [năm] YYYY",LLL:"D MMMM [năm] YYYY HH:mm",LLLL:"dddd, D MMMM [năm] YYYY HH:mm",l:"DD/M/YYYY",ll:"D MMM YYYY",lll:"D MMM YYYY HH:mm",llll:"ddd, D MMM YYYY HH:mm"},calendar:{sameDay:"[Hôm nay lúc] LT",nextDay:"[Ngày mai lúc] LT",nextWeek:"dddd [tuần tới lúc] LT",lastDay:"[Hôm qua lúc] LT",lastWeek:"dddd [tuần trước lúc] LT",sameElse:"L"},relativeTime:{future:"%s tới",past:"%s trước",s:"vài giây",ss:"%d giây",m:"một phút",mm:"%d phút",h:"một giờ",hh:"%d giờ",d:"một ngày",dd:"%d ngày",w:"một tuần",ww:"%d tuần",M:"một tháng",MM:"%d tháng",y:"một năm",yy:"%d năm"},dayOfMonthOrdinalParse:/\d{1,2}/,ordinal:function(t){return t},week:{dow:1,doy:4}})}(r(30381))},14378:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("x-pseudo",{months:"J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér".split("_"),monthsShort:"J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc".split("_"),monthsParseExact:!0,weekdays:"S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý".split("_"),weekdaysShort:"S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát".split("_"),weekdaysMin:"S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[T~ódá~ý át] LT",nextDay:"[T~ómó~rró~w át] LT",nextWeek:"dddd [át] LT",lastDay:"[Ý~ést~érdá~ý át] LT",lastWeek:"[L~ást] dddd [át] LT",sameElse:"L"},relativeTime:{future:"í~ñ %s",past:"%s á~gó",s:"á ~féw ~sécó~ñds",ss:"%d s~écóñ~ds",m:"á ~míñ~úté",mm:"%d m~íñú~tés",h:"á~ñ hó~úr",hh:"%d h~óúrs",d:"á ~dáý",dd:"%d d~áýs",M:"á ~móñ~th",MM:"%d m~óñt~hs",y:"á ~ýéár",yy:"%d ý~éárs"},dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(t){var e=t%10;return t+(1==~~(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th")},week:{dow:1,doy:4}})}(r(30381))},75805:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("yo",{months:"Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀".split("_"),monthsShort:"Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀".split("_"),weekdays:"Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta".split("_"),weekdaysShort:"Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá".split("_"),weekdaysMin:"Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb".split("_"),longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY h:mm A",LLLL:"dddd, D MMMM YYYY h:mm A"},calendar:{sameDay:"[Ònì ni] LT",nextDay:"[Ọ̀la ni] LT",nextWeek:"dddd [Ọsẹ̀ tón'bọ] [ni] LT",lastDay:"[Àna ni] LT",lastWeek:"dddd [Ọsẹ̀ tólọ́] [ni] LT",sameElse:"L"},relativeTime:{future:"ní %s",past:"%s kọjá",s:"ìsẹjú aayá die",ss:"aayá %d",m:"ìsẹjú kan",mm:"ìsẹjú %d",h:"wákati kan",hh:"wákati %d",d:"ọjọ́ kan",dd:"ọjọ́ %d",M:"osù kan",MM:"osù %d",y:"ọdún kan",yy:"ọdún %d"},dayOfMonthOrdinalParse:/ọjọ́\s\d{1,2}/,ordinal:"ọjọ́ %d",week:{dow:1,doy:4}})}(r(30381))},83839:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("zh-cn",{months:"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),monthsShort:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),weekdays:"星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),weekdaysShort:"周日_周一_周二_周三_周四_周五_周六".split("_"),weekdaysMin:"日_一_二_三_四_五_六".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY/MM/DD",LL:"YYYY年M月D日",LLL:"YYYY年M月D日Ah点mm分",LLLL:"YYYY年M月D日ddddAh点mm分",l:"YYYY/M/D",ll:"YYYY年M月D日",lll:"YYYY年M月D日 HH:mm",llll:"YYYY年M月D日dddd HH:mm"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(t,e){return 12===t&&(t=0),"凌晨"===e||"早上"===e||"上午"===e?t:"下午"===e||"晚上"===e?t+12:t>=11?t:t+12},meridiem:function(t,e,r){var n=100*t+e;return n<600?"凌晨":n<900?"早上":n<1130?"上午":n<1230?"中午":n<1800?"下午":"晚上"},calendar:{sameDay:"[今天]LT",nextDay:"[明天]LT",nextWeek:function(t){return t.week()!==this.week()?"[下]dddLT":"[本]dddLT"},lastDay:"[昨天]LT",lastWeek:function(t){return this.week()!==t.week()?"[上]dddLT":"[本]dddLT"},sameElse:"L"},dayOfMonthOrdinalParse:/\d{1,2}(日|月|周)/,ordinal:function(t,e){switch(e){case"d":case"D":case"DDD":return t+"日";case"M":return t+"月";case"w":case"W":return t+"周";default:return t}},relativeTime:{future:"%s后",past:"%s前",s:"几秒",ss:"%d 秒",m:"1 分钟",mm:"%d 分钟",h:"1 小时",hh:"%d 小时",d:"1 天",dd:"%d 天",w:"1 周",ww:"%d 周",M:"1 个月",MM:"%d 个月",y:"1 年",yy:"%d 年"},week:{dow:1,doy:4}})}(r(30381))},55726:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("zh-hk",{months:"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),monthsShort:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),weekdays:"星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),weekdaysShort:"週日_週一_週二_週三_週四_週五_週六".split("_"),weekdaysMin:"日_一_二_三_四_五_六".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY/MM/DD",LL:"YYYY年M月D日",LLL:"YYYY年M月D日 HH:mm",LLLL:"YYYY年M月D日dddd HH:mm",l:"YYYY/M/D",ll:"YYYY年M月D日",lll:"YYYY年M月D日 HH:mm",llll:"YYYY年M月D日dddd HH:mm"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(t,e){return 12===t&&(t=0),"凌晨"===e||"早上"===e||"上午"===e?t:"中午"===e?t>=11?t:t+12:"下午"===e||"晚上"===e?t+12:void 0},meridiem:function(t,e,r){var n=100*t+e;return n<600?"凌晨":n<900?"早上":n<1200?"上午":1200===n?"中午":n<1800?"下午":"晚上"},calendar:{sameDay:"[今天]LT",nextDay:"[明天]LT",nextWeek:"[下]ddddLT",lastDay:"[昨天]LT",lastWeek:"[上]ddddLT",sameElse:"L"},dayOfMonthOrdinalParse:/\d{1,2}(日|月|週)/,ordinal:function(t,e){switch(e){case"d":case"D":case"DDD":return t+"日";case"M":return t+"月";case"w":case"W":return t+"週";default:return t}},relativeTime:{future:"%s後",past:"%s前",s:"幾秒",ss:"%d 秒",m:"1 分鐘",mm:"%d 分鐘",h:"1 小時",hh:"%d 小時",d:"1 天",dd:"%d 天",M:"1 個月",MM:"%d 個月",y:"1 年",yy:"%d 年"}})}(r(30381))},99807:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("zh-mo",{months:"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),monthsShort:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),weekdays:"星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),weekdaysShort:"週日_週一_週二_週三_週四_週五_週六".split("_"),weekdaysMin:"日_一_二_三_四_五_六".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"YYYY年M月D日",LLL:"YYYY年M月D日 HH:mm",LLLL:"YYYY年M月D日dddd HH:mm",l:"D/M/YYYY",ll:"YYYY年M月D日",lll:"YYYY年M月D日 HH:mm",llll:"YYYY年M月D日dddd HH:mm"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(t,e){return 12===t&&(t=0),"凌晨"===e||"早上"===e||"上午"===e?t:"中午"===e?t>=11?t:t+12:"下午"===e||"晚上"===e?t+12:void 0},meridiem:function(t,e,r){var n=100*t+e;return n<600?"凌晨":n<900?"早上":n<1130?"上午":n<1230?"中午":n<1800?"下午":"晚上"},calendar:{sameDay:"[今天] LT",nextDay:"[明天] LT",nextWeek:"[下]dddd LT",lastDay:"[昨天] LT",lastWeek:"[上]dddd LT",sameElse:"L"},dayOfMonthOrdinalParse:/\d{1,2}(日|月|週)/,ordinal:function(t,e){switch(e){case"d":case"D":case"DDD":return t+"日";case"M":return t+"月";case"w":case"W":return t+"週";default:return t}},relativeTime:{future:"%s內",past:"%s前",s:"幾秒",ss:"%d 秒",m:"1 分鐘",mm:"%d 分鐘",h:"1 小時",hh:"%d 小時",d:"1 天",dd:"%d 天",M:"1 個月",MM:"%d 個月",y:"1 年",yy:"%d 年"}})}(r(30381))},74152:function(t,e,r){!function(t){"use strict";
//! moment.js locale configuration
t.defineLocale("zh-tw",{months:"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),monthsShort:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),weekdays:"星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),weekdaysShort:"週日_週一_週二_週三_週四_週五_週六".split("_"),weekdaysMin:"日_一_二_三_四_五_六".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY/MM/DD",LL:"YYYY年M月D日",LLL:"YYYY年M月D日 HH:mm",LLLL:"YYYY年M月D日dddd HH:mm",l:"YYYY/M/D",ll:"YYYY年M月D日",lll:"YYYY年M月D日 HH:mm",llll:"YYYY年M月D日dddd HH:mm"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(t,e){return 12===t&&(t=0),"凌晨"===e||"早上"===e||"上午"===e?t:"中午"===e?t>=11?t:t+12:"下午"===e||"晚上"===e?t+12:void 0},meridiem:function(t,e,r){var n=100*t+e;return n<600?"凌晨":n<900?"早上":n<1130?"上午":n<1230?"中午":n<1800?"下午":"晚上"},calendar:{sameDay:"[今天] LT",nextDay:"[明天] LT",nextWeek:"[下]dddd LT",lastDay:"[昨天] LT",lastWeek:"[上]dddd LT",sameElse:"L"},dayOfMonthOrdinalParse:/\d{1,2}(日|月|週)/,ordinal:function(t,e){switch(e){case"d":case"D":case"DDD":return t+"日";case"M":return t+"月";case"w":case"W":return t+"週";default:return t}},relativeTime:{future:"%s後",past:"%s前",s:"幾秒",ss:"%d 秒",m:"1 分鐘",mm:"%d 分鐘",h:"1 小時",hh:"%d 小時",d:"1 天",dd:"%d 天",M:"1 個月",MM:"%d 個月",y:"1 年",yy:"%d 年"}})}(r(30381))},46700:(t,e,r)=>{var n={"./af":42786,"./af.js":42786,"./ar":30867,"./ar-dz":14130,"./ar-dz.js":14130,"./ar-kw":96135,"./ar-kw.js":96135,"./ar-ly":56440,"./ar-ly.js":56440,"./ar-ma":47702,"./ar-ma.js":47702,"./ar-sa":16040,"./ar-sa.js":16040,"./ar-tn":37100,"./ar-tn.js":37100,"./ar.js":30867,"./az":31083,"./az.js":31083,"./be":9808,"./be.js":9808,"./bg":68338,"./bg.js":68338,"./bm":67438,"./bm.js":67438,"./bn":8905,"./bn-bd":76225,"./bn-bd.js":76225,"./bn.js":8905,"./bo":11560,"./bo.js":11560,"./br":1278,"./br.js":1278,"./bs":80622,"./bs.js":80622,"./ca":2468,"./ca.js":2468,"./cs":5822,"./cs.js":5822,"./cv":50877,"./cv.js":50877,"./cy":47373,"./cy.js":47373,"./da":24780,"./da.js":24780,"./de":59740,"./de-at":60217,"./de-at.js":60217,"./de-ch":60894,"./de-ch.js":60894,"./de.js":59740,"./dv":5300,"./dv.js":5300,"./el":50837,"./el.js":50837,"./en-au":78348,"./en-au.js":78348,"./en-ca":77925,"./en-ca.js":77925,"./en-gb":22243,"./en-gb.js":22243,"./en-ie":46436,"./en-ie.js":46436,"./en-il":47207,"./en-il.js":47207,"./en-in":44175,"./en-in.js":44175,"./en-nz":76319,"./en-nz.js":76319,"./en-sg":31662,"./en-sg.js":31662,"./eo":92915,"./eo.js":92915,"./es":55655,"./es-do":55251,"./es-do.js":55251,"./es-mx":96112,"./es-mx.js":96112,"./es-us":71146,"./es-us.js":71146,"./es.js":55655,"./et":5603,"./et.js":5603,"./eu":77763,"./eu.js":77763,"./fa":76959,"./fa.js":76959,"./fi":11897,"./fi.js":11897,"./fil":42549,"./fil.js":42549,"./fo":94694,"./fo.js":94694,"./fr":94470,"./fr-ca":63049,"./fr-ca.js":63049,"./fr-ch":52330,"./fr-ch.js":52330,"./fr.js":94470,"./fy":5044,"./fy.js":5044,"./ga":29295,"./ga.js":29295,"./gd":2101,"./gd.js":2101,"./gl":38794,"./gl.js":38794,"./gom-deva":27884,"./gom-deva.js":27884,"./gom-latn":23168,"./gom-latn.js":23168,"./gu":95349,"./gu.js":95349,"./he":24206,"./he.js":24206,"./hi":30094,"./hi.js":30094,"./hr":30316,"./hr.js":30316,"./hu":22138,"./hu.js":22138,"./hy-am":11423,"./hy-am.js":11423,"./id":29218,"./id.js":29218,"./is":90135,"./is.js":90135,"./it":90626,"./it-ch":10150,"./it-ch.js":10150,"./it.js":90626,"./ja":39183,"./ja.js":39183,"./jv":24286,"./jv.js":24286,"./ka":12105,"./ka.js":12105,"./kk":47772,"./kk.js":47772,"./km":18758,"./km.js":18758,"./kn":79282,"./kn.js":79282,"./ko":33730,"./ko.js":33730,"./ku":1408,"./ku.js":1408,"./ky":33291,"./ky.js":33291,"./lb":36841,"./lb.js":36841,"./lo":55466,"./lo.js":55466,"./lt":57010,"./lt.js":57010,"./lv":37595,"./lv.js":37595,"./me":39861,"./me.js":39861,"./mi":35493,"./mi.js":35493,"./mk":95966,"./mk.js":95966,"./ml":87341,"./ml.js":87341,"./mn":5115,"./mn.js":5115,"./mr":10370,"./mr.js":10370,"./ms":9847,"./ms-my":41237,"./ms-my.js":41237,"./ms.js":9847,"./mt":72126,"./mt.js":72126,"./my":56165,"./my.js":56165,"./nb":64924,"./nb.js":64924,"./ne":16744,"./ne.js":16744,"./nl":93901,"./nl-be":59814,"./nl-be.js":59814,"./nl.js":93901,"./nn":83877,"./nn.js":83877,"./oc-lnc":92135,"./oc-lnc.js":92135,"./pa-in":15858,"./pa-in.js":15858,"./pl":64495,"./pl.js":64495,"./pt":89520,"./pt-br":57971,"./pt-br.js":57971,"./pt.js":89520,"./ro":96459,"./ro.js":96459,"./ru":21793,"./ru.js":21793,"./sd":40950,"./sd.js":40950,"./se":10490,"./se.js":10490,"./si":90124,"./si.js":90124,"./sk":64249,"./sk.js":64249,"./sl":14985,"./sl.js":14985,"./sq":51104,"./sq.js":51104,"./sr":49131,"./sr-cyrl":79915,"./sr-cyrl.js":79915,"./sr.js":49131,"./ss":95606,"./ss.js":95606,"./sv":98760,"./sv.js":98760,"./sw":91172,"./sw.js":91172,"./ta":27333,"./ta.js":27333,"./te":23110,"./te.js":23110,"./tet":52095,"./tet.js":52095,"./tg":27321,"./tg.js":27321,"./th":9041,"./th.js":9041,"./tk":19005,"./tk.js":19005,"./tl-ph":75768,"./tl-ph.js":75768,"./tlh":89444,"./tlh.js":89444,"./tr":72397,"./tr.js":72397,"./tzl":28254,"./tzl.js":28254,"./tzm":51106,"./tzm-latn":30699,"./tzm-latn.js":30699,"./tzm.js":51106,"./ug-cn":9288,"./ug-cn.js":9288,"./uk":67691,"./uk.js":67691,"./ur":13795,"./ur.js":13795,"./uz":6791,"./uz-latn":60588,"./uz-latn.js":60588,"./uz.js":6791,"./vi":65666,"./vi.js":65666,"./x-pseudo":14378,"./x-pseudo.js":14378,"./yo":75805,"./yo.js":75805,"./zh-cn":83839,"./zh-cn.js":83839,"./zh-hk":55726,"./zh-hk.js":55726,"./zh-mo":99807,"./zh-mo.js":99807,"./zh-tw":74152,"./zh-tw.js":74152};function i(t){var e=s(t);return r(e)}function s(t){if(!r.o(n,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return n[t]}i.keys=function(){return Object.keys(n)},i.resolve=s,t.exports=i,i.id=46700},30381:function(t,e,r){(t=r.nmd(t)).exports=function(){"use strict";var e,n;function i(){return e.apply(null,arguments)}function s(t){e=t}function o(t){return t instanceof Array||"[object Array]"===Object.prototype.toString.call(t)}function a(t){return null!=t&&"[object Object]"===Object.prototype.toString.call(t)}function u(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function h(t){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(t).length;var e;for(e in t)if(u(t,e))return!1;return!0}function c(t){return void 0===t}function l(t){return"number"==typeof t||"[object Number]"===Object.prototype.toString.call(t)}function d(t){return t instanceof Date||"[object Date]"===Object.prototype.toString.call(t)}function f(t,e){var r,n=[];for(r=0;r<t.length;++r)n.push(e(t[r],r));return n}function p(t,e){for(var r in e)u(e,r)&&(t[r]=e[r]);return u(e,"toString")&&(t.toString=e.toString),u(e,"valueOf")&&(t.valueOf=e.valueOf),t}function m(t,e,r,n){return Ur(t,e,r,n,!0).utc()}function y(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidEra:null,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],era:null,meridiem:null,rfc2822:!1,weekdayMismatch:!1}}function v(t){return null==t._pf&&(t._pf=y()),t._pf}function g(t){if(null==t._isValid){var e=v(t),r=n.call(e.parsedDateParts,(function(t){return null!=t})),i=!isNaN(t._d.getTime())&&e.overflow<0&&!e.empty&&!e.invalidEra&&!e.invalidMonth&&!e.invalidWeekday&&!e.weekdayMismatch&&!e.nullInput&&!e.invalidFormat&&!e.userInvalidated&&(!e.meridiem||e.meridiem&&r);if(t._strict&&(i=i&&0===e.charsLeftOver&&0===e.unusedTokens.length&&void 0===e.bigHour),null!=Object.isFrozen&&Object.isFrozen(t))return i;t._isValid=i}return t._isValid}function b(t){var e=m(NaN);return null!=t?p(v(e),t):v(e).userInvalidated=!0,e}n=Array.prototype.some?Array.prototype.some:function(t){var e,r=Object(this),n=r.length>>>0;for(e=0;e<n;e++)if(e in r&&t.call(this,r[e],e,r))return!0;return!1};var w=i.momentProperties=[],M=!1;function k(t,e){var r,n,i;if(c(e._isAMomentObject)||(t._isAMomentObject=e._isAMomentObject),c(e._i)||(t._i=e._i),c(e._f)||(t._f=e._f),c(e._l)||(t._l=e._l),c(e._strict)||(t._strict=e._strict),c(e._tzm)||(t._tzm=e._tzm),c(e._isUTC)||(t._isUTC=e._isUTC),c(e._offset)||(t._offset=e._offset),c(e._pf)||(t._pf=v(e)),c(e._locale)||(t._locale=e._locale),w.length>0)for(r=0;r<w.length;r++)c(i=e[n=w[r]])||(t[n]=i);return t}function x(t){k(this,t),this._d=new Date(null!=t._d?t._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===M&&(M=!0,i.updateOffset(this),M=!1)}function P(t){return t instanceof x||null!=t&&null!=t._isAMomentObject}function L(t){!1===i.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+t)}function T(t,e){var r=!0;return p((function(){if(null!=i.deprecationHandler&&i.deprecationHandler(null,t),r){var n,s,o,a=[];for(s=0;s<arguments.length;s++){if(n="","object"==typeof arguments[s]){for(o in n+="\n["+s+"] ",arguments[0])u(arguments[0],o)&&(n+=o+": "+arguments[0][o]+", ");n=n.slice(0,-2)}else n=arguments[s];a.push(n)}L(t+"\nArguments: "+Array.prototype.slice.call(a).join("")+"\n"+(new Error).stack),r=!1}return e.apply(this,arguments)}),e)}var S,A={};function D(t,e){null!=i.deprecationHandler&&i.deprecationHandler(t,e),A[t]||(L(e),A[t]=!0)}function j(t){return"undefined"!=typeof Function&&t instanceof Function||"[object Function]"===Object.prototype.toString.call(t)}function H(t){var e,r;for(r in t)u(t,r)&&(j(e=t[r])?this[r]=e:this["_"+r]=e);this._config=t,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)}function O(t,e){var r,n=p({},t);for(r in e)u(e,r)&&(a(t[r])&&a(e[r])?(n[r]={},p(n[r],t[r]),p(n[r],e[r])):null!=e[r]?n[r]=e[r]:delete n[r]);for(r in t)u(t,r)&&!u(e,r)&&a(t[r])&&(n[r]=p({},n[r]));return n}function z(t){null!=t&&this.set(t)}i.suppressDeprecationWarnings=!1,i.deprecationHandler=null,S=Object.keys?Object.keys:function(t){var e,r=[];for(e in t)u(t,e)&&r.push(e);return r};var N={sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"};function E(t,e,r){var n=this._calendar[t]||this._calendar.sameElse;return j(n)?n.call(e,r):n}function Y(t,e,r){var n=""+Math.abs(t),i=e-n.length;return(t>=0?r?"+":"":"-")+Math.pow(10,Math.max(0,i)).toString().substr(1)+n}var R=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,I=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,B={},X={};function V(t,e,r,n){var i=n;"string"==typeof n&&(i=function(){return this[n]()}),t&&(X[t]=i),e&&(X[e[0]]=function(){return Y(i.apply(this,arguments),e[1],e[2])}),r&&(X[r]=function(){return this.localeData().ordinal(i.apply(this,arguments),t)})}function C(t){return t.match(/\[[\s\S]/)?t.replace(/^\[|\]$/g,""):t.replace(/\\/g,"")}function W(t){var e,r,n=t.match(R);for(e=0,r=n.length;e<r;e++)X[n[e]]?n[e]=X[n[e]]:n[e]=C(n[e]);return function(e){var i,s="";for(i=0;i<r;i++)s+=j(n[i])?n[i].call(e,t):n[i];return s}}function q(t,e){return t.isValid()?(e=Z(e,t.localeData()),B[e]=B[e]||W(e),B[e](t)):t.localeData().invalidDate()}function Z(t,e){var r=5;function n(t){return e.longDateFormat(t)||t}for(I.lastIndex=0;r>=0&&I.test(t);)t=t.replace(I,n),I.lastIndex=0,r-=1;return t}var F={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"};function U(t){var e=this._longDateFormat[t],r=this._longDateFormat[t.toUpperCase()];return e||!r?e:(this._longDateFormat[t]=r.match(R).map((function(t){return"MMMM"===t||"MM"===t||"DD"===t||"dddd"===t?t.slice(1):t})).join(""),this._longDateFormat[t])}var G="Invalid date";function _(){return this._invalidDate}var K="%d",J=/\d{1,2}/;function Q(t){return this._ordinal.replace("%d",t)}var $={future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",w:"a week",ww:"%d weeks",M:"a month",MM:"%d months",y:"a year",yy:"%d years"};function tt(t,e,r,n){var i=this._relativeTime[r];return j(i)?i(t,e,r,n):i.replace(/%d/i,t)}function et(t,e){var r=this._relativeTime[t>0?"future":"past"];return j(r)?r(e):r.replace(/%s/i,e)}var rt={};function nt(t,e){var r=t.toLowerCase();rt[r]=rt[r+"s"]=rt[e]=t}function it(t){return"string"==typeof t?rt[t]||rt[t.toLowerCase()]:void 0}function st(t){var e,r,n={};for(r in t)u(t,r)&&(e=it(r))&&(n[e]=t[r]);return n}var ot={};function at(t,e){ot[t]=e}function ut(t){var e,r=[];for(e in t)u(t,e)&&r.push({unit:e,priority:ot[e]});return r.sort((function(t,e){return t.priority-e.priority})),r}function ht(t){return t%4==0&&t%100!=0||t%400==0}function ct(t){return t<0?Math.ceil(t)||0:Math.floor(t)}function lt(t){var e=+t,r=0;return 0!==e&&isFinite(e)&&(r=ct(e)),r}function dt(t,e){return function(r){return null!=r?(pt(this,t,r),i.updateOffset(this,e),this):ft(this,t)}}function ft(t,e){return t.isValid()?t._d["get"+(t._isUTC?"UTC":"")+e]():NaN}function pt(t,e,r){t.isValid()&&!isNaN(r)&&("FullYear"===e&&ht(t.year())&&1===t.month()&&29===t.date()?(r=lt(r),t._d["set"+(t._isUTC?"UTC":"")+e](r,t.month(),te(r,t.month()))):t._d["set"+(t._isUTC?"UTC":"")+e](r))}function mt(t){return j(this[t=it(t)])?this[t]():this}function yt(t,e){if("object"==typeof t){var r,n=ut(t=st(t));for(r=0;r<n.length;r++)this[n[r].unit](t[n[r].unit])}else if(j(this[t=it(t)]))return this[t](e);return this}var vt,gt=/\d/,bt=/\d\d/,wt=/\d{3}/,Mt=/\d{4}/,kt=/[+-]?\d{6}/,xt=/\d\d?/,Pt=/\d\d\d\d?/,Lt=/\d\d\d\d\d\d?/,Tt=/\d{1,3}/,St=/\d{1,4}/,At=/[+-]?\d{1,6}/,Dt=/\d+/,jt=/[+-]?\d+/,Ht=/Z|[+-]\d\d:?\d\d/gi,Ot=/Z|[+-]\d\d(?::?\d\d)?/gi,zt=/[+-]?\d+(\.\d{1,3})?/,Nt=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;function Et(t,e,r){vt[t]=j(e)?e:function(t,n){return t&&r?r:e}}function Yt(t,e){return u(vt,t)?vt[t](e._strict,e._locale):new RegExp(Rt(t))}function Rt(t){return It(t.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,(function(t,e,r,n,i){return e||r||n||i})))}function It(t){return t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}vt={};var Bt={};function Xt(t,e){var r,n=e;for("string"==typeof t&&(t=[t]),l(e)&&(n=function(t,r){r[e]=lt(t)}),r=0;r<t.length;r++)Bt[t[r]]=n}function Vt(t,e){Xt(t,(function(t,r,n,i){n._w=n._w||{},e(t,n._w,n,i)}))}function Ct(t,e,r){null!=e&&u(Bt,t)&&Bt[t](e,r._a,r,t)}var Wt,qt=0,Zt=1,Ft=2,Ut=3,Gt=4,_t=5,Kt=6,Jt=7,Qt=8;function $t(t,e){return(t%e+e)%e}function te(t,e){if(isNaN(t)||isNaN(e))return NaN;var r=$t(e,12);return t+=(e-r)/12,1===r?ht(t)?29:28:31-r%7%2}Wt=Array.prototype.indexOf?Array.prototype.indexOf:function(t){var e;for(e=0;e<this.length;++e)if(this[e]===t)return e;return-1},V("M",["MM",2],"Mo",(function(){return this.month()+1})),V("MMM",0,0,(function(t){return this.localeData().monthsShort(this,t)})),V("MMMM",0,0,(function(t){return this.localeData().months(this,t)})),nt("month","M"),at("month",8),Et("M",xt),Et("MM",xt,bt),Et("MMM",(function(t,e){return e.monthsShortRegex(t)})),Et("MMMM",(function(t,e){return e.monthsRegex(t)})),Xt(["M","MM"],(function(t,e){e[Zt]=lt(t)-1})),Xt(["MMM","MMMM"],(function(t,e,r,n){var i=r._locale.monthsParse(t,n,r._strict);null!=i?e[Zt]=i:v(r).invalidMonth=t}));var ee="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),re="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),ne=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,ie=Nt,se=Nt;function oe(t,e){return t?o(this._months)?this._months[t.month()]:this._months[(this._months.isFormat||ne).test(e)?"format":"standalone"][t.month()]:o(this._months)?this._months:this._months.standalone}function ae(t,e){return t?o(this._monthsShort)?this._monthsShort[t.month()]:this._monthsShort[ne.test(e)?"format":"standalone"][t.month()]:o(this._monthsShort)?this._monthsShort:this._monthsShort.standalone}function ue(t,e,r){var n,i,s,o=t.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],n=0;n<12;++n)s=m([2e3,n]),this._shortMonthsParse[n]=this.monthsShort(s,"").toLocaleLowerCase(),this._longMonthsParse[n]=this.months(s,"").toLocaleLowerCase();return r?"MMM"===e?-1!==(i=Wt.call(this._shortMonthsParse,o))?i:null:-1!==(i=Wt.call(this._longMonthsParse,o))?i:null:"MMM"===e?-1!==(i=Wt.call(this._shortMonthsParse,o))||-1!==(i=Wt.call(this._longMonthsParse,o))?i:null:-1!==(i=Wt.call(this._longMonthsParse,o))||-1!==(i=Wt.call(this._shortMonthsParse,o))?i:null}function he(t,e,r){var n,i,s;if(this._monthsParseExact)return ue.call(this,t,e,r);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),n=0;n<12;n++){if(i=m([2e3,n]),r&&!this._longMonthsParse[n]&&(this._longMonthsParse[n]=new RegExp("^"+this.months(i,"").replace(".","")+"$","i"),this._shortMonthsParse[n]=new RegExp("^"+this.monthsShort(i,"").replace(".","")+"$","i")),r||this._monthsParse[n]||(s="^"+this.months(i,"")+"|^"+this.monthsShort(i,""),this._monthsParse[n]=new RegExp(s.replace(".",""),"i")),r&&"MMMM"===e&&this._longMonthsParse[n].test(t))return n;if(r&&"MMM"===e&&this._shortMonthsParse[n].test(t))return n;if(!r&&this._monthsParse[n].test(t))return n}}function ce(t,e){var r;if(!t.isValid())return t;if("string"==typeof e)if(/^\d+$/.test(e))e=lt(e);else if(!l(e=t.localeData().monthsParse(e)))return t;return r=Math.min(t.date(),te(t.year(),e)),t._d["set"+(t._isUTC?"UTC":"")+"Month"](e,r),t}function le(t){return null!=t?(ce(this,t),i.updateOffset(this,!0),this):ft(this,"Month")}function de(){return te(this.year(),this.month())}function fe(t){return this._monthsParseExact?(u(this,"_monthsRegex")||me.call(this),t?this._monthsShortStrictRegex:this._monthsShortRegex):(u(this,"_monthsShortRegex")||(this._monthsShortRegex=ie),this._monthsShortStrictRegex&&t?this._monthsShortStrictRegex:this._monthsShortRegex)}function pe(t){return this._monthsParseExact?(u(this,"_monthsRegex")||me.call(this),t?this._monthsStrictRegex:this._monthsRegex):(u(this,"_monthsRegex")||(this._monthsRegex=se),this._monthsStrictRegex&&t?this._monthsStrictRegex:this._monthsRegex)}function me(){function t(t,e){return e.length-t.length}var e,r,n=[],i=[],s=[];for(e=0;e<12;e++)r=m([2e3,e]),n.push(this.monthsShort(r,"")),i.push(this.months(r,"")),s.push(this.months(r,"")),s.push(this.monthsShort(r,""));for(n.sort(t),i.sort(t),s.sort(t),e=0;e<12;e++)n[e]=It(n[e]),i[e]=It(i[e]);for(e=0;e<24;e++)s[e]=It(s[e]);this._monthsRegex=new RegExp("^("+s.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+i.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+n.join("|")+")","i")}function ye(t){return ht(t)?366:365}V("Y",0,0,(function(){var t=this.year();return t<=9999?Y(t,4):"+"+t})),V(0,["YY",2],0,(function(){return this.year()%100})),V(0,["YYYY",4],0,"year"),V(0,["YYYYY",5],0,"year"),V(0,["YYYYYY",6,!0],0,"year"),nt("year","y"),at("year",1),Et("Y",jt),Et("YY",xt,bt),Et("YYYY",St,Mt),Et("YYYYY",At,kt),Et("YYYYYY",At,kt),Xt(["YYYYY","YYYYYY"],qt),Xt("YYYY",(function(t,e){e[qt]=2===t.length?i.parseTwoDigitYear(t):lt(t)})),Xt("YY",(function(t,e){e[qt]=i.parseTwoDigitYear(t)})),Xt("Y",(function(t,e){e[qt]=parseInt(t,10)})),i.parseTwoDigitYear=function(t){return lt(t)+(lt(t)>68?1900:2e3)};var ve=dt("FullYear",!0);function ge(){return ht(this.year())}function be(t,e,r,n,i,s,o){var a;return t<100&&t>=0?(a=new Date(t+400,e,r,n,i,s,o),isFinite(a.getFullYear())&&a.setFullYear(t)):a=new Date(t,e,r,n,i,s,o),a}function we(t){var e,r;return t<100&&t>=0?((r=Array.prototype.slice.call(arguments))[0]=t+400,e=new Date(Date.UTC.apply(null,r)),isFinite(e.getUTCFullYear())&&e.setUTCFullYear(t)):e=new Date(Date.UTC.apply(null,arguments)),e}function Me(t,e,r){var n=7+e-r;return-(7+we(t,0,n).getUTCDay()-e)%7+n-1}function ke(t,e,r,n,i){var s,o,a=1+7*(e-1)+(7+r-n)%7+Me(t,n,i);return a<=0?o=ye(s=t-1)+a:a>ye(t)?(s=t+1,o=a-ye(t)):(s=t,o=a),{year:s,dayOfYear:o}}function xe(t,e,r){var n,i,s=Me(t.year(),e,r),o=Math.floor((t.dayOfYear()-s-1)/7)+1;return o<1?n=o+Pe(i=t.year()-1,e,r):o>Pe(t.year(),e,r)?(n=o-Pe(t.year(),e,r),i=t.year()+1):(i=t.year(),n=o),{week:n,year:i}}function Pe(t,e,r){var n=Me(t,e,r),i=Me(t+1,e,r);return(ye(t)-n+i)/7}function Le(t){return xe(t,this._week.dow,this._week.doy).week}V("w",["ww",2],"wo","week"),V("W",["WW",2],"Wo","isoWeek"),nt("week","w"),nt("isoWeek","W"),at("week",5),at("isoWeek",5),Et("w",xt),Et("ww",xt,bt),Et("W",xt),Et("WW",xt,bt),Vt(["w","ww","W","WW"],(function(t,e,r,n){e[n.substr(0,1)]=lt(t)}));var Te={dow:0,doy:6};function Se(){return this._week.dow}function Ae(){return this._week.doy}function De(t){var e=this.localeData().week(this);return null==t?e:this.add(7*(t-e),"d")}function je(t){var e=xe(this,1,4).week;return null==t?e:this.add(7*(t-e),"d")}function He(t,e){return"string"!=typeof t?t:isNaN(t)?"number"==typeof(t=e.weekdaysParse(t))?t:null:parseInt(t,10)}function Oe(t,e){return"string"==typeof t?e.weekdaysParse(t)%7||7:isNaN(t)?null:t}function ze(t,e){return t.slice(e,7).concat(t.slice(0,e))}V("d",0,"do","day"),V("dd",0,0,(function(t){return this.localeData().weekdaysMin(this,t)})),V("ddd",0,0,(function(t){return this.localeData().weekdaysShort(this,t)})),V("dddd",0,0,(function(t){return this.localeData().weekdays(this,t)})),V("e",0,0,"weekday"),V("E",0,0,"isoWeekday"),nt("day","d"),nt("weekday","e"),nt("isoWeekday","E"),at("day",11),at("weekday",11),at("isoWeekday",11),Et("d",xt),Et("e",xt),Et("E",xt),Et("dd",(function(t,e){return e.weekdaysMinRegex(t)})),Et("ddd",(function(t,e){return e.weekdaysShortRegex(t)})),Et("dddd",(function(t,e){return e.weekdaysRegex(t)})),Vt(["dd","ddd","dddd"],(function(t,e,r,n){var i=r._locale.weekdaysParse(t,n,r._strict);null!=i?e.d=i:v(r).invalidWeekday=t})),Vt(["d","e","E"],(function(t,e,r,n){e[n]=lt(t)}));var Ne="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),Ee="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),Ye="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),Re=Nt,Ie=Nt,Be=Nt;function Xe(t,e){var r=o(this._weekdays)?this._weekdays:this._weekdays[t&&!0!==t&&this._weekdays.isFormat.test(e)?"format":"standalone"];return!0===t?ze(r,this._week.dow):t?r[t.day()]:r}function Ve(t){return!0===t?ze(this._weekdaysShort,this._week.dow):t?this._weekdaysShort[t.day()]:this._weekdaysShort}function Ce(t){return!0===t?ze(this._weekdaysMin,this._week.dow):t?this._weekdaysMin[t.day()]:this._weekdaysMin}function We(t,e,r){var n,i,s,o=t.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],n=0;n<7;++n)s=m([2e3,1]).day(n),this._minWeekdaysParse[n]=this.weekdaysMin(s,"").toLocaleLowerCase(),this._shortWeekdaysParse[n]=this.weekdaysShort(s,"").toLocaleLowerCase(),this._weekdaysParse[n]=this.weekdays(s,"").toLocaleLowerCase();return r?"dddd"===e?-1!==(i=Wt.call(this._weekdaysParse,o))?i:null:"ddd"===e?-1!==(i=Wt.call(this._shortWeekdaysParse,o))?i:null:-1!==(i=Wt.call(this._minWeekdaysParse,o))?i:null:"dddd"===e?-1!==(i=Wt.call(this._weekdaysParse,o))||-1!==(i=Wt.call(this._shortWeekdaysParse,o))||-1!==(i=Wt.call(this._minWeekdaysParse,o))?i:null:"ddd"===e?-1!==(i=Wt.call(this._shortWeekdaysParse,o))||-1!==(i=Wt.call(this._weekdaysParse,o))||-1!==(i=Wt.call(this._minWeekdaysParse,o))?i:null:-1!==(i=Wt.call(this._minWeekdaysParse,o))||-1!==(i=Wt.call(this._weekdaysParse,o))||-1!==(i=Wt.call(this._shortWeekdaysParse,o))?i:null}function qe(t,e,r){var n,i,s;if(this._weekdaysParseExact)return We.call(this,t,e,r);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),n=0;n<7;n++){if(i=m([2e3,1]).day(n),r&&!this._fullWeekdaysParse[n]&&(this._fullWeekdaysParse[n]=new RegExp("^"+this.weekdays(i,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[n]=new RegExp("^"+this.weekdaysShort(i,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[n]=new RegExp("^"+this.weekdaysMin(i,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[n]||(s="^"+this.weekdays(i,"")+"|^"+this.weekdaysShort(i,"")+"|^"+this.weekdaysMin(i,""),this._weekdaysParse[n]=new RegExp(s.replace(".",""),"i")),r&&"dddd"===e&&this._fullWeekdaysParse[n].test(t))return n;if(r&&"ddd"===e&&this._shortWeekdaysParse[n].test(t))return n;if(r&&"dd"===e&&this._minWeekdaysParse[n].test(t))return n;if(!r&&this._weekdaysParse[n].test(t))return n}}function Ze(t){if(!this.isValid())return null!=t?this:NaN;var e=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=t?(t=He(t,this.localeData()),this.add(t-e,"d")):e}function Fe(t){if(!this.isValid())return null!=t?this:NaN;var e=(this.day()+7-this.localeData()._week.dow)%7;return null==t?e:this.add(t-e,"d")}function Ue(t){if(!this.isValid())return null!=t?this:NaN;if(null!=t){var e=Oe(t,this.localeData());return this.day(this.day()%7?e:e-7)}return this.day()||7}function Ge(t){return this._weekdaysParseExact?(u(this,"_weekdaysRegex")||Je.call(this),t?this._weekdaysStrictRegex:this._weekdaysRegex):(u(this,"_weekdaysRegex")||(this._weekdaysRegex=Re),this._weekdaysStrictRegex&&t?this._weekdaysStrictRegex:this._weekdaysRegex)}function _e(t){return this._weekdaysParseExact?(u(this,"_weekdaysRegex")||Je.call(this),t?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(u(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=Ie),this._weekdaysShortStrictRegex&&t?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function Ke(t){return this._weekdaysParseExact?(u(this,"_weekdaysRegex")||Je.call(this),t?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(u(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=Be),this._weekdaysMinStrictRegex&&t?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function Je(){function t(t,e){return e.length-t.length}var e,r,n,i,s,o=[],a=[],u=[],h=[];for(e=0;e<7;e++)r=m([2e3,1]).day(e),n=It(this.weekdaysMin(r,"")),i=It(this.weekdaysShort(r,"")),s=It(this.weekdays(r,"")),o.push(n),a.push(i),u.push(s),h.push(n),h.push(i),h.push(s);o.sort(t),a.sort(t),u.sort(t),h.sort(t),this._weekdaysRegex=new RegExp("^("+h.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+u.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+a.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+o.join("|")+")","i")}function Qe(){return this.hours()%12||12}function $e(){return this.hours()||24}function tr(t,e){V(t,0,0,(function(){return this.localeData().meridiem(this.hours(),this.minutes(),e)}))}function er(t,e){return e._meridiemParse}function rr(t){return"p"===(t+"").toLowerCase().charAt(0)}V("H",["HH",2],0,"hour"),V("h",["hh",2],0,Qe),V("k",["kk",2],0,$e),V("hmm",0,0,(function(){return""+Qe.apply(this)+Y(this.minutes(),2)})),V("hmmss",0,0,(function(){return""+Qe.apply(this)+Y(this.minutes(),2)+Y(this.seconds(),2)})),V("Hmm",0,0,(function(){return""+this.hours()+Y(this.minutes(),2)})),V("Hmmss",0,0,(function(){return""+this.hours()+Y(this.minutes(),2)+Y(this.seconds(),2)})),tr("a",!0),tr("A",!1),nt("hour","h"),at("hour",13),Et("a",er),Et("A",er),Et("H",xt),Et("h",xt),Et("k",xt),Et("HH",xt,bt),Et("hh",xt,bt),Et("kk",xt,bt),Et("hmm",Pt),Et("hmmss",Lt),Et("Hmm",Pt),Et("Hmmss",Lt),Xt(["H","HH"],Ut),Xt(["k","kk"],(function(t,e,r){var n=lt(t);e[Ut]=24===n?0:n})),Xt(["a","A"],(function(t,e,r){r._isPm=r._locale.isPM(t),r._meridiem=t})),Xt(["h","hh"],(function(t,e,r){e[Ut]=lt(t),v(r).bigHour=!0})),Xt("hmm",(function(t,e,r){var n=t.length-2;e[Ut]=lt(t.substr(0,n)),e[Gt]=lt(t.substr(n)),v(r).bigHour=!0})),Xt("hmmss",(function(t,e,r){var n=t.length-4,i=t.length-2;e[Ut]=lt(t.substr(0,n)),e[Gt]=lt(t.substr(n,2)),e[_t]=lt(t.substr(i)),v(r).bigHour=!0})),Xt("Hmm",(function(t,e,r){var n=t.length-2;e[Ut]=lt(t.substr(0,n)),e[Gt]=lt(t.substr(n))})),Xt("Hmmss",(function(t,e,r){var n=t.length-4,i=t.length-2;e[Ut]=lt(t.substr(0,n)),e[Gt]=lt(t.substr(n,2)),e[_t]=lt(t.substr(i))}));var nr=/[ap]\.?m?\.?/i,ir=dt("Hours",!0);function sr(t,e,r){return t>11?r?"pm":"PM":r?"am":"AM"}var or,ar={calendar:N,longDateFormat:F,invalidDate:G,ordinal:K,dayOfMonthOrdinalParse:J,relativeTime:$,months:ee,monthsShort:re,week:Te,weekdays:Ne,weekdaysMin:Ye,weekdaysShort:Ee,meridiemParse:nr},ur={},hr={};function cr(t,e){var r,n=Math.min(t.length,e.length);for(r=0;r<n;r+=1)if(t[r]!==e[r])return r;return n}function lr(t){return t?t.toLowerCase().replace("_","-"):t}function dr(t){for(var e,r,n,i,s=0;s<t.length;){for(e=(i=lr(t[s]).split("-")).length,r=(r=lr(t[s+1]))?r.split("-"):null;e>0;){if(n=fr(i.slice(0,e).join("-")))return n;if(r&&r.length>=e&&cr(i,r)>=e-1)break;e--}s++}return or}function fr(e){var n=null;if(void 0===ur[e]&&t&&t.exports)try{n=or._abbr,r(46700)("./"+e),pr(n)}catch(t){ur[e]=null}return ur[e]}function pr(t,e){var r;return t&&((r=c(e)?vr(t):mr(t,e))?or=r:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+t+" not found. Did you forget to load it?")),or._abbr}function mr(t,e){if(null!==e){var r,n=ar;if(e.abbr=t,null!=ur[t])D("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),n=ur[t]._config;else if(null!=e.parentLocale)if(null!=ur[e.parentLocale])n=ur[e.parentLocale]._config;else{if(null==(r=fr(e.parentLocale)))return hr[e.parentLocale]||(hr[e.parentLocale]=[]),hr[e.parentLocale].push({name:t,config:e}),null;n=r._config}return ur[t]=new z(O(n,e)),hr[t]&&hr[t].forEach((function(t){mr(t.name,t.config)})),pr(t),ur[t]}return delete ur[t],null}function yr(t,e){if(null!=e){var r,n,i=ar;null!=ur[t]&&null!=ur[t].parentLocale?ur[t].set(O(ur[t]._config,e)):(null!=(n=fr(t))&&(i=n._config),e=O(i,e),null==n&&(e.abbr=t),(r=new z(e)).parentLocale=ur[t],ur[t]=r),pr(t)}else null!=ur[t]&&(null!=ur[t].parentLocale?(ur[t]=ur[t].parentLocale,t===pr()&&pr(t)):null!=ur[t]&&delete ur[t]);return ur[t]}function vr(t){var e;if(t&&t._locale&&t._locale._abbr&&(t=t._locale._abbr),!t)return or;if(!o(t)){if(e=fr(t))return e;t=[t]}return dr(t)}function gr(){return S(ur)}function br(t){var e,r=t._a;return r&&-2===v(t).overflow&&(e=r[Zt]<0||r[Zt]>11?Zt:r[Ft]<1||r[Ft]>te(r[qt],r[Zt])?Ft:r[Ut]<0||r[Ut]>24||24===r[Ut]&&(0!==r[Gt]||0!==r[_t]||0!==r[Kt])?Ut:r[Gt]<0||r[Gt]>59?Gt:r[_t]<0||r[_t]>59?_t:r[Kt]<0||r[Kt]>999?Kt:-1,v(t)._overflowDayOfYear&&(e<qt||e>Ft)&&(e=Ft),v(t)._overflowWeeks&&-1===e&&(e=Jt),v(t)._overflowWeekday&&-1===e&&(e=Qt),v(t).overflow=e),t}var wr=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Mr=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,kr=/Z|[+-]\d\d(?::?\d\d)?/,xr=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/],["YYYYMM",/\d{6}/,!1],["YYYY",/\d{4}/,!1]],Pr=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],Lr=/^\/?Date\((-?\d+)/i,Tr=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,Sr={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function Ar(t){var e,r,n,i,s,o,a=t._i,u=wr.exec(a)||Mr.exec(a);if(u){for(v(t).iso=!0,e=0,r=xr.length;e<r;e++)if(xr[e][1].exec(u[1])){i=xr[e][0],n=!1!==xr[e][2];break}if(null==i)return void(t._isValid=!1);if(u[3]){for(e=0,r=Pr.length;e<r;e++)if(Pr[e][1].exec(u[3])){s=(u[2]||" ")+Pr[e][0];break}if(null==s)return void(t._isValid=!1)}if(!n&&null!=s)return void(t._isValid=!1);if(u[4]){if(!kr.exec(u[4]))return void(t._isValid=!1);o="Z"}t._f=i+(s||"")+(o||""),Xr(t)}else t._isValid=!1}function Dr(t,e,r,n,i,s){var o=[jr(t),re.indexOf(e),parseInt(r,10),parseInt(n,10),parseInt(i,10)];return s&&o.push(parseInt(s,10)),o}function jr(t){var e=parseInt(t,10);return e<=49?2e3+e:e<=999?1900+e:e}function Hr(t){return t.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,"")}function Or(t,e,r){return!t||Ee.indexOf(t)===new Date(e[0],e[1],e[2]).getDay()||(v(r).weekdayMismatch=!0,r._isValid=!1,!1)}function zr(t,e,r){if(t)return Sr[t];if(e)return 0;var n=parseInt(r,10),i=n%100;return(n-i)/100*60+i}function Nr(t){var e,r=Tr.exec(Hr(t._i));if(r){if(e=Dr(r[4],r[3],r[2],r[5],r[6],r[7]),!Or(r[1],e,t))return;t._a=e,t._tzm=zr(r[8],r[9],r[10]),t._d=we.apply(null,t._a),t._d.setUTCMinutes(t._d.getUTCMinutes()-t._tzm),v(t).rfc2822=!0}else t._isValid=!1}function Er(t){var e=Lr.exec(t._i);null===e?(Ar(t),!1===t._isValid&&(delete t._isValid,Nr(t),!1===t._isValid&&(delete t._isValid,t._strict?t._isValid=!1:i.createFromInputFallback(t)))):t._d=new Date(+e[1])}function Yr(t,e,r){return null!=t?t:null!=e?e:r}function Rr(t){var e=new Date(i.now());return t._useUTC?[e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate()]:[e.getFullYear(),e.getMonth(),e.getDate()]}function Ir(t){var e,r,n,i,s,o=[];if(!t._d){for(n=Rr(t),t._w&&null==t._a[Ft]&&null==t._a[Zt]&&Br(t),null!=t._dayOfYear&&(s=Yr(t._a[qt],n[qt]),(t._dayOfYear>ye(s)||0===t._dayOfYear)&&(v(t)._overflowDayOfYear=!0),r=we(s,0,t._dayOfYear),t._a[Zt]=r.getUTCMonth(),t._a[Ft]=r.getUTCDate()),e=0;e<3&&null==t._a[e];++e)t._a[e]=o[e]=n[e];for(;e<7;e++)t._a[e]=o[e]=null==t._a[e]?2===e?1:0:t._a[e];24===t._a[Ut]&&0===t._a[Gt]&&0===t._a[_t]&&0===t._a[Kt]&&(t._nextDay=!0,t._a[Ut]=0),t._d=(t._useUTC?we:be).apply(null,o),i=t._useUTC?t._d.getUTCDay():t._d.getDay(),null!=t._tzm&&t._d.setUTCMinutes(t._d.getUTCMinutes()-t._tzm),t._nextDay&&(t._a[Ut]=24),t._w&&void 0!==t._w.d&&t._w.d!==i&&(v(t).weekdayMismatch=!0)}}function Br(t){var e,r,n,i,s,o,a,u,h;null!=(e=t._w).GG||null!=e.W||null!=e.E?(s=1,o=4,r=Yr(e.GG,t._a[qt],xe(Gr(),1,4).year),n=Yr(e.W,1),((i=Yr(e.E,1))<1||i>7)&&(u=!0)):(s=t._locale._week.dow,o=t._locale._week.doy,h=xe(Gr(),s,o),r=Yr(e.gg,t._a[qt],h.year),n=Yr(e.w,h.week),null!=e.d?((i=e.d)<0||i>6)&&(u=!0):null!=e.e?(i=e.e+s,(e.e<0||e.e>6)&&(u=!0)):i=s),n<1||n>Pe(r,s,o)?v(t)._overflowWeeks=!0:null!=u?v(t)._overflowWeekday=!0:(a=ke(r,n,i,s,o),t._a[qt]=a.year,t._dayOfYear=a.dayOfYear)}function Xr(t){if(t._f!==i.ISO_8601)if(t._f!==i.RFC_2822){t._a=[],v(t).empty=!0;var e,r,n,s,o,a,u=""+t._i,h=u.length,c=0;for(n=Z(t._f,t._locale).match(R)||[],e=0;e<n.length;e++)s=n[e],(r=(u.match(Yt(s,t))||[])[0])&&((o=u.substr(0,u.indexOf(r))).length>0&&v(t).unusedInput.push(o),u=u.slice(u.indexOf(r)+r.length),c+=r.length),X[s]?(r?v(t).empty=!1:v(t).unusedTokens.push(s),Ct(s,r,t)):t._strict&&!r&&v(t).unusedTokens.push(s);v(t).charsLeftOver=h-c,u.length>0&&v(t).unusedInput.push(u),t._a[Ut]<=12&&!0===v(t).bigHour&&t._a[Ut]>0&&(v(t).bigHour=void 0),v(t).parsedDateParts=t._a.slice(0),v(t).meridiem=t._meridiem,t._a[Ut]=Vr(t._locale,t._a[Ut],t._meridiem),null!==(a=v(t).era)&&(t._a[qt]=t._locale.erasConvertYear(a,t._a[qt])),Ir(t),br(t)}else Nr(t);else Ar(t)}function Vr(t,e,r){var n;return null==r?e:null!=t.meridiemHour?t.meridiemHour(e,r):null!=t.isPM?((n=t.isPM(r))&&e<12&&(e+=12),n||12!==e||(e=0),e):e}function Cr(t){var e,r,n,i,s,o,a=!1;if(0===t._f.length)return v(t).invalidFormat=!0,void(t._d=new Date(NaN));for(i=0;i<t._f.length;i++)s=0,o=!1,e=k({},t),null!=t._useUTC&&(e._useUTC=t._useUTC),e._f=t._f[i],Xr(e),g(e)&&(o=!0),s+=v(e).charsLeftOver,s+=10*v(e).unusedTokens.length,v(e).score=s,a?s<n&&(n=s,r=e):(null==n||s<n||o)&&(n=s,r=e,o&&(a=!0));p(t,r||e)}function Wr(t){if(!t._d){var e=st(t._i),r=void 0===e.day?e.date:e.day;t._a=f([e.year,e.month,r,e.hour,e.minute,e.second,e.millisecond],(function(t){return t&&parseInt(t,10)})),Ir(t)}}function qr(t){var e=new x(br(Zr(t)));return e._nextDay&&(e.add(1,"d"),e._nextDay=void 0),e}function Zr(t){var e=t._i,r=t._f;return t._locale=t._locale||vr(t._l),null===e||void 0===r&&""===e?b({nullInput:!0}):("string"==typeof e&&(t._i=e=t._locale.preparse(e)),P(e)?new x(br(e)):(d(e)?t._d=e:o(r)?Cr(t):r?Xr(t):Fr(t),g(t)||(t._d=null),t))}function Fr(t){var e=t._i;c(e)?t._d=new Date(i.now()):d(e)?t._d=new Date(e.valueOf()):"string"==typeof e?Er(t):o(e)?(t._a=f(e.slice(0),(function(t){return parseInt(t,10)})),Ir(t)):a(e)?Wr(t):l(e)?t._d=new Date(e):i.createFromInputFallback(t)}function Ur(t,e,r,n,i){var s={};return!0!==e&&!1!==e||(n=e,e=void 0),!0!==r&&!1!==r||(n=r,r=void 0),(a(t)&&h(t)||o(t)&&0===t.length)&&(t=void 0),s._isAMomentObject=!0,s._useUTC=s._isUTC=i,s._l=r,s._i=t,s._f=e,s._strict=n,qr(s)}function Gr(t,e,r,n){return Ur(t,e,r,n,!1)}i.createFromInputFallback=T("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",(function(t){t._d=new Date(t._i+(t._useUTC?" UTC":""))})),i.ISO_8601=function(){},i.RFC_2822=function(){};var _r=T("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var t=Gr.apply(null,arguments);return this.isValid()&&t.isValid()?t<this?this:t:b()})),Kr=T("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var t=Gr.apply(null,arguments);return this.isValid()&&t.isValid()?t>this?this:t:b()}));function Jr(t,e){var r,n;if(1===e.length&&o(e[0])&&(e=e[0]),!e.length)return Gr();for(r=e[0],n=1;n<e.length;++n)e[n].isValid()&&!e[n][t](r)||(r=e[n]);return r}function Qr(){return Jr("isBefore",[].slice.call(arguments,0))}function $r(){return Jr("isAfter",[].slice.call(arguments,0))}var tn=function(){return Date.now?Date.now():+new Date},en=["year","quarter","month","week","day","hour","minute","second","millisecond"];function rn(t){var e,r,n=!1;for(e in t)if(u(t,e)&&(-1===Wt.call(en,e)||null!=t[e]&&isNaN(t[e])))return!1;for(r=0;r<en.length;++r)if(t[en[r]]){if(n)return!1;parseFloat(t[en[r]])!==lt(t[en[r]])&&(n=!0)}return!0}function nn(){return this._isValid}function sn(){return An(NaN)}function on(t){var e=st(t),r=e.year||0,n=e.quarter||0,i=e.month||0,s=e.week||e.isoWeek||0,o=e.day||0,a=e.hour||0,u=e.minute||0,h=e.second||0,c=e.millisecond||0;this._isValid=rn(e),this._milliseconds=+c+1e3*h+6e4*u+1e3*a*60*60,this._days=+o+7*s,this._months=+i+3*n+12*r,this._data={},this._locale=vr(),this._bubble()}function an(t){return t instanceof on}function un(t){return t<0?-1*Math.round(-1*t):Math.round(t)}function hn(t,e,r){var n,i=Math.min(t.length,e.length),s=Math.abs(t.length-e.length),o=0;for(n=0;n<i;n++)(r&&t[n]!==e[n]||!r&&lt(t[n])!==lt(e[n]))&&o++;return o+s}function cn(t,e){V(t,0,0,(function(){var t=this.utcOffset(),r="+";return t<0&&(t=-t,r="-"),r+Y(~~(t/60),2)+e+Y(~~t%60,2)}))}cn("Z",":"),cn("ZZ",""),Et("Z",Ot),Et("ZZ",Ot),Xt(["Z","ZZ"],(function(t,e,r){r._useUTC=!0,r._tzm=dn(Ot,t)}));var ln=/([\+\-]|\d\d)/gi;function dn(t,e){var r,n,i=(e||"").match(t);return null===i?null:0===(n=60*(r=((i[i.length-1]||[])+"").match(ln)||["-",0,0])[1]+lt(r[2]))?0:"+"===r[0]?n:-n}function fn(t,e){var r,n;return e._isUTC?(r=e.clone(),n=(P(t)||d(t)?t.valueOf():Gr(t).valueOf())-r.valueOf(),r._d.setTime(r._d.valueOf()+n),i.updateOffset(r,!1),r):Gr(t).local()}function pn(t){return-Math.round(t._d.getTimezoneOffset())}function mn(t,e,r){var n,s=this._offset||0;if(!this.isValid())return null!=t?this:NaN;if(null!=t){if("string"==typeof t){if(null===(t=dn(Ot,t)))return this}else Math.abs(t)<16&&!r&&(t*=60);return!this._isUTC&&e&&(n=pn(this)),this._offset=t,this._isUTC=!0,null!=n&&this.add(n,"m"),s!==t&&(!e||this._changeInProgress?zn(this,An(t-s,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,i.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?s:pn(this)}function yn(t,e){return null!=t?("string"!=typeof t&&(t=-t),this.utcOffset(t,e),this):-this.utcOffset()}function vn(t){return this.utcOffset(0,t)}function gn(t){return this._isUTC&&(this.utcOffset(0,t),this._isUTC=!1,t&&this.subtract(pn(this),"m")),this}function bn(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var t=dn(Ht,this._i);null!=t?this.utcOffset(t):this.utcOffset(0,!0)}return this}function wn(t){return!!this.isValid()&&(t=t?Gr(t).utcOffset():0,(this.utcOffset()-t)%60==0)}function Mn(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function kn(){if(!c(this._isDSTShifted))return this._isDSTShifted;var t,e={};return k(e,this),(e=Zr(e))._a?(t=e._isUTC?m(e._a):Gr(e._a),this._isDSTShifted=this.isValid()&&hn(e._a,t.toArray())>0):this._isDSTShifted=!1,this._isDSTShifted}function xn(){return!!this.isValid()&&!this._isUTC}function Pn(){return!!this.isValid()&&this._isUTC}function Ln(){return!!this.isValid()&&this._isUTC&&0===this._offset}i.updateOffset=function(){};var Tn=/^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,Sn=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function An(t,e){var r,n,i,s=t,o=null;return an(t)?s={ms:t._milliseconds,d:t._days,M:t._months}:l(t)||!isNaN(+t)?(s={},e?s[e]=+t:s.milliseconds=+t):(o=Tn.exec(t))?(r="-"===o[1]?-1:1,s={y:0,d:lt(o[Ft])*r,h:lt(o[Ut])*r,m:lt(o[Gt])*r,s:lt(o[_t])*r,ms:lt(un(1e3*o[Kt]))*r}):(o=Sn.exec(t))?(r="-"===o[1]?-1:1,s={y:Dn(o[2],r),M:Dn(o[3],r),w:Dn(o[4],r),d:Dn(o[5],r),h:Dn(o[6],r),m:Dn(o[7],r),s:Dn(o[8],r)}):null==s?s={}:"object"==typeof s&&("from"in s||"to"in s)&&(i=Hn(Gr(s.from),Gr(s.to)),(s={}).ms=i.milliseconds,s.M=i.months),n=new on(s),an(t)&&u(t,"_locale")&&(n._locale=t._locale),an(t)&&u(t,"_isValid")&&(n._isValid=t._isValid),n}function Dn(t,e){var r=t&&parseFloat(t.replace(",","."));return(isNaN(r)?0:r)*e}function jn(t,e){var r={};return r.months=e.month()-t.month()+12*(e.year()-t.year()),t.clone().add(r.months,"M").isAfter(e)&&--r.months,r.milliseconds=+e-+t.clone().add(r.months,"M"),r}function Hn(t,e){var r;return t.isValid()&&e.isValid()?(e=fn(e,t),t.isBefore(e)?r=jn(t,e):((r=jn(e,t)).milliseconds=-r.milliseconds,r.months=-r.months),r):{milliseconds:0,months:0}}function On(t,e){return function(r,n){var i;return null===n||isNaN(+n)||(D(e,"moment()."+e+"(period, number) is deprecated. Please use moment()."+e+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),i=r,r=n,n=i),zn(this,An(r,n),t),this}}function zn(t,e,r,n){var s=e._milliseconds,o=un(e._days),a=un(e._months);t.isValid()&&(n=null==n||n,a&&ce(t,ft(t,"Month")+a*r),o&&pt(t,"Date",ft(t,"Date")+o*r),s&&t._d.setTime(t._d.valueOf()+s*r),n&&i.updateOffset(t,o||a))}An.fn=on.prototype,An.invalid=sn;var Nn=On(1,"add"),En=On(-1,"subtract");function Yn(t){return"string"==typeof t||t instanceof String}function Rn(t){return P(t)||d(t)||Yn(t)||l(t)||Bn(t)||In(t)||null==t}function In(t){var e,r,n=a(t)&&!h(t),i=!1,s=["years","year","y","months","month","M","days","day","d","dates","date","D","hours","hour","h","minutes","minute","m","seconds","second","s","milliseconds","millisecond","ms"];for(e=0;e<s.length;e+=1)r=s[e],i=i||u(t,r);return n&&i}function Bn(t){var e=o(t),r=!1;return e&&(r=0===t.filter((function(e){return!l(e)&&Yn(t)})).length),e&&r}function Xn(t){var e,r,n=a(t)&&!h(t),i=!1,s=["sameDay","nextDay","lastDay","nextWeek","lastWeek","sameElse"];for(e=0;e<s.length;e+=1)r=s[e],i=i||u(t,r);return n&&i}function Vn(t,e){var r=t.diff(e,"days",!0);return r<-6?"sameElse":r<-1?"lastWeek":r<0?"lastDay":r<1?"sameDay":r<2?"nextDay":r<7?"nextWeek":"sameElse"}function Cn(t,e){1===arguments.length&&(arguments[0]?Rn(arguments[0])?(t=arguments[0],e=void 0):Xn(arguments[0])&&(e=arguments[0],t=void 0):(t=void 0,e=void 0));var r=t||Gr(),n=fn(r,this).startOf("day"),s=i.calendarFormat(this,n)||"sameElse",o=e&&(j(e[s])?e[s].call(this,r):e[s]);return this.format(o||this.localeData().calendar(s,this,Gr(r)))}function Wn(){return new x(this)}function qn(t,e){var r=P(t)?t:Gr(t);return!(!this.isValid()||!r.isValid())&&("millisecond"===(e=it(e)||"millisecond")?this.valueOf()>r.valueOf():r.valueOf()<this.clone().startOf(e).valueOf())}function Zn(t,e){var r=P(t)?t:Gr(t);return!(!this.isValid()||!r.isValid())&&("millisecond"===(e=it(e)||"millisecond")?this.valueOf()<r.valueOf():this.clone().endOf(e).valueOf()<r.valueOf())}function Fn(t,e,r,n){var i=P(t)?t:Gr(t),s=P(e)?e:Gr(e);return!!(this.isValid()&&i.isValid()&&s.isValid())&&("("===(n=n||"()")[0]?this.isAfter(i,r):!this.isBefore(i,r))&&(")"===n[1]?this.isBefore(s,r):!this.isAfter(s,r))}function Un(t,e){var r,n=P(t)?t:Gr(t);return!(!this.isValid()||!n.isValid())&&("millisecond"===(e=it(e)||"millisecond")?this.valueOf()===n.valueOf():(r=n.valueOf(),this.clone().startOf(e).valueOf()<=r&&r<=this.clone().endOf(e).valueOf()))}function Gn(t,e){return this.isSame(t,e)||this.isAfter(t,e)}function _n(t,e){return this.isSame(t,e)||this.isBefore(t,e)}function Kn(t,e,r){var n,i,s;if(!this.isValid())return NaN;if(!(n=fn(t,this)).isValid())return NaN;switch(i=6e4*(n.utcOffset()-this.utcOffset()),e=it(e)){case"year":s=Jn(this,n)/12;break;case"month":s=Jn(this,n);break;case"quarter":s=Jn(this,n)/3;break;case"second":s=(this-n)/1e3;break;case"minute":s=(this-n)/6e4;break;case"hour":s=(this-n)/36e5;break;case"day":s=(this-n-i)/864e5;break;case"week":s=(this-n-i)/6048e5;break;default:s=this-n}return r?s:ct(s)}function Jn(t,e){if(t.date()<e.date())return-Jn(e,t);var r=12*(e.year()-t.year())+(e.month()-t.month()),n=t.clone().add(r,"months");return-(r+(e-n<0?(e-n)/(n-t.clone().add(r-1,"months")):(e-n)/(t.clone().add(r+1,"months")-n)))||0}function Qn(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")}function $n(t){if(!this.isValid())return null;var e=!0!==t,r=e?this.clone().utc():this;return r.year()<0||r.year()>9999?q(r,e?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):j(Date.prototype.toISOString)?e?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",q(r,"Z")):q(r,e?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")}function ti(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var t,e,r,n,i="moment",s="";return this.isLocal()||(i=0===this.utcOffset()?"moment.utc":"moment.parseZone",s="Z"),t="["+i+'("]',e=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",r="-MM-DD[T]HH:mm:ss.SSS",n=s+'[")]',this.format(t+e+r+n)}function ei(t){t||(t=this.isUtc()?i.defaultFormatUtc:i.defaultFormat);var e=q(this,t);return this.localeData().postformat(e)}function ri(t,e){return this.isValid()&&(P(t)&&t.isValid()||Gr(t).isValid())?An({to:this,from:t}).locale(this.locale()).humanize(!e):this.localeData().invalidDate()}function ni(t){return this.from(Gr(),t)}function ii(t,e){return this.isValid()&&(P(t)&&t.isValid()||Gr(t).isValid())?An({from:this,to:t}).locale(this.locale()).humanize(!e):this.localeData().invalidDate()}function si(t){return this.to(Gr(),t)}function oi(t){var e;return void 0===t?this._locale._abbr:(null!=(e=vr(t))&&(this._locale=e),this)}i.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",i.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var ai=T("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",(function(t){return void 0===t?this.localeData():this.locale(t)}));function ui(){return this._locale}var hi=1e3,ci=60*hi,li=60*ci,di=3506328*li;function fi(t,e){return(t%e+e)%e}function pi(t,e,r){return t<100&&t>=0?new Date(t+400,e,r)-di:new Date(t,e,r).valueOf()}function mi(t,e,r){return t<100&&t>=0?Date.UTC(t+400,e,r)-di:Date.UTC(t,e,r)}function yi(t){var e,r;if(void 0===(t=it(t))||"millisecond"===t||!this.isValid())return this;switch(r=this._isUTC?mi:pi,t){case"year":e=r(this.year(),0,1);break;case"quarter":e=r(this.year(),this.month()-this.month()%3,1);break;case"month":e=r(this.year(),this.month(),1);break;case"week":e=r(this.year(),this.month(),this.date()-this.weekday());break;case"isoWeek":e=r(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case"day":case"date":e=r(this.year(),this.month(),this.date());break;case"hour":e=this._d.valueOf(),e-=fi(e+(this._isUTC?0:this.utcOffset()*ci),li);break;case"minute":e=this._d.valueOf(),e-=fi(e,ci);break;case"second":e=this._d.valueOf(),e-=fi(e,hi)}return this._d.setTime(e),i.updateOffset(this,!0),this}function vi(t){var e,r;if(void 0===(t=it(t))||"millisecond"===t||!this.isValid())return this;switch(r=this._isUTC?mi:pi,t){case"year":e=r(this.year()+1,0,1)-1;break;case"quarter":e=r(this.year(),this.month()-this.month()%3+3,1)-1;break;case"month":e=r(this.year(),this.month()+1,1)-1;break;case"week":e=r(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case"isoWeek":e=r(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case"day":case"date":e=r(this.year(),this.month(),this.date()+1)-1;break;case"hour":e=this._d.valueOf(),e+=li-fi(e+(this._isUTC?0:this.utcOffset()*ci),li)-1;break;case"minute":e=this._d.valueOf(),e+=ci-fi(e,ci)-1;break;case"second":e=this._d.valueOf(),e+=hi-fi(e,hi)-1}return this._d.setTime(e),i.updateOffset(this,!0),this}function gi(){return this._d.valueOf()-6e4*(this._offset||0)}function bi(){return Math.floor(this.valueOf()/1e3)}function wi(){return new Date(this.valueOf())}function Mi(){var t=this;return[t.year(),t.month(),t.date(),t.hour(),t.minute(),t.second(),t.millisecond()]}function ki(){var t=this;return{years:t.year(),months:t.month(),date:t.date(),hours:t.hours(),minutes:t.minutes(),seconds:t.seconds(),milliseconds:t.milliseconds()}}function xi(){return this.isValid()?this.toISOString():null}function Pi(){return g(this)}function Li(){return p({},v(this))}function Ti(){return v(this).overflow}function Si(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}function Ai(t,e){var r,n,s,o=this._eras||vr("en")._eras;for(r=0,n=o.length;r<n;++r)switch("string"==typeof o[r].since&&(s=i(o[r].since).startOf("day"),o[r].since=s.valueOf()),typeof o[r].until){case"undefined":o[r].until=1/0;break;case"string":s=i(o[r].until).startOf("day").valueOf(),o[r].until=s.valueOf()}return o}function Di(t,e,r){var n,i,s,o,a,u=this.eras();for(t=t.toUpperCase(),n=0,i=u.length;n<i;++n)if(s=u[n].name.toUpperCase(),o=u[n].abbr.toUpperCase(),a=u[n].narrow.toUpperCase(),r)switch(e){case"N":case"NN":case"NNN":if(o===t)return u[n];break;case"NNNN":if(s===t)return u[n];break;case"NNNNN":if(a===t)return u[n]}else if([s,o,a].indexOf(t)>=0)return u[n]}function ji(t,e){var r=t.since<=t.until?1:-1;return void 0===e?i(t.since).year():i(t.since).year()+(e-t.offset)*r}function Hi(){var t,e,r,n=this.localeData().eras();for(t=0,e=n.length;t<e;++t){if(r=this.clone().startOf("day").valueOf(),n[t].since<=r&&r<=n[t].until)return n[t].name;if(n[t].until<=r&&r<=n[t].since)return n[t].name}return""}function Oi(){var t,e,r,n=this.localeData().eras();for(t=0,e=n.length;t<e;++t){if(r=this.clone().startOf("day").valueOf(),n[t].since<=r&&r<=n[t].until)return n[t].narrow;if(n[t].until<=r&&r<=n[t].since)return n[t].narrow}return""}function zi(){var t,e,r,n=this.localeData().eras();for(t=0,e=n.length;t<e;++t){if(r=this.clone().startOf("day").valueOf(),n[t].since<=r&&r<=n[t].until)return n[t].abbr;if(n[t].until<=r&&r<=n[t].since)return n[t].abbr}return""}function Ni(){var t,e,r,n,s=this.localeData().eras();for(t=0,e=s.length;t<e;++t)if(r=s[t].since<=s[t].until?1:-1,n=this.clone().startOf("day").valueOf(),s[t].since<=n&&n<=s[t].until||s[t].until<=n&&n<=s[t].since)return(this.year()-i(s[t].since).year())*r+s[t].offset;return this.year()}function Ei(t){return u(this,"_erasNameRegex")||Ci.call(this),t?this._erasNameRegex:this._erasRegex}function Yi(t){return u(this,"_erasAbbrRegex")||Ci.call(this),t?this._erasAbbrRegex:this._erasRegex}function Ri(t){return u(this,"_erasNarrowRegex")||Ci.call(this),t?this._erasNarrowRegex:this._erasRegex}function Ii(t,e){return e.erasAbbrRegex(t)}function Bi(t,e){return e.erasNameRegex(t)}function Xi(t,e){return e.erasNarrowRegex(t)}function Vi(t,e){return e._eraYearOrdinalRegex||Dt}function Ci(){var t,e,r=[],n=[],i=[],s=[],o=this.eras();for(t=0,e=o.length;t<e;++t)n.push(It(o[t].name)),r.push(It(o[t].abbr)),i.push(It(o[t].narrow)),s.push(It(o[t].name)),s.push(It(o[t].abbr)),s.push(It(o[t].narrow));this._erasRegex=new RegExp("^("+s.join("|")+")","i"),this._erasNameRegex=new RegExp("^("+n.join("|")+")","i"),this._erasAbbrRegex=new RegExp("^("+r.join("|")+")","i"),this._erasNarrowRegex=new RegExp("^("+i.join("|")+")","i")}function Wi(t,e){V(0,[t,t.length],0,e)}function qi(t){return Ki.call(this,t,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function Zi(t){return Ki.call(this,t,this.isoWeek(),this.isoWeekday(),1,4)}function Fi(){return Pe(this.year(),1,4)}function Ui(){return Pe(this.isoWeekYear(),1,4)}function Gi(){var t=this.localeData()._week;return Pe(this.year(),t.dow,t.doy)}function _i(){var t=this.localeData()._week;return Pe(this.weekYear(),t.dow,t.doy)}function Ki(t,e,r,n,i){var s;return null==t?xe(this,n,i).year:(e>(s=Pe(t,n,i))&&(e=s),Ji.call(this,t,e,r,n,i))}function Ji(t,e,r,n,i){var s=ke(t,e,r,n,i),o=we(s.year,0,s.dayOfYear);return this.year(o.getUTCFullYear()),this.month(o.getUTCMonth()),this.date(o.getUTCDate()),this}function Qi(t){return null==t?Math.ceil((this.month()+1)/3):this.month(3*(t-1)+this.month()%3)}V("N",0,0,"eraAbbr"),V("NN",0,0,"eraAbbr"),V("NNN",0,0,"eraAbbr"),V("NNNN",0,0,"eraName"),V("NNNNN",0,0,"eraNarrow"),V("y",["y",1],"yo","eraYear"),V("y",["yy",2],0,"eraYear"),V("y",["yyy",3],0,"eraYear"),V("y",["yyyy",4],0,"eraYear"),Et("N",Ii),Et("NN",Ii),Et("NNN",Ii),Et("NNNN",Bi),Et("NNNNN",Xi),Xt(["N","NN","NNN","NNNN","NNNNN"],(function(t,e,r,n){var i=r._locale.erasParse(t,n,r._strict);i?v(r).era=i:v(r).invalidEra=t})),Et("y",Dt),Et("yy",Dt),Et("yyy",Dt),Et("yyyy",Dt),Et("yo",Vi),Xt(["y","yy","yyy","yyyy"],qt),Xt(["yo"],(function(t,e,r,n){var i;r._locale._eraYearOrdinalRegex&&(i=t.match(r._locale._eraYearOrdinalRegex)),r._locale.eraYearOrdinalParse?e[qt]=r._locale.eraYearOrdinalParse(t,i):e[qt]=parseInt(t,10)})),V(0,["gg",2],0,(function(){return this.weekYear()%100})),V(0,["GG",2],0,(function(){return this.isoWeekYear()%100})),Wi("gggg","weekYear"),Wi("ggggg","weekYear"),Wi("GGGG","isoWeekYear"),Wi("GGGGG","isoWeekYear"),nt("weekYear","gg"),nt("isoWeekYear","GG"),at("weekYear",1),at("isoWeekYear",1),Et("G",jt),Et("g",jt),Et("GG",xt,bt),Et("gg",xt,bt),Et("GGGG",St,Mt),Et("gggg",St,Mt),Et("GGGGG",At,kt),Et("ggggg",At,kt),Vt(["gggg","ggggg","GGGG","GGGGG"],(function(t,e,r,n){e[n.substr(0,2)]=lt(t)})),Vt(["gg","GG"],(function(t,e,r,n){e[n]=i.parseTwoDigitYear(t)})),V("Q",0,"Qo","quarter"),nt("quarter","Q"),at("quarter",7),Et("Q",gt),Xt("Q",(function(t,e){e[Zt]=3*(lt(t)-1)})),V("D",["DD",2],"Do","date"),nt("date","D"),at("date",9),Et("D",xt),Et("DD",xt,bt),Et("Do",(function(t,e){return t?e._dayOfMonthOrdinalParse||e._ordinalParse:e._dayOfMonthOrdinalParseLenient})),Xt(["D","DD"],Ft),Xt("Do",(function(t,e){e[Ft]=lt(t.match(xt)[0])}));var $i=dt("Date",!0);function ts(t){var e=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==t?e:this.add(t-e,"d")}V("DDD",["DDDD",3],"DDDo","dayOfYear"),nt("dayOfYear","DDD"),at("dayOfYear",4),Et("DDD",Tt),Et("DDDD",wt),Xt(["DDD","DDDD"],(function(t,e,r){r._dayOfYear=lt(t)})),V("m",["mm",2],0,"minute"),nt("minute","m"),at("minute",14),Et("m",xt),Et("mm",xt,bt),Xt(["m","mm"],Gt);var es=dt("Minutes",!1);V("s",["ss",2],0,"second"),nt("second","s"),at("second",15),Et("s",xt),Et("ss",xt,bt),Xt(["s","ss"],_t);var rs,ns,is=dt("Seconds",!1);for(V("S",0,0,(function(){return~~(this.millisecond()/100)})),V(0,["SS",2],0,(function(){return~~(this.millisecond()/10)})),V(0,["SSS",3],0,"millisecond"),V(0,["SSSS",4],0,(function(){return 10*this.millisecond()})),V(0,["SSSSS",5],0,(function(){return 100*this.millisecond()})),V(0,["SSSSSS",6],0,(function(){return 1e3*this.millisecond()})),V(0,["SSSSSSS",7],0,(function(){return 1e4*this.millisecond()})),V(0,["SSSSSSSS",8],0,(function(){return 1e5*this.millisecond()})),V(0,["SSSSSSSSS",9],0,(function(){return 1e6*this.millisecond()})),nt("millisecond","ms"),at("millisecond",16),Et("S",Tt,gt),Et("SS",Tt,bt),Et("SSS",Tt,wt),rs="SSSS";rs.length<=9;rs+="S")Et(rs,Dt);function ss(t,e){e[Kt]=lt(1e3*("0."+t))}for(rs="S";rs.length<=9;rs+="S")Xt(rs,ss);function os(){return this._isUTC?"UTC":""}function as(){return this._isUTC?"Coordinated Universal Time":""}ns=dt("Milliseconds",!1),V("z",0,0,"zoneAbbr"),V("zz",0,0,"zoneName");var us=x.prototype;function hs(t){return Gr(1e3*t)}function cs(){return Gr.apply(null,arguments).parseZone()}function ls(t){return t}us.add=Nn,us.calendar=Cn,us.clone=Wn,us.diff=Kn,us.endOf=vi,us.format=ei,us.from=ri,us.fromNow=ni,us.to=ii,us.toNow=si,us.get=mt,us.invalidAt=Ti,us.isAfter=qn,us.isBefore=Zn,us.isBetween=Fn,us.isSame=Un,us.isSameOrAfter=Gn,us.isSameOrBefore=_n,us.isValid=Pi,us.lang=ai,us.locale=oi,us.localeData=ui,us.max=Kr,us.min=_r,us.parsingFlags=Li,us.set=yt,us.startOf=yi,us.subtract=En,us.toArray=Mi,us.toObject=ki,us.toDate=wi,us.toISOString=$n,us.inspect=ti,"undefined"!=typeof Symbol&&null!=Symbol.for&&(us[Symbol.for("nodejs.util.inspect.custom")]=function(){return"Moment<"+this.format()+">"}),us.toJSON=xi,us.toString=Qn,us.unix=bi,us.valueOf=gi,us.creationData=Si,us.eraName=Hi,us.eraNarrow=Oi,us.eraAbbr=zi,us.eraYear=Ni,us.year=ve,us.isLeapYear=ge,us.weekYear=qi,us.isoWeekYear=Zi,us.quarter=us.quarters=Qi,us.month=le,us.daysInMonth=de,us.week=us.weeks=De,us.isoWeek=us.isoWeeks=je,us.weeksInYear=Gi,us.weeksInWeekYear=_i,us.isoWeeksInYear=Fi,us.isoWeeksInISOWeekYear=Ui,us.date=$i,us.day=us.days=Ze,us.weekday=Fe,us.isoWeekday=Ue,us.dayOfYear=ts,us.hour=us.hours=ir,us.minute=us.minutes=es,us.second=us.seconds=is,us.millisecond=us.milliseconds=ns,us.utcOffset=mn,us.utc=vn,us.local=gn,us.parseZone=bn,us.hasAlignedHourOffset=wn,us.isDST=Mn,us.isLocal=xn,us.isUtcOffset=Pn,us.isUtc=Ln,us.isUTC=Ln,us.zoneAbbr=os,us.zoneName=as,us.dates=T("dates accessor is deprecated. Use date instead.",$i),us.months=T("months accessor is deprecated. Use month instead",le),us.years=T("years accessor is deprecated. Use year instead",ve),us.zone=T("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",yn),us.isDSTShifted=T("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",kn);var ds=z.prototype;function fs(t,e,r,n){var i=vr(),s=m().set(n,e);return i[r](s,t)}function ps(t,e,r){if(l(t)&&(e=t,t=void 0),t=t||"",null!=e)return fs(t,e,r,"month");var n,i=[];for(n=0;n<12;n++)i[n]=fs(t,n,r,"month");return i}function ms(t,e,r,n){"boolean"==typeof t?(l(e)&&(r=e,e=void 0),e=e||""):(r=e=t,t=!1,l(e)&&(r=e,e=void 0),e=e||"");var i,s=vr(),o=t?s._week.dow:0,a=[];if(null!=r)return fs(e,(r+o)%7,n,"day");for(i=0;i<7;i++)a[i]=fs(e,(i+o)%7,n,"day");return a}function ys(t,e){return ps(t,e,"months")}function vs(t,e){return ps(t,e,"monthsShort")}function gs(t,e,r){return ms(t,e,r,"weekdays")}function bs(t,e,r){return ms(t,e,r,"weekdaysShort")}function ws(t,e,r){return ms(t,e,r,"weekdaysMin")}ds.calendar=E,ds.longDateFormat=U,ds.invalidDate=_,ds.ordinal=Q,ds.preparse=ls,ds.postformat=ls,ds.relativeTime=tt,ds.pastFuture=et,ds.set=H,ds.eras=Ai,ds.erasParse=Di,ds.erasConvertYear=ji,ds.erasAbbrRegex=Yi,ds.erasNameRegex=Ei,ds.erasNarrowRegex=Ri,ds.months=oe,ds.monthsShort=ae,ds.monthsParse=he,ds.monthsRegex=pe,ds.monthsShortRegex=fe,ds.week=Le,ds.firstDayOfYear=Ae,ds.firstDayOfWeek=Se,ds.weekdays=Xe,ds.weekdaysMin=Ce,ds.weekdaysShort=Ve,ds.weekdaysParse=qe,ds.weekdaysRegex=Ge,ds.weekdaysShortRegex=_e,ds.weekdaysMinRegex=Ke,ds.isPM=rr,ds.meridiem=sr,pr("en",{eras:[{since:"0001-01-01",until:1/0,offset:1,name:"Anno Domini",narrow:"AD",abbr:"AD"},{since:"0000-12-31",until:-1/0,offset:1,name:"Before Christ",narrow:"BC",abbr:"BC"}],dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(t){var e=t%10;return t+(1===lt(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th")}}),i.lang=T("moment.lang is deprecated. Use moment.locale instead.",pr),i.langData=T("moment.langData is deprecated. Use moment.localeData instead.",vr);var Ms=Math.abs;function ks(){var t=this._data;return this._milliseconds=Ms(this._milliseconds),this._days=Ms(this._days),this._months=Ms(this._months),t.milliseconds=Ms(t.milliseconds),t.seconds=Ms(t.seconds),t.minutes=Ms(t.minutes),t.hours=Ms(t.hours),t.months=Ms(t.months),t.years=Ms(t.years),this}function xs(t,e,r,n){var i=An(e,r);return t._milliseconds+=n*i._milliseconds,t._days+=n*i._days,t._months+=n*i._months,t._bubble()}function Ps(t,e){return xs(this,t,e,1)}function Ls(t,e){return xs(this,t,e,-1)}function Ts(t){return t<0?Math.floor(t):Math.ceil(t)}function Ss(){var t,e,r,n,i,s=this._milliseconds,o=this._days,a=this._months,u=this._data;return s>=0&&o>=0&&a>=0||s<=0&&o<=0&&a<=0||(s+=864e5*Ts(Ds(a)+o),o=0,a=0),u.milliseconds=s%1e3,t=ct(s/1e3),u.seconds=t%60,e=ct(t/60),u.minutes=e%60,r=ct(e/60),u.hours=r%24,o+=ct(r/24),a+=i=ct(As(o)),o-=Ts(Ds(i)),n=ct(a/12),a%=12,u.days=o,u.months=a,u.years=n,this}function As(t){return 4800*t/146097}function Ds(t){return 146097*t/4800}function js(t){if(!this.isValid())return NaN;var e,r,n=this._milliseconds;if("month"===(t=it(t))||"quarter"===t||"year"===t)switch(e=this._days+n/864e5,r=this._months+As(e),t){case"month":return r;case"quarter":return r/3;case"year":return r/12}else switch(e=this._days+Math.round(Ds(this._months)),t){case"week":return e/7+n/6048e5;case"day":return e+n/864e5;case"hour":return 24*e+n/36e5;case"minute":return 1440*e+n/6e4;case"second":return 86400*e+n/1e3;case"millisecond":return Math.floor(864e5*e)+n;default:throw new Error("Unknown unit "+t)}}function Hs(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*lt(this._months/12):NaN}function Os(t){return function(){return this.as(t)}}var zs=Os("ms"),Ns=Os("s"),Es=Os("m"),Ys=Os("h"),Rs=Os("d"),Is=Os("w"),Bs=Os("M"),Xs=Os("Q"),Vs=Os("y");function Cs(){return An(this)}function Ws(t){return t=it(t),this.isValid()?this[t+"s"]():NaN}function qs(t){return function(){return this.isValid()?this._data[t]:NaN}}var Zs=qs("milliseconds"),Fs=qs("seconds"),Us=qs("minutes"),Gs=qs("hours"),_s=qs("days"),Ks=qs("months"),Js=qs("years");function Qs(){return ct(this.days()/7)}var $s=Math.round,to={ss:44,s:45,m:45,h:22,d:26,w:null,M:11};function eo(t,e,r,n,i){return i.relativeTime(e||1,!!r,t,n)}function ro(t,e,r,n){var i=An(t).abs(),s=$s(i.as("s")),o=$s(i.as("m")),a=$s(i.as("h")),u=$s(i.as("d")),h=$s(i.as("M")),c=$s(i.as("w")),l=$s(i.as("y")),d=s<=r.ss&&["s",s]||s<r.s&&["ss",s]||o<=1&&["m"]||o<r.m&&["mm",o]||a<=1&&["h"]||a<r.h&&["hh",a]||u<=1&&["d"]||u<r.d&&["dd",u];return null!=r.w&&(d=d||c<=1&&["w"]||c<r.w&&["ww",c]),(d=d||h<=1&&["M"]||h<r.M&&["MM",h]||l<=1&&["y"]||["yy",l])[2]=e,d[3]=+t>0,d[4]=n,eo.apply(null,d)}function no(t){return void 0===t?$s:"function"==typeof t&&($s=t,!0)}function io(t,e){return void 0!==to[t]&&(void 0===e?to[t]:(to[t]=e,"s"===t&&(to.ss=e-1),!0))}function so(t,e){if(!this.isValid())return this.localeData().invalidDate();var r,n,i=!1,s=to;return"object"==typeof t&&(e=t,t=!1),"boolean"==typeof t&&(i=t),"object"==typeof e&&(s=Object.assign({},to,e),null!=e.s&&null==e.ss&&(s.ss=e.s-1)),n=ro(this,!i,s,r=this.localeData()),i&&(n=r.pastFuture(+this,n)),r.postformat(n)}var oo=Math.abs;function ao(t){return(t>0)-(t<0)||+t}function uo(){if(!this.isValid())return this.localeData().invalidDate();var t,e,r,n,i,s,o,a,u=oo(this._milliseconds)/1e3,h=oo(this._days),c=oo(this._months),l=this.asSeconds();return l?(t=ct(u/60),e=ct(t/60),u%=60,t%=60,r=ct(c/12),c%=12,n=u?u.toFixed(3).replace(/\.?0+$/,""):"",i=l<0?"-":"",s=ao(this._months)!==ao(l)?"-":"",o=ao(this._days)!==ao(l)?"-":"",a=ao(this._milliseconds)!==ao(l)?"-":"",i+"P"+(r?s+r+"Y":"")+(c?s+c+"M":"")+(h?o+h+"D":"")+(e||t||u?"T":"")+(e?a+e+"H":"")+(t?a+t+"M":"")+(u?a+n+"S":"")):"P0D"}var ho=on.prototype;return ho.isValid=nn,ho.abs=ks,ho.add=Ps,ho.subtract=Ls,ho.as=js,ho.asMilliseconds=zs,ho.asSeconds=Ns,ho.asMinutes=Es,ho.asHours=Ys,ho.asDays=Rs,ho.asWeeks=Is,ho.asMonths=Bs,ho.asQuarters=Xs,ho.asYears=Vs,ho.valueOf=Hs,ho._bubble=Ss,ho.clone=Cs,ho.get=Ws,ho.milliseconds=Zs,ho.seconds=Fs,ho.minutes=Us,ho.hours=Gs,ho.days=_s,ho.weeks=Qs,ho.months=Ks,ho.years=Js,ho.humanize=so,ho.toISOString=uo,ho.toString=uo,ho.toJSON=uo,ho.locale=oi,ho.localeData=ui,ho.toIsoString=T("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",uo),ho.lang=ai,V("X",0,0,"unix"),V("x",0,0,"valueOf"),Et("x",jt),Et("X",zt),Xt("X",(function(t,e,r){r._d=new Date(1e3*parseFloat(t))})),Xt("x",(function(t,e,r){r._d=new Date(lt(t))})),
//! moment.js
i.version="2.29.1",s(Gr),i.fn=us,i.min=Qr,i.max=$r,i.now=tn,i.utc=m,i.unix=hs,i.months=ys,i.isDate=d,i.locale=pr,i.invalid=b,i.duration=An,i.isMoment=P,i.weekdays=gs,i.parseZone=cs,i.localeData=vr,i.isDuration=an,i.monthsShort=vs,i.weekdaysMin=ws,i.defineLocale=mr,i.updateLocale=yr,i.locales=gr,i.weekdaysShort=bs,i.normalizeUnits=it,i.relativeTimeRounding=no,i.relativeTimeThreshold=io,i.calendarFormat=Vn,i.prototype=us,i.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},i}()},23085:(t,e,r)=>{"use strict";
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */const n=r(79742),i=r(80645),s="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;e.Buffer=u,e.SlowBuffer=function(t){+t!=t&&(t=0);return u.alloc(+t)},e.INSPECT_MAX_BYTES=50;const o=2147483647;function a(t){if(t>o)throw new RangeError('The value "'+t+'" is invalid for option "size"');const e=new Uint8Array(t);return Object.setPrototypeOf(e,u.prototype),e}function u(t,e,r){if("number"==typeof t){if("string"==typeof e)throw new TypeError('The "string" argument must be of type string. Received type number');return l(t)}return h(t,e,r)}function h(t,e,r){if("string"==typeof t)return function(t,e){"string"==typeof e&&""!==e||(e="utf8");if(!u.isEncoding(e))throw new TypeError("Unknown encoding: "+e);const r=0|m(t,e);let n=a(r);const i=n.write(t,e);i!==r&&(n=n.slice(0,i));return n}(t,e);if(ArrayBuffer.isView(t))return function(t){if(_(t,Uint8Array)){const e=new Uint8Array(t);return f(e.buffer,e.byteOffset,e.byteLength)}return d(t)}(t);if(null==t)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(_(t,ArrayBuffer)||t&&_(t.buffer,ArrayBuffer))return f(t,e,r);if("undefined"!=typeof SharedArrayBuffer&&(_(t,SharedArrayBuffer)||t&&_(t.buffer,SharedArrayBuffer)))return f(t,e,r);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=t.valueOf&&t.valueOf();if(null!=n&&n!==t)return u.from(n,e,r);const i=function(t){if(u.isBuffer(t)){const e=0|p(t.length),r=a(e);return 0===r.length||t.copy(r,0,0,e),r}if(void 0!==t.length)return"number"!=typeof t.length||K(t.length)?a(0):d(t);if("Buffer"===t.type&&Array.isArray(t.data))return d(t.data)}(t);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return u.from(t[Symbol.toPrimitive]("string"),e,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function c(t){if("number"!=typeof t)throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function l(t){return c(t),a(t<0?0:0|p(t))}function d(t){const e=t.length<0?0:0|p(t.length),r=a(e);for(let n=0;n<e;n+=1)r[n]=255&t[n];return r}function f(t,e,r){if(e<0||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===e&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,e):new Uint8Array(t,e,r),Object.setPrototypeOf(n,u.prototype),n}function p(t){if(t>=o)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o.toString(16)+" bytes");return 0|t}function m(t,e){if(u.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||_(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);const r=t.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let i=!1;for(;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return F(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return U(t).length;default:if(i)return n?-1:F(t).length;e=(""+e).toLowerCase(),i=!0}}function y(t,e,r){let n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return j(this,e,r);case"utf8":case"utf-8":return T(this,e,r);case"ascii":return A(this,e,r);case"latin1":case"binary":return D(this,e,r);case"base64":return L(this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return H(this,e,r);default:if(n)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),n=!0}}function v(t,e,r){const n=t[e];t[e]=t[r],t[r]=n}function g(t,e,r,n,i){if(0===t.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),K(r=+r)&&(r=i?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(i)return-1;r=t.length-1}else if(r<0){if(!i)return-1;r=0}if("string"==typeof e&&(e=u.from(e,n)),u.isBuffer(e))return 0===e.length?-1:b(t,e,r,n,i);if("number"==typeof e)return e&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):b(t,[e],r,n,i);throw new TypeError("val must be string, number or Buffer")}function b(t,e,r,n,i){let s,o=1,a=t.length,u=e.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(t.length<2||e.length<2)return-1;o=2,a/=2,u/=2,r/=2}function h(t,e){return 1===o?t[e]:t.readUInt16BE(e*o)}if(i){let n=-1;for(s=r;s<a;s++)if(h(t,s)===h(e,-1===n?0:s-n)){if(-1===n&&(n=s),s-n+1===u)return n*o}else-1!==n&&(s-=s-n),n=-1}else for(r+u>a&&(r=a-u),s=r;s>=0;s--){let r=!0;for(let n=0;n<u;n++)if(h(t,s+n)!==h(e,n)){r=!1;break}if(r)return s}return-1}function w(t,e,r,n){r=Number(r)||0;const i=t.length-r;n?(n=Number(n))>i&&(n=i):n=i;const s=e.length;let o;for(n>s/2&&(n=s/2),o=0;o<n;++o){const n=parseInt(e.substr(2*o,2),16);if(K(n))return o;t[r+o]=n}return o}function M(t,e,r,n){return G(F(e,t.length-r),t,r,n)}function k(t,e,r,n){return G(function(t){const e=[];for(let r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}(e),t,r,n)}function x(t,e,r,n){return G(U(e),t,r,n)}function P(t,e,r,n){return G(function(t,e){let r,n,i;const s=[];for(let o=0;o<t.length&&!((e-=2)<0);++o)r=t.charCodeAt(o),n=r>>8,i=r%256,s.push(i),s.push(n);return s}(e,t.length-r),t,r,n)}function L(t,e,r){return 0===e&&r===t.length?n.fromByteArray(t):n.fromByteArray(t.slice(e,r))}function T(t,e,r){r=Math.min(t.length,r);const n=[];let i=e;for(;i<r;){const e=t[i];let s=null,o=e>239?4:e>223?3:e>191?2:1;if(i+o<=r){let r,n,a,u;switch(o){case 1:e<128&&(s=e);break;case 2:r=t[i+1],128==(192&r)&&(u=(31&e)<<6|63&r,u>127&&(s=u));break;case 3:r=t[i+1],n=t[i+2],128==(192&r)&&128==(192&n)&&(u=(15&e)<<12|(63&r)<<6|63&n,u>2047&&(u<55296||u>57343)&&(s=u));break;case 4:r=t[i+1],n=t[i+2],a=t[i+3],128==(192&r)&&128==(192&n)&&128==(192&a)&&(u=(15&e)<<18|(63&r)<<12|(63&n)<<6|63&a,u>65535&&u<1114112&&(s=u))}}null===s?(s=65533,o=1):s>65535&&(s-=65536,n.push(s>>>10&1023|55296),s=56320|1023&s),n.push(s),i+=o}return function(t){const e=t.length;if(e<=S)return String.fromCharCode.apply(String,t);let r="",n=0;for(;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=S));return r}(n)}e.kMaxLength=o,u.TYPED_ARRAY_SUPPORT=function(){try{const t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),u.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(u.prototype,"parent",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.buffer}}),Object.defineProperty(u.prototype,"offset",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.byteOffset}}),u.poolSize=8192,u.from=function(t,e,r){return h(t,e,r)},Object.setPrototypeOf(u.prototype,Uint8Array.prototype),Object.setPrototypeOf(u,Uint8Array),u.alloc=function(t,e,r){return function(t,e,r){return c(t),t<=0?a(t):void 0!==e?"string"==typeof r?a(t).fill(e,r):a(t).fill(e):a(t)}(t,e,r)},u.allocUnsafe=function(t){return l(t)},u.allocUnsafeSlow=function(t){return l(t)},u.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==u.prototype},u.compare=function(t,e){if(_(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),_(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;let r=t.length,n=e.length;for(let i=0,s=Math.min(r,n);i<s;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);let r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;const n=u.allocUnsafe(e);let i=0;for(r=0;r<t.length;++r){let e=t[r];if(_(e,Uint8Array))i+e.length>n.length?(u.isBuffer(e)||(e=u.from(e)),e.copy(n,i)):Uint8Array.prototype.set.call(n,e,i);else{if(!u.isBuffer(e))throw new TypeError('"list" argument must be an Array of Buffers');e.copy(n,i)}i+=e.length}return n},u.byteLength=m,u.prototype._isBuffer=!0,u.prototype.swap16=function(){const t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let e=0;e<t;e+=2)v(this,e,e+1);return this},u.prototype.swap32=function(){const t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let e=0;e<t;e+=4)v(this,e,e+3),v(this,e+1,e+2);return this},u.prototype.swap64=function(){const t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let e=0;e<t;e+=8)v(this,e,e+7),v(this,e+1,e+6),v(this,e+2,e+5),v(this,e+3,e+4);return this},u.prototype.toString=function(){const t=this.length;return 0===t?"":0===arguments.length?T(this,0,t):y.apply(this,arguments)},u.prototype.toLocaleString=u.prototype.toString,u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){let t="";const r=e.INSPECT_MAX_BYTES;return t=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(t+=" ... "),"<Buffer "+t+">"},s&&(u.prototype[s]=u.prototype.inspect),u.prototype.compare=function(t,e,r,n,i){if(_(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),!u.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),e<0||r>t.length||n<0||i>this.length)throw new RangeError("out of range index");if(n>=i&&e>=r)return 0;if(n>=i)return-1;if(e>=r)return 1;if(this===t)return 0;let s=(i>>>=0)-(n>>>=0),o=(r>>>=0)-(e>>>=0);const a=Math.min(s,o),h=this.slice(n,i),c=t.slice(e,r);for(let t=0;t<a;++t)if(h[t]!==c[t]){s=h[t],o=c[t];break}return s<o?-1:o<s?1:0},u.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},u.prototype.indexOf=function(t,e,r){return g(this,t,e,r,!0)},u.prototype.lastIndexOf=function(t,e,r){return g(this,t,e,r,!1)},u.prototype.write=function(t,e,r,n){if(void 0===e)n="utf8",r=this.length,e=0;else if(void 0===r&&"string"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}const i=this.length-e;if((void 0===r||r>i)&&(r=i),t.length>0&&(r<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let s=!1;for(;;)switch(n){case"hex":return w(this,t,e,r);case"utf8":case"utf-8":return M(this,t,e,r);case"ascii":case"latin1":case"binary":return k(this,t,e,r);case"base64":return x(this,t,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return P(this,t,e,r);default:if(s)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),s=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const S=4096;function A(t,e,r){let n="";r=Math.min(t.length,r);for(let i=e;i<r;++i)n+=String.fromCharCode(127&t[i]);return n}function D(t,e,r){let n="";r=Math.min(t.length,r);for(let i=e;i<r;++i)n+=String.fromCharCode(t[i]);return n}function j(t,e,r){const n=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>n)&&(r=n);let i="";for(let n=e;n<r;++n)i+=J[t[n]];return i}function H(t,e,r){const n=t.slice(e,r);let i="";for(let t=0;t<n.length-1;t+=2)i+=String.fromCharCode(n[t]+256*n[t+1]);return i}function O(t,e,r){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>r)throw new RangeError("Trying to access beyond buffer length")}function z(t,e,r,n,i,s){if(!u.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>i||e<s)throw new RangeError('"value" argument is out of bounds');if(r+n>t.length)throw new RangeError("Index out of range")}function N(t,e,r,n,i){C(e,n,i,t,r,7);let s=Number(e&BigInt(4294967295));t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s;let o=Number(e>>BigInt(32)&BigInt(4294967295));return t[r++]=o,o>>=8,t[r++]=o,o>>=8,t[r++]=o,o>>=8,t[r++]=o,r}function E(t,e,r,n,i){C(e,n,i,t,r,7);let s=Number(e&BigInt(4294967295));t[r+7]=s,s>>=8,t[r+6]=s,s>>=8,t[r+5]=s,s>>=8,t[r+4]=s;let o=Number(e>>BigInt(32)&BigInt(4294967295));return t[r+3]=o,o>>=8,t[r+2]=o,o>>=8,t[r+1]=o,o>>=8,t[r]=o,r+8}function Y(t,e,r,n,i,s){if(r+n>t.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function R(t,e,r,n,s){return e=+e,r>>>=0,s||Y(t,0,r,4),i.write(t,e,r,n,23,4),r+4}function I(t,e,r,n,s){return e=+e,r>>>=0,s||Y(t,0,r,8),i.write(t,e,r,n,52,8),r+8}u.prototype.slice=function(t,e){const r=this.length;(t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t);const n=this.subarray(t,e);return Object.setPrototypeOf(n,u.prototype),n},u.prototype.readUintLE=u.prototype.readUIntLE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=this[t],i=1,s=0;for(;++s<e&&(i*=256);)n+=this[t+s]*i;return n},u.prototype.readUintBE=u.prototype.readUIntBE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=this[t+--e],i=1;for(;e>0&&(i*=256);)n+=this[t+--e]*i;return n},u.prototype.readUint8=u.prototype.readUInt8=function(t,e){return t>>>=0,e||O(t,1,this.length),this[t]},u.prototype.readUint16LE=u.prototype.readUInt16LE=function(t,e){return t>>>=0,e||O(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUint16BE=u.prototype.readUInt16BE=function(t,e){return t>>>=0,e||O(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUint32LE=u.prototype.readUInt32LE=function(t,e){return t>>>=0,e||O(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUint32BE=u.prototype.readUInt32BE=function(t,e){return t>>>=0,e||O(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readBigUInt64LE=Q((function(t){W(t>>>=0,"offset");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||q(t,this.length-8);const n=e+256*this[++t]+65536*this[++t]+this[++t]*2**24,i=this[++t]+256*this[++t]+65536*this[++t]+r*2**24;return BigInt(n)+(BigInt(i)<<BigInt(32))})),u.prototype.readBigUInt64BE=Q((function(t){W(t>>>=0,"offset");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||q(t,this.length-8);const n=e*2**24+65536*this[++t]+256*this[++t]+this[++t],i=this[++t]*2**24+65536*this[++t]+256*this[++t]+r;return(BigInt(n)<<BigInt(32))+BigInt(i)})),u.prototype.readIntLE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=this[t],i=1,s=0;for(;++s<e&&(i*=256);)n+=this[t+s]*i;return i*=128,n>=i&&(n-=Math.pow(2,8*e)),n},u.prototype.readIntBE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=e,i=1,s=this[t+--n];for(;n>0&&(i*=256);)s+=this[t+--n]*i;return i*=128,s>=i&&(s-=Math.pow(2,8*e)),s},u.prototype.readInt8=function(t,e){return t>>>=0,e||O(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){t>>>=0,e||O(t,2,this.length);const r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt16BE=function(t,e){t>>>=0,e||O(t,2,this.length);const r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt32LE=function(t,e){return t>>>=0,e||O(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return t>>>=0,e||O(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readBigInt64LE=Q((function(t){W(t>>>=0,"offset");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||q(t,this.length-8);const n=this[t+4]+256*this[t+5]+65536*this[t+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(e+256*this[++t]+65536*this[++t]+this[++t]*2**24)})),u.prototype.readBigInt64BE=Q((function(t){W(t>>>=0,"offset");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||q(t,this.length-8);const n=(e<<24)+65536*this[++t]+256*this[++t]+this[++t];return(BigInt(n)<<BigInt(32))+BigInt(this[++t]*2**24+65536*this[++t]+256*this[++t]+r)})),u.prototype.readFloatLE=function(t,e){return t>>>=0,e||O(t,4,this.length),i.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return t>>>=0,e||O(t,4,this.length),i.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return t>>>=0,e||O(t,8,this.length),i.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return t>>>=0,e||O(t,8,this.length),i.read(this,t,!1,52,8)},u.prototype.writeUintLE=u.prototype.writeUIntLE=function(t,e,r,n){if(t=+t,e>>>=0,r>>>=0,!n){z(this,t,e,r,Math.pow(2,8*r)-1,0)}let i=1,s=0;for(this[e]=255&t;++s<r&&(i*=256);)this[e+s]=t/i&255;return e+r},u.prototype.writeUintBE=u.prototype.writeUIntBE=function(t,e,r,n){if(t=+t,e>>>=0,r>>>=0,!n){z(this,t,e,r,Math.pow(2,8*r)-1,0)}let i=r-1,s=1;for(this[e+i]=255&t;--i>=0&&(s*=256);)this[e+i]=t/s&255;return e+r},u.prototype.writeUint8=u.prototype.writeUInt8=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,1,255,0),this[e]=255&t,e+1},u.prototype.writeUint16LE=u.prototype.writeUInt16LE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},u.prototype.writeUint16BE=u.prototype.writeUInt16BE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},u.prototype.writeUint32LE=u.prototype.writeUInt32LE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},u.prototype.writeUint32BE=u.prototype.writeUInt32BE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},u.prototype.writeBigUInt64LE=Q((function(t,e=0){return N(this,t,e,BigInt(0),BigInt("0xffffffffffffffff"))})),u.prototype.writeBigUInt64BE=Q((function(t,e=0){return E(this,t,e,BigInt(0),BigInt("0xffffffffffffffff"))})),u.prototype.writeIntLE=function(t,e,r,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*r-1);z(this,t,e,r,n-1,-n)}let i=0,s=1,o=0;for(this[e]=255&t;++i<r&&(s*=256);)t<0&&0===o&&0!==this[e+i-1]&&(o=1),this[e+i]=(t/s>>0)-o&255;return e+r},u.prototype.writeIntBE=function(t,e,r,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*r-1);z(this,t,e,r,n-1,-n)}let i=r-1,s=1,o=0;for(this[e+i]=255&t;--i>=0&&(s*=256);)t<0&&0===o&&0!==this[e+i+1]&&(o=1),this[e+i]=(t/s>>0)-o&255;return e+r},u.prototype.writeInt8=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},u.prototype.writeInt16BE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},u.prototype.writeInt32LE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},u.prototype.writeInt32BE=function(t,e,r){return t=+t,e>>>=0,r||z(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},u.prototype.writeBigInt64LE=Q((function(t,e=0){return N(this,t,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),u.prototype.writeBigInt64BE=Q((function(t,e=0){return E(this,t,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),u.prototype.writeFloatLE=function(t,e,r){return R(this,t,e,!0,r)},u.prototype.writeFloatBE=function(t,e,r){return R(this,t,e,!1,r)},u.prototype.writeDoubleLE=function(t,e,r){return I(this,t,e,!0,r)},u.prototype.writeDoubleBE=function(t,e,r){return I(this,t,e,!1,r)},u.prototype.copy=function(t,e,r,n){if(!u.isBuffer(t))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);const i=n-r;return this===t&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,r,n):Uint8Array.prototype.set.call(t,this.subarray(r,n),e),i},u.prototype.fill=function(t,e,r,n){if("string"==typeof t){if("string"==typeof e?(n=e,e=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!u.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===t.length){const e=t.charCodeAt(0);("utf8"===n&&e<128||"latin1"===n)&&(t=e)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<r)throw new RangeError("Out of range index");if(r<=e)return this;let i;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),"number"==typeof t)for(i=e;i<r;++i)this[i]=t;else{const s=u.isBuffer(t)?t:u.from(t,n),o=s.length;if(0===o)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(i=0;i<r-e;++i)this[i+e]=s[i%o]}return this};const B={};function X(t,e,r){B[t]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(t){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:t,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}function V(t){let e="",r=t.length;const n="-"===t[0]?1:0;for(;r>=n+4;r-=3)e=`_${t.slice(r-3,r)}${e}`;return`${t.slice(0,r)}${e}`}function C(t,e,r,n,i,s){if(t>r||t<e){const n="bigint"==typeof e?"n":"";let i;throw i=s>3?0===e||e===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(s+1)}${n}`:`>= -(2${n} ** ${8*(s+1)-1}${n}) and < 2 ** ${8*(s+1)-1}${n}`:`>= ${e}${n} and <= ${r}${n}`,new B.ERR_OUT_OF_RANGE("value",i,t)}!function(t,e,r){W(e,"offset"),void 0!==t[e]&&void 0!==t[e+r]||q(e,t.length-(r+1))}(n,i,s)}function W(t,e){if("number"!=typeof t)throw new B.ERR_INVALID_ARG_TYPE(e,"number",t)}function q(t,e,r){if(Math.floor(t)!==t)throw W(t,r),new B.ERR_OUT_OF_RANGE(r||"offset","an integer",t);if(e<0)throw new B.ERR_BUFFER_OUT_OF_BOUNDS;throw new B.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${e}`,t)}X("ERR_BUFFER_OUT_OF_BOUNDS",(function(t){return t?`${t} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),X("ERR_INVALID_ARG_TYPE",(function(t,e){return`The "${t}" argument must be of type number. Received type ${typeof e}`}),TypeError),X("ERR_OUT_OF_RANGE",(function(t,e,r){let n=`The value of "${t}" is out of range.`,i=r;return Number.isInteger(r)&&Math.abs(r)>2**32?i=V(String(r)):"bigint"==typeof r&&(i=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(i=V(i)),i+="n"),n+=` It must be ${e}. Received ${i}`,n}),RangeError);const Z=/[^+/0-9A-Za-z-_]/g;function F(t,e){let r;e=e||1/0;const n=t.length;let i=null;const s=[];for(let o=0;o<n;++o){if(r=t.charCodeAt(o),r>55295&&r<57344){if(!i){if(r>56319){(e-=3)>-1&&s.push(239,191,189);continue}if(o+1===n){(e-=3)>-1&&s.push(239,191,189);continue}i=r;continue}if(r<56320){(e-=3)>-1&&s.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(e-=3)>-1&&s.push(239,191,189);if(i=null,r<128){if((e-=1)<0)break;s.push(r)}else if(r<2048){if((e-=2)<0)break;s.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;s.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;s.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return s}function U(t){return n.toByteArray(function(t){if((t=(t=t.split("=")[0]).trim().replace(Z,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function G(t,e,r,n){let i;for(i=0;i<n&&!(i+r>=e.length||i>=t.length);++i)e[i+r]=t[i];return i}function _(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function K(t){return t!=t}const J=function(){const t="0123456789abcdef",e=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let i=0;i<16;++i)e[n+i]=t[r]+t[i]}return e}();function Q(t){return"undefined"==typeof BigInt?$:t}function $(){throw new Error("BigInt not supported")}},45033:function(t,e,r){!function(t,e){"use strict";function n(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o=r(48764).Buffer}catch(t){}function a(t,e,r){for(var n=0,i=Math.min(t.length,r),s=e;s<i;s++){var o=t.charCodeAt(s)-48;n<<=4,n|=o>=49&&o<=54?o-49+10:o>=17&&o<=22?o-17+10:15&o}return n}function u(t,e,r,n){for(var i=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&i++,16===e?this._parseHex(t,i):this._parseBase(t,e,i),"-"===t[0]&&(this.negative=1),this.strip(),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var s,o,a=0;if("be"===r)for(i=t.length-1,s=0;i>=0;i-=3)o=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(i=0,s=0;i<t.length;i+=3)o=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,i,s=0;for(r=t.length-6,n=0;r>=e;r-=6)i=a(t,r,r+6),this.words[n]|=i<<s&67108863,this.words[n+1]|=i>>>26-s&4194303,(s+=24)>=26&&(s-=26,n++);r+6!==e&&(i=a(t,e,r+6),this.words[n]|=i<<s&67108863,this.words[n+1]|=i>>>26-s&4194303),this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var s=t.length-r,o=s%n,a=Math.min(s,s-o)+r,h=0,c=r;c<a;c+=n)h=u(t,c,c+n,e),this.imuln(i),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h);if(0!==o){var l=1;for(h=u(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h)}},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var h=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],c=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],l=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function d(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],s=0|e.words[0],o=i*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(i=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var i=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<i|s)).toString(16);r=0!==(s=a>>>24-i&16777215)||o!==this.length-1?h[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var d=c[t],f=l[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?m+r:h[d-m.length]+m+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return n(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var i=this.byteLength(),s=r||Math.max(1,i);n(i<=s,"byte array longer than desired length"),n(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-i;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){n("number"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},s.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,s=0;s<n.length;s++)e=(0|r.words[s])+(0|n.words[s])+i,this.words[s]=67108863&e,i=e>>>26;for(;0!==i&&s<r.length;s++)e=(0|r.words[s])+i,this.words[s]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var s=0,o=0;o<n.length;o++)s=(e=(0|r.words[o])-(0|n.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var f=function(t,e,r){var n,i,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,m=f>>>13,y=0|o[2],v=8191&y,g=y>>>13,b=0|o[3],w=8191&b,M=b>>>13,k=0|o[4],x=8191&k,P=k>>>13,L=0|o[5],T=8191&L,S=L>>>13,A=0|o[6],D=8191&A,j=A>>>13,H=0|o[7],O=8191&H,z=H>>>13,N=0|o[8],E=8191&N,Y=N>>>13,R=0|o[9],I=8191&R,B=R>>>13,X=0|a[0],V=8191&X,C=X>>>13,W=0|a[1],q=8191&W,Z=W>>>13,F=0|a[2],U=8191&F,G=F>>>13,_=0|a[3],K=8191&_,J=_>>>13,Q=0|a[4],$=8191&Q,tt=Q>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],st=8191&it,ot=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,mt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var yt=(h+(n=Math.imul(l,V))|0)+((8191&(i=(i=Math.imul(l,C))+Math.imul(d,V)|0))<<13)|0;h=((s=Math.imul(d,C))+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(p,V),i=(i=Math.imul(p,C))+Math.imul(m,V)|0,s=Math.imul(m,C);var vt=(h+(n=n+Math.imul(l,q)|0)|0)+((8191&(i=(i=i+Math.imul(l,Z)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,Z)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(v,V),i=(i=Math.imul(v,C))+Math.imul(g,V)|0,s=Math.imul(g,C),n=n+Math.imul(p,q)|0,i=(i=i+Math.imul(p,Z)|0)+Math.imul(m,q)|0,s=s+Math.imul(m,Z)|0;var gt=(h+(n=n+Math.imul(l,U)|0)|0)+((8191&(i=(i=i+Math.imul(l,G)|0)+Math.imul(d,U)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(w,V),i=(i=Math.imul(w,C))+Math.imul(M,V)|0,s=Math.imul(M,C),n=n+Math.imul(v,q)|0,i=(i=i+Math.imul(v,Z)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,Z)|0,n=n+Math.imul(p,U)|0,i=(i=i+Math.imul(p,G)|0)+Math.imul(m,U)|0,s=s+Math.imul(m,G)|0;var bt=(h+(n=n+Math.imul(l,K)|0)|0)+((8191&(i=(i=i+Math.imul(l,J)|0)+Math.imul(d,K)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(x,V),i=(i=Math.imul(x,C))+Math.imul(P,V)|0,s=Math.imul(P,C),n=n+Math.imul(w,q)|0,i=(i=i+Math.imul(w,Z)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,Z)|0,n=n+Math.imul(v,U)|0,i=(i=i+Math.imul(v,G)|0)+Math.imul(g,U)|0,s=s+Math.imul(g,G)|0,n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,J)|0)+Math.imul(m,K)|0,s=s+Math.imul(m,J)|0;var wt=(h+(n=n+Math.imul(l,$)|0)|0)+((8191&(i=(i=i+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(T,V),i=(i=Math.imul(T,C))+Math.imul(S,V)|0,s=Math.imul(S,C),n=n+Math.imul(x,q)|0,i=(i=i+Math.imul(x,Z)|0)+Math.imul(P,q)|0,s=s+Math.imul(P,Z)|0,n=n+Math.imul(w,U)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(M,U)|0,s=s+Math.imul(M,G)|0,n=n+Math.imul(v,K)|0,i=(i=i+Math.imul(v,J)|0)+Math.imul(g,K)|0,s=s+Math.imul(g,J)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,s=s+Math.imul(m,tt)|0;var Mt=(h+(n=n+Math.imul(l,rt)|0)|0)+((8191&(i=(i=i+Math.imul(l,nt)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,nt)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,C))+Math.imul(j,V)|0,s=Math.imul(j,C),n=n+Math.imul(T,q)|0,i=(i=i+Math.imul(T,Z)|0)+Math.imul(S,q)|0,s=s+Math.imul(S,Z)|0,n=n+Math.imul(x,U)|0,i=(i=i+Math.imul(x,G)|0)+Math.imul(P,U)|0,s=s+Math.imul(P,G)|0,n=n+Math.imul(w,K)|0,i=(i=i+Math.imul(w,J)|0)+Math.imul(M,K)|0,s=s+Math.imul(M,J)|0,n=n+Math.imul(v,$)|0,i=(i=i+Math.imul(v,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,s=s+Math.imul(m,nt)|0;var kt=(h+(n=n+Math.imul(l,st)|0)|0)+((8191&(i=(i=i+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(O,V),i=(i=Math.imul(O,C))+Math.imul(z,V)|0,s=Math.imul(z,C),n=n+Math.imul(D,q)|0,i=(i=i+Math.imul(D,Z)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,Z)|0,n=n+Math.imul(T,U)|0,i=(i=i+Math.imul(T,G)|0)+Math.imul(S,U)|0,s=s+Math.imul(S,G)|0,n=n+Math.imul(x,K)|0,i=(i=i+Math.imul(x,J)|0)+Math.imul(P,K)|0,s=s+Math.imul(P,J)|0,n=n+Math.imul(w,$)|0,i=(i=i+Math.imul(w,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,n=n+Math.imul(v,rt)|0,i=(i=i+Math.imul(v,nt)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,nt)|0,n=n+Math.imul(p,st)|0,i=(i=i+Math.imul(p,ot)|0)+Math.imul(m,st)|0,s=s+Math.imul(m,ot)|0;var xt=(h+(n=n+Math.imul(l,ut)|0)|0)+((8191&(i=(i=i+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(E,V),i=(i=Math.imul(E,C))+Math.imul(Y,V)|0,s=Math.imul(Y,C),n=n+Math.imul(O,q)|0,i=(i=i+Math.imul(O,Z)|0)+Math.imul(z,q)|0,s=s+Math.imul(z,Z)|0,n=n+Math.imul(D,U)|0,i=(i=i+Math.imul(D,G)|0)+Math.imul(j,U)|0,s=s+Math.imul(j,G)|0,n=n+Math.imul(T,K)|0,i=(i=i+Math.imul(T,J)|0)+Math.imul(S,K)|0,s=s+Math.imul(S,J)|0,n=n+Math.imul(x,$)|0,i=(i=i+Math.imul(x,tt)|0)+Math.imul(P,$)|0,s=s+Math.imul(P,tt)|0,n=n+Math.imul(w,rt)|0,i=(i=i+Math.imul(w,nt)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,nt)|0,n=n+Math.imul(v,st)|0,i=(i=i+Math.imul(v,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,s=s+Math.imul(m,ht)|0;var Pt=(h+(n=n+Math.imul(l,lt)|0)|0)+((8191&(i=(i=i+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(i>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,n=Math.imul(I,V),i=(i=Math.imul(I,C))+Math.imul(B,V)|0,s=Math.imul(B,C),n=n+Math.imul(E,q)|0,i=(i=i+Math.imul(E,Z)|0)+Math.imul(Y,q)|0,s=s+Math.imul(Y,Z)|0,n=n+Math.imul(O,U)|0,i=(i=i+Math.imul(O,G)|0)+Math.imul(z,U)|0,s=s+Math.imul(z,G)|0,n=n+Math.imul(D,K)|0,i=(i=i+Math.imul(D,J)|0)+Math.imul(j,K)|0,s=s+Math.imul(j,J)|0,n=n+Math.imul(T,$)|0,i=(i=i+Math.imul(T,tt)|0)+Math.imul(S,$)|0,s=s+Math.imul(S,tt)|0,n=n+Math.imul(x,rt)|0,i=(i=i+Math.imul(x,nt)|0)+Math.imul(P,rt)|0,s=s+Math.imul(P,nt)|0,n=n+Math.imul(w,st)|0,i=(i=i+Math.imul(w,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,n=n+Math.imul(v,ut)|0,i=(i=i+Math.imul(v,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0,n=n+Math.imul(p,lt)|0,i=(i=i+Math.imul(p,dt)|0)+Math.imul(m,lt)|0,s=s+Math.imul(m,dt)|0;var Lt=(h+(n=n+Math.imul(l,pt)|0)|0)+((8191&(i=(i=i+Math.imul(l,mt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,mt)|0)+(i>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,n=Math.imul(I,q),i=(i=Math.imul(I,Z))+Math.imul(B,q)|0,s=Math.imul(B,Z),n=n+Math.imul(E,U)|0,i=(i=i+Math.imul(E,G)|0)+Math.imul(Y,U)|0,s=s+Math.imul(Y,G)|0,n=n+Math.imul(O,K)|0,i=(i=i+Math.imul(O,J)|0)+Math.imul(z,K)|0,s=s+Math.imul(z,J)|0,n=n+Math.imul(D,$)|0,i=(i=i+Math.imul(D,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,n=n+Math.imul(T,rt)|0,i=(i=i+Math.imul(T,nt)|0)+Math.imul(S,rt)|0,s=s+Math.imul(S,nt)|0,n=n+Math.imul(x,st)|0,i=(i=i+Math.imul(x,ot)|0)+Math.imul(P,st)|0,s=s+Math.imul(P,ot)|0,n=n+Math.imul(w,ut)|0,i=(i=i+Math.imul(w,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,n=n+Math.imul(v,lt)|0,i=(i=i+Math.imul(v,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var Tt=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((s=s+Math.imul(m,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,n=Math.imul(I,U),i=(i=Math.imul(I,G))+Math.imul(B,U)|0,s=Math.imul(B,G),n=n+Math.imul(E,K)|0,i=(i=i+Math.imul(E,J)|0)+Math.imul(Y,K)|0,s=s+Math.imul(Y,J)|0,n=n+Math.imul(O,$)|0,i=(i=i+Math.imul(O,tt)|0)+Math.imul(z,$)|0,s=s+Math.imul(z,tt)|0,n=n+Math.imul(D,rt)|0,i=(i=i+Math.imul(D,nt)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,nt)|0,n=n+Math.imul(T,st)|0,i=(i=i+Math.imul(T,ot)|0)+Math.imul(S,st)|0,s=s+Math.imul(S,ot)|0,n=n+Math.imul(x,ut)|0,i=(i=i+Math.imul(x,ht)|0)+Math.imul(P,ut)|0,s=s+Math.imul(P,ht)|0,n=n+Math.imul(w,lt)|0,i=(i=i+Math.imul(w,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var St=(h+(n=n+Math.imul(v,pt)|0)|0)+((8191&(i=(i=i+Math.imul(v,mt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(I,K),i=(i=Math.imul(I,J))+Math.imul(B,K)|0,s=Math.imul(B,J),n=n+Math.imul(E,$)|0,i=(i=i+Math.imul(E,tt)|0)+Math.imul(Y,$)|0,s=s+Math.imul(Y,tt)|0,n=n+Math.imul(O,rt)|0,i=(i=i+Math.imul(O,nt)|0)+Math.imul(z,rt)|0,s=s+Math.imul(z,nt)|0,n=n+Math.imul(D,st)|0,i=(i=i+Math.imul(D,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,n=n+Math.imul(T,ut)|0,i=(i=i+Math.imul(T,ht)|0)+Math.imul(S,ut)|0,s=s+Math.imul(S,ht)|0,n=n+Math.imul(x,lt)|0,i=(i=i+Math.imul(x,dt)|0)+Math.imul(P,lt)|0,s=s+Math.imul(P,dt)|0;var At=(h+(n=n+Math.imul(w,pt)|0)|0)+((8191&(i=(i=i+Math.imul(w,mt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,mt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(I,$),i=(i=Math.imul(I,tt))+Math.imul(B,$)|0,s=Math.imul(B,tt),n=n+Math.imul(E,rt)|0,i=(i=i+Math.imul(E,nt)|0)+Math.imul(Y,rt)|0,s=s+Math.imul(Y,nt)|0,n=n+Math.imul(O,st)|0,i=(i=i+Math.imul(O,ot)|0)+Math.imul(z,st)|0,s=s+Math.imul(z,ot)|0,n=n+Math.imul(D,ut)|0,i=(i=i+Math.imul(D,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,n=n+Math.imul(T,lt)|0,i=(i=i+Math.imul(T,dt)|0)+Math.imul(S,lt)|0,s=s+Math.imul(S,dt)|0;var Dt=(h+(n=n+Math.imul(x,pt)|0)|0)+((8191&(i=(i=i+Math.imul(x,mt)|0)+Math.imul(P,pt)|0))<<13)|0;h=((s=s+Math.imul(P,mt)|0)+(i>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,n=Math.imul(I,rt),i=(i=Math.imul(I,nt))+Math.imul(B,rt)|0,s=Math.imul(B,nt),n=n+Math.imul(E,st)|0,i=(i=i+Math.imul(E,ot)|0)+Math.imul(Y,st)|0,s=s+Math.imul(Y,ot)|0,n=n+Math.imul(O,ut)|0,i=(i=i+Math.imul(O,ht)|0)+Math.imul(z,ut)|0,s=s+Math.imul(z,ht)|0,n=n+Math.imul(D,lt)|0,i=(i=i+Math.imul(D,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var jt=(h+(n=n+Math.imul(T,pt)|0)|0)+((8191&(i=(i=i+Math.imul(T,mt)|0)+Math.imul(S,pt)|0))<<13)|0;h=((s=s+Math.imul(S,mt)|0)+(i>>>13)|0)+(jt>>>26)|0,jt&=67108863,n=Math.imul(I,st),i=(i=Math.imul(I,ot))+Math.imul(B,st)|0,s=Math.imul(B,ot),n=n+Math.imul(E,ut)|0,i=(i=i+Math.imul(E,ht)|0)+Math.imul(Y,ut)|0,s=s+Math.imul(Y,ht)|0,n=n+Math.imul(O,lt)|0,i=(i=i+Math.imul(O,dt)|0)+Math.imul(z,lt)|0,s=s+Math.imul(z,dt)|0;var Ht=(h+(n=n+Math.imul(D,pt)|0)|0)+((8191&(i=(i=i+Math.imul(D,mt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,mt)|0)+(i>>>13)|0)+(Ht>>>26)|0,Ht&=67108863,n=Math.imul(I,ut),i=(i=Math.imul(I,ht))+Math.imul(B,ut)|0,s=Math.imul(B,ht),n=n+Math.imul(E,lt)|0,i=(i=i+Math.imul(E,dt)|0)+Math.imul(Y,lt)|0,s=s+Math.imul(Y,dt)|0;var Ot=(h+(n=n+Math.imul(O,pt)|0)|0)+((8191&(i=(i=i+Math.imul(O,mt)|0)+Math.imul(z,pt)|0))<<13)|0;h=((s=s+Math.imul(z,mt)|0)+(i>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,n=Math.imul(I,lt),i=(i=Math.imul(I,dt))+Math.imul(B,lt)|0,s=Math.imul(B,dt);var zt=(h+(n=n+Math.imul(E,pt)|0)|0)+((8191&(i=(i=i+Math.imul(E,mt)|0)+Math.imul(Y,pt)|0))<<13)|0;h=((s=s+Math.imul(Y,mt)|0)+(i>>>13)|0)+(zt>>>26)|0,zt&=67108863;var Nt=(h+(n=Math.imul(I,pt))|0)+((8191&(i=(i=Math.imul(I,mt))+Math.imul(B,pt)|0))<<13)|0;return h=((s=Math.imul(B,mt))+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=yt,u[1]=vt,u[2]=gt,u[3]=bt,u[4]=wt,u[5]=Mt,u[6]=kt,u[7]=xt,u[8]=Pt,u[9]=Lt,u[10]=Tt,u[11]=St,u[12]=At,u[13]=Dt,u[14]=jt,u[15]=Ht,u[16]=Ot,u[17]=zt,u[18]=Nt,0!==h&&(u[19]=h,r.length++),r};function p(t,e,r){return(new m).mulp(t,e,r)}function m(t,e){this.x=t,this.y=e}Math.imul||(f=d),s.prototype.mulTo=function(t,e){var r,n=this.length+t.length;return r=10===this.length&&10===t.length?f(this,t,e):n<63?d(this,t,e):n<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,s=0;s<r.length-1;s++){var o=i;i=0;for(var a=67108863&n,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),i+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,n=o,o=i}return 0!==n?r.words[s]=n:r.length--,r.strip()}(this,t,e):p(this,t,e),r},m.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},m.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},m.prototype.permute=function(t,e,r,n,i,s){for(var o=0;o<s;o++)n[o]=e[t[o]],i[o]=r[t[o]]},m.prototype.transform=function(t,e,r,n,i,s){this.permute(s,t,e,r,n,i);for(var o=1;o<i;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<i;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],m=n[c+f],y=r[c+f+o],v=n[c+f+o],g=l*y-d*v;v=l*v+d*y,y=g,r[c+f]=p+y,n[c+f]=m+v,r[c+f+o]=p-y,n[c+f+o]=m-v,f!==a&&(g=u*l-h*d,d=u*d+h*l,l=g)}},m.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},m.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},m.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},m.prototype.convert13b=function(t,e,r,i){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<i;++o)r[o]=0;n(0===s),n(0==(-8192&s))},m.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},m.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),s=this.stub(n),o=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),c=new Array(n),l=new Array(n),d=r.words;d.length=n,this.convert13b(t.words,t.length,o,n),this.convert13b(e.words,e.length,h,n),this.transform(o,s,a,u,n,i),this.transform(h,s,c,l,n,i);for(var f=0;f<n;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,n),this.transform(a,u,d,s,n,i),this.conjugate(d,s,n),this.normalize13b(d,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),p(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var e=0,r=0;r<this.length;r++){var i=(0|this.words[r])*t,s=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=(t.words[n]&1<<i)>>>i}return e}(t);if(0===e.length)return new s(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},s.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},s.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var i;n("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(i-=o,i=Math.max(0,i),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=i);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r)&&!!(this.words[r]&i)},s.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var i,s,o=t.length+r;this._expand(o);var a=0;for(i=0;i<t.length;i++){s=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&s}for(;i<this.length-r;i++)a=(s=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&s;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(s=-(0|this.words[i])+a)>>26,this.words[i]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,o=0|i.words[i.length-1];0!==(r=26-this._countBits(o))&&(i=i.ushln(r),n.iushln(r),o=0|i.words[i.length-1]);var a,u=n.length-i.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=n.clone()._ishlnsubmul(i,1,u);0===c.negative&&(n=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|n.words[i.length+l])+(0|n.words[i.length+l-1]);for(d=Math.min(d/o|0,67108863),n._ishlnsubmul(i,d,l);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(i,1,l),n.isZero()||(n.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),n.strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},s.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(i=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:i,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var i,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),s=r.cmp(n);return s<0||1===i&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){n(t<=67108863);for(var e=(1<<26)%t,r=0,i=this.length-1;i>=0;i--)r=(e*r+(0|this.words[i]))%t;return r},s.prototype.idivn=function(t){n(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*e;this.words[r]=i/t|0,e=i%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(c),o.isub(l)),i.iushrn(1),o.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),o.isub(u)):(r.isub(e),a.isub(i),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(i=0===e.cmpn(1)?o:a).cmpn(0)<0&&i.iadd(t),i},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var s=e;e=r,r=s}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){n("number"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var s=i,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new k(t)},s.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var y={k256:null,p224:null,p192:null,p25519:null};function v(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function g(){v.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function b(){v.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function w(){v.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function M(){v.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function k(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function x(t){k.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}v.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},v.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):r.strip(),r},v.prototype.split=function(t,e){t.iushrn(this.n,0,e)},v.prototype.imulK=function(t){return t.imul(this.k)},i(g,v),g.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,i=10;i<t.length;i++){var o=0|t.words[i];t.words[i-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[i-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},g.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(b,v),i(w,v),i(M,v),M.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(y[t])return y[t];var e;if("k256"===t)e=new g;else if("p224"===t)e=new b;else if("p192"===t)e=new w;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new M}return y[t]=e,e},k.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},k.prototype._verify2=function(t,e){n(0==(t.negative|e.negative),"red works only with positives"),n(t.red&&t.red===e.red,"red works only with red numbers")},k.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},k.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},k.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},k.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},k.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},k.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},k.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},k.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},k.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},k.prototype.isqr=function(t){return this.imul(t,t.clone())},k.prototype.sqr=function(t){return this.mul(t,t)},k.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),o=0;!i.isZero()&&0===i.andln(1);)o++,i.iushrn(1);n(!i.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,i),d=this.pow(t,i.addn(1).iushrn(1)),f=this.pow(t,i),p=o;0!==f.cmp(a);){for(var m=f,y=0;0!==m.cmp(a);y++)m=m.redSqr();n(y<p);var v=this.pow(l,new s(1).iushln(p-y-1));d=d.redMul(v),l=v.redSqr(),f=f.redMul(l),p=y}return d},k.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},k.prototype.pow=function(t,e){if(e.isZero())return new s(1);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],c=u-1;c>=0;c--){var l=h>>c&1;i!==r[0]&&(i=this.sqr(i)),0!==l||0!==o?(o<<=1,o|=l,(4===++a||0===n&&0===c)&&(i=this.mul(i,r[o]),a=0,o=0)):a=0}u=26}return i},k.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},k.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new x(t)},i(x,k),x.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},x.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},x.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},x.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},x.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},83206:(t,e,r)=>{var n=r(45033),i=r(49604);t.exports=function(t){if("string"==typeof t||"number"==typeof t){var e=new n(1),r=String(t).toLowerCase().trim(),s="0x"===r.substr(0,2)||"-0x"===r.substr(0,3),o=i(r);if("-"===o.substr(0,1)&&(o=i(o.slice(1)),e=new n(-1,10)),!(o=""===o?"0":o).match(/^-?[0-9]+$/)&&o.match(/^[0-9A-Fa-f]+$/)||o.match(/^[a-fA-F]+$/)||!0===s&&o.match(/^[0-9A-Fa-f]+$/))return new n(o,16).mul(e);if((o.match(/^-?[0-9]+$/)||""===o)&&!1===s)return new n(o,10).mul(e)}else if("object"==typeof t&&t.toString&&!t.pop&&!t.push&&t.toString(10).match(/^-?[0-9]+$/)&&(t.mul||t.dividedToIntegerBy))return new n(t.toString(10),10);throw new Error("[number-to-bn] while converting number "+JSON.stringify(t)+" to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.")}},24244:t=>{"use strict";var e=function(t){return t!=t};t.exports=function(t,r){return 0===t&&0===r?1/t==1/r:t===r||!(!e(t)||!e(r))}},20609:(t,e,r)=>{"use strict";var n=r(4289),i=r(55559),s=r(24244),o=r(75624),a=r(52281),u=i(o(),Object);n(u,{getPolyfill:o,implementation:s,shim:a}),t.exports=u},75624:(t,e,r)=>{"use strict";var n=r(24244);t.exports=function(){return"function"==typeof Object.is?Object.is:n}},52281:(t,e,r)=>{"use strict";var n=r(75624),i=r(4289);t.exports=function(){var t=n();return i(Object,{is:t},{is:function(){return Object.is!==t}}),t}},18987:(t,e,r)=>{"use strict";var n;if(!Object.keys){var i=Object.prototype.hasOwnProperty,s=Object.prototype.toString,o=r(21414),a=Object.prototype.propertyIsEnumerable,u=!a.call({toString:null},"toString"),h=a.call((function(){}),"prototype"),c=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],l=function(t){var e=t.constructor;return e&&e.prototype===t},d={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$onmozfullscreenchange:!0,$onmozfullscreenerror:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},f=function(){if("undefined"==typeof window)return!1;for(var t in window)try{if(!d["$"+t]&&i.call(window,t)&&null!==window[t]&&"object"==typeof window[t])try{l(window[t])}catch(t){return!0}}catch(t){return!0}return!1}();n=function(t){var e=null!==t&&"object"==typeof t,r="[object Function]"===s.call(t),n=o(t),a=e&&"[object String]"===s.call(t),d=[];if(!e&&!r&&!n)throw new TypeError("Object.keys called on a non-object");var p=h&&r;if(a&&t.length>0&&!i.call(t,0))for(var m=0;m<t.length;++m)d.push(String(m));if(n&&t.length>0)for(var y=0;y<t.length;++y)d.push(String(y));else for(var v in t)p&&"prototype"===v||!i.call(t,v)||d.push(String(v));if(u)for(var g=function(t){if("undefined"==typeof window||!f)return l(t);try{return l(t)}catch(t){return!1}}(t),b=0;b<c.length;++b)g&&"constructor"===c[b]||!i.call(t,c[b])||d.push(c[b]);return d}}t.exports=n},82215:(t,e,r)=>{"use strict";var n=Array.prototype.slice,i=r(21414),s=Object.keys,o=s?function(t){return s(t)}:r(18987),a=Object.keys;o.shim=function(){if(Object.keys){var t=function(){var t=Object.keys(arguments);return t&&t.length===arguments.length}(1,2);t||(Object.keys=function(t){return i(t)?a(n.call(t)):a(t)})}else Object.keys=o;return Object.keys||o},t.exports=o},21414:t=>{"use strict";var e=Object.prototype.toString;t.exports=function(t){var r=e.call(t),n="[object Arguments]"===r;return n||(n="[object Array]"!==r&&null!==t&&"object"==typeof t&&"number"==typeof t.length&&t.length>=0&&"[object Function]"===e.call(t.callee)),n}},52818:(t,e,r)=>{"use strict";var n=r(39809);e.certificate=r(41934);var i=n.define("RSAPrivateKey",(function(){this.seq().obj(this.key("version").int(),this.key("modulus").int(),this.key("publicExponent").int(),this.key("privateExponent").int(),this.key("prime1").int(),this.key("prime2").int(),this.key("exponent1").int(),this.key("exponent2").int(),this.key("coefficient").int())}));e.RSAPrivateKey=i;var s=n.define("RSAPublicKey",(function(){this.seq().obj(this.key("modulus").int(),this.key("publicExponent").int())}));e.RSAPublicKey=s;var o=n.define("SubjectPublicKeyInfo",(function(){this.seq().obj(this.key("algorithm").use(a),this.key("subjectPublicKey").bitstr())}));e.PublicKey=o;var a=n.define("AlgorithmIdentifier",(function(){this.seq().obj(this.key("algorithm").objid(),this.key("none").null_().optional(),this.key("curve").objid().optional(),this.key("params").seq().obj(this.key("p").int(),this.key("q").int(),this.key("g").int()).optional())})),u=n.define("PrivateKeyInfo",(function(){this.seq().obj(this.key("version").int(),this.key("algorithm").use(a),this.key("subjectPrivateKey").octstr())}));e.PrivateKey=u;var h=n.define("EncryptedPrivateKeyInfo",(function(){this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(),this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(),this.key("kdeparams").seq().obj(this.key("salt").octstr(),this.key("iters").int())),this.key("cipher").seq().obj(this.key("algo").objid(),this.key("iv").octstr()))),this.key("subjectPrivateKey").octstr())}));e.EncryptedPrivateKey=h;var c=n.define("DSAPrivateKey",(function(){this.seq().obj(this.key("version").int(),this.key("p").int(),this.key("q").int(),this.key("g").int(),this.key("pub_key").int(),this.key("priv_key").int())}));e.DSAPrivateKey=c,e.DSAparam=n.define("DSAparam",(function(){this.int()}));var l=n.define("ECPrivateKey",(function(){this.seq().obj(this.key("version").int(),this.key("privateKey").octstr(),this.key("parameters").optional().explicit(0).use(d),this.key("publicKey").optional().explicit(1).bitstr())}));e.ECPrivateKey=l;var d=n.define("ECParameters",(function(){this.choice({namedCurve:this.objid()})}));e.signature=n.define("signature",(function(){this.seq().obj(this.key("r").int(),this.key("s").int())}))},41934:(t,e,r)=>{"use strict";var n=r(39809),i=n.define("Time",(function(){this.choice({utcTime:this.utctime(),generalTime:this.gentime()})})),s=n.define("AttributeTypeValue",(function(){this.seq().obj(this.key("type").objid(),this.key("value").any())})),o=n.define("AlgorithmIdentifier",(function(){this.seq().obj(this.key("algorithm").objid(),this.key("parameters").optional(),this.key("curve").objid().optional())})),a=n.define("SubjectPublicKeyInfo",(function(){this.seq().obj(this.key("algorithm").use(o),this.key("subjectPublicKey").bitstr())})),u=n.define("RelativeDistinguishedName",(function(){this.setof(s)})),h=n.define("RDNSequence",(function(){this.seqof(u)})),c=n.define("Name",(function(){this.choice({rdnSequence:this.use(h)})})),l=n.define("Validity",(function(){this.seq().obj(this.key("notBefore").use(i),this.key("notAfter").use(i))})),d=n.define("Extension",(function(){this.seq().obj(this.key("extnID").objid(),this.key("critical").bool().def(!1),this.key("extnValue").octstr())})),f=n.define("TBSCertificate",(function(){this.seq().obj(this.key("version").explicit(0).int().optional(),this.key("serialNumber").int(),this.key("signature").use(o),this.key("issuer").use(c),this.key("validity").use(l),this.key("subject").use(c),this.key("subjectPublicKeyInfo").use(a),this.key("issuerUniqueID").implicit(1).bitstr().optional(),this.key("subjectUniqueID").implicit(2).bitstr().optional(),this.key("extensions").explicit(3).seqof(d).optional())})),p=n.define("X509Certificate",(function(){this.seq().obj(this.key("tbsCertificate").use(f),this.key("signatureAlgorithm").use(o),this.key("signatureValue").bitstr())}));t.exports=p},77631:(t,e,r)=>{var n=/Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m,i=/^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m,s=/^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m,o=r(13048),a=r(44696),u=r(89509).Buffer;t.exports=function(t,e){var r,h=t.toString(),c=h.match(n);if(c){var l="aes"+c[1],d=u.from(c[2],"hex"),f=u.from(c[3].replace(/[\r\n]/g,""),"base64"),p=o(e,d.slice(0,8),parseInt(c[1],10)).key,m=[],y=a.createDecipheriv(l,p,d);m.push(y.update(f)),m.push(y.final()),r=u.concat(m)}else{var v=h.match(s);r=u.from(v[2].replace(/[\r\n]/g,""),"base64")}return{tag:h.match(i)[1],data:r}}},70980:(t,e,r)=>{var n=r(52818),i=r(22562),s=r(77631),o=r(44696),a=r(25632),u=r(89509).Buffer;function h(t){var e;"object"!=typeof t||u.isBuffer(t)||(e=t.passphrase,t=t.key),"string"==typeof t&&(t=u.from(t));var r,h,c=s(t,e),l=c.tag,d=c.data;switch(l){case"CERTIFICATE":h=n.certificate.decode(d,"der").tbsCertificate.subjectPublicKeyInfo;case"PUBLIC KEY":switch(h||(h=n.PublicKey.decode(d,"der")),r=h.algorithm.algorithm.join(".")){case"1.2.840.113549.1.1.1":return n.RSAPublicKey.decode(h.subjectPublicKey.data,"der");case"1.2.840.10045.2.1":return h.subjectPrivateKey=h.subjectPublicKey,{type:"ec",data:h};case"1.2.840.10040.4.1":return h.algorithm.params.pub_key=n.DSAparam.decode(h.subjectPublicKey.data,"der"),{type:"dsa",data:h.algorithm.params};default:throw new Error("unknown key id "+r)}case"ENCRYPTED PRIVATE KEY":d=function(t,e){var r=t.algorithm.decrypt.kde.kdeparams.salt,n=parseInt(t.algorithm.decrypt.kde.kdeparams.iters.toString(),10),s=i[t.algorithm.decrypt.cipher.algo.join(".")],h=t.algorithm.decrypt.cipher.iv,c=t.subjectPrivateKey,l=parseInt(s.split("-")[1],10)/8,d=a.pbkdf2Sync(e,r,n,l,"sha1"),f=o.createDecipheriv(s,d,h),p=[];return p.push(f.update(c)),p.push(f.final()),u.concat(p)}(d=n.EncryptedPrivateKey.decode(d,"der"),e);case"PRIVATE KEY":switch(r=(h=n.PrivateKey.decode(d,"der")).algorithm.algorithm.join(".")){case"1.2.840.113549.1.1.1":return n.RSAPrivateKey.decode(h.subjectPrivateKey,"der");case"1.2.840.10045.2.1":return{curve:h.algorithm.curve,privateKey:n.ECPrivateKey.decode(h.subjectPrivateKey,"der").privateKey};case"1.2.840.10040.4.1":return h.algorithm.params.priv_key=n.DSAparam.decode(h.subjectPrivateKey,"der"),{type:"dsa",params:h.algorithm.params};default:throw new Error("unknown key id "+r)}case"RSA PUBLIC KEY":return n.RSAPublicKey.decode(d,"der");case"RSA PRIVATE KEY":return n.RSAPrivateKey.decode(d,"der");case"DSA PRIVATE KEY":return{type:"dsa",params:n.DSAPrivateKey.decode(d,"der")};case"EC PRIVATE KEY":return{curve:(d=n.ECPrivateKey.decode(d,"der")).parameters.value,privateKey:d.privateKey};default:throw new Error("unknown key type "+l)}}t.exports=h,h.signature=n.signature},25632:(t,e,r)=>{e.pbkdf2=r(88638),e.pbkdf2Sync=r(91257)},88638:(t,e,r)=>{var n,i,s=r(89509).Buffer,o=r(77357),a=r(12368),u=r(91257),h=r(57777),c=r.g.crypto&&r.g.crypto.subtle,l={sha:"SHA-1","sha-1":"SHA-1",sha1:"SHA-1",sha256:"SHA-256","sha-256":"SHA-256",sha384:"SHA-384","sha-384":"SHA-384","sha-512":"SHA-512",sha512:"SHA-512"},d=[];function f(){return i||(i=r.g.process&&r.g.process.nextTick?r.g.process.nextTick:r.g.queueMicrotask?r.g.queueMicrotask:r.g.setImmediate?r.g.setImmediate:r.g.setTimeout)}function p(t,e,r,n,i){return c.importKey("raw",t,{name:"PBKDF2"},!1,["deriveBits"]).then((function(t){return c.deriveBits({name:"PBKDF2",salt:e,iterations:r,hash:{name:i}},t,n<<3)})).then((function(t){return s.from(t)}))}t.exports=function(t,e,i,m,y,v){"function"==typeof y&&(v=y,y=void 0);var g=l[(y=y||"sha1").toLowerCase()];if(g&&"function"==typeof r.g.Promise){if(o(i,m),t=h(t,a,"Password"),e=h(e,a,"Salt"),"function"!=typeof v)throw new Error("No callback provided to pbkdf2");!function(t,e){t.then((function(t){f()((function(){e(null,t)}))}),(function(t){f()((function(){e(t)}))}))}(function(t){if(r.g.process&&!r.g.process.browser)return Promise.resolve(!1);if(!c||!c.importKey||!c.deriveBits)return Promise.resolve(!1);if(void 0!==d[t])return d[t];var e=p(n=n||s.alloc(8),n,10,128,t).then((function(){return!0})).catch((function(){return!1}));return d[t]=e,e}(g).then((function(r){return r?p(t,e,i,m,g):u(t,e,i,m,y)})),v)}else f()((function(){var r;try{r=u(t,e,i,m,y)}catch(t){return v(t)}v(null,r)}))}},12368:(t,e,r)=>{var n,i=r(34155);if(r.g.process&&r.g.process.browser)n="utf-8";else if(r.g.process&&r.g.process.version){n=parseInt(i.version.split(".")[0].slice(1),10)>=6?"utf-8":"binary"}else n="utf-8";t.exports=n},77357:t=>{var e=Math.pow(2,30)-1;t.exports=function(t,r){if("number"!=typeof t)throw new TypeError("Iterations not a number");if(t<0)throw new TypeError("Bad iterations");if("number"!=typeof r)throw new TypeError("Key length not a number");if(r<0||r>e||r!=r)throw new TypeError("Bad key length")}},91257:(t,e,r)=>{var n=r(78028),i=r(79785),s=r(89072),o=r(89509).Buffer,a=r(77357),u=r(12368),h=r(57777),c=o.alloc(128),l={md5:16,sha1:20,sha224:28,sha256:32,sha384:48,sha512:64,rmd160:20,ripemd160:20};function d(t,e,r){var a=function(t){function e(e){return s(t).update(e).digest()}function r(t){return(new i).update(t).digest()}return"rmd160"===t||"ripemd160"===t?r:"md5"===t?n:e}(t),u="sha512"===t||"sha384"===t?128:64;e.length>u?e=a(e):e.length<u&&(e=o.concat([e,c],u));for(var h=o.allocUnsafe(u+l[t]),d=o.allocUnsafe(u+l[t]),f=0;f<u;f++)h[f]=54^e[f],d[f]=92^e[f];var p=o.allocUnsafe(u+r+4);h.copy(p,0,0,u),this.ipad1=p,this.ipad2=h,this.opad=d,this.alg=t,this.blocksize=u,this.hash=a,this.size=l[t]}d.prototype.run=function(t,e){return t.copy(e,this.blocksize),this.hash(e).copy(this.opad,this.blocksize),this.hash(this.opad)},t.exports=function(t,e,r,n,i){a(r,n);var s=new d(i=i||"sha1",t=h(t,u,"Password"),(e=h(e,u,"Salt")).length),c=o.allocUnsafe(n),f=o.allocUnsafe(e.length+4);e.copy(f,0,0,e.length);for(var p=0,m=l[i],y=Math.ceil(n/m),v=1;v<=y;v++){f.writeUInt32BE(v,e.length);for(var g=s.run(f,s.ipad1),b=g,w=1;w<r;w++){b=s.run(b,s.ipad2);for(var M=0;M<m;M++)g[M]^=b[M]}g.copy(c,p),p+=m}return c}},57777:(t,e,r)=>{var n=r(89509).Buffer;t.exports=function(t,e,r){if(n.isBuffer(t))return t;if("string"==typeof t)return n.from(t,e);if(ArrayBuffer.isView(t))return n.from(t.buffer);throw new TypeError(r+" must be a string, a Buffer, a typed array or a DataView")}},34155:t=>{var e,r,n=t.exports={};function i(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function o(t){if(e===setTimeout)return setTimeout(t,0);if((e===i||!e)&&setTimeout)return e=setTimeout,setTimeout(t,0);try{return e(t,0)}catch(r){try{return e.call(null,t,0)}catch(r){return e.call(this,t,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:i}catch(t){e=i}try{r="function"==typeof clearTimeout?clearTimeout:s}catch(t){r=s}}();var a,u=[],h=!1,c=-1;function l(){h&&a&&(h=!1,a.length?u=a.concat(u):c=-1,u.length&&d())}function d(){if(!h){var t=o(l);h=!0;for(var e=u.length;e;){for(a=u,u=[];++c<e;)a&&a[c].run();c=-1,e=u.length}a=null,h=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===s||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function f(t,e){this.fun=t,this.array=e}function p(){}n.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];u.push(new f(t,e)),1!==u.length||h||o(d)},f.prototype.run=function(){this.fun.apply(null,this.array)},n.title="browser",n.browser=!0,n.env={},n.argv=[],n.version="",n.versions={},n.on=p,n.addListener=p,n.once=p,n.off=p,n.removeListener=p,n.removeAllListeners=p,n.emit=p,n.prependListener=p,n.prependOnceListener=p,n.listeners=function(t){return[]},n.binding=function(t){throw new Error("process.binding is not supported")},n.cwd=function(){return"/"},n.chdir=function(t){throw new Error("process.chdir is not supported")},n.umask=function(){return 0}},7900:(t,e,r)=>{e.publicEncrypt=r(16559),e.privateDecrypt=r(26138),e.privateEncrypt=function(t,r){return e.publicEncrypt(t,r,!0)},e.publicDecrypt=function(t,r){return e.privateDecrypt(t,r,!0)}},99199:(t,e,r)=>{var n=r(23482),i=r(89509).Buffer;function s(t){var e=i.allocUnsafe(4);return e.writeUInt32BE(t,0),e}t.exports=function(t,e){for(var r,o=i.alloc(0),a=0;o.length<e;)r=s(a++),o=i.concat([o,n("sha1").update(t).update(r).digest()]);return o.slice(0,e)}},92144:function(t,e,r){!function(t,e){"use strict";function n(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(77108).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(t,e,r){var n=a(t,r);return r-1>=e&&(n|=a(t,r-1)<<4),n}function h(t,e,r,n){for(var i=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<t.length&&(16===e?this._parseHex(t,i,r):(this._parseBase(t,e,i),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var s,o,a=0;if("be"===r)for(i=t.length-1,s=0;i>=0;i-=3)o=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(i=0,s=0;i<t.length;i+=3)o=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,s=0,o=0;if("be"===r)for(n=t.length-1;n>=e;n-=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;else for(n=(t.length-e)%2==0?e+1:e;n<t.length;n+=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var s=t.length-r,o=s%n,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=n)u=h(t,c,c+n,e),this.imuln(i),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],s=0|e.words[0],o=i*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(i=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var i=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<i|s)).toString(16);r=0!==(s=a>>>24-i&16777215)||o!==this.length-1?c[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],f=d[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?m+r:c[h-m.length]+m+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return n(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var i=this.byteLength(),s=r||Math.max(1,i);n(i<=s,"byte array longer than desired length"),n(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-i;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){n("number"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},s.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,s=0;s<n.length;s++)e=(0|r.words[s])+(0|n.words[s])+i,this.words[s]=67108863&e,i=e>>>26;for(;0!==i&&s<r.length;s++)e=(0|r.words[s])+i,this.words[s]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var s=0,o=0;o<n.length;o++)s=(e=(0|r.words[o])-(0|n.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,r){var n,i,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,m=f>>>13,y=0|o[2],v=8191&y,g=y>>>13,b=0|o[3],w=8191&b,M=b>>>13,k=0|o[4],x=8191&k,P=k>>>13,L=0|o[5],T=8191&L,S=L>>>13,A=0|o[6],D=8191&A,j=A>>>13,H=0|o[7],O=8191&H,z=H>>>13,N=0|o[8],E=8191&N,Y=N>>>13,R=0|o[9],I=8191&R,B=R>>>13,X=0|a[0],V=8191&X,C=X>>>13,W=0|a[1],q=8191&W,Z=W>>>13,F=0|a[2],U=8191&F,G=F>>>13,_=0|a[3],K=8191&_,J=_>>>13,Q=0|a[4],$=8191&Q,tt=Q>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],st=8191&it,ot=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,mt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var yt=(h+(n=Math.imul(l,V))|0)+((8191&(i=(i=Math.imul(l,C))+Math.imul(d,V)|0))<<13)|0;h=((s=Math.imul(d,C))+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(p,V),i=(i=Math.imul(p,C))+Math.imul(m,V)|0,s=Math.imul(m,C);var vt=(h+(n=n+Math.imul(l,q)|0)|0)+((8191&(i=(i=i+Math.imul(l,Z)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,Z)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(v,V),i=(i=Math.imul(v,C))+Math.imul(g,V)|0,s=Math.imul(g,C),n=n+Math.imul(p,q)|0,i=(i=i+Math.imul(p,Z)|0)+Math.imul(m,q)|0,s=s+Math.imul(m,Z)|0;var gt=(h+(n=n+Math.imul(l,U)|0)|0)+((8191&(i=(i=i+Math.imul(l,G)|0)+Math.imul(d,U)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(w,V),i=(i=Math.imul(w,C))+Math.imul(M,V)|0,s=Math.imul(M,C),n=n+Math.imul(v,q)|0,i=(i=i+Math.imul(v,Z)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,Z)|0,n=n+Math.imul(p,U)|0,i=(i=i+Math.imul(p,G)|0)+Math.imul(m,U)|0,s=s+Math.imul(m,G)|0;var bt=(h+(n=n+Math.imul(l,K)|0)|0)+((8191&(i=(i=i+Math.imul(l,J)|0)+Math.imul(d,K)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(x,V),i=(i=Math.imul(x,C))+Math.imul(P,V)|0,s=Math.imul(P,C),n=n+Math.imul(w,q)|0,i=(i=i+Math.imul(w,Z)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,Z)|0,n=n+Math.imul(v,U)|0,i=(i=i+Math.imul(v,G)|0)+Math.imul(g,U)|0,s=s+Math.imul(g,G)|0,n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,J)|0)+Math.imul(m,K)|0,s=s+Math.imul(m,J)|0;var wt=(h+(n=n+Math.imul(l,$)|0)|0)+((8191&(i=(i=i+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(T,V),i=(i=Math.imul(T,C))+Math.imul(S,V)|0,s=Math.imul(S,C),n=n+Math.imul(x,q)|0,i=(i=i+Math.imul(x,Z)|0)+Math.imul(P,q)|0,s=s+Math.imul(P,Z)|0,n=n+Math.imul(w,U)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(M,U)|0,s=s+Math.imul(M,G)|0,n=n+Math.imul(v,K)|0,i=(i=i+Math.imul(v,J)|0)+Math.imul(g,K)|0,s=s+Math.imul(g,J)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,s=s+Math.imul(m,tt)|0;var Mt=(h+(n=n+Math.imul(l,rt)|0)|0)+((8191&(i=(i=i+Math.imul(l,nt)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,nt)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,C))+Math.imul(j,V)|0,s=Math.imul(j,C),n=n+Math.imul(T,q)|0,i=(i=i+Math.imul(T,Z)|0)+Math.imul(S,q)|0,s=s+Math.imul(S,Z)|0,n=n+Math.imul(x,U)|0,i=(i=i+Math.imul(x,G)|0)+Math.imul(P,U)|0,s=s+Math.imul(P,G)|0,n=n+Math.imul(w,K)|0,i=(i=i+Math.imul(w,J)|0)+Math.imul(M,K)|0,s=s+Math.imul(M,J)|0,n=n+Math.imul(v,$)|0,i=(i=i+Math.imul(v,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,s=s+Math.imul(m,nt)|0;var kt=(h+(n=n+Math.imul(l,st)|0)|0)+((8191&(i=(i=i+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(O,V),i=(i=Math.imul(O,C))+Math.imul(z,V)|0,s=Math.imul(z,C),n=n+Math.imul(D,q)|0,i=(i=i+Math.imul(D,Z)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,Z)|0,n=n+Math.imul(T,U)|0,i=(i=i+Math.imul(T,G)|0)+Math.imul(S,U)|0,s=s+Math.imul(S,G)|0,n=n+Math.imul(x,K)|0,i=(i=i+Math.imul(x,J)|0)+Math.imul(P,K)|0,s=s+Math.imul(P,J)|0,n=n+Math.imul(w,$)|0,i=(i=i+Math.imul(w,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,n=n+Math.imul(v,rt)|0,i=(i=i+Math.imul(v,nt)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,nt)|0,n=n+Math.imul(p,st)|0,i=(i=i+Math.imul(p,ot)|0)+Math.imul(m,st)|0,s=s+Math.imul(m,ot)|0;var xt=(h+(n=n+Math.imul(l,ut)|0)|0)+((8191&(i=(i=i+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(E,V),i=(i=Math.imul(E,C))+Math.imul(Y,V)|0,s=Math.imul(Y,C),n=n+Math.imul(O,q)|0,i=(i=i+Math.imul(O,Z)|0)+Math.imul(z,q)|0,s=s+Math.imul(z,Z)|0,n=n+Math.imul(D,U)|0,i=(i=i+Math.imul(D,G)|0)+Math.imul(j,U)|0,s=s+Math.imul(j,G)|0,n=n+Math.imul(T,K)|0,i=(i=i+Math.imul(T,J)|0)+Math.imul(S,K)|0,s=s+Math.imul(S,J)|0,n=n+Math.imul(x,$)|0,i=(i=i+Math.imul(x,tt)|0)+Math.imul(P,$)|0,s=s+Math.imul(P,tt)|0,n=n+Math.imul(w,rt)|0,i=(i=i+Math.imul(w,nt)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,nt)|0,n=n+Math.imul(v,st)|0,i=(i=i+Math.imul(v,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,s=s+Math.imul(m,ht)|0;var Pt=(h+(n=n+Math.imul(l,lt)|0)|0)+((8191&(i=(i=i+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(i>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,n=Math.imul(I,V),i=(i=Math.imul(I,C))+Math.imul(B,V)|0,s=Math.imul(B,C),n=n+Math.imul(E,q)|0,i=(i=i+Math.imul(E,Z)|0)+Math.imul(Y,q)|0,s=s+Math.imul(Y,Z)|0,n=n+Math.imul(O,U)|0,i=(i=i+Math.imul(O,G)|0)+Math.imul(z,U)|0,s=s+Math.imul(z,G)|0,n=n+Math.imul(D,K)|0,i=(i=i+Math.imul(D,J)|0)+Math.imul(j,K)|0,s=s+Math.imul(j,J)|0,n=n+Math.imul(T,$)|0,i=(i=i+Math.imul(T,tt)|0)+Math.imul(S,$)|0,s=s+Math.imul(S,tt)|0,n=n+Math.imul(x,rt)|0,i=(i=i+Math.imul(x,nt)|0)+Math.imul(P,rt)|0,s=s+Math.imul(P,nt)|0,n=n+Math.imul(w,st)|0,i=(i=i+Math.imul(w,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,n=n+Math.imul(v,ut)|0,i=(i=i+Math.imul(v,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0,n=n+Math.imul(p,lt)|0,i=(i=i+Math.imul(p,dt)|0)+Math.imul(m,lt)|0,s=s+Math.imul(m,dt)|0;var Lt=(h+(n=n+Math.imul(l,pt)|0)|0)+((8191&(i=(i=i+Math.imul(l,mt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,mt)|0)+(i>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,n=Math.imul(I,q),i=(i=Math.imul(I,Z))+Math.imul(B,q)|0,s=Math.imul(B,Z),n=n+Math.imul(E,U)|0,i=(i=i+Math.imul(E,G)|0)+Math.imul(Y,U)|0,s=s+Math.imul(Y,G)|0,n=n+Math.imul(O,K)|0,i=(i=i+Math.imul(O,J)|0)+Math.imul(z,K)|0,s=s+Math.imul(z,J)|0,n=n+Math.imul(D,$)|0,i=(i=i+Math.imul(D,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,n=n+Math.imul(T,rt)|0,i=(i=i+Math.imul(T,nt)|0)+Math.imul(S,rt)|0,s=s+Math.imul(S,nt)|0,n=n+Math.imul(x,st)|0,i=(i=i+Math.imul(x,ot)|0)+Math.imul(P,st)|0,s=s+Math.imul(P,ot)|0,n=n+Math.imul(w,ut)|0,i=(i=i+Math.imul(w,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,n=n+Math.imul(v,lt)|0,i=(i=i+Math.imul(v,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var Tt=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((s=s+Math.imul(m,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,n=Math.imul(I,U),i=(i=Math.imul(I,G))+Math.imul(B,U)|0,s=Math.imul(B,G),n=n+Math.imul(E,K)|0,i=(i=i+Math.imul(E,J)|0)+Math.imul(Y,K)|0,s=s+Math.imul(Y,J)|0,n=n+Math.imul(O,$)|0,i=(i=i+Math.imul(O,tt)|0)+Math.imul(z,$)|0,s=s+Math.imul(z,tt)|0,n=n+Math.imul(D,rt)|0,i=(i=i+Math.imul(D,nt)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,nt)|0,n=n+Math.imul(T,st)|0,i=(i=i+Math.imul(T,ot)|0)+Math.imul(S,st)|0,s=s+Math.imul(S,ot)|0,n=n+Math.imul(x,ut)|0,i=(i=i+Math.imul(x,ht)|0)+Math.imul(P,ut)|0,s=s+Math.imul(P,ht)|0,n=n+Math.imul(w,lt)|0,i=(i=i+Math.imul(w,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var St=(h+(n=n+Math.imul(v,pt)|0)|0)+((8191&(i=(i=i+Math.imul(v,mt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(I,K),i=(i=Math.imul(I,J))+Math.imul(B,K)|0,s=Math.imul(B,J),n=n+Math.imul(E,$)|0,i=(i=i+Math.imul(E,tt)|0)+Math.imul(Y,$)|0,s=s+Math.imul(Y,tt)|0,n=n+Math.imul(O,rt)|0,i=(i=i+Math.imul(O,nt)|0)+Math.imul(z,rt)|0,s=s+Math.imul(z,nt)|0,n=n+Math.imul(D,st)|0,i=(i=i+Math.imul(D,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,n=n+Math.imul(T,ut)|0,i=(i=i+Math.imul(T,ht)|0)+Math.imul(S,ut)|0,s=s+Math.imul(S,ht)|0,n=n+Math.imul(x,lt)|0,i=(i=i+Math.imul(x,dt)|0)+Math.imul(P,lt)|0,s=s+Math.imul(P,dt)|0;var At=(h+(n=n+Math.imul(w,pt)|0)|0)+((8191&(i=(i=i+Math.imul(w,mt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,mt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(I,$),i=(i=Math.imul(I,tt))+Math.imul(B,$)|0,s=Math.imul(B,tt),n=n+Math.imul(E,rt)|0,i=(i=i+Math.imul(E,nt)|0)+Math.imul(Y,rt)|0,s=s+Math.imul(Y,nt)|0,n=n+Math.imul(O,st)|0,i=(i=i+Math.imul(O,ot)|0)+Math.imul(z,st)|0,s=s+Math.imul(z,ot)|0,n=n+Math.imul(D,ut)|0,i=(i=i+Math.imul(D,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,n=n+Math.imul(T,lt)|0,i=(i=i+Math.imul(T,dt)|0)+Math.imul(S,lt)|0,s=s+Math.imul(S,dt)|0;var Dt=(h+(n=n+Math.imul(x,pt)|0)|0)+((8191&(i=(i=i+Math.imul(x,mt)|0)+Math.imul(P,pt)|0))<<13)|0;h=((s=s+Math.imul(P,mt)|0)+(i>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,n=Math.imul(I,rt),i=(i=Math.imul(I,nt))+Math.imul(B,rt)|0,s=Math.imul(B,nt),n=n+Math.imul(E,st)|0,i=(i=i+Math.imul(E,ot)|0)+Math.imul(Y,st)|0,s=s+Math.imul(Y,ot)|0,n=n+Math.imul(O,ut)|0,i=(i=i+Math.imul(O,ht)|0)+Math.imul(z,ut)|0,s=s+Math.imul(z,ht)|0,n=n+Math.imul(D,lt)|0,i=(i=i+Math.imul(D,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var jt=(h+(n=n+Math.imul(T,pt)|0)|0)+((8191&(i=(i=i+Math.imul(T,mt)|0)+Math.imul(S,pt)|0))<<13)|0;h=((s=s+Math.imul(S,mt)|0)+(i>>>13)|0)+(jt>>>26)|0,jt&=67108863,n=Math.imul(I,st),i=(i=Math.imul(I,ot))+Math.imul(B,st)|0,s=Math.imul(B,ot),n=n+Math.imul(E,ut)|0,i=(i=i+Math.imul(E,ht)|0)+Math.imul(Y,ut)|0,s=s+Math.imul(Y,ht)|0,n=n+Math.imul(O,lt)|0,i=(i=i+Math.imul(O,dt)|0)+Math.imul(z,lt)|0,s=s+Math.imul(z,dt)|0;var Ht=(h+(n=n+Math.imul(D,pt)|0)|0)+((8191&(i=(i=i+Math.imul(D,mt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,mt)|0)+(i>>>13)|0)+(Ht>>>26)|0,Ht&=67108863,n=Math.imul(I,ut),i=(i=Math.imul(I,ht))+Math.imul(B,ut)|0,s=Math.imul(B,ht),n=n+Math.imul(E,lt)|0,i=(i=i+Math.imul(E,dt)|0)+Math.imul(Y,lt)|0,s=s+Math.imul(Y,dt)|0;var Ot=(h+(n=n+Math.imul(O,pt)|0)|0)+((8191&(i=(i=i+Math.imul(O,mt)|0)+Math.imul(z,pt)|0))<<13)|0;h=((s=s+Math.imul(z,mt)|0)+(i>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,n=Math.imul(I,lt),i=(i=Math.imul(I,dt))+Math.imul(B,lt)|0,s=Math.imul(B,dt);var zt=(h+(n=n+Math.imul(E,pt)|0)|0)+((8191&(i=(i=i+Math.imul(E,mt)|0)+Math.imul(Y,pt)|0))<<13)|0;h=((s=s+Math.imul(Y,mt)|0)+(i>>>13)|0)+(zt>>>26)|0,zt&=67108863;var Nt=(h+(n=Math.imul(I,pt))|0)+((8191&(i=(i=Math.imul(I,mt))+Math.imul(B,pt)|0))<<13)|0;return h=((s=Math.imul(B,mt))+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=yt,u[1]=vt,u[2]=gt,u[3]=bt,u[4]=wt,u[5]=Mt,u[6]=kt,u[7]=xt,u[8]=Pt,u[9]=Lt,u[10]=Tt,u[11]=St,u[12]=At,u[13]=Dt,u[14]=jt,u[15]=Ht,u[16]=Ot,u[17]=zt,u[18]=Nt,0!==h&&(u[19]=h,r.length++),r};function m(t,e,r){return(new y).mulp(t,e,r)}function y(t,e){this.x=t,this.y=e}Math.imul||(p=f),s.prototype.mulTo=function(t,e){var r,n=this.length+t.length;return r=10===this.length&&10===t.length?p(this,t,e):n<63?f(this,t,e):n<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,s=0;s<r.length-1;s++){var o=i;i=0;for(var a=67108863&n,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),i+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,n=o,o=i}return 0!==n?r.words[s]=n:r.length--,r.strip()}(this,t,e):m(this,t,e),r},y.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},y.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},y.prototype.permute=function(t,e,r,n,i,s){for(var o=0;o<s;o++)n[o]=e[t[o]],i[o]=r[t[o]]},y.prototype.transform=function(t,e,r,n,i,s){this.permute(s,t,e,r,n,i);for(var o=1;o<i;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<i;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],m=n[c+f],y=r[c+f+o],v=n[c+f+o],g=l*y-d*v;v=l*v+d*y,y=g,r[c+f]=p+y,n[c+f]=m+v,r[c+f+o]=p-y,n[c+f+o]=m-v,f!==a&&(g=u*l-h*d,d=u*d+h*l,l=g)}},y.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},y.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},y.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},y.prototype.convert13b=function(t,e,r,i){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<i;++o)r[o]=0;n(0===s),n(0==(-8192&s))},y.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},y.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),s=this.stub(n),o=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),c=new Array(n),l=new Array(n),d=r.words;d.length=n,this.convert13b(t.words,t.length,o,n),this.convert13b(e.words,e.length,h,n),this.transform(o,s,a,u,n,i),this.transform(h,s,c,l,n,i);for(var f=0;f<n;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,n),this.transform(a,u,d,s,n,i),this.conjugate(d,s,n),this.normalize13b(d,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),m(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var e=0,r=0;r<this.length;r++){var i=(0|this.words[r])*t,s=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=(t.words[n]&1<<i)>>>i}return e}(t);if(0===e.length)return new s(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},s.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},s.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var i;n("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(i-=o,i=Math.max(0,i),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=i);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r)&&!!(this.words[r]&i)},s.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var i,s,o=t.length+r;this._expand(o);var a=0;for(i=0;i<t.length;i++){s=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&s}for(;i<this.length-r;i++)a=(s=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&s;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(s=-(0|this.words[i])+a)>>26,this.words[i]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,o=0|i.words[i.length-1];0!==(r=26-this._countBits(o))&&(i=i.ushln(r),n.iushln(r),o=0|i.words[i.length-1]);var a,u=n.length-i.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=n.clone()._ishlnsubmul(i,1,u);0===c.negative&&(n=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|n.words[i.length+l])+(0|n.words[i.length+l-1]);for(d=Math.min(d/o|0,67108863),n._ishlnsubmul(i,d,l);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(i,1,l),n.isZero()||(n.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),n.strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},s.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(i=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:i,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var i,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),s=r.cmp(n);return s<0||1===i&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){n(t<=67108863);for(var e=(1<<26)%t,r=0,i=this.length-1;i>=0;i--)r=(e*r+(0|this.words[i]))%t;return r},s.prototype.idivn=function(t){n(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*e;this.words[r]=i/t|0,e=i%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(c),o.isub(l)),i.iushrn(1),o.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),o.isub(u)):(r.isub(e),a.isub(i),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(i=0===e.cmpn(1)?o:a).cmpn(0)<0&&i.iadd(t),i},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var s=e;e=r,r=s}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){n("number"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var s=i,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new x(t)},s.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function g(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){g.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){g.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function M(){g.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function k(){g.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function x(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function P(t){x.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}g.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},g.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},g.prototype.split=function(t,e){t.iushrn(this.n,0,e)},g.prototype.imulK=function(t){return t.imul(this.k)},i(b,g),b.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,i=10;i<t.length;i++){var o=0|t.words[i];t.words[i-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[i-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(w,g),i(M,g),i(k,g),k.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(v[t])return v[t];var e;if("k256"===t)e=new b;else if("p224"===t)e=new w;else if("p192"===t)e=new M;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new k}return v[t]=e,e},x.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},x.prototype._verify2=function(t,e){n(0==(t.negative|e.negative),"red works only with positives"),n(t.red&&t.red===e.red,"red works only with red numbers")},x.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},x.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},x.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},x.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},x.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},x.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},x.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},x.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},x.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},x.prototype.isqr=function(t){return this.imul(t,t.clone())},x.prototype.sqr=function(t){return this.mul(t,t)},x.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),o=0;!i.isZero()&&0===i.andln(1);)o++,i.iushrn(1);n(!i.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,i),d=this.pow(t,i.addn(1).iushrn(1)),f=this.pow(t,i),p=o;0!==f.cmp(a);){for(var m=f,y=0;0!==m.cmp(a);y++)m=m.redSqr();n(y<p);var v=this.pow(l,new s(1).iushln(p-y-1));d=d.redMul(v),l=v.redSqr(),f=f.redMul(l),p=y}return d},x.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},x.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],c=u-1;c>=0;c--){var l=h>>c&1;i!==r[0]&&(i=this.sqr(i)),0!==l||0!==o?(o<<=1,o|=l,(4===++a||0===n&&0===c)&&(i=this.mul(i,r[o]),a=0,o=0)):a=0}u=26}return i},x.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},x.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new P(t)},i(P,x),P.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},P.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},P.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},P.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},P.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},26138:(t,e,r)=>{var n=r(70980),i=r(99199),s=r(57859),o=r(92144),a=r(23663),u=r(23482),h=r(84818),c=r(89509).Buffer;t.exports=function(t,e,r){var l;l=t.padding?t.padding:r?1:4;var d,f=n(t),p=f.modulus.byteLength();if(e.length>p||new o(e).cmp(f.modulus)>=0)throw new Error("decryption error");d=r?h(new o(e),f):a(e,f);var m=c.alloc(p-d.length);if(d=c.concat([m,d],p),4===l)return function(t,e){var r=t.modulus.byteLength(),n=u("sha1").update(c.alloc(0)).digest(),o=n.length;if(0!==e[0])throw new Error("decryption error");var a=e.slice(1,o+1),h=e.slice(o+1),l=s(a,i(h,o)),d=s(h,i(l,r-o-1));if(function(t,e){t=c.from(t),e=c.from(e);var r=0,n=t.length;t.length!==e.length&&(r++,n=Math.min(t.length,e.length));var i=-1;for(;++i<n;)r+=t[i]^e[i];return r}(n,d.slice(0,o)))throw new Error("decryption error");var f=o;for(;0===d[f];)f++;if(1!==d[f++])throw new Error("decryption error");return d.slice(f)}(f,d);if(1===l)return function(t,e,r){var n=e.slice(0,2),i=2,s=0;for(;0!==e[i++];)if(i>=e.length){s++;break}var o=e.slice(2,i-1);("0002"!==n.toString("hex")&&!r||"0001"!==n.toString("hex")&&r)&&s++;o.length<8&&s++;if(s)throw new Error("decryption error");return e.slice(i)}(0,d,r);if(3===l)return d;throw new Error("unknown padding")}},16559:(t,e,r)=>{var n=r(70980),i=r(61798),s=r(23482),o=r(99199),a=r(57859),u=r(92144),h=r(84818),c=r(23663),l=r(89509).Buffer;t.exports=function(t,e,r){var d;d=t.padding?t.padding:r?1:4;var f,p=n(t);if(4===d)f=function(t,e){var r=t.modulus.byteLength(),n=e.length,h=s("sha1").update(l.alloc(0)).digest(),c=h.length,d=2*c;if(n>r-d-2)throw new Error("message too long");var f=l.alloc(r-n-d-2),p=r-c-1,m=i(c),y=a(l.concat([h,f,l.alloc(1,1),e],p),o(m,p)),v=a(m,o(y,c));return new u(l.concat([l.alloc(1),v,y],r))}(p,e);else if(1===d)f=function(t,e,r){var n,s=e.length,o=t.modulus.byteLength();if(s>o-11)throw new Error("message too long");n=r?l.alloc(o-s-3,255):function(t){var e,r=l.allocUnsafe(t),n=0,s=i(2*t),o=0;for(;n<t;)o===s.length&&(s=i(2*t),o=0),(e=s[o++])&&(r[n++]=e);return r}(o-s-3);return new u(l.concat([l.from([0,r?1:2]),n,l.alloc(1),e],o))}(p,e,r);else{if(3!==d)throw new Error("unknown padding");if((f=new u(e)).cmp(p.modulus)>=0)throw new Error("data too long for modulus")}return r?c(f,p):h(f,p)}},84818:(t,e,r)=>{var n=r(92144),i=r(89509).Buffer;t.exports=function(t,e){return i.from(t.toRed(n.mont(e.modulus)).redPow(new n(e.publicExponent)).fromRed().toArray())}},57859:t=>{t.exports=function(t,e){for(var r=t.length,n=-1;++n<r;)t[n]^=e[n];return t}},61798:(t,e,r)=>{"use strict";var n=r(34155),i=65536,s=4294967295;var o=r(89509).Buffer,a=r.g.crypto||r.g.msCrypto;a&&a.getRandomValues?t.exports=function(t,e){if(t>s)throw new RangeError("requested too many random bytes");var r=o.allocUnsafe(t);if(t>0)if(t>i)for(var u=0;u<t;u+=i)a.getRandomValues(r.slice(u,u+i));else a.getRandomValues(r);if("function"==typeof e)return n.nextTick((function(){e(null,r)}));return r}:t.exports=function(){throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")}},77963:(t,e,r)=>{"use strict";var n=r(34155);function i(){throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11")}var s=r(89509),o=r(61798),a=s.Buffer,u=s.kMaxLength,h=r.g.crypto||r.g.msCrypto,c=Math.pow(2,32)-1;function l(t,e){if("number"!=typeof t||t!=t)throw new TypeError("offset must be a number");if(t>c||t<0)throw new TypeError("offset must be a uint32");if(t>u||t>e)throw new RangeError("offset out of range")}function d(t,e,r){if("number"!=typeof t||t!=t)throw new TypeError("size must be a number");if(t>c||t<0)throw new TypeError("size must be a uint32");if(t+e>r||t>u)throw new RangeError("buffer too small")}function f(t,e,r,i){if(n.browser){var s=t.buffer,a=new Uint8Array(s,e,r);return h.getRandomValues(a),i?void n.nextTick((function(){i(null,t)})):t}if(!i)return o(r).copy(t,e),t;o(r,(function(r,n){if(r)return i(r);n.copy(t,e),i(null,t)}))}h&&h.getRandomValues||!n.browser?(e.randomFill=function(t,e,n,i){if(!(a.isBuffer(t)||t instanceof r.g.Uint8Array))throw new TypeError('"buf" argument must be a Buffer or Uint8Array');if("function"==typeof e)i=e,e=0,n=t.length;else if("function"==typeof n)i=n,n=t.length-e;else if("function"!=typeof i)throw new TypeError('"cb" argument must be a function');return l(e,t.length),d(n,e,t.length),f(t,e,n,i)},e.randomFillSync=function(t,e,n){void 0===e&&(e=0);if(!(a.isBuffer(t)||t instanceof r.g.Uint8Array))throw new TypeError('"buf" argument must be a Buffer or Uint8Array');l(e,t.length),void 0===n&&(n=t.length-e);return d(n,e,t.length),f(t,e,n)}):(e.randomFill=i,e.randomFillSync=i)},94281:t=>{"use strict";var e={};function r(t,r,n){n||(n=Error);var i=function(t){var e,n;function i(e,n,i){return t.call(this,function(t,e,n){return"string"==typeof r?r:r(t,e,n)}(e,n,i))||this}return n=t,(e=i).prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n,i}(n);i.prototype.name=n.name,i.prototype.code=t,e[t]=i}function n(t,e){if(Array.isArray(t)){var r=t.length;return t=t.map((function(t){return String(t)})),r>2?"one of ".concat(e," ").concat(t.slice(0,r-1).join(", "),", or ")+t[r-1]:2===r?"one of ".concat(e," ").concat(t[0]," or ").concat(t[1]):"of ".concat(e," ").concat(t[0])}return"of ".concat(e," ").concat(String(t))}r("ERR_INVALID_OPT_VALUE",(function(t,e){return'The value "'+e+'" is invalid for option "'+t+'"'}),TypeError),r("ERR_INVALID_ARG_TYPE",(function(t,e,r){var i,s,o,a;if("string"==typeof e&&(s="not ",e.substr(!o||o<0?0:+o,s.length)===s)?(i="must not be",e=e.replace(/^not /,"")):i="must be",function(t,e,r){return(void 0===r||r>t.length)&&(r=t.length),t.substring(r-e.length,r)===e}(t," argument"))a="The ".concat(t," ").concat(i," ").concat(n(e,"type"));else{var u=function(t,e,r){return"number"!=typeof r&&(r=0),!(r+e.length>t.length)&&-1!==t.indexOf(e,r)}(t,".")?"property":"argument";a='The "'.concat(t,'" ').concat(u," ").concat(i," ").concat(n(e,"type"))}return a+=". Received type ".concat(typeof r)}),TypeError),r("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF"),r("ERR_METHOD_NOT_IMPLEMENTED",(function(t){return"The "+t+" method is not implemented"})),r("ERR_STREAM_PREMATURE_CLOSE","Premature close"),r("ERR_STREAM_DESTROYED",(function(t){return"Cannot call "+t+" after a stream was destroyed"})),r("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),r("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable"),r("ERR_STREAM_WRITE_AFTER_END","write after end"),r("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),r("ERR_UNKNOWN_ENCODING",(function(t){return"Unknown encoding: "+t}),TypeError),r("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event"),t.exports.q=e},56753:(t,e,r)=>{"use strict";var n=r(34155),i=Object.keys||function(t){var e=[];for(var r in t)e.push(r);return e};t.exports=c;var s=r(79481),o=r(64229);r(35717)(c,s);for(var a=i(o.prototype),u=0;u<a.length;u++){var h=a[u];c.prototype[h]||(c.prototype[h]=o.prototype[h])}function c(t){if(!(this instanceof c))return new c(t);s.call(this,t),o.call(this,t),this.allowHalfOpen=!0,t&&(!1===t.readable&&(this.readable=!1),!1===t.writable&&(this.writable=!1),!1===t.allowHalfOpen&&(this.allowHalfOpen=!1,this.once("end",l)))}function l(){this._writableState.ended||n.nextTick(d,this)}function d(t){t.end()}Object.defineProperty(c.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(c.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(c.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(c.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set:function(t){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=t,this._writableState.destroyed=t)}})},82725:(t,e,r)=>{"use strict";t.exports=i;var n=r(74605);function i(t){if(!(this instanceof i))return new i(t);n.call(this,t)}r(35717)(i,n),i.prototype._transform=function(t,e,r){r(null,t)}},79481:(t,e,r)=>{"use strict";var n,i=r(34155);t.exports=L,L.ReadableState=P;r(17187).EventEmitter;var s=function(t,e){return t.listeners(e).length},o=r(22503),a=r(48764).Buffer,u=r.g.Uint8Array||function(){};var h,c=r(94616);h=c&&c.debuglog?c.debuglog("stream"):function(){};var l,d,f,p=r(57327),m=r(61195),y=r(82457).getHighWaterMark,v=r(94281).q,g=v.ERR_INVALID_ARG_TYPE,b=v.ERR_STREAM_PUSH_AFTER_EOF,w=v.ERR_METHOD_NOT_IMPLEMENTED,M=v.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;r(35717)(L,o);var k=m.errorOrDestroy,x=["error","close","destroy","pause","resume"];function P(t,e,i){n=n||r(56753),t=t||{},"boolean"!=typeof i&&(i=e instanceof n),this.objectMode=!!t.objectMode,i&&(this.objectMode=this.objectMode||!!t.readableObjectMode),this.highWaterMark=y(this,t,"readableHighWaterMark",i),this.buffer=new p,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==t.emitClose,this.autoDestroy=!!t.autoDestroy,this.destroyed=!1,this.defaultEncoding=t.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(l||(l=r(32553).s),this.decoder=new l(t.encoding),this.encoding=t.encoding)}function L(t){if(n=n||r(56753),!(this instanceof L))return new L(t);var e=this instanceof n;this._readableState=new P(t,this,e),this.readable=!0,t&&("function"==typeof t.read&&(this._read=t.read),"function"==typeof t.destroy&&(this._destroy=t.destroy)),o.call(this)}function T(t,e,r,n,i){h("readableAddChunk",e);var s,o=t._readableState;if(null===e)o.reading=!1,function(t,e){if(h("onEofChunk"),e.ended)return;if(e.decoder){var r=e.decoder.end();r&&r.length&&(e.buffer.push(r),e.length+=e.objectMode?1:r.length)}e.ended=!0,e.sync?j(t):(e.needReadable=!1,e.emittedReadable||(e.emittedReadable=!0,H(t)))}(t,o);else if(i||(s=function(t,e){var r;n=e,a.isBuffer(n)||n instanceof u||"string"==typeof e||void 0===e||t.objectMode||(r=new g("chunk",["string","Buffer","Uint8Array"],e));var n;return r}(o,e)),s)k(t,s);else if(o.objectMode||e&&e.length>0)if("string"==typeof e||o.objectMode||Object.getPrototypeOf(e)===a.prototype||(e=function(t){return a.from(t)}(e)),n)o.endEmitted?k(t,new M):S(t,o,e,!0);else if(o.ended)k(t,new b);else{if(o.destroyed)return!1;o.reading=!1,o.decoder&&!r?(e=o.decoder.write(e),o.objectMode||0!==e.length?S(t,o,e,!1):O(t,o)):S(t,o,e,!1)}else n||(o.reading=!1,O(t,o));return!o.ended&&(o.length<o.highWaterMark||0===o.length)}function S(t,e,r,n){e.flowing&&0===e.length&&!e.sync?(e.awaitDrain=0,t.emit("data",r)):(e.length+=e.objectMode?1:r.length,n?e.buffer.unshift(r):e.buffer.push(r),e.needReadable&&j(t)),O(t,e)}Object.defineProperty(L.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(t){this._readableState&&(this._readableState.destroyed=t)}}),L.prototype.destroy=m.destroy,L.prototype._undestroy=m.undestroy,L.prototype._destroy=function(t,e){e(t)},L.prototype.push=function(t,e){var r,n=this._readableState;return n.objectMode?r=!0:"string"==typeof t&&((e=e||n.defaultEncoding)!==n.encoding&&(t=a.from(t,e),e=""),r=!0),T(this,t,e,!1,r)},L.prototype.unshift=function(t){return T(this,t,null,!0,!1)},L.prototype.isPaused=function(){return!1===this._readableState.flowing},L.prototype.setEncoding=function(t){l||(l=r(32553).s);var e=new l(t);this._readableState.decoder=e,this._readableState.encoding=this._readableState.decoder.encoding;for(var n=this._readableState.buffer.head,i="";null!==n;)i+=e.write(n.data),n=n.next;return this._readableState.buffer.clear(),""!==i&&this._readableState.buffer.push(i),this._readableState.length=i.length,this};var A=1073741824;function D(t,e){return t<=0||0===e.length&&e.ended?0:e.objectMode?1:t!=t?e.flowing&&e.length?e.buffer.head.data.length:e.length:(t>e.highWaterMark&&(e.highWaterMark=function(t){return t>=A?t=A:(t--,t|=t>>>1,t|=t>>>2,t|=t>>>4,t|=t>>>8,t|=t>>>16,t++),t}(t)),t<=e.length?t:e.ended?e.length:(e.needReadable=!0,0))}function j(t){var e=t._readableState;h("emitReadable",e.needReadable,e.emittedReadable),e.needReadable=!1,e.emittedReadable||(h("emitReadable",e.flowing),e.emittedReadable=!0,i.nextTick(H,t))}function H(t){var e=t._readableState;h("emitReadable_",e.destroyed,e.length,e.ended),e.destroyed||!e.length&&!e.ended||(t.emit("readable"),e.emittedReadable=!1),e.needReadable=!e.flowing&&!e.ended&&e.length<=e.highWaterMark,R(t)}function O(t,e){e.readingMore||(e.readingMore=!0,i.nextTick(z,t,e))}function z(t,e){for(;!e.reading&&!e.ended&&(e.length<e.highWaterMark||e.flowing&&0===e.length);){var r=e.length;if(h("maybeReadMore read 0"),t.read(0),r===e.length)break}e.readingMore=!1}function N(t){var e=t._readableState;e.readableListening=t.listenerCount("readable")>0,e.resumeScheduled&&!e.paused?e.flowing=!0:t.listenerCount("data")>0&&t.resume()}function E(t){h("readable nexttick read 0"),t.read(0)}function Y(t,e){h("resume",e.reading),e.reading||t.read(0),e.resumeScheduled=!1,t.emit("resume"),R(t),e.flowing&&!e.reading&&t.read(0)}function R(t){var e=t._readableState;for(h("flow",e.flowing);e.flowing&&null!==t.read(););}function I(t,e){return 0===e.length?null:(e.objectMode?r=e.buffer.shift():!t||t>=e.length?(r=e.decoder?e.buffer.join(""):1===e.buffer.length?e.buffer.first():e.buffer.concat(e.length),e.buffer.clear()):r=e.buffer.consume(t,e.decoder),r);var r}function B(t){var e=t._readableState;h("endReadable",e.endEmitted),e.endEmitted||(e.ended=!0,i.nextTick(X,e,t))}function X(t,e){if(h("endReadableNT",t.endEmitted,t.length),!t.endEmitted&&0===t.length&&(t.endEmitted=!0,e.readable=!1,e.emit("end"),t.autoDestroy)){var r=e._writableState;(!r||r.autoDestroy&&r.finished)&&e.destroy()}}function V(t,e){for(var r=0,n=t.length;r<n;r++)if(t[r]===e)return r;return-1}L.prototype.read=function(t){h("read",t),t=parseInt(t,10);var e=this._readableState,r=t;if(0!==t&&(e.emittedReadable=!1),0===t&&e.needReadable&&((0!==e.highWaterMark?e.length>=e.highWaterMark:e.length>0)||e.ended))return h("read: emitReadable",e.length,e.ended),0===e.length&&e.ended?B(this):j(this),null;if(0===(t=D(t,e))&&e.ended)return 0===e.length&&B(this),null;var n,i=e.needReadable;return h("need readable",i),(0===e.length||e.length-t<e.highWaterMark)&&h("length less than watermark",i=!0),e.ended||e.reading?h("reading or ended",i=!1):i&&(h("do read"),e.reading=!0,e.sync=!0,0===e.length&&(e.needReadable=!0),this._read(e.highWaterMark),e.sync=!1,e.reading||(t=D(r,e))),null===(n=t>0?I(t,e):null)?(e.needReadable=e.length<=e.highWaterMark,t=0):(e.length-=t,e.awaitDrain=0),0===e.length&&(e.ended||(e.needReadable=!0),r!==t&&e.ended&&B(this)),null!==n&&this.emit("data",n),n},L.prototype._read=function(t){k(this,new w("_read()"))},L.prototype.pipe=function(t,e){var r=this,n=this._readableState;switch(n.pipesCount){case 0:n.pipes=t;break;case 1:n.pipes=[n.pipes,t];break;default:n.pipes.push(t)}n.pipesCount+=1,h("pipe count=%d opts=%j",n.pipesCount,e);var o=(!e||!1!==e.end)&&t!==i.stdout&&t!==i.stderr?u:y;function a(e,i){h("onunpipe"),e===r&&i&&!1===i.hasUnpiped&&(i.hasUnpiped=!0,h("cleanup"),t.removeListener("close",p),t.removeListener("finish",m),t.removeListener("drain",c),t.removeListener("error",f),t.removeListener("unpipe",a),r.removeListener("end",u),r.removeListener("end",y),r.removeListener("data",d),l=!0,!n.awaitDrain||t._writableState&&!t._writableState.needDrain||c())}function u(){h("onend"),t.end()}n.endEmitted?i.nextTick(o):r.once("end",o),t.on("unpipe",a);var c=function(t){return function(){var e=t._readableState;h("pipeOnDrain",e.awaitDrain),e.awaitDrain&&e.awaitDrain--,0===e.awaitDrain&&s(t,"data")&&(e.flowing=!0,R(t))}}(r);t.on("drain",c);var l=!1;function d(e){h("ondata");var i=t.write(e);h("dest.write",i),!1===i&&((1===n.pipesCount&&n.pipes===t||n.pipesCount>1&&-1!==V(n.pipes,t))&&!l&&(h("false write response, pause",n.awaitDrain),n.awaitDrain++),r.pause())}function f(e){h("onerror",e),y(),t.removeListener("error",f),0===s(t,"error")&&k(t,e)}function p(){t.removeListener("finish",m),y()}function m(){h("onfinish"),t.removeListener("close",p),y()}function y(){h("unpipe"),r.unpipe(t)}return r.on("data",d),function(t,e,r){if("function"==typeof t.prependListener)return t.prependListener(e,r);t._events&&t._events[e]?Array.isArray(t._events[e])?t._events[e].unshift(r):t._events[e]=[r,t._events[e]]:t.on(e,r)}(t,"error",f),t.once("close",p),t.once("finish",m),t.emit("pipe",r),n.flowing||(h("pipe resume"),r.resume()),t},L.prototype.unpipe=function(t){var e=this._readableState,r={hasUnpiped:!1};if(0===e.pipesCount)return this;if(1===e.pipesCount)return t&&t!==e.pipes||(t||(t=e.pipes),e.pipes=null,e.pipesCount=0,e.flowing=!1,t&&t.emit("unpipe",this,r)),this;if(!t){var n=e.pipes,i=e.pipesCount;e.pipes=null,e.pipesCount=0,e.flowing=!1;for(var s=0;s<i;s++)n[s].emit("unpipe",this,{hasUnpiped:!1});return this}var o=V(e.pipes,t);return-1===o||(e.pipes.splice(o,1),e.pipesCount-=1,1===e.pipesCount&&(e.pipes=e.pipes[0]),t.emit("unpipe",this,r)),this},L.prototype.on=function(t,e){var r=o.prototype.on.call(this,t,e),n=this._readableState;return"data"===t?(n.readableListening=this.listenerCount("readable")>0,!1!==n.flowing&&this.resume()):"readable"===t&&(n.endEmitted||n.readableListening||(n.readableListening=n.needReadable=!0,n.flowing=!1,n.emittedReadable=!1,h("on readable",n.length,n.reading),n.length?j(this):n.reading||i.nextTick(E,this))),r},L.prototype.addListener=L.prototype.on,L.prototype.removeListener=function(t,e){var r=o.prototype.removeListener.call(this,t,e);return"readable"===t&&i.nextTick(N,this),r},L.prototype.removeAllListeners=function(t){var e=o.prototype.removeAllListeners.apply(this,arguments);return"readable"!==t&&void 0!==t||i.nextTick(N,this),e},L.prototype.resume=function(){var t=this._readableState;return t.flowing||(h("resume"),t.flowing=!t.readableListening,function(t,e){e.resumeScheduled||(e.resumeScheduled=!0,i.nextTick(Y,t,e))}(this,t)),t.paused=!1,this},L.prototype.pause=function(){return h("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(h("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState.paused=!0,this},L.prototype.wrap=function(t){var e=this,r=this._readableState,n=!1;for(var i in t.on("end",(function(){if(h("wrapped end"),r.decoder&&!r.ended){var t=r.decoder.end();t&&t.length&&e.push(t)}e.push(null)})),t.on("data",(function(i){(h("wrapped data"),r.decoder&&(i=r.decoder.write(i)),r.objectMode&&null==i)||(r.objectMode||i&&i.length)&&(e.push(i)||(n=!0,t.pause()))})),t)void 0===this[i]&&"function"==typeof t[i]&&(this[i]=function(e){return function(){return t[e].apply(t,arguments)}}(i));for(var s=0;s<x.length;s++)t.on(x[s],this.emit.bind(this,x[s]));return this._read=function(e){h("wrapped _read",e),n&&(n=!1,t.resume())},this},"function"==typeof Symbol&&(L.prototype[Symbol.asyncIterator]=function(){return void 0===d&&(d=r(45850)),d(this)}),Object.defineProperty(L.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(L.prototype,"readableBuffer",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(L.prototype,"readableFlowing",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(t){this._readableState&&(this._readableState.flowing=t)}}),L._fromList=I,Object.defineProperty(L.prototype,"readableLength",{enumerable:!1,get:function(){return this._readableState.length}}),"function"==typeof Symbol&&(L.from=function(t,e){return void 0===f&&(f=r(15167)),f(L,t,e)})},74605:(t,e,r)=>{"use strict";t.exports=c;var n=r(94281).q,i=n.ERR_METHOD_NOT_IMPLEMENTED,s=n.ERR_MULTIPLE_CALLBACK,o=n.ERR_TRANSFORM_ALREADY_TRANSFORMING,a=n.ERR_TRANSFORM_WITH_LENGTH_0,u=r(56753);function h(t,e){var r=this._transformState;r.transforming=!1;var n=r.writecb;if(null===n)return this.emit("error",new s);r.writechunk=null,r.writecb=null,null!=e&&this.push(e),n(t);var i=this._readableState;i.reading=!1,(i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}function c(t){if(!(this instanceof c))return new c(t);u.call(this,t),this._transformState={afterTransform:h.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,t&&("function"==typeof t.transform&&(this._transform=t.transform),"function"==typeof t.flush&&(this._flush=t.flush)),this.on("prefinish",l)}function l(){var t=this;"function"!=typeof this._flush||this._readableState.destroyed?d(this,null,null):this._flush((function(e,r){d(t,e,r)}))}function d(t,e,r){if(e)return t.emit("error",e);if(null!=r&&t.push(r),t._writableState.length)throw new a;if(t._transformState.transforming)throw new o;return t.push(null)}r(35717)(c,u),c.prototype.push=function(t,e){return this._transformState.needTransform=!1,u.prototype.push.call(this,t,e)},c.prototype._transform=function(t,e,r){r(new i("_transform()"))},c.prototype._write=function(t,e,r){var n=this._transformState;if(n.writecb=r,n.writechunk=t,n.writeencoding=e,!n.transforming){var i=this._readableState;(n.needTransform||i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}},c.prototype._read=function(t){var e=this._transformState;null===e.writechunk||e.transforming?e.needTransform=!0:(e.transforming=!0,this._transform(e.writechunk,e.writeencoding,e.afterTransform))},c.prototype._destroy=function(t,e){u.prototype._destroy.call(this,t,(function(t){e(t)}))}},64229:(t,e,r)=>{"use strict";var n,i=r(34155);function s(t){var e=this;this.next=null,this.entry=null,this.finish=function(){!function(t,e,r){var n=t.entry;t.entry=null;for(;n;){var i=n.callback;e.pendingcb--,i(r),n=n.next}e.corkedRequestsFree.next=t}(e,t)}}t.exports=L,L.WritableState=P;var o={deprecate:r(94927)},a=r(22503),u=r(48764).Buffer,h=r.g.Uint8Array||function(){};var c,l=r(61195),d=r(82457).getHighWaterMark,f=r(94281).q,p=f.ERR_INVALID_ARG_TYPE,m=f.ERR_METHOD_NOT_IMPLEMENTED,y=f.ERR_MULTIPLE_CALLBACK,v=f.ERR_STREAM_CANNOT_PIPE,g=f.ERR_STREAM_DESTROYED,b=f.ERR_STREAM_NULL_VALUES,w=f.ERR_STREAM_WRITE_AFTER_END,M=f.ERR_UNKNOWN_ENCODING,k=l.errorOrDestroy;function x(){}function P(t,e,o){n=n||r(56753),t=t||{},"boolean"!=typeof o&&(o=e instanceof n),this.objectMode=!!t.objectMode,o&&(this.objectMode=this.objectMode||!!t.writableObjectMode),this.highWaterMark=d(this,t,"writableHighWaterMark",o),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var a=!1===t.decodeStrings;this.decodeStrings=!a,this.defaultEncoding=t.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(t){!function(t,e){var r=t._writableState,n=r.sync,s=r.writecb;if("function"!=typeof s)throw new y;if(function(t){t.writing=!1,t.writecb=null,t.length-=t.writelen,t.writelen=0}(r),e)!function(t,e,r,n,s){--e.pendingcb,r?(i.nextTick(s,n),i.nextTick(H,t,e),t._writableState.errorEmitted=!0,k(t,n)):(s(n),t._writableState.errorEmitted=!0,k(t,n),H(t,e))}(t,r,n,e,s);else{var o=D(r)||t.destroyed;o||r.corked||r.bufferProcessing||!r.bufferedRequest||A(t,r),n?i.nextTick(S,t,r,o,s):S(t,r,o,s)}}(e,t)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==t.emitClose,this.autoDestroy=!!t.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new s(this)}function L(t){var e=this instanceof(n=n||r(56753));if(!e&&!c.call(L,this))return new L(t);this._writableState=new P(t,this,e),this.writable=!0,t&&("function"==typeof t.write&&(this._write=t.write),"function"==typeof t.writev&&(this._writev=t.writev),"function"==typeof t.destroy&&(this._destroy=t.destroy),"function"==typeof t.final&&(this._final=t.final)),a.call(this)}function T(t,e,r,n,i,s,o){e.writelen=n,e.writecb=o,e.writing=!0,e.sync=!0,e.destroyed?e.onwrite(new g("write")):r?t._writev(i,e.onwrite):t._write(i,s,e.onwrite),e.sync=!1}function S(t,e,r,n){r||function(t,e){0===e.length&&e.needDrain&&(e.needDrain=!1,t.emit("drain"))}(t,e),e.pendingcb--,n(),H(t,e)}function A(t,e){e.bufferProcessing=!0;var r=e.bufferedRequest;if(t._writev&&r&&r.next){var n=e.bufferedRequestCount,i=new Array(n),o=e.corkedRequestsFree;o.entry=r;for(var a=0,u=!0;r;)i[a]=r,r.isBuf||(u=!1),r=r.next,a+=1;i.allBuffers=u,T(t,e,!0,e.length,i,"",o.finish),e.pendingcb++,e.lastBufferedRequest=null,o.next?(e.corkedRequestsFree=o.next,o.next=null):e.corkedRequestsFree=new s(e),e.bufferedRequestCount=0}else{for(;r;){var h=r.chunk,c=r.encoding,l=r.callback;if(T(t,e,!1,e.objectMode?1:h.length,h,c,l),r=r.next,e.bufferedRequestCount--,e.writing)break}null===r&&(e.lastBufferedRequest=null)}e.bufferedRequest=r,e.bufferProcessing=!1}function D(t){return t.ending&&0===t.length&&null===t.bufferedRequest&&!t.finished&&!t.writing}function j(t,e){t._final((function(r){e.pendingcb--,r&&k(t,r),e.prefinished=!0,t.emit("prefinish"),H(t,e)}))}function H(t,e){var r=D(e);if(r&&(function(t,e){e.prefinished||e.finalCalled||("function"!=typeof t._final||e.destroyed?(e.prefinished=!0,t.emit("prefinish")):(e.pendingcb++,e.finalCalled=!0,i.nextTick(j,t,e)))}(t,e),0===e.pendingcb&&(e.finished=!0,t.emit("finish"),e.autoDestroy))){var n=t._readableState;(!n||n.autoDestroy&&n.endEmitted)&&t.destroy()}return r}r(35717)(L,a),P.prototype.getBuffer=function(){for(var t=this.bufferedRequest,e=[];t;)e.push(t),t=t.next;return e},function(){try{Object.defineProperty(P.prototype,"buffer",{get:o.deprecate((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(t){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(c=Function.prototype[Symbol.hasInstance],Object.defineProperty(L,Symbol.hasInstance,{value:function(t){return!!c.call(this,t)||this===L&&(t&&t._writableState instanceof P)}})):c=function(t){return t instanceof this},L.prototype.pipe=function(){k(this,new v)},L.prototype.write=function(t,e,r){var n,s=this._writableState,o=!1,a=!s.objectMode&&(n=t,u.isBuffer(n)||n instanceof h);return a&&!u.isBuffer(t)&&(t=function(t){return u.from(t)}(t)),"function"==typeof e&&(r=e,e=null),a?e="buffer":e||(e=s.defaultEncoding),"function"!=typeof r&&(r=x),s.ending?function(t,e){var r=new w;k(t,r),i.nextTick(e,r)}(this,r):(a||function(t,e,r,n){var s;return null===r?s=new b:"string"==typeof r||e.objectMode||(s=new p("chunk",["string","Buffer"],r)),!s||(k(t,s),i.nextTick(n,s),!1)}(this,s,t,r))&&(s.pendingcb++,o=function(t,e,r,n,i,s){if(!r){var o=function(t,e,r){t.objectMode||!1===t.decodeStrings||"string"!=typeof e||(e=u.from(e,r));return e}(e,n,i);n!==o&&(r=!0,i="buffer",n=o)}var a=e.objectMode?1:n.length;e.length+=a;var h=e.length<e.highWaterMark;h||(e.needDrain=!0);if(e.writing||e.corked){var c=e.lastBufferedRequest;e.lastBufferedRequest={chunk:n,encoding:i,isBuf:r,callback:s,next:null},c?c.next=e.lastBufferedRequest:e.bufferedRequest=e.lastBufferedRequest,e.bufferedRequestCount+=1}else T(t,e,!1,a,n,i,s);return h}(this,s,a,t,e,r)),o},L.prototype.cork=function(){this._writableState.corked++},L.prototype.uncork=function(){var t=this._writableState;t.corked&&(t.corked--,t.writing||t.corked||t.bufferProcessing||!t.bufferedRequest||A(this,t))},L.prototype.setDefaultEncoding=function(t){if("string"==typeof t&&(t=t.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((t+"").toLowerCase())>-1))throw new M(t);return this._writableState.defaultEncoding=t,this},Object.defineProperty(L.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(L.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),L.prototype._write=function(t,e,r){r(new m("_write()"))},L.prototype._writev=null,L.prototype.end=function(t,e,r){var n=this._writableState;return"function"==typeof t?(r=t,t=null,e=null):"function"==typeof e&&(r=e,e=null),null!=t&&this.write(t,e),n.corked&&(n.corked=1,this.uncork()),n.ending||function(t,e,r){e.ending=!0,H(t,e),r&&(e.finished?i.nextTick(r):t.once("finish",r));e.ended=!0,t.writable=!1}(this,n,r),this},Object.defineProperty(L.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(L.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(t){this._writableState&&(this._writableState.destroyed=t)}}),L.prototype.destroy=l.destroy,L.prototype._undestroy=l.undestroy,L.prototype._destroy=function(t,e){e(t)}},45850:(t,e,r)=>{"use strict";var n,i=r(34155);function s(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var o=r(8610),a=Symbol("lastResolve"),u=Symbol("lastReject"),h=Symbol("error"),c=Symbol("ended"),l=Symbol("lastPromise"),d=Symbol("handlePromise"),f=Symbol("stream");function p(t,e){return{value:t,done:e}}function m(t){var e=t[a];if(null!==e){var r=t[f].read();null!==r&&(t[l]=null,t[a]=null,t[u]=null,e(p(r,!1)))}}function y(t){i.nextTick(m,t)}var v=Object.getPrototypeOf((function(){})),g=Object.setPrototypeOf((s(n={get stream(){return this[f]},next:function(){var t=this,e=this[h];if(null!==e)return Promise.reject(e);if(this[c])return Promise.resolve(p(void 0,!0));if(this[f].destroyed)return new Promise((function(e,r){i.nextTick((function(){t[h]?r(t[h]):e(p(void 0,!0))}))}));var r,n=this[l];if(n)r=new Promise(function(t,e){return function(r,n){t.then((function(){e[c]?r(p(void 0,!0)):e[d](r,n)}),n)}}(n,this));else{var s=this[f].read();if(null!==s)return Promise.resolve(p(s,!1));r=new Promise(this[d])}return this[l]=r,r}},Symbol.asyncIterator,(function(){return this})),s(n,"return",(function(){var t=this;return new Promise((function(e,r){t[f].destroy(null,(function(t){t?r(t):e(p(void 0,!0))}))}))})),n),v);t.exports=function(t){var e,r=Object.create(g,(s(e={},f,{value:t,writable:!0}),s(e,a,{value:null,writable:!0}),s(e,u,{value:null,writable:!0}),s(e,h,{value:null,writable:!0}),s(e,c,{value:t._readableState.endEmitted,writable:!0}),s(e,d,{value:function(t,e){var n=r[f].read();n?(r[l]=null,r[a]=null,r[u]=null,t(p(n,!1))):(r[a]=t,r[u]=e)},writable:!0}),e));return r[l]=null,o(t,(function(t){if(t&&"ERR_STREAM_PREMATURE_CLOSE"!==t.code){var e=r[u];return null!==e&&(r[l]=null,r[a]=null,r[u]=null,e(t)),void(r[h]=t)}var n=r[a];null!==n&&(r[l]=null,r[a]=null,r[u]=null,n(p(void 0,!0))),r[c]=!0})),t.on("readable",y.bind(null,r)),r}},57327:(t,e,r)=>{"use strict";function n(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function s(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var o=r(48764).Buffer,a=r(52361).inspect,u=a&&a.custom||"inspect";t.exports=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.head=null,this.tail=null,this.length=0}var e,r,h;return e=t,r=[{key:"push",value:function(t){var e={data:t,next:null};this.length>0?this.tail.next=e:this.head=e,this.tail=e,++this.length}},{key:"unshift",value:function(t){var e={data:t,next:this.head};0===this.length&&(this.tail=e),this.head=e,++this.length}},{key:"shift",value:function(){if(0!==this.length){var t=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,t}}},{key:"clear",value:function(){this.head=this.tail=null,this.length=0}},{key:"join",value:function(t){if(0===this.length)return"";for(var e=this.head,r=""+e.data;e=e.next;)r+=t+e.data;return r}},{key:"concat",value:function(t){if(0===this.length)return o.alloc(0);for(var e,r,n,i=o.allocUnsafe(t>>>0),s=this.head,a=0;s;)e=s.data,r=i,n=a,o.prototype.copy.call(e,r,n),a+=s.data.length,s=s.next;return i}},{key:"consume",value:function(t,e){var r;return t<this.head.data.length?(r=this.head.data.slice(0,t),this.head.data=this.head.data.slice(t)):r=t===this.head.data.length?this.shift():e?this._getString(t):this._getBuffer(t),r}},{key:"first",value:function(){return this.head.data}},{key:"_getString",value:function(t){var e=this.head,r=1,n=e.data;for(t-=n.length;e=e.next;){var i=e.data,s=t>i.length?i.length:t;if(s===i.length?n+=i:n+=i.slice(0,t),0==(t-=s)){s===i.length?(++r,e.next?this.head=e.next:this.head=this.tail=null):(this.head=e,e.data=i.slice(s));break}++r}return this.length-=r,n}},{key:"_getBuffer",value:function(t){var e=o.allocUnsafe(t),r=this.head,n=1;for(r.data.copy(e),t-=r.data.length;r=r.next;){var i=r.data,s=t>i.length?i.length:t;if(i.copy(e,e.length-t,0,s),0==(t-=s)){s===i.length?(++n,r.next?this.head=r.next:this.head=this.tail=null):(this.head=r,r.data=i.slice(s));break}++n}return this.length-=n,e}},{key:u,value:function(t,e){return a(this,function(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?n(Object(r),!0).forEach((function(e){i(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}({},e,{depth:0,customInspect:!1}))}}],r&&s(e.prototype,r),h&&s(e,h),t}()},61195:(t,e,r)=>{"use strict";var n=r(34155);function i(t,e){o(t,e),s(t)}function s(t){t._writableState&&!t._writableState.emitClose||t._readableState&&!t._readableState.emitClose||t.emit("close")}function o(t,e){t.emit("error",e)}t.exports={destroy:function(t,e){var r=this,a=this._readableState&&this._readableState.destroyed,u=this._writableState&&this._writableState.destroyed;return a||u?(e?e(t):t&&(this._writableState?this._writableState.errorEmitted||(this._writableState.errorEmitted=!0,n.nextTick(o,this,t)):n.nextTick(o,this,t)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(t||null,(function(t){!e&&t?r._writableState?r._writableState.errorEmitted?n.nextTick(s,r):(r._writableState.errorEmitted=!0,n.nextTick(i,r,t)):n.nextTick(i,r,t):e?(n.nextTick(s,r),e(t)):n.nextTick(s,r)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(t,e){var r=t._readableState,n=t._writableState;r&&r.autoDestroy||n&&n.autoDestroy?t.destroy(e):t.emit("error",e)}}},8610:(t,e,r)=>{"use strict";var n=r(94281).q.ERR_STREAM_PREMATURE_CLOSE;function i(){}t.exports=function t(e,r,s){if("function"==typeof r)return t(e,null,r);r||(r={}),s=function(t){var e=!1;return function(){if(!e){e=!0;for(var r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];t.apply(this,n)}}}(s||i);var o=r.readable||!1!==r.readable&&e.readable,a=r.writable||!1!==r.writable&&e.writable,u=function(){e.writable||c()},h=e._writableState&&e._writableState.finished,c=function(){a=!1,h=!0,o||s.call(e)},l=e._readableState&&e._readableState.endEmitted,d=function(){o=!1,l=!0,a||s.call(e)},f=function(t){s.call(e,t)},p=function(){var t;return o&&!l?(e._readableState&&e._readableState.ended||(t=new n),s.call(e,t)):a&&!h?(e._writableState&&e._writableState.ended||(t=new n),s.call(e,t)):void 0},m=function(){e.req.on("finish",c)};return!function(t){return t.setHeader&&"function"==typeof t.abort}(e)?a&&!e._writableState&&(e.on("end",u),e.on("close",u)):(e.on("complete",c),e.on("abort",p),e.req?m():e.on("request",m)),e.on("end",d),e.on("finish",c),!1!==r.error&&e.on("error",f),e.on("close",p),function(){e.removeListener("complete",c),e.removeListener("abort",p),e.removeListener("request",m),e.req&&e.req.removeListener("finish",c),e.removeListener("end",u),e.removeListener("close",u),e.removeListener("finish",c),e.removeListener("end",d),e.removeListener("error",f),e.removeListener("close",p)}}},15167:t=>{t.exports=function(){throw new Error("Readable.from is not available in the browser")}},59946:(t,e,r)=>{"use strict";var n;var i=r(94281).q,s=i.ERR_MISSING_ARGS,o=i.ERR_STREAM_DESTROYED;function a(t){if(t)throw t}function u(t,e,i,s){s=function(t){var e=!1;return function(){e||(e=!0,t.apply(void 0,arguments))}}(s);var a=!1;t.on("close",(function(){a=!0})),void 0===n&&(n=r(8610)),n(t,{readable:e,writable:i},(function(t){if(t)return s(t);a=!0,s()}));var u=!1;return function(e){if(!a&&!u)return u=!0,function(t){return t.setHeader&&"function"==typeof t.abort}(t)?t.abort():"function"==typeof t.destroy?t.destroy():void s(e||new o("pipe"))}}function h(t){t()}function c(t,e){return t.pipe(e)}function l(t){return t.length?"function"!=typeof t[t.length-1]?a:t.pop():a}t.exports=function(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];var n,i=l(e);if(Array.isArray(e[0])&&(e=e[0]),e.length<2)throw new s("streams");var o=e.map((function(t,r){var s=r<e.length-1;return u(t,s,r>0,(function(t){n||(n=t),t&&o.forEach(h),s||(o.forEach(h),i(n))}))}));return e.reduce(c)}},82457:(t,e,r)=>{"use strict";var n=r(94281).q.ERR_INVALID_OPT_VALUE;t.exports={getHighWaterMark:function(t,e,r,i){var s=function(t,e,r){return null!=t.highWaterMark?t.highWaterMark:e?t[r]:null}(e,i,r);if(null!=s){if(!isFinite(s)||Math.floor(s)!==s||s<0)throw new n(i?r:"highWaterMark",s);return Math.floor(s)}return t.objectMode?16:16384}}},22503:(t,e,r)=>{t.exports=r(17187).EventEmitter},88473:(t,e,r)=>{(e=t.exports=r(79481)).Stream=e,e.Readable=e,e.Writable=r(64229),e.Duplex=r(56753),e.Transform=r(74605),e.PassThrough=r(82725),e.finished=r(8610),e.pipeline=r(59946)},79785:(t,e,r)=>{"use strict";var n=r(48764).Buffer,i=r(35717),s=r(3349),o=new Array(16),a=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],u=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],h=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],c=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],l=[0,1518500249,1859775393,2400959708,2840853838],d=[1352829926,1548603684,1836072691,2053994217,0];function f(){s.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520}function p(t,e){return t<<e|t>>>32-e}function m(t,e,r,n,i,s,o,a){return p(t+(e^r^n)+s+o|0,a)+i|0}function y(t,e,r,n,i,s,o,a){return p(t+(e&r|~e&n)+s+o|0,a)+i|0}function v(t,e,r,n,i,s,o,a){return p(t+((e|~r)^n)+s+o|0,a)+i|0}function g(t,e,r,n,i,s,o,a){return p(t+(e&n|r&~n)+s+o|0,a)+i|0}function b(t,e,r,n,i,s,o,a){return p(t+(e^(r|~n))+s+o|0,a)+i|0}i(f,s),f.prototype._update=function(){for(var t=o,e=0;e<16;++e)t[e]=this._block.readInt32LE(4*e);for(var r=0|this._a,n=0|this._b,i=0|this._c,s=0|this._d,f=0|this._e,w=0|this._a,M=0|this._b,k=0|this._c,x=0|this._d,P=0|this._e,L=0;L<80;L+=1){var T,S;L<16?(T=m(r,n,i,s,f,t[a[L]],l[0],h[L]),S=b(w,M,k,x,P,t[u[L]],d[0],c[L])):L<32?(T=y(r,n,i,s,f,t[a[L]],l[1],h[L]),S=g(w,M,k,x,P,t[u[L]],d[1],c[L])):L<48?(T=v(r,n,i,s,f,t[a[L]],l[2],h[L]),S=v(w,M,k,x,P,t[u[L]],d[2],c[L])):L<64?(T=g(r,n,i,s,f,t[a[L]],l[3],h[L]),S=y(w,M,k,x,P,t[u[L]],d[3],c[L])):(T=b(r,n,i,s,f,t[a[L]],l[4],h[L]),S=m(w,M,k,x,P,t[u[L]],d[4],c[L])),r=f,f=s,s=p(i,10),i=n,n=T,w=P,P=x,x=p(k,10),k=M,M=S}var A=this._b+i+x|0;this._b=this._c+s+P|0,this._c=this._d+f+w|0,this._d=this._e+r+M|0,this._e=this._a+n+k|0,this._a=A},f.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var t=n.alloc?n.alloc(20):new n(20);return t.writeInt32LE(this._a,0),t.writeInt32LE(this._b,4),t.writeInt32LE(this._c,8),t.writeInt32LE(this._d,12),t.writeInt32LE(this._e,16),t},t.exports=f},51675:function(t,e,r){"use strict";var n=r(23085).Buffer,i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.getLength=e.decode=e.encode=void 0;var s=i(r(13550));function o(t,e){if("0"===t[0]&&"0"===t[1])throw new Error("invalid RLP: extra zeros");return parseInt(t,e)}function a(t,e){if(t<56)return n.from([t+e]);var r=c(t),i=c(e+55+r.length/2);return n.from(i+r,"hex")}function u(t){var e,r,i,s,a,h=[],c=t[0];if(c<=127)return{data:t.slice(0,1),remainder:t.slice(1)};if(c<=183){if(e=c-127,i=128===c?n.from([]):t.slice(1,e),2===e&&i[0]<128)throw new Error("invalid rlp encoding: byte must be less 0x80");return{data:i,remainder:t.slice(e)}}if(c<=191){if(r=c-182,t.length-1<r)throw new Error("invalid RLP: not enough bytes for string length");if((e=o(t.slice(1,r).toString("hex"),16))<=55)throw new Error("invalid RLP: expected string length to be greater than 55");if((i=t.slice(r,e+r)).length<e)throw new Error("invalid RLP: not enough bytes for string");return{data:i,remainder:t.slice(e+r)}}if(c<=247){for(e=c-191,s=t.slice(1,e);s.length;)a=u(s),h.push(a.data),s=a.remainder;return{data:h,remainder:t.slice(e)}}var l=(r=c-246)+(e=o(t.slice(1,r).toString("hex"),16));if(l>t.length)throw new Error("invalid rlp: total length is larger than the data");if(0===(s=t.slice(r,l)).length)throw new Error("invalid rlp, List has a invalid length");for(;s.length;)a=u(s),h.push(a.data),s=a.remainder;return{data:h,remainder:t.slice(l)}}function h(t){return"0x"===t.slice(0,2)}function c(t){if(t<0)throw new Error("Invalid integer as argument, must be unsigned!");var e=t.toString(16);return e.length%2?"0"+e:e}function l(t){if(!n.isBuffer(t)){if("string"==typeof t)return h(t)?n.from((r="string"!=typeof(i=t)?i:h(i)?i.slice(2):i).length%2?"0"+r:r,"hex"):n.from(t);if("number"==typeof t||"bigint"==typeof t)return t?(e=c(t),n.from(e,"hex")):n.from([]);if(null==t)return n.from([]);if(t instanceof Uint8Array)return n.from(t);if(s.default.isBN(t))return n.from(t.toArray());throw new Error("invalid type")}var e,r,i;return t}e.encode=function t(e){if(Array.isArray(e)){for(var r=[],i=0;i<e.length;i++)r.push(t(e[i]));var s=n.concat(r);return n.concat([a(s.length,192),s])}var o=l(e);return 1===o.length&&o[0]<128?o:n.concat([a(o.length,128),o])},e.decode=function(t,e){if(void 0===e&&(e=!1),!t||0===t.length)return n.from([]);var r=u(l(t));if(e)return r;if(0!==r.remainder.length)throw new Error("invalid remainder");return r.data},e.getLength=function(t){if(!t||0===t.length)return n.from([]);var e=l(t),r=e[0];if(r<=127)return e.length;if(r<=183)return r-127;if(r<=191)return r-182;if(r<=247)return r-191;var i=r-246;return i+o(e.slice(1,i).toString("hex"),16)}},89509:(t,e,r)=>{
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
var n=r(48764),i=n.Buffer;function s(t,e){for(var r in t)e[r]=t[r]}function o(t,e,r){return i(t,e,r)}i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?t.exports=n:(s(n,e),e.Buffer=o),o.prototype=Object.create(i.prototype),s(i,o),o.from=function(t,e,r){if("number"==typeof t)throw new TypeError("Argument must not be a number");return i(t,e,r)},o.alloc=function(t,e,r){if("number"!=typeof t)throw new TypeError("Argument must be a number");var n=i(t);return void 0!==e?"string"==typeof r?n.fill(e,r):n.fill(e):n.fill(0),n},o.allocUnsafe=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return i(t)},o.allocUnsafeSlow=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return n.SlowBuffer(t)}},2399:(t,e,r)=>{"use strict";var n,i=r(34155),s=r(48764),o=s.Buffer,a={};for(n in s)s.hasOwnProperty(n)&&"SlowBuffer"!==n&&"Buffer"!==n&&(a[n]=s[n]);var u=a.Buffer={};for(n in o)o.hasOwnProperty(n)&&"allocUnsafe"!==n&&"allocUnsafeSlow"!==n&&(u[n]=o[n]);if(a.Buffer.prototype=o.prototype,u.from&&u.from!==Uint8Array.from||(u.from=function(t,e,r){if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type '+typeof t);if(t&&void 0===t.length)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);return o(t,e,r)}),u.alloc||(u.alloc=function(t,e,r){if("number"!=typeof t)throw new TypeError('The "size" argument must be of type number. Received type '+typeof t);if(t<0||t>=2*(1<<30))throw new RangeError('The value "'+t+'" is invalid for option "size"');var n=o(t);return e&&0!==e.length?"string"==typeof r?n.fill(e,r):n.fill(e):n.fill(0),n}),!a.kStringMaxLength)try{a.kStringMaxLength=i.binding("buffer").kStringMaxLength}catch(t){}a.constants||(a.constants={MAX_LENGTH:a.kMaxLength},a.kStringMaxLength&&(a.constants.MAX_STRING_LENGTH=a.kStringMaxLength)),t.exports=a},73151:(t,e,r)=>{const n=r(75180);n.async=r(9084),t.exports=n},9084:(t,e,r)=>{const n=r(55835),{checkAndInit:i,smix:s}=r(15427);t.exports=async function(t,e,r,o,a,u,h,c){const{XY:l,V:d,B32:f,x:p,_X:m,B:y,tickCallback:v}=i(t,e,r,o,a,u,h);for(var g=0;g<a;g++)await s(y,128*g*o,o,r,d,l,m,f,p,v,c);return n.pbkdf2Sync(t,y,1,u,"sha256")}},75180:(t,e,r)=>{const n=r(55835),{checkAndInit:i,smixSync:s}=r(15427);t.exports=function(t,e,r,o,a,u,h){const{XY:c,V:l,B32:d,x:f,_X:p,B:m,tickCallback:y}=i(t,e,r,o,a,u,h);for(var v=0;v<a;v++)s(m,128*v*o,o,r,l,c,p,d,f,y);return n.pbkdf2Sync(t,m,1,u,"sha256")}},15427:(t,e,r)=>{var n=r(23085).Buffer;const i=r(55835),s=2147483647;function o(t,e,r,n,i,s,o){let a;for(c(t,e+64*(2*n-1),i,0,64),a=0;a<2*n;a++)h(t,64*a,i,0,64),u(i,s,o),c(i,0,t,r+64*a,64);for(a=0;a<n;a++)c(t,r+2*a*64,t,e+64*a,64);for(a=0;a<n;a++)c(t,r+64*(2*a+1),t,e+64*(a+n),64)}function a(t,e){return t<<e|t>>>32-e}function u(t,e,r){let n;for(n=0;n<16;n++)e[n]=(255&t[4*n+0])<<0,e[n]|=(255&t[4*n+1])<<8,e[n]|=(255&t[4*n+2])<<16,e[n]|=(255&t[4*n+3])<<24;for(c(e,0,r,0,16),n=8;n>0;n-=2)r[4]^=a(r[0]+r[12],7),r[8]^=a(r[4]+r[0],9),r[12]^=a(r[8]+r[4],13),r[0]^=a(r[12]+r[8],18),r[9]^=a(r[5]+r[1],7),r[13]^=a(r[9]+r[5],9),r[1]^=a(r[13]+r[9],13),r[5]^=a(r[1]+r[13],18),r[14]^=a(r[10]+r[6],7),r[2]^=a(r[14]+r[10],9),r[6]^=a(r[2]+r[14],13),r[10]^=a(r[6]+r[2],18),r[3]^=a(r[15]+r[11],7),r[7]^=a(r[3]+r[15],9),r[11]^=a(r[7]+r[3],13),r[15]^=a(r[11]+r[7],18),r[1]^=a(r[0]+r[3],7),r[2]^=a(r[1]+r[0],9),r[3]^=a(r[2]+r[1],13),r[0]^=a(r[3]+r[2],18),r[6]^=a(r[5]+r[4],7),r[7]^=a(r[6]+r[5],9),r[4]^=a(r[7]+r[6],13),r[5]^=a(r[4]+r[7],18),r[11]^=a(r[10]+r[9],7),r[8]^=a(r[11]+r[10],9),r[9]^=a(r[8]+r[11],13),r[10]^=a(r[9]+r[8],18),r[12]^=a(r[15]+r[14],7),r[13]^=a(r[12]+r[15],9),r[14]^=a(r[13]+r[12],13),r[15]^=a(r[14]+r[13],18);for(n=0;n<16;++n)e[n]=r[n]+e[n];for(n=0;n<16;n++){let r=4*n;t[r+0]=e[n]>>0&255,t[r+1]=e[n]>>8&255,t[r+2]=e[n]>>16&255,t[r+3]=e[n]>>24&255}}function h(t,e,r,n,i){for(let s=0;s<i;s++)r[n+s]^=t[e+s]}function c(t,e,r,i,s){if(n.isBuffer(t)&&n.isBuffer(r))t.copy(r,i,e,e+s);else for(;s--;)r[i++]=t[e++]}t.exports={checkAndInit:function(t,e,r,o,a,u,h){if(0===r||0!=(r&r-1))throw Error("N must be > 0 and a power of 2");if(r>s/128/o)throw Error("Parameter N is too large");if(o>s/128/a)throw Error("Parameter r is too large");let c,l=n.alloc(256*o),d=n.alloc(128*o*r),f=new Int32Array(16),p=new Int32Array(16),m=n.alloc(64),y=i.pbkdf2Sync(t,e,1,128*a*o,"sha256");if(h){let t=a*r*2,e=0;c=function(){++e,e%1e3==0&&h({current:e,total:t,percent:e/t*100})}}return{XY:l,V:d,B32:f,x:p,_X:m,B:y,tickCallback:c}},smix:async function(t,e,r,n,i,s,a,u,c,l,d){d=d||5e3;let f,p=128*r;for(t.copy(s,0,e,e+p),f=0;f<n;f++)s.copy(i,f*p,0,0+p),f%d==0&&await new Promise((t=>setImmediate(t))),o(s,0,p,r,a,u,c),l&&l();for(f=0;f<n;f++){let t=0+64*(2*r-1);h(i,(s.readUInt32LE(t)&n-1)*p,s,0,p),f%d==0&&await new Promise((t=>setImmediate(t))),o(s,0,p,r,a,u,c),l&&l()}s.copy(t,e,0,0+p)},smixSync:function(t,e,r,n,i,s,a,u,c,l){let d,f=128*r;for(t.copy(s,0,e,e+f),d=0;d<n;d++)s.copy(i,d*f,0,0+f),o(s,0,f,r,a,u,c),l&&l();for(d=0;d<n;d++){let t=0+64*(2*r-1);h(i,(s.readUInt32LE(t)&n-1)*f,s,0,f),o(s,0,f,r,a,u,c),l&&l()}s.copy(t,e,0,0+f)}}},17221:(t,e,r)=>{t.exports=r(59119)(r(58573))},58573:(t,e,r)=>{const n=new(0,r(86266).ec)("secp256k1"),i=n.curve,s=i.n.constructor;function o(t){const e=t[0];switch(e){case 2:case 3:return 33!==t.length?null:function(t,e){let r=new s(e);if(r.cmp(i.p)>=0)return null;r=r.toRed(i.red);let o=r.redSqr().redIMul(r).redIAdd(i.b).redSqrt();return 3===t!==o.isOdd()&&(o=o.redNeg()),n.keyPair({pub:{x:r,y:o}})}(e,t.subarray(1,33));case 4:case 6:case 7:return 65!==t.length?null:function(t,e,r){let o=new s(e),a=new s(r);if(o.cmp(i.p)>=0||a.cmp(i.p)>=0)return null;if(o=o.toRed(i.red),a=a.toRed(i.red),(6===t||7===t)&&a.isOdd()!==(7===t))return null;const u=o.redSqr().redIMul(o);return a.redSqr().redISub(u.redIAdd(i.b)).isZero()?n.keyPair({pub:{x:o,y:a}}):null}(e,t.subarray(1,33),t.subarray(33,65));default:return null}}function a(t,e){const r=e.encode(null,33===t.length);for(let e=0;e<t.length;++e)t[e]=r[e]}t.exports={contextRandomize:()=>0,privateKeyVerify(t){const e=new s(t);return e.cmp(i.n)<0&&!e.isZero()?0:1},privateKeyNegate(t){const e=new s(t),r=i.n.sub(e).umod(i.n).toArrayLike(Uint8Array,"be",32);return t.set(r),0},privateKeyTweakAdd(t,e){const r=new s(e);if(r.cmp(i.n)>=0)return 1;if(r.iadd(new s(t)),r.cmp(i.n)>=0&&r.isub(i.n),r.isZero())return 1;const n=r.toArrayLike(Uint8Array,"be",32);return t.set(n),0},privateKeyTweakMul(t,e){let r=new s(e);if(r.cmp(i.n)>=0||r.isZero())return 1;r.imul(new s(t)),r.cmp(i.n)>=0&&(r=r.umod(i.n));const n=r.toArrayLike(Uint8Array,"be",32);return t.set(n),0},publicKeyVerify:t=>null===o(t)?1:0,publicKeyCreate(t,e){const r=new s(e);if(r.cmp(i.n)>=0||r.isZero())return 1;return a(t,n.keyFromPrivate(e).getPublic()),0},publicKeyConvert(t,e){const r=o(e);if(null===r)return 1;return a(t,r.getPublic()),0},publicKeyNegate(t,e){const r=o(e);if(null===r)return 1;const n=r.getPublic();return n.y=n.y.redNeg(),a(t,n),0},publicKeyCombine(t,e){const r=new Array(e.length);for(let t=0;t<e.length;++t)if(r[t]=o(e[t]),null===r[t])return 1;let n=r[0].getPublic();for(let t=1;t<r.length;++t)n=n.add(r[t].pub);return n.isInfinity()?2:(a(t,n),0)},publicKeyTweakAdd(t,e,r){const n=o(e);if(null===n)return 1;if((r=new s(r)).cmp(i.n)>=0)return 2;const u=n.getPublic().add(i.g.mul(r));return u.isInfinity()?2:(a(t,u),0)},publicKeyTweakMul(t,e,r){const n=o(e);if(null===n)return 1;if((r=new s(r)).cmp(i.n)>=0||r.isZero())return 2;return a(t,n.getPublic().mul(r)),0},signatureNormalize(t){const e=new s(t.subarray(0,32)),r=new s(t.subarray(32,64));return e.cmp(i.n)>=0||r.cmp(i.n)>=0?1:(1===r.cmp(n.nh)&&t.set(i.n.sub(r).toArrayLike(Uint8Array,"be",32),32),0)},signatureExport(t,e){const r=e.subarray(0,32),n=e.subarray(32,64);if(new s(r).cmp(i.n)>=0)return 1;if(new s(n).cmp(i.n)>=0)return 1;const{output:o}=t;let a=o.subarray(4,37);a[0]=0,a.set(r,1);let u=33,h=0;for(;u>1&&0===a[h]&&!(128&a[h+1]);--u,++h);if(a=a.subarray(h),128&a[0])return 1;if(u>1&&0===a[0]&&!(128&a[1]))return 1;let c=o.subarray(39,72);c[0]=0,c.set(n,1);let l=33,d=0;for(;l>1&&0===c[d]&&!(128&c[d+1]);--l,++d);return c=c.subarray(d),128&c[0]||l>1&&0===c[0]&&!(128&c[1])?1:(t.outputlen=6+u+l,o[0]=48,o[1]=t.outputlen-2,o[2]=2,o[3]=a.length,o.set(a,4),o[4+u]=2,o[5+u]=c.length,o.set(c,6+u),0)},signatureImport(t,e){if(e.length<8)return 1;if(e.length>72)return 1;if(48!==e[0])return 1;if(e[1]!==e.length-2)return 1;if(2!==e[2])return 1;const r=e[3];if(0===r)return 1;if(5+r>=e.length)return 1;if(2!==e[4+r])return 1;const n=e[5+r];if(0===n)return 1;if(6+r+n!==e.length)return 1;if(128&e[4])return 1;if(r>1&&0===e[4]&&!(128&e[5]))return 1;if(128&e[r+6])return 1;if(n>1&&0===e[r+6]&&!(128&e[r+7]))return 1;let o=e.subarray(4,4+r);if(33===o.length&&0===o[0]&&(o=o.subarray(1)),o.length>32)return 1;let a=e.subarray(6+r);if(33===a.length&&0===a[0]&&(a=a.slice(1)),a.length>32)throw new Error("S length is too long");let u=new s(o);u.cmp(i.n)>=0&&(u=new s(0));let h=new s(e.subarray(6+r));return h.cmp(i.n)>=0&&(h=new s(0)),t.set(u.toArrayLike(Uint8Array,"be",32),0),t.set(h.toArrayLike(Uint8Array,"be",32),32),0},ecdsaSign(t,e,r,o,a){if(a){const t=a;a=n=>{const i=t(e,r,null,o,n);if(!(i instanceof Uint8Array&&32===i.length))throw new Error("This is the way");return new s(i)}}const u=new s(r);if(u.cmp(i.n)>=0||u.isZero())return 1;let h;try{h=n.sign(e,r,{canonical:!0,k:a,pers:o})}catch(t){return 1}return t.signature.set(h.r.toArrayLike(Uint8Array,"be",32),0),t.signature.set(h.s.toArrayLike(Uint8Array,"be",32),32),t.recid=h.recoveryParam,0},ecdsaVerify(t,e,r){const a={r:t.subarray(0,32),s:t.subarray(32,64)},u=new s(a.r),h=new s(a.s);if(u.cmp(i.n)>=0||h.cmp(i.n)>=0)return 1;if(1===h.cmp(n.nh)||u.isZero()||h.isZero())return 3;const c=o(r);if(null===c)return 2;const l=c.getPublic();return n.verify(e,a,l)?0:3},ecdsaRecover(t,e,r,o){const u={r:e.slice(0,32),s:e.slice(32,64)},h=new s(u.r),c=new s(u.s);if(h.cmp(i.n)>=0||c.cmp(i.n)>=0)return 1;if(h.isZero()||c.isZero())return 2;let l;try{l=n.recoverPubKey(o,u,r)}catch(t){return 2}return a(t,l),0},ecdh(t,e,r,a,u,h,c){const l=o(e);if(null===l)return 1;const d=new s(r);if(d.cmp(i.n)>=0||d.isZero())return 2;const f=l.getPublic().mul(d);if(void 0===u){const e=f.encode(null,!0),r=n.hash().update(e).digest();for(let e=0;e<32;++e)t[e]=r[e]}else{h||(h=new Uint8Array(32));const e=f.getX().toArray("be",32);for(let t=0;t<32;++t)h[t]=e[t];c||(c=new Uint8Array(32));const r=f.getY().toArray("be",32);for(let t=0;t<32;++t)c[t]=r[t];const n=u(h,c,a);if(!(n instanceof Uint8Array&&n.length===t.length))return 2;t.set(n)}return 0}}},59119:t=>{const e="Impossible case. Please create issue.",r="The tweak was out of range or the resulted private key is invalid",n="The tweak was out of range or equal to zero",i="Unknow error on context randomization",s="Private Key is invalid",o="Public Key could not be parsed",a="Public Key serialization error",u="The sum of the public keys is not valid",h="Signature could not be parsed",c="The nonce generation function failed, or the private key was invalid",l="Public key could not be recover",d="Scalar was invalid (zero or overflow)";function f(t,e){if(!t)throw new Error(e)}function p(t,e,r){if(f(e instanceof Uint8Array,`Expected ${t} to be an Uint8Array`),void 0!==r)if(Array.isArray(r)){const n=`Expected ${t} to be an Uint8Array with length [${r.join(", ")}]`;f(r.includes(e.length),n)}else{const n=`Expected ${t} to be an Uint8Array with length ${r}`;f(e.length===r,n)}}function m(t){f("Boolean"===v(t),"Expected compressed to be a Boolean")}function y(t=(t=>new Uint8Array(t)),e){return"function"==typeof t&&(t=t(e)),p("output",t,e),t}function v(t){return Object.prototype.toString.call(t).slice(8,-1)}t.exports=t=>({contextRandomize(e){if(f(null===e||e instanceof Uint8Array,"Expected seed to be an Uint8Array or null"),null!==e&&p("seed",e,32),1===t.contextRandomize(e))throw new Error(i)},privateKeyVerify:e=>(p("private key",e,32),0===t.privateKeyVerify(e)),privateKeyNegate(r){switch(p("private key",r,32),t.privateKeyNegate(r)){case 0:return r;case 1:throw new Error(e)}},privateKeyTweakAdd(e,n){switch(p("private key",e,32),p("tweak",n,32),t.privateKeyTweakAdd(e,n)){case 0:return e;case 1:throw new Error(r)}},privateKeyTweakMul(e,r){switch(p("private key",e,32),p("tweak",r,32),t.privateKeyTweakMul(e,r)){case 0:return e;case 1:throw new Error(n)}},publicKeyVerify:e=>(p("public key",e,[33,65]),0===t.publicKeyVerify(e)),publicKeyCreate(e,r=!0,n){switch(p("private key",e,32),m(r),n=y(n,r?33:65),t.publicKeyCreate(n,e)){case 0:return n;case 1:throw new Error(s);case 2:throw new Error(a)}},publicKeyConvert(e,r=!0,n){switch(p("public key",e,[33,65]),m(r),n=y(n,r?33:65),t.publicKeyConvert(n,e)){case 0:return n;case 1:throw new Error(o);case 2:throw new Error(a)}},publicKeyNegate(r,n=!0,i){switch(p("public key",r,[33,65]),m(n),i=y(i,n?33:65),t.publicKeyNegate(i,r)){case 0:return i;case 1:throw new Error(o);case 2:throw new Error(e);case 3:throw new Error(a)}},publicKeyCombine(e,r=!0,n){f(Array.isArray(e),"Expected public keys to be an Array"),f(e.length>0,"Expected public keys array will have more than zero items");for(const t of e)p("public key",t,[33,65]);switch(m(r),n=y(n,r?33:65),t.publicKeyCombine(n,e)){case 0:return n;case 1:throw new Error(o);case 2:throw new Error(u);case 3:throw new Error(a)}},publicKeyTweakAdd(e,n,i=!0,s){switch(p("public key",e,[33,65]),p("tweak",n,32),m(i),s=y(s,i?33:65),t.publicKeyTweakAdd(s,e,n)){case 0:return s;case 1:throw new Error(o);case 2:throw new Error(r)}},publicKeyTweakMul(e,r,i=!0,s){switch(p("public key",e,[33,65]),p("tweak",r,32),m(i),s=y(s,i?33:65),t.publicKeyTweakMul(s,e,r)){case 0:return s;case 1:throw new Error(o);case 2:throw new Error(n)}},signatureNormalize(e){switch(p("signature",e,64),t.signatureNormalize(e)){case 0:return e;case 1:throw new Error(h)}},signatureExport(r,n){p("signature",r,64);const i={output:n=y(n,72),outputlen:72};switch(t.signatureExport(i,r)){case 0:return n.slice(0,i.outputlen);case 1:throw new Error(h);case 2:throw new Error(e)}},signatureImport(r,n){switch(p("signature",r),n=y(n,64),t.signatureImport(n,r)){case 0:return n;case 1:throw new Error(h);case 2:throw new Error(e)}},ecdsaSign(r,n,i={},s){p("message",r,32),p("private key",n,32),f("Object"===v(i),"Expected options to be an Object"),void 0!==i.data&&p("options.data",i.data),void 0!==i.noncefn&&f("Function"===v(i.noncefn),"Expected options.noncefn to be a Function");const o={signature:s=y(s,64),recid:null};switch(t.ecdsaSign(o,r,n,i.data,i.noncefn)){case 0:return o;case 1:throw new Error(c);case 2:throw new Error(e)}},ecdsaVerify(e,r,n){switch(p("signature",e,64),p("message",r,32),p("public key",n,[33,65]),t.ecdsaVerify(e,r,n)){case 0:return!0;case 3:return!1;case 1:throw new Error(h);case 2:throw new Error(o)}},ecdsaRecover(r,n,i,s=!0,o){switch(p("signature",r,64),f("Number"===v(n)&&n>=0&&n<=3,"Expected recovery id to be a Number within interval [0, 3]"),p("message",i,32),m(s),o=y(o,s?33:65),t.ecdsaRecover(o,r,n,i)){case 0:return o;case 1:throw new Error(h);case 2:throw new Error(l);case 3:throw new Error(e)}},ecdh(e,r,n={},i){switch(p("public key",e,[33,65]),p("private key",r,32),f("Object"===v(n),"Expected options to be an Object"),void 0!==n.data&&p("options.data",n.data),void 0!==n.hashfn?(f("Function"===v(n.hashfn),"Expected options.hashfn to be a Function"),void 0!==n.xbuf&&p("options.xbuf",n.xbuf,32),void 0!==n.ybuf&&p("options.ybuf",n.ybuf,32),p("output",i)):i=y(i,32),t.ecdh(i,e,r,n.data,n.hashfn,n.xbuf,n.ybuf)){case 0:return i;case 1:throw new Error(o);case 2:throw new Error(d)}}})},24189:(t,e,r)=>{var n=r(89509).Buffer;function i(t,e){this._block=n.alloc(t),this._finalSize=e,this._blockSize=t,this._len=0}i.prototype.update=function(t,e){"string"==typeof t&&(e=e||"utf8",t=n.from(t,e));for(var r=this._block,i=this._blockSize,s=t.length,o=this._len,a=0;a<s;){for(var u=o%i,h=Math.min(s-a,i-u),c=0;c<h;c++)r[u+c]=t[a+c];a+=h,(o+=h)%i==0&&this._update(r)}return this._len+=s,this},i.prototype.digest=function(t){var e=this._len%this._blockSize;this._block[e]=128,this._block.fill(0,e+1),e>=this._finalSize&&(this._update(this._block),this._block.fill(0));var r=8*this._len;if(r<=4294967295)this._block.writeUInt32BE(r,this._blockSize-4);else{var n=(4294967295&r)>>>0,i=(r-n)/4294967296;this._block.writeUInt32BE(i,this._blockSize-8),this._block.writeUInt32BE(n,this._blockSize-4)}this._update(this._block);var s=this._hash();return t?s.toString(t):s},i.prototype._update=function(){throw new Error("_update must be implemented by subclass")},t.exports=i},89072:(t,e,r)=>{var n=t.exports=function(t){t=t.toLowerCase();var e=n[t];if(!e)throw new Error(t+" is not supported (we accept pull requests)");return new e};n.sha=r(74448),n.sha1=r(18336),n.sha224=r(48432),n.sha256=r(67499),n.sha384=r(51686),n.sha512=r(87816)},74448:(t,e,r)=>{var n=r(35717),i=r(24189),s=r(89509).Buffer,o=[1518500249,1859775393,-1894007588,-899497514],a=new Array(80);function u(){this.init(),this._w=a,i.call(this,64,56)}function h(t){return t<<30|t>>>2}function c(t,e,r,n){return 0===t?e&r|~e&n:2===t?e&r|e&n|r&n:e^r^n}n(u,i),u.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},u.prototype._update=function(t){for(var e,r=this._w,n=0|this._a,i=0|this._b,s=0|this._c,a=0|this._d,u=0|this._e,l=0;l<16;++l)r[l]=t.readInt32BE(4*l);for(;l<80;++l)r[l]=r[l-3]^r[l-8]^r[l-14]^r[l-16];for(var d=0;d<80;++d){var f=~~(d/20),p=0|((e=n)<<5|e>>>27)+c(f,i,s,a)+u+r[d]+o[f];u=a,a=s,s=h(i),i=n,n=p}this._a=n+this._a|0,this._b=i+this._b|0,this._c=s+this._c|0,this._d=a+this._d|0,this._e=u+this._e|0},u.prototype._hash=function(){var t=s.allocUnsafe(20);return t.writeInt32BE(0|this._a,0),t.writeInt32BE(0|this._b,4),t.writeInt32BE(0|this._c,8),t.writeInt32BE(0|this._d,12),t.writeInt32BE(0|this._e,16),t},t.exports=u},18336:(t,e,r)=>{var n=r(35717),i=r(24189),s=r(89509).Buffer,o=[1518500249,1859775393,-1894007588,-899497514],a=new Array(80);function u(){this.init(),this._w=a,i.call(this,64,56)}function h(t){return t<<5|t>>>27}function c(t){return t<<30|t>>>2}function l(t,e,r,n){return 0===t?e&r|~e&n:2===t?e&r|e&n|r&n:e^r^n}n(u,i),u.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},u.prototype._update=function(t){for(var e,r=this._w,n=0|this._a,i=0|this._b,s=0|this._c,a=0|this._d,u=0|this._e,d=0;d<16;++d)r[d]=t.readInt32BE(4*d);for(;d<80;++d)r[d]=(e=r[d-3]^r[d-8]^r[d-14]^r[d-16])<<1|e>>>31;for(var f=0;f<80;++f){var p=~~(f/20),m=h(n)+l(p,i,s,a)+u+r[f]+o[p]|0;u=a,a=s,s=c(i),i=n,n=m}this._a=n+this._a|0,this._b=i+this._b|0,this._c=s+this._c|0,this._d=a+this._d|0,this._e=u+this._e|0},u.prototype._hash=function(){var t=s.allocUnsafe(20);return t.writeInt32BE(0|this._a,0),t.writeInt32BE(0|this._b,4),t.writeInt32BE(0|this._c,8),t.writeInt32BE(0|this._d,12),t.writeInt32BE(0|this._e,16),t},t.exports=u},48432:(t,e,r)=>{var n=r(35717),i=r(67499),s=r(24189),o=r(89509).Buffer,a=new Array(64);function u(){this.init(),this._w=a,s.call(this,64,56)}n(u,i),u.prototype.init=function(){return this._a=3238371032,this._b=914150663,this._c=812702999,this._d=4144912697,this._e=4290775857,this._f=1750603025,this._g=1694076839,this._h=3204075428,this},u.prototype._hash=function(){var t=o.allocUnsafe(28);return t.writeInt32BE(this._a,0),t.writeInt32BE(this._b,4),t.writeInt32BE(this._c,8),t.writeInt32BE(this._d,12),t.writeInt32BE(this._e,16),t.writeInt32BE(this._f,20),t.writeInt32BE(this._g,24),t},t.exports=u},67499:(t,e,r)=>{var n=r(35717),i=r(24189),s=r(89509).Buffer,o=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],a=new Array(64);function u(){this.init(),this._w=a,i.call(this,64,56)}function h(t,e,r){return r^t&(e^r)}function c(t,e,r){return t&e|r&(t|e)}function l(t){return(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10)}function d(t){return(t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7)}function f(t){return(t>>>7|t<<25)^(t>>>18|t<<14)^t>>>3}n(u,i),u.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},u.prototype._update=function(t){for(var e,r=this._w,n=0|this._a,i=0|this._b,s=0|this._c,a=0|this._d,u=0|this._e,p=0|this._f,m=0|this._g,y=0|this._h,v=0;v<16;++v)r[v]=t.readInt32BE(4*v);for(;v<64;++v)r[v]=0|(((e=r[v-2])>>>17|e<<15)^(e>>>19|e<<13)^e>>>10)+r[v-7]+f(r[v-15])+r[v-16];for(var g=0;g<64;++g){var b=y+d(u)+h(u,p,m)+o[g]+r[g]|0,w=l(n)+c(n,i,s)|0;y=m,m=p,p=u,u=a+b|0,a=s,s=i,i=n,n=b+w|0}this._a=n+this._a|0,this._b=i+this._b|0,this._c=s+this._c|0,this._d=a+this._d|0,this._e=u+this._e|0,this._f=p+this._f|0,this._g=m+this._g|0,this._h=y+this._h|0},u.prototype._hash=function(){var t=s.allocUnsafe(32);return t.writeInt32BE(this._a,0),t.writeInt32BE(this._b,4),t.writeInt32BE(this._c,8),t.writeInt32BE(this._d,12),t.writeInt32BE(this._e,16),t.writeInt32BE(this._f,20),t.writeInt32BE(this._g,24),t.writeInt32BE(this._h,28),t},t.exports=u},51686:(t,e,r)=>{var n=r(35717),i=r(87816),s=r(24189),o=r(89509).Buffer,a=new Array(160);function u(){this.init(),this._w=a,s.call(this,128,112)}n(u,i),u.prototype.init=function(){return this._ah=3418070365,this._bh=1654270250,this._ch=2438529370,this._dh=355462360,this._eh=1731405415,this._fh=2394180231,this._gh=3675008525,this._hh=1203062813,this._al=3238371032,this._bl=914150663,this._cl=812702999,this._dl=4144912697,this._el=4290775857,this._fl=1750603025,this._gl=1694076839,this._hl=3204075428,this},u.prototype._hash=function(){var t=o.allocUnsafe(48);function e(e,r,n){t.writeInt32BE(e,n),t.writeInt32BE(r,n+4)}return e(this._ah,this._al,0),e(this._bh,this._bl,8),e(this._ch,this._cl,16),e(this._dh,this._dl,24),e(this._eh,this._el,32),e(this._fh,this._fl,40),t},t.exports=u},87816:(t,e,r)=>{var n=r(35717),i=r(24189),s=r(89509).Buffer,o=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],a=new Array(160);function u(){this.init(),this._w=a,i.call(this,128,112)}function h(t,e,r){return r^t&(e^r)}function c(t,e,r){return t&e|r&(t|e)}function l(t,e){return(t>>>28|e<<4)^(e>>>2|t<<30)^(e>>>7|t<<25)}function d(t,e){return(t>>>14|e<<18)^(t>>>18|e<<14)^(e>>>9|t<<23)}function f(t,e){return(t>>>1|e<<31)^(t>>>8|e<<24)^t>>>7}function p(t,e){return(t>>>1|e<<31)^(t>>>8|e<<24)^(t>>>7|e<<25)}function m(t,e){return(t>>>19|e<<13)^(e>>>29|t<<3)^t>>>6}function y(t,e){return(t>>>19|e<<13)^(e>>>29|t<<3)^(t>>>6|e<<26)}function v(t,e){return t>>>0<e>>>0?1:0}n(u,i),u.prototype.init=function(){return this._ah=1779033703,this._bh=3144134277,this._ch=1013904242,this._dh=2773480762,this._eh=1359893119,this._fh=2600822924,this._gh=528734635,this._hh=1541459225,this._al=4089235720,this._bl=2227873595,this._cl=4271175723,this._dl=1595750129,this._el=2917565137,this._fl=725511199,this._gl=4215389547,this._hl=327033209,this},u.prototype._update=function(t){for(var e=this._w,r=0|this._ah,n=0|this._bh,i=0|this._ch,s=0|this._dh,a=0|this._eh,u=0|this._fh,g=0|this._gh,b=0|this._hh,w=0|this._al,M=0|this._bl,k=0|this._cl,x=0|this._dl,P=0|this._el,L=0|this._fl,T=0|this._gl,S=0|this._hl,A=0;A<32;A+=2)e[A]=t.readInt32BE(4*A),e[A+1]=t.readInt32BE(4*A+4);for(;A<160;A+=2){var D=e[A-30],j=e[A-30+1],H=f(D,j),O=p(j,D),z=m(D=e[A-4],j=e[A-4+1]),N=y(j,D),E=e[A-14],Y=e[A-14+1],R=e[A-32],I=e[A-32+1],B=O+Y|0,X=H+E+v(B,O)|0;X=(X=X+z+v(B=B+N|0,N)|0)+R+v(B=B+I|0,I)|0,e[A]=X,e[A+1]=B}for(var V=0;V<160;V+=2){X=e[V],B=e[V+1];var C=c(r,n,i),W=c(w,M,k),q=l(r,w),Z=l(w,r),F=d(a,P),U=d(P,a),G=o[V],_=o[V+1],K=h(a,u,g),J=h(P,L,T),Q=S+U|0,$=b+F+v(Q,S)|0;$=($=($=$+K+v(Q=Q+J|0,J)|0)+G+v(Q=Q+_|0,_)|0)+X+v(Q=Q+B|0,B)|0;var tt=Z+W|0,et=q+C+v(tt,Z)|0;b=g,S=T,g=u,T=L,u=a,L=P,a=s+$+v(P=x+Q|0,x)|0,s=i,x=k,i=n,k=M,n=r,M=w,r=$+et+v(w=Q+tt|0,Q)|0}this._al=this._al+w|0,this._bl=this._bl+M|0,this._cl=this._cl+k|0,this._dl=this._dl+x|0,this._el=this._el+P|0,this._fl=this._fl+L|0,this._gl=this._gl+T|0,this._hl=this._hl+S|0,this._ah=this._ah+r+v(this._al,w)|0,this._bh=this._bh+n+v(this._bl,M)|0,this._ch=this._ch+i+v(this._cl,k)|0,this._dh=this._dh+s+v(this._dl,x)|0,this._eh=this._eh+a+v(this._el,P)|0,this._fh=this._fh+u+v(this._fl,L)|0,this._gh=this._gh+g+v(this._gl,T)|0,this._hh=this._hh+b+v(this._hl,S)|0},u.prototype._hash=function(){var t=s.allocUnsafe(64);function e(e,r,n){t.writeInt32BE(e,n),t.writeInt32BE(r,n+4)}return e(this._ah,this._al,0),e(this._bh,this._bl,8),e(this._ch,this._cl,16),e(this._dh,this._dl,24),e(this._eh,this._el,32),e(this._fh,this._fl,40),e(this._gh,this._gl,48),e(this._hh,this._hl,56),t},t.exports=u},58971:(t,e,r)=>{var n=r(62195),i=r(39015),s=[r(19257)];t.exports=n.createStore(i,s)},19257:(t,e,r)=>{t.exports=function(){return r(55703),{}}},55703:()=>{"object"!=typeof JSON&&(JSON={}),function(){"use strict";var rx_one=/^[\],:{}\s]*$/,rx_two=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,rx_three=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,rx_four=/(?:^|:|,)(?:\s*\[)+/g,rx_escapable=/[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,rx_dangerous=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta,rep;function f(t){return t<10?"0"+t:t}function this_value(){return this.valueOf()}function quote(t){return rx_escapable.lastIndex=0,rx_escapable.test(t)?'"'+t.replace(rx_escapable,(function(t){var e=meta[t];return"string"==typeof e?e:"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)}))+'"':'"'+t+'"'}function str(t,e){var r,n,i,s,o,a=gap,u=e[t];switch(u&&"object"==typeof u&&"function"==typeof u.toJSON&&(u=u.toJSON(t)),"function"==typeof rep&&(u=rep.call(e,t,u)),typeof u){case"string":return quote(u);case"number":return isFinite(u)?String(u):"null";case"boolean":case"null":return String(u);case"object":if(!u)return"null";if(gap+=indent,o=[],"[object Array]"===Object.prototype.toString.apply(u)){for(s=u.length,r=0;r<s;r+=1)o[r]=str(r,u)||"null";return i=0===o.length?"[]":gap?"[\n"+gap+o.join(",\n"+gap)+"\n"+a+"]":"["+o.join(",")+"]",gap=a,i}if(rep&&"object"==typeof rep)for(s=rep.length,r=0;r<s;r+=1)"string"==typeof rep[r]&&(i=str(n=rep[r],u))&&o.push(quote(n)+(gap?": ":":")+i);else for(n in u)Object.prototype.hasOwnProperty.call(u,n)&&(i=str(n,u))&&o.push(quote(n)+(gap?": ":":")+i);return i=0===o.length?"{}":gap?"{\n"+gap+o.join(",\n"+gap)+"\n"+a+"}":"{"+o.join(",")+"}",gap=a,i}}"function"!=typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},Boolean.prototype.toJSON=this_value,Number.prototype.toJSON=this_value,String.prototype.toJSON=this_value),"function"!=typeof JSON.stringify&&(meta={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},JSON.stringify=function(t,e,r){var n;if(gap="",indent="","number"==typeof r)for(n=0;n<r;n+=1)indent+=" ";else"string"==typeof r&&(indent=r);if(rep=e,e&&"function"!=typeof e&&("object"!=typeof e||"number"!=typeof e.length))throw new Error("JSON.stringify");return str("",{"":t})}),"function"!=typeof JSON.parse&&(JSON.parse=function(text,reviver){var j;function walk(t,e){var r,n,i=t[e];if(i&&"object"==typeof i)for(r in i)Object.prototype.hasOwnProperty.call(i,r)&&(void 0!==(n=walk(i,r))?i[r]=n:delete i[r]);return reviver.call(t,e,i)}if(text=String(text),rx_dangerous.lastIndex=0,rx_dangerous.test(text)&&(text=text.replace(rx_dangerous,(function(t){return"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)}))),rx_one.test(text.replace(rx_two,"@").replace(rx_three,"]").replace(rx_four,"")))return j=eval("("+text+")"),"function"==typeof reviver?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})}()},62195:(t,e,r)=>{var n=r(69078),i=n.slice,s=n.pluck,o=n.each,a=n.bind,u=n.create,h=n.isList,c=n.isFunction,l=n.isObject;t.exports={createStore:f};var d={version:"2.0.12",enabled:!1,get:function(t,e){var r=this.storage.read(this._namespacePrefix+t);return this._deserialize(r,e)},set:function(t,e){return void 0===e?this.remove(t):(this.storage.write(this._namespacePrefix+t,this._serialize(e)),e)},remove:function(t){this.storage.remove(this._namespacePrefix+t)},each:function(t){var e=this;this.storage.each((function(r,n){t.call(e,e._deserialize(r),(n||"").replace(e._namespaceRegexp,""))}))},clearAll:function(){this.storage.clearAll()},hasNamespace:function(t){return this._namespacePrefix=="__storejs_"+t+"_"},createStore:function(){return f.apply(this,arguments)},addPlugin:function(t){this._addPlugin(t)},namespace:function(t){return f(this.storage,this.plugins,t)}};function f(t,e,r){r||(r=""),t&&!h(t)&&(t=[t]),e&&!h(e)&&(e=[e]);var n=r?"__storejs_"+r+"_":"",f=r?new RegExp("^"+n):null;if(!/^[a-zA-Z0-9_\-]*$/.test(r))throw new Error("store.js namespaces can only have alphanumerics + underscores and dashes");var p={_namespacePrefix:n,_namespaceRegexp:f,_testStorage:function(t){try{var e="__storejs__test__";t.write(e,e);var r=t.read(e)===e;return t.remove(e),r}catch(t){return!1}},_assignPluginFnProp:function(t,e){var r=this[e];this[e]=function(){var e=i(arguments,0),n=this;function s(){if(r)return o(arguments,(function(t,r){e[r]=t})),r.apply(n,e)}var a=[s].concat(e);return t.apply(n,a)}},_serialize:function(t){return JSON.stringify(t)},_deserialize:function(t,e){if(!t)return e;var r="";try{r=JSON.parse(t)}catch(e){r=t}return void 0!==r?r:e},_addStorage:function(t){this.enabled||this._testStorage(t)&&(this.storage=t,this.enabled=!0)},_addPlugin:function(t){var e=this;if(h(t))o(t,(function(t){e._addPlugin(t)}));else if(!s(this.plugins,(function(e){return t===e}))){if(this.plugins.push(t),!c(t))throw new Error("Plugins must be function values that return objects");var r=t.call(this);if(!l(r))throw new Error("Plugins must return an object of function properties");o(r,(function(r,n){if(!c(r))throw new Error("Bad plugin property: "+n+" from plugin "+t.name+". Plugins should only return functions.");e._assignPluginFnProp(r,n)}))}},addStorage:function(t){!function(){var t="undefined"==typeof console?null:console;if(t){(t.warn?t.warn:t.log).apply(t,arguments)}}("store.addStorage(storage) is deprecated. Use createStore([storages])"),this._addStorage(t)}},m=u(p,d,{plugins:[]});return m.raw={},o(m,(function(t,e){c(t)&&(m.raw[e]=a(m,t))})),o(t,(function(t){m._addStorage(t)})),o(e,(function(t){m._addPlugin(t)})),m}},69078:(t,e,r)=>{var n=Object.assign?Object.assign:function(t,e,r,n){for(var i=1;i<arguments.length;i++)u(Object(arguments[i]),(function(e,r){t[r]=e}));return t},i=function(){if(Object.create)return function(t,e,r,i){var s=a(arguments,1);return n.apply(this,[Object.create(t)].concat(s))};{function t(){}return function(e,r,i,s){var o=a(arguments,1);return t.prototype=e,n.apply(this,[new t].concat(o))}}}(),s=String.prototype.trim?function(t){return String.prototype.trim.call(t)}:function(t){return t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")},o="undefined"!=typeof window?window:r.g;function a(t,e){return Array.prototype.slice.call(t,e||0)}function u(t,e){h(t,(function(t,r){return e(t,r),!1}))}function h(t,e){if(c(t)){for(var r=0;r<t.length;r++)if(e(t[r],r))return t[r]}else for(var n in t)if(t.hasOwnProperty(n)&&e(t[n],n))return t[n]}function c(t){return null!=t&&"function"!=typeof t&&"number"==typeof t.length}t.exports={assign:n,create:i,trim:s,bind:function(t,e){return function(){return e.apply(t,Array.prototype.slice.call(arguments,0))}},slice:a,each:u,map:function(t,e){var r=c(t)?[]:{};return h(t,(function(t,n){return r[n]=e(t,n),!1})),r},pluck:h,isList:c,isFunction:function(t){return t&&"[object Function]"==={}.toString.call(t)},isObject:function(t){return t&&"[object Object]"==={}.toString.call(t)},Global:o}},39015:(t,e,r)=>{t.exports=[r(39627),r(95347),r(34524),r(45580),r(58855),r(8728)]},45580:(t,e,r)=>{var n=r(69078),i=n.Global,s=n.trim;t.exports={name:"cookieStorage",read:function(t){if(!t||!h(t))return null;var e="(?:^|.*;\\s*)"+escape(t).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=\\s*((?:[^;](?!;))*[^;]?).*";return unescape(o.cookie.replace(new RegExp(e),"$1"))},write:function(t,e){if(!t)return;o.cookie=escape(t)+"="+escape(e)+"; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/"},each:a,remove:u,clearAll:function(){a((function(t,e){u(e)}))}};var o=i.document;function a(t){for(var e=o.cookie.split(/; ?/g),r=e.length-1;r>=0;r--)if(s(e[r])){var n=e[r].split("="),i=unescape(n[0]);t(unescape(n[1]),i)}}function u(t){t&&h(t)&&(o.cookie=escape(t)+"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/")}function h(t){return new RegExp("(?:^|;\\s*)"+escape(t).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=").test(o.cookie)}},39627:(t,e,r)=>{var n=r(69078).Global;function i(){return n.localStorage}function s(t){return i().getItem(t)}t.exports={name:"localStorage",read:s,write:function(t,e){return i().setItem(t,e)},each:function(t){for(var e=i().length-1;e>=0;e--){var r=i().key(e);t(s(r),r)}},remove:function(t){return i().removeItem(t)},clearAll:function(){return i().clear()}}},8728:t=>{t.exports={name:"memoryStorage",read:function(t){return e[t]},write:function(t,r){e[t]=r},each:function(t){for(var r in e)e.hasOwnProperty(r)&&t(e[r],r)},remove:function(t){delete e[t]},clearAll:function(t){e={}}};var e={}},95347:(t,e,r)=>{var n=r(69078).Global;t.exports={name:"oldFF-globalStorage",read:function(t){return i[t]},write:function(t,e){i[t]=e},each:s,remove:function(t){return i.removeItem(t)},clearAll:function(){s((function(t,e){delete i[t]}))}};var i=n.globalStorage;function s(t){for(var e=i.length-1;e>=0;e--){var r=i.key(e);t(i[r],r)}}},34524:(t,e,r)=>{var n=r(69078).Global;t.exports={name:"oldIE-userDataStorage",write:function(t,e){if(a)return;var r=h(t);o((function(t){t.setAttribute(r,e),t.save(i)}))},read:function(t){if(a)return;var e=h(t),r=null;return o((function(t){r=t.getAttribute(e)})),r},each:function(t){o((function(e){for(var r=e.XMLDocument.documentElement.attributes,n=r.length-1;n>=0;n--){var i=r[n];t(e.getAttribute(i.name),i.name)}}))},remove:function(t){var e=h(t);o((function(t){t.removeAttribute(e),t.save(i)}))},clearAll:function(){o((function(t){var e=t.XMLDocument.documentElement.attributes;t.load(i);for(var r=e.length-1;r>=0;r--)t.removeAttribute(e[r].name);t.save(i)}))}};var i="storejs",s=n.document,o=function(){if(!s||!s.documentElement||!s.documentElement.addBehavior)return null;var t,e,r;try{(e=new ActiveXObject("htmlfile")).open(),e.write('<script>document.w=window<\/script><iframe src="/favicon.ico"></iframe>'),e.close(),t=e.w.frames[0].document,r=t.createElement("div")}catch(e){r=s.createElement("div"),t=s.body}return function(e){var n=[].slice.call(arguments,0);n.unshift(r),t.appendChild(r),r.addBehavior("#default#userData"),r.load(i),e.apply(this,n),t.removeChild(r)}}(),a=(n.navigator?n.navigator.userAgent:"").match(/ (MSIE 8|MSIE 9|MSIE 10)\./);var u=new RegExp("[!\"#$%&'()*+,/\\\\:;<=>?@[\\]^`{|}~]","g");function h(t){return t.replace(/^\d/,"___$&").replace(u,"___")}},58855:(t,e,r)=>{var n=r(69078).Global;function i(){return n.sessionStorage}function s(t){return i().getItem(t)}t.exports={name:"sessionStorage",read:s,write:function(t,e){return i().setItem(t,e)},each:function(t){for(var e=i().length-1;e>=0;e--){var r=i().key(e);t(s(r),r)}},remove:function(t){return i().removeItem(t)},clearAll:function(){return i().clear()}}},42830:(t,e,r)=>{t.exports=i;var n=r(17187).EventEmitter;function i(){n.call(this)}r(35717)(i,n),i.Readable=r(79481),i.Writable=r(64229),i.Duplex=r(56753),i.Transform=r(74605),i.PassThrough=r(82725),i.finished=r(8610),i.pipeline=r(59946),i.Stream=i,i.prototype.pipe=function(t,e){var r=this;function i(e){t.writable&&!1===t.write(e)&&r.pause&&r.pause()}function s(){r.readable&&r.resume&&r.resume()}r.on("data",i),t.on("drain",s),t._isStdio||e&&!1===e.end||(r.on("end",a),r.on("close",u));var o=!1;function a(){o||(o=!0,t.end())}function u(){o||(o=!0,"function"==typeof t.destroy&&t.destroy())}function h(t){if(c(),0===n.listenerCount(this,"error"))throw t}function c(){r.removeListener("data",i),t.removeListener("drain",s),r.removeListener("end",a),r.removeListener("close",u),r.removeListener("error",h),t.removeListener("error",h),r.removeListener("end",c),r.removeListener("close",c),t.removeListener("close",c)}return r.on("error",h),t.on("error",h),r.on("end",c),r.on("close",c),t.on("close",c),t.emit("pipe",r),t}},32553:(t,e,r)=>{"use strict";var n=r(89509).Buffer,i=n.isEncoding||function(t){switch((t=""+t)&&t.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function s(t){var e;switch(this.encoding=function(t){var e=function(t){if(!t)return"utf8";for(var e;;)switch(t){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return t;default:if(e)return;t=(""+t).toLowerCase(),e=!0}}(t);if("string"!=typeof e&&(n.isEncoding===i||!i(t)))throw new Error("Unknown encoding: "+t);return e||t}(t),this.encoding){case"utf16le":this.text=u,this.end=h,e=4;break;case"utf8":this.fillLast=a,e=4;break;case"base64":this.text=c,this.end=l,e=3;break;default:return this.write=d,void(this.end=f)}this.lastNeed=0,this.lastTotal=0,this.lastChar=n.allocUnsafe(e)}function o(t){return t<=127?0:t>>5==6?2:t>>4==14?3:t>>3==30?4:t>>6==2?-1:-2}function a(t){var e=this.lastTotal-this.lastNeed,r=function(t,e,r){if(128!=(192&e[0]))return t.lastNeed=0,"�";if(t.lastNeed>1&&e.length>1){if(128!=(192&e[1]))return t.lastNeed=1,"�";if(t.lastNeed>2&&e.length>2&&128!=(192&e[2]))return t.lastNeed=2,"�"}}(this,t);return void 0!==r?r:this.lastNeed<=t.length?(t.copy(this.lastChar,e,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(t.copy(this.lastChar,e,0,t.length),void(this.lastNeed-=t.length))}function u(t,e){if((t.length-e)%2==0){var r=t.toString("utf16le",e);if(r){var n=r.charCodeAt(r.length-1);if(n>=55296&&n<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1],r.slice(0,-1)}return r}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=t[t.length-1],t.toString("utf16le",e,t.length-1)}function h(t){var e=t&&t.length?this.write(t):"";if(this.lastNeed){var r=this.lastTotal-this.lastNeed;return e+this.lastChar.toString("utf16le",0,r)}return e}function c(t,e){var r=(t.length-e)%3;return 0===r?t.toString("base64",e):(this.lastNeed=3-r,this.lastTotal=3,1===r?this.lastChar[0]=t[t.length-1]:(this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1]),t.toString("base64",e,t.length-r))}function l(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+this.lastChar.toString("base64",0,3-this.lastNeed):e}function d(t){return t.toString(this.encoding)}function f(t){return t&&t.length?this.write(t):""}e.s=s,s.prototype.write=function(t){if(0===t.length)return"";var e,r;if(this.lastNeed){if(void 0===(e=this.fillLast(t)))return"";r=this.lastNeed,this.lastNeed=0}else r=0;return r<t.length?e?e+this.text(t,r):this.text(t,r):e||""},s.prototype.end=function(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+"�":e},s.prototype.text=function(t,e){var r=function(t,e,r){var n=e.length-1;if(n<r)return 0;var i=o(e[n]);if(i>=0)return i>0&&(t.lastNeed=i-1),i;if(--n<r||-2===i)return 0;if((i=o(e[n]))>=0)return i>0&&(t.lastNeed=i-2),i;if(--n<r||-2===i)return 0;if((i=o(e[n]))>=0)return i>0&&(2===i?i=0:t.lastNeed=i-3),i;return 0}(this,t,e);if(!this.lastNeed)return t.toString("utf8",e);this.lastTotal=r;var n=t.length-(r-this.lastNeed);return t.copy(this.lastChar,0,n),t.toString("utf8",e,n)},s.prototype.fillLast=function(t){if(this.lastNeed<=t.length)return t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,t.length),this.lastNeed-=t.length}},49604:(t,e,r)=>{var n=r(23944);t.exports=function(t){return"string"!=typeof t?t:n(t)?t.slice(2):t}},50780:(t,e,r)=>{!function(t){"use strict";var e=function(t){var e,r=new Float64Array(16);if(t)for(e=0;e<t.length;e++)r[e]=t[e];return r},n=function(){throw new Error("no PRNG")},i=new Uint8Array(16),s=new Uint8Array(32);s[0]=9;var o=e(),a=e([1]),u=e([56129,1]),h=e([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),c=e([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),l=e([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),d=e([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),f=e([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function p(t,e,r,n){t[e]=r>>24&255,t[e+1]=r>>16&255,t[e+2]=r>>8&255,t[e+3]=255&r,t[e+4]=n>>24&255,t[e+5]=n>>16&255,t[e+6]=n>>8&255,t[e+7]=255&n}function m(t,e,r,n,i){var s,o=0;for(s=0;s<i;s++)o|=t[e+s]^r[n+s];return(1&o-1>>>8)-1}function y(t,e,r,n){return m(t,e,r,n,16)}function v(t,e,r,n){return m(t,e,r,n,32)}function g(t,e,r,n){!function(t,e,r,n){for(var i,s=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,o=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,h=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,c=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,l=255&e[0]|(255&e[1])<<8|(255&e[2])<<16|(255&e[3])<<24,d=255&e[4]|(255&e[5])<<8|(255&e[6])<<16|(255&e[7])<<24,f=255&e[8]|(255&e[9])<<8|(255&e[10])<<16|(255&e[11])<<24,p=255&e[12]|(255&e[13])<<8|(255&e[14])<<16|(255&e[15])<<24,m=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,y=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,v=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,g=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,b=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,w=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,M=s,k=o,x=a,P=u,L=h,T=c,S=l,A=d,D=f,j=p,H=m,O=y,z=v,N=g,E=b,Y=w,R=0;R<20;R+=2)M^=(i=(z^=(i=(D^=(i=(L^=(i=M+z|0)<<7|i>>>25)+M|0)<<9|i>>>23)+L|0)<<13|i>>>19)+D|0)<<18|i>>>14,T^=(i=(k^=(i=(N^=(i=(j^=(i=T+k|0)<<7|i>>>25)+T|0)<<9|i>>>23)+j|0)<<13|i>>>19)+N|0)<<18|i>>>14,H^=(i=(S^=(i=(x^=(i=(E^=(i=H+S|0)<<7|i>>>25)+H|0)<<9|i>>>23)+E|0)<<13|i>>>19)+x|0)<<18|i>>>14,Y^=(i=(O^=(i=(A^=(i=(P^=(i=Y+O|0)<<7|i>>>25)+Y|0)<<9|i>>>23)+P|0)<<13|i>>>19)+A|0)<<18|i>>>14,M^=(i=(P^=(i=(x^=(i=(k^=(i=M+P|0)<<7|i>>>25)+M|0)<<9|i>>>23)+k|0)<<13|i>>>19)+x|0)<<18|i>>>14,T^=(i=(L^=(i=(A^=(i=(S^=(i=T+L|0)<<7|i>>>25)+T|0)<<9|i>>>23)+S|0)<<13|i>>>19)+A|0)<<18|i>>>14,H^=(i=(j^=(i=(D^=(i=(O^=(i=H+j|0)<<7|i>>>25)+H|0)<<9|i>>>23)+O|0)<<13|i>>>19)+D|0)<<18|i>>>14,Y^=(i=(E^=(i=(N^=(i=(z^=(i=Y+E|0)<<7|i>>>25)+Y|0)<<9|i>>>23)+z|0)<<13|i>>>19)+N|0)<<18|i>>>14;M=M+s|0,k=k+o|0,x=x+a|0,P=P+u|0,L=L+h|0,T=T+c|0,S=S+l|0,A=A+d|0,D=D+f|0,j=j+p|0,H=H+m|0,O=O+y|0,z=z+v|0,N=N+g|0,E=E+b|0,Y=Y+w|0,t[0]=M>>>0&255,t[1]=M>>>8&255,t[2]=M>>>16&255,t[3]=M>>>24&255,t[4]=k>>>0&255,t[5]=k>>>8&255,t[6]=k>>>16&255,t[7]=k>>>24&255,t[8]=x>>>0&255,t[9]=x>>>8&255,t[10]=x>>>16&255,t[11]=x>>>24&255,t[12]=P>>>0&255,t[13]=P>>>8&255,t[14]=P>>>16&255,t[15]=P>>>24&255,t[16]=L>>>0&255,t[17]=L>>>8&255,t[18]=L>>>16&255,t[19]=L>>>24&255,t[20]=T>>>0&255,t[21]=T>>>8&255,t[22]=T>>>16&255,t[23]=T>>>24&255,t[24]=S>>>0&255,t[25]=S>>>8&255,t[26]=S>>>16&255,t[27]=S>>>24&255,t[28]=A>>>0&255,t[29]=A>>>8&255,t[30]=A>>>16&255,t[31]=A>>>24&255,t[32]=D>>>0&255,t[33]=D>>>8&255,t[34]=D>>>16&255,t[35]=D>>>24&255,t[36]=j>>>0&255,t[37]=j>>>8&255,t[38]=j>>>16&255,t[39]=j>>>24&255,t[40]=H>>>0&255,t[41]=H>>>8&255,t[42]=H>>>16&255,t[43]=H>>>24&255,t[44]=O>>>0&255,t[45]=O>>>8&255,t[46]=O>>>16&255,t[47]=O>>>24&255,t[48]=z>>>0&255,t[49]=z>>>8&255,t[50]=z>>>16&255,t[51]=z>>>24&255,t[52]=N>>>0&255,t[53]=N>>>8&255,t[54]=N>>>16&255,t[55]=N>>>24&255,t[56]=E>>>0&255,t[57]=E>>>8&255,t[58]=E>>>16&255,t[59]=E>>>24&255,t[60]=Y>>>0&255,t[61]=Y>>>8&255,t[62]=Y>>>16&255,t[63]=Y>>>24&255}(t,e,r,n)}function b(t,e,r,n){!function(t,e,r,n){for(var i,s=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,o=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,h=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,c=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,l=255&e[0]|(255&e[1])<<8|(255&e[2])<<16|(255&e[3])<<24,d=255&e[4]|(255&e[5])<<8|(255&e[6])<<16|(255&e[7])<<24,f=255&e[8]|(255&e[9])<<8|(255&e[10])<<16|(255&e[11])<<24,p=255&e[12]|(255&e[13])<<8|(255&e[14])<<16|(255&e[15])<<24,m=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,y=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,v=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,g=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,b=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,w=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,M=0;M<20;M+=2)s^=(i=(v^=(i=(f^=(i=(h^=(i=s+v|0)<<7|i>>>25)+s|0)<<9|i>>>23)+h|0)<<13|i>>>19)+f|0)<<18|i>>>14,c^=(i=(o^=(i=(g^=(i=(p^=(i=c+o|0)<<7|i>>>25)+c|0)<<9|i>>>23)+p|0)<<13|i>>>19)+g|0)<<18|i>>>14,m^=(i=(l^=(i=(a^=(i=(b^=(i=m+l|0)<<7|i>>>25)+m|0)<<9|i>>>23)+b|0)<<13|i>>>19)+a|0)<<18|i>>>14,w^=(i=(y^=(i=(d^=(i=(u^=(i=w+y|0)<<7|i>>>25)+w|0)<<9|i>>>23)+u|0)<<13|i>>>19)+d|0)<<18|i>>>14,s^=(i=(u^=(i=(a^=(i=(o^=(i=s+u|0)<<7|i>>>25)+s|0)<<9|i>>>23)+o|0)<<13|i>>>19)+a|0)<<18|i>>>14,c^=(i=(h^=(i=(d^=(i=(l^=(i=c+h|0)<<7|i>>>25)+c|0)<<9|i>>>23)+l|0)<<13|i>>>19)+d|0)<<18|i>>>14,m^=(i=(p^=(i=(f^=(i=(y^=(i=m+p|0)<<7|i>>>25)+m|0)<<9|i>>>23)+y|0)<<13|i>>>19)+f|0)<<18|i>>>14,w^=(i=(b^=(i=(g^=(i=(v^=(i=w+b|0)<<7|i>>>25)+w|0)<<9|i>>>23)+v|0)<<13|i>>>19)+g|0)<<18|i>>>14;t[0]=s>>>0&255,t[1]=s>>>8&255,t[2]=s>>>16&255,t[3]=s>>>24&255,t[4]=c>>>0&255,t[5]=c>>>8&255,t[6]=c>>>16&255,t[7]=c>>>24&255,t[8]=m>>>0&255,t[9]=m>>>8&255,t[10]=m>>>16&255,t[11]=m>>>24&255,t[12]=w>>>0&255,t[13]=w>>>8&255,t[14]=w>>>16&255,t[15]=w>>>24&255,t[16]=l>>>0&255,t[17]=l>>>8&255,t[18]=l>>>16&255,t[19]=l>>>24&255,t[20]=d>>>0&255,t[21]=d>>>8&255,t[22]=d>>>16&255,t[23]=d>>>24&255,t[24]=f>>>0&255,t[25]=f>>>8&255,t[26]=f>>>16&255,t[27]=f>>>24&255,t[28]=p>>>0&255,t[29]=p>>>8&255,t[30]=p>>>16&255,t[31]=p>>>24&255}(t,e,r,n)}var w=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function M(t,e,r,n,i,s,o){var a,u,h=new Uint8Array(16),c=new Uint8Array(64);for(u=0;u<16;u++)h[u]=0;for(u=0;u<8;u++)h[u]=s[u];for(;i>=64;){for(g(c,h,o,w),u=0;u<64;u++)t[e+u]=r[n+u]^c[u];for(a=1,u=8;u<16;u++)a=a+(255&h[u])|0,h[u]=255&a,a>>>=8;i-=64,e+=64,n+=64}if(i>0)for(g(c,h,o,w),u=0;u<i;u++)t[e+u]=r[n+u]^c[u];return 0}function k(t,e,r,n,i){var s,o,a=new Uint8Array(16),u=new Uint8Array(64);for(o=0;o<16;o++)a[o]=0;for(o=0;o<8;o++)a[o]=n[o];for(;r>=64;){for(g(u,a,i,w),o=0;o<64;o++)t[e+o]=u[o];for(s=1,o=8;o<16;o++)s=s+(255&a[o])|0,a[o]=255&s,s>>>=8;r-=64,e+=64}if(r>0)for(g(u,a,i,w),o=0;o<r;o++)t[e+o]=u[o];return 0}function x(t,e,r,n,i){var s=new Uint8Array(32);b(s,n,i,w);for(var o=new Uint8Array(8),a=0;a<8;a++)o[a]=n[a+16];return k(t,e,r,o,s)}function P(t,e,r,n,i,s,o){var a=new Uint8Array(32);b(a,s,o,w);for(var u=new Uint8Array(8),h=0;h<8;h++)u[h]=s[h+16];return M(t,e,r,n,i,u,a)}var L=function(t){var e,r,n,i,s,o,a,u;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,e=255&t[0]|(255&t[1])<<8,this.r[0]=8191&e,r=255&t[2]|(255&t[3])<<8,this.r[1]=8191&(e>>>13|r<<3),n=255&t[4]|(255&t[5])<<8,this.r[2]=7939&(r>>>10|n<<6),i=255&t[6]|(255&t[7])<<8,this.r[3]=8191&(n>>>7|i<<9),s=255&t[8]|(255&t[9])<<8,this.r[4]=255&(i>>>4|s<<12),this.r[5]=s>>>1&8190,o=255&t[10]|(255&t[11])<<8,this.r[6]=8191&(s>>>14|o<<2),a=255&t[12]|(255&t[13])<<8,this.r[7]=8065&(o>>>11|a<<5),u=255&t[14]|(255&t[15])<<8,this.r[8]=8191&(a>>>8|u<<8),this.r[9]=u>>>5&127,this.pad[0]=255&t[16]|(255&t[17])<<8,this.pad[1]=255&t[18]|(255&t[19])<<8,this.pad[2]=255&t[20]|(255&t[21])<<8,this.pad[3]=255&t[22]|(255&t[23])<<8,this.pad[4]=255&t[24]|(255&t[25])<<8,this.pad[5]=255&t[26]|(255&t[27])<<8,this.pad[6]=255&t[28]|(255&t[29])<<8,this.pad[7]=255&t[30]|(255&t[31])<<8};function T(t,e,r,n,i,s){var o=new L(s);return o.update(r,n,i),o.finish(t,e),0}function S(t,e,r,n,i,s){var o=new Uint8Array(16);return T(o,0,r,n,i,s),y(t,e,o,0)}function A(t,e,r,n,i){var s;if(r<32)return-1;for(P(t,0,e,0,r,n,i),T(t,16,t,32,r-32,t),s=0;s<16;s++)t[s]=0;return 0}function D(t,e,r,n,i){var s,o=new Uint8Array(32);if(r<32)return-1;if(x(o,0,32,n,i),0!==S(e,16,e,32,r-32,o))return-1;for(P(t,0,e,0,r,n,i),s=0;s<32;s++)t[s]=0;return 0}function j(t,e){var r;for(r=0;r<16;r++)t[r]=0|e[r]}function H(t){var e,r,n=1;for(e=0;e<16;e++)r=t[e]+n+65535,n=Math.floor(r/65536),t[e]=r-65536*n;t[0]+=n-1+37*(n-1)}function O(t,e,r){for(var n,i=~(r-1),s=0;s<16;s++)n=i&(t[s]^e[s]),t[s]^=n,e[s]^=n}function z(t,r){var n,i,s,o=e(),a=e();for(n=0;n<16;n++)a[n]=r[n];for(H(a),H(a),H(a),i=0;i<2;i++){for(o[0]=a[0]-65517,n=1;n<15;n++)o[n]=a[n]-65535-(o[n-1]>>16&1),o[n-1]&=65535;o[15]=a[15]-32767-(o[14]>>16&1),s=o[15]>>16&1,o[14]&=65535,O(a,o,1-s)}for(n=0;n<16;n++)t[2*n]=255&a[n],t[2*n+1]=a[n]>>8}function N(t,e){var r=new Uint8Array(32),n=new Uint8Array(32);return z(r,t),z(n,e),v(r,0,n,0)}function E(t){var e=new Uint8Array(32);return z(e,t),1&e[0]}function Y(t,e){var r;for(r=0;r<16;r++)t[r]=e[2*r]+(e[2*r+1]<<8);t[15]&=32767}function R(t,e,r){for(var n=0;n<16;n++)t[n]=e[n]+r[n]}function I(t,e,r){for(var n=0;n<16;n++)t[n]=e[n]-r[n]}function B(t,e,r){var n,i,s=0,o=0,a=0,u=0,h=0,c=0,l=0,d=0,f=0,p=0,m=0,y=0,v=0,g=0,b=0,w=0,M=0,k=0,x=0,P=0,L=0,T=0,S=0,A=0,D=0,j=0,H=0,O=0,z=0,N=0,E=0,Y=r[0],R=r[1],I=r[2],B=r[3],X=r[4],V=r[5],C=r[6],W=r[7],q=r[8],Z=r[9],F=r[10],U=r[11],G=r[12],_=r[13],K=r[14],J=r[15];s+=(n=e[0])*Y,o+=n*R,a+=n*I,u+=n*B,h+=n*X,c+=n*V,l+=n*C,d+=n*W,f+=n*q,p+=n*Z,m+=n*F,y+=n*U,v+=n*G,g+=n*_,b+=n*K,w+=n*J,o+=(n=e[1])*Y,a+=n*R,u+=n*I,h+=n*B,c+=n*X,l+=n*V,d+=n*C,f+=n*W,p+=n*q,m+=n*Z,y+=n*F,v+=n*U,g+=n*G,b+=n*_,w+=n*K,M+=n*J,a+=(n=e[2])*Y,u+=n*R,h+=n*I,c+=n*B,l+=n*X,d+=n*V,f+=n*C,p+=n*W,m+=n*q,y+=n*Z,v+=n*F,g+=n*U,b+=n*G,w+=n*_,M+=n*K,k+=n*J,u+=(n=e[3])*Y,h+=n*R,c+=n*I,l+=n*B,d+=n*X,f+=n*V,p+=n*C,m+=n*W,y+=n*q,v+=n*Z,g+=n*F,b+=n*U,w+=n*G,M+=n*_,k+=n*K,x+=n*J,h+=(n=e[4])*Y,c+=n*R,l+=n*I,d+=n*B,f+=n*X,p+=n*V,m+=n*C,y+=n*W,v+=n*q,g+=n*Z,b+=n*F,w+=n*U,M+=n*G,k+=n*_,x+=n*K,P+=n*J,c+=(n=e[5])*Y,l+=n*R,d+=n*I,f+=n*B,p+=n*X,m+=n*V,y+=n*C,v+=n*W,g+=n*q,b+=n*Z,w+=n*F,M+=n*U,k+=n*G,x+=n*_,P+=n*K,L+=n*J,l+=(n=e[6])*Y,d+=n*R,f+=n*I,p+=n*B,m+=n*X,y+=n*V,v+=n*C,g+=n*W,b+=n*q,w+=n*Z,M+=n*F,k+=n*U,x+=n*G,P+=n*_,L+=n*K,T+=n*J,d+=(n=e[7])*Y,f+=n*R,p+=n*I,m+=n*B,y+=n*X,v+=n*V,g+=n*C,b+=n*W,w+=n*q,M+=n*Z,k+=n*F,x+=n*U,P+=n*G,L+=n*_,T+=n*K,S+=n*J,f+=(n=e[8])*Y,p+=n*R,m+=n*I,y+=n*B,v+=n*X,g+=n*V,b+=n*C,w+=n*W,M+=n*q,k+=n*Z,x+=n*F,P+=n*U,L+=n*G,T+=n*_,S+=n*K,A+=n*J,p+=(n=e[9])*Y,m+=n*R,y+=n*I,v+=n*B,g+=n*X,b+=n*V,w+=n*C,M+=n*W,k+=n*q,x+=n*Z,P+=n*F,L+=n*U,T+=n*G,S+=n*_,A+=n*K,D+=n*J,m+=(n=e[10])*Y,y+=n*R,v+=n*I,g+=n*B,b+=n*X,w+=n*V,M+=n*C,k+=n*W,x+=n*q,P+=n*Z,L+=n*F,T+=n*U,S+=n*G,A+=n*_,D+=n*K,j+=n*J,y+=(n=e[11])*Y,v+=n*R,g+=n*I,b+=n*B,w+=n*X,M+=n*V,k+=n*C,x+=n*W,P+=n*q,L+=n*Z,T+=n*F,S+=n*U,A+=n*G,D+=n*_,j+=n*K,H+=n*J,v+=(n=e[12])*Y,g+=n*R,b+=n*I,w+=n*B,M+=n*X,k+=n*V,x+=n*C,P+=n*W,L+=n*q,T+=n*Z,S+=n*F,A+=n*U,D+=n*G,j+=n*_,H+=n*K,O+=n*J,g+=(n=e[13])*Y,b+=n*R,w+=n*I,M+=n*B,k+=n*X,x+=n*V,P+=n*C,L+=n*W,T+=n*q,S+=n*Z,A+=n*F,D+=n*U,j+=n*G,H+=n*_,O+=n*K,z+=n*J,b+=(n=e[14])*Y,w+=n*R,M+=n*I,k+=n*B,x+=n*X,P+=n*V,L+=n*C,T+=n*W,S+=n*q,A+=n*Z,D+=n*F,j+=n*U,H+=n*G,O+=n*_,z+=n*K,N+=n*J,w+=(n=e[15])*Y,o+=38*(k+=n*I),a+=38*(x+=n*B),u+=38*(P+=n*X),h+=38*(L+=n*V),c+=38*(T+=n*C),l+=38*(S+=n*W),d+=38*(A+=n*q),f+=38*(D+=n*Z),p+=38*(j+=n*F),m+=38*(H+=n*U),y+=38*(O+=n*G),v+=38*(z+=n*_),g+=38*(N+=n*K),b+=38*(E+=n*J),s=(n=(s+=38*(M+=n*R))+(i=1)+65535)-65536*(i=Math.floor(n/65536)),o=(n=o+i+65535)-65536*(i=Math.floor(n/65536)),a=(n=a+i+65535)-65536*(i=Math.floor(n/65536)),u=(n=u+i+65535)-65536*(i=Math.floor(n/65536)),h=(n=h+i+65535)-65536*(i=Math.floor(n/65536)),c=(n=c+i+65535)-65536*(i=Math.floor(n/65536)),l=(n=l+i+65535)-65536*(i=Math.floor(n/65536)),d=(n=d+i+65535)-65536*(i=Math.floor(n/65536)),f=(n=f+i+65535)-65536*(i=Math.floor(n/65536)),p=(n=p+i+65535)-65536*(i=Math.floor(n/65536)),m=(n=m+i+65535)-65536*(i=Math.floor(n/65536)),y=(n=y+i+65535)-65536*(i=Math.floor(n/65536)),v=(n=v+i+65535)-65536*(i=Math.floor(n/65536)),g=(n=g+i+65535)-65536*(i=Math.floor(n/65536)),b=(n=b+i+65535)-65536*(i=Math.floor(n/65536)),w=(n=w+i+65535)-65536*(i=Math.floor(n/65536)),s=(n=(s+=i-1+37*(i-1))+(i=1)+65535)-65536*(i=Math.floor(n/65536)),o=(n=o+i+65535)-65536*(i=Math.floor(n/65536)),a=(n=a+i+65535)-65536*(i=Math.floor(n/65536)),u=(n=u+i+65535)-65536*(i=Math.floor(n/65536)),h=(n=h+i+65535)-65536*(i=Math.floor(n/65536)),c=(n=c+i+65535)-65536*(i=Math.floor(n/65536)),l=(n=l+i+65535)-65536*(i=Math.floor(n/65536)),d=(n=d+i+65535)-65536*(i=Math.floor(n/65536)),f=(n=f+i+65535)-65536*(i=Math.floor(n/65536)),p=(n=p+i+65535)-65536*(i=Math.floor(n/65536)),m=(n=m+i+65535)-65536*(i=Math.floor(n/65536)),y=(n=y+i+65535)-65536*(i=Math.floor(n/65536)),v=(n=v+i+65535)-65536*(i=Math.floor(n/65536)),g=(n=g+i+65535)-65536*(i=Math.floor(n/65536)),b=(n=b+i+65535)-65536*(i=Math.floor(n/65536)),w=(n=w+i+65535)-65536*(i=Math.floor(n/65536)),s+=i-1+37*(i-1),t[0]=s,t[1]=o,t[2]=a,t[3]=u,t[4]=h,t[5]=c,t[6]=l,t[7]=d,t[8]=f,t[9]=p,t[10]=m,t[11]=y,t[12]=v,t[13]=g,t[14]=b,t[15]=w}function X(t,e){B(t,e,e)}function V(t,r){var n,i=e();for(n=0;n<16;n++)i[n]=r[n];for(n=253;n>=0;n--)X(i,i),2!==n&&4!==n&&B(i,i,r);for(n=0;n<16;n++)t[n]=i[n]}function C(t,r){var n,i=e();for(n=0;n<16;n++)i[n]=r[n];for(n=250;n>=0;n--)X(i,i),1!==n&&B(i,i,r);for(n=0;n<16;n++)t[n]=i[n]}function W(t,r,n){var i,s,o=new Uint8Array(32),a=new Float64Array(80),h=e(),c=e(),l=e(),d=e(),f=e(),p=e();for(s=0;s<31;s++)o[s]=r[s];for(o[31]=127&r[31]|64,o[0]&=248,Y(a,n),s=0;s<16;s++)c[s]=a[s],d[s]=h[s]=l[s]=0;for(h[0]=d[0]=1,s=254;s>=0;--s)O(h,c,i=o[s>>>3]>>>(7&s)&1),O(l,d,i),R(f,h,l),I(h,h,l),R(l,c,d),I(c,c,d),X(d,f),X(p,h),B(h,l,h),B(l,c,f),R(f,h,l),I(h,h,l),X(c,h),I(l,d,p),B(h,l,u),R(h,h,d),B(l,l,h),B(h,d,p),B(d,c,a),X(c,f),O(h,c,i),O(l,d,i);for(s=0;s<16;s++)a[s+16]=h[s],a[s+32]=l[s],a[s+48]=c[s],a[s+64]=d[s];var m=a.subarray(32),y=a.subarray(16);return V(m,m),B(y,y,m),z(t,y),0}function q(t,e){return W(t,e,s)}function Z(t,e){return n(e,32),q(t,e)}function F(t,e,r){var n=new Uint8Array(32);return W(n,r,e),b(t,i,n,w)}L.prototype.blocks=function(t,e,r){for(var n,i,s,o,a,u,h,c,l,d,f,p,m,y,v,g,b,w,M,k=this.fin?0:2048,x=this.h[0],P=this.h[1],L=this.h[2],T=this.h[3],S=this.h[4],A=this.h[5],D=this.h[6],j=this.h[7],H=this.h[8],O=this.h[9],z=this.r[0],N=this.r[1],E=this.r[2],Y=this.r[3],R=this.r[4],I=this.r[5],B=this.r[6],X=this.r[7],V=this.r[8],C=this.r[9];r>=16;)d=l=0,d+=(x+=8191&(n=255&t[e+0]|(255&t[e+1])<<8))*z,d+=(P+=8191&(n>>>13|(i=255&t[e+2]|(255&t[e+3])<<8)<<3))*(5*C),d+=(L+=8191&(i>>>10|(s=255&t[e+4]|(255&t[e+5])<<8)<<6))*(5*V),d+=(T+=8191&(s>>>7|(o=255&t[e+6]|(255&t[e+7])<<8)<<9))*(5*X),l=(d+=(S+=8191&(o>>>4|(a=255&t[e+8]|(255&t[e+9])<<8)<<12))*(5*B))>>>13,d&=8191,d+=(A+=a>>>1&8191)*(5*I),d+=(D+=8191&(a>>>14|(u=255&t[e+10]|(255&t[e+11])<<8)<<2))*(5*R),d+=(j+=8191&(u>>>11|(h=255&t[e+12]|(255&t[e+13])<<8)<<5))*(5*Y),d+=(H+=8191&(h>>>8|(c=255&t[e+14]|(255&t[e+15])<<8)<<8))*(5*E),f=l+=(d+=(O+=c>>>5|k)*(5*N))>>>13,f+=x*N,f+=P*z,f+=L*(5*C),f+=T*(5*V),l=(f+=S*(5*X))>>>13,f&=8191,f+=A*(5*B),f+=D*(5*I),f+=j*(5*R),f+=H*(5*Y),l+=(f+=O*(5*E))>>>13,f&=8191,p=l,p+=x*E,p+=P*N,p+=L*z,p+=T*(5*C),l=(p+=S*(5*V))>>>13,p&=8191,p+=A*(5*X),p+=D*(5*B),p+=j*(5*I),p+=H*(5*R),m=l+=(p+=O*(5*Y))>>>13,m+=x*Y,m+=P*E,m+=L*N,m+=T*z,l=(m+=S*(5*C))>>>13,m&=8191,m+=A*(5*V),m+=D*(5*X),m+=j*(5*B),m+=H*(5*I),y=l+=(m+=O*(5*R))>>>13,y+=x*R,y+=P*Y,y+=L*E,y+=T*N,l=(y+=S*z)>>>13,y&=8191,y+=A*(5*C),y+=D*(5*V),y+=j*(5*X),y+=H*(5*B),v=l+=(y+=O*(5*I))>>>13,v+=x*I,v+=P*R,v+=L*Y,v+=T*E,l=(v+=S*N)>>>13,v&=8191,v+=A*z,v+=D*(5*C),v+=j*(5*V),v+=H*(5*X),g=l+=(v+=O*(5*B))>>>13,g+=x*B,g+=P*I,g+=L*R,g+=T*Y,l=(g+=S*E)>>>13,g&=8191,g+=A*N,g+=D*z,g+=j*(5*C),g+=H*(5*V),b=l+=(g+=O*(5*X))>>>13,b+=x*X,b+=P*B,b+=L*I,b+=T*R,l=(b+=S*Y)>>>13,b&=8191,b+=A*E,b+=D*N,b+=j*z,b+=H*(5*C),w=l+=(b+=O*(5*V))>>>13,w+=x*V,w+=P*X,w+=L*B,w+=T*I,l=(w+=S*R)>>>13,w&=8191,w+=A*Y,w+=D*E,w+=j*N,w+=H*z,M=l+=(w+=O*(5*C))>>>13,M+=x*C,M+=P*V,M+=L*X,M+=T*B,l=(M+=S*I)>>>13,M&=8191,M+=A*R,M+=D*Y,M+=j*E,M+=H*N,x=d=8191&(l=(l=((l+=(M+=O*z)>>>13)<<2)+l|0)+(d&=8191)|0),P=f+=l>>>=13,L=p&=8191,T=m&=8191,S=y&=8191,A=v&=8191,D=g&=8191,j=b&=8191,H=w&=8191,O=M&=8191,e+=16,r-=16;this.h[0]=x,this.h[1]=P,this.h[2]=L,this.h[3]=T,this.h[4]=S,this.h[5]=A,this.h[6]=D,this.h[7]=j,this.h[8]=H,this.h[9]=O},L.prototype.finish=function(t,e){var r,n,i,s,o=new Uint16Array(10);if(this.leftover){for(s=this.leftover,this.buffer[s++]=1;s<16;s++)this.buffer[s]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(r=this.h[1]>>>13,this.h[1]&=8191,s=2;s<10;s++)this.h[s]+=r,r=this.h[s]>>>13,this.h[s]&=8191;for(this.h[0]+=5*r,r=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=r,r=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=r,o[0]=this.h[0]+5,r=o[0]>>>13,o[0]&=8191,s=1;s<10;s++)o[s]=this.h[s]+r,r=o[s]>>>13,o[s]&=8191;for(o[9]-=8192,n=(1^r)-1,s=0;s<10;s++)o[s]&=n;for(n=~n,s=0;s<10;s++)this.h[s]=this.h[s]&n|o[s];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),i=this.h[0]+this.pad[0],this.h[0]=65535&i,s=1;s<8;s++)i=(this.h[s]+this.pad[s]|0)+(i>>>16)|0,this.h[s]=65535&i;t[e+0]=this.h[0]>>>0&255,t[e+1]=this.h[0]>>>8&255,t[e+2]=this.h[1]>>>0&255,t[e+3]=this.h[1]>>>8&255,t[e+4]=this.h[2]>>>0&255,t[e+5]=this.h[2]>>>8&255,t[e+6]=this.h[3]>>>0&255,t[e+7]=this.h[3]>>>8&255,t[e+8]=this.h[4]>>>0&255,t[e+9]=this.h[4]>>>8&255,t[e+10]=this.h[5]>>>0&255,t[e+11]=this.h[5]>>>8&255,t[e+12]=this.h[6]>>>0&255,t[e+13]=this.h[6]>>>8&255,t[e+14]=this.h[7]>>>0&255,t[e+15]=this.h[7]>>>8&255},L.prototype.update=function(t,e,r){var n,i;if(this.leftover){for((i=16-this.leftover)>r&&(i=r),n=0;n<i;n++)this.buffer[this.leftover+n]=t[e+n];if(r-=i,e+=i,this.leftover+=i,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(r>=16&&(i=r-r%16,this.blocks(t,e,i),e+=i,r-=i),r){for(n=0;n<r;n++)this.buffer[this.leftover+n]=t[e+n];this.leftover+=r}};var U=A,G=D;var _=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function K(t,e,r,n){for(var i,s,o,a,u,h,c,l,d,f,p,m,y,v,g,b,w,M,k,x,P,L,T,S,A,D,j=new Int32Array(16),H=new Int32Array(16),O=t[0],z=t[1],N=t[2],E=t[3],Y=t[4],R=t[5],I=t[6],B=t[7],X=e[0],V=e[1],C=e[2],W=e[3],q=e[4],Z=e[5],F=e[6],U=e[7],G=0;n>=128;){for(k=0;k<16;k++)x=8*k+G,j[k]=r[x+0]<<24|r[x+1]<<16|r[x+2]<<8|r[x+3],H[k]=r[x+4]<<24|r[x+5]<<16|r[x+6]<<8|r[x+7];for(k=0;k<80;k++)if(i=O,s=z,o=N,a=E,u=Y,h=R,c=I,B,d=X,f=V,p=C,m=W,y=q,v=Z,g=F,U,T=65535&(L=U),S=L>>>16,A=65535&(P=B),D=P>>>16,T+=65535&(L=(q>>>14|Y<<18)^(q>>>18|Y<<14)^(Y>>>9|q<<23)),S+=L>>>16,A+=65535&(P=(Y>>>14|q<<18)^(Y>>>18|q<<14)^(q>>>9|Y<<23)),D+=P>>>16,T+=65535&(L=q&Z^~q&F),S+=L>>>16,A+=65535&(P=Y&R^~Y&I),D+=P>>>16,T+=65535&(L=_[2*k+1]),S+=L>>>16,A+=65535&(P=_[2*k]),D+=P>>>16,P=j[k%16],S+=(L=H[k%16])>>>16,A+=65535&P,D+=P>>>16,A+=(S+=(T+=65535&L)>>>16)>>>16,T=65535&(L=M=65535&T|S<<16),S=L>>>16,A=65535&(P=w=65535&A|(D+=A>>>16)<<16),D=P>>>16,T+=65535&(L=(X>>>28|O<<4)^(O>>>2|X<<30)^(O>>>7|X<<25)),S+=L>>>16,A+=65535&(P=(O>>>28|X<<4)^(X>>>2|O<<30)^(X>>>7|O<<25)),D+=P>>>16,S+=(L=X&V^X&C^V&C)>>>16,A+=65535&(P=O&z^O&N^z&N),D+=P>>>16,l=65535&(A+=(S+=(T+=65535&L)>>>16)>>>16)|(D+=A>>>16)<<16,b=65535&T|S<<16,T=65535&(L=m),S=L>>>16,A=65535&(P=a),D=P>>>16,S+=(L=M)>>>16,A+=65535&(P=w),D+=P>>>16,z=i,N=s,E=o,Y=a=65535&(A+=(S+=(T+=65535&L)>>>16)>>>16)|(D+=A>>>16)<<16,R=u,I=h,B=c,O=l,V=d,C=f,W=p,q=m=65535&T|S<<16,Z=y,F=v,U=g,X=b,k%16==15)for(x=0;x<16;x++)P=j[x],T=65535&(L=H[x]),S=L>>>16,A=65535&P,D=P>>>16,P=j[(x+9)%16],T+=65535&(L=H[(x+9)%16]),S+=L>>>16,A+=65535&P,D+=P>>>16,w=j[(x+1)%16],T+=65535&(L=((M=H[(x+1)%16])>>>1|w<<31)^(M>>>8|w<<24)^(M>>>7|w<<25)),S+=L>>>16,A+=65535&(P=(w>>>1|M<<31)^(w>>>8|M<<24)^w>>>7),D+=P>>>16,w=j[(x+14)%16],S+=(L=((M=H[(x+14)%16])>>>19|w<<13)^(w>>>29|M<<3)^(M>>>6|w<<26))>>>16,A+=65535&(P=(w>>>19|M<<13)^(M>>>29|w<<3)^w>>>6),D+=P>>>16,D+=(A+=(S+=(T+=65535&L)>>>16)>>>16)>>>16,j[x]=65535&A|D<<16,H[x]=65535&T|S<<16;T=65535&(L=X),S=L>>>16,A=65535&(P=O),D=P>>>16,P=t[0],S+=(L=e[0])>>>16,A+=65535&P,D+=P>>>16,D+=(A+=(S+=(T+=65535&L)>>>16)>>>16)>>>16,t[0]=O=65535&A|D<<16,e[0]=X=65535&T|S<<16,T=65535&(L=V),S=L>>>16,A=65535&(P=z),D=P>>>16,P=t[1],S+=(L=e[1])>>>16,A+=65535&P,D+=P>>>16,D+=(A+=(S+=(T+=65535&L)>>>16)>>>16)>>>16,t[1]=z=65535&A|D<<16,e[1]=V=65535&T|S<<16,T=65535&(L=C),S=L>>>16,A=65535&(P=N),D=P>>>16,P=t[2],S+=(L=e[2])>>>16,A+=65535&P,D+=P>>>16,D+=(A+=(S+=(T+=65535&L)>>>16)>>>16)>>>16,t[2]=N=65535&A|D<<16,e[2]=C=65535&T|S<<16,T=65535&(L=W),S=L>>>16,A=65535&(P=E),D=P>>>16,P=t[3],S+=(L=e[3])>>>16,A+=65535&P,D+=P>>>16,D+=(A+=(S+=(T+=65535&L)>>>16)>>>16)>>>16,t[3]=E=65535&A|D<<16,e[3]=W=65535&T|S<<16,T=65535&(L=q),S=L>>>16,A=65535&(P=Y),D=P>>>16,P=t[4],S+=(L=e[4])>>>16,A+=65535&P,D+=P>>>16,D+=(A+=(S+=(T+=65535&L)>>>16)>>>16)>>>16,t[4]=Y=65535&A|D<<16,e[4]=q=65535&T|S<<16,T=65535&(L=Z),S=L>>>16,A=65535&(P=R),D=P>>>16,P=t[5],S+=(L=e[5])>>>16,A+=65535&P,D+=P>>>16,D+=(A+=(S+=(T+=65535&L)>>>16)>>>16)>>>16,t[5]=R=65535&A|D<<16,e[5]=Z=65535&T|S<<16,T=65535&(L=F),S=L>>>16,A=65535&(P=I),D=P>>>16,P=t[6],S+=(L=e[6])>>>16,A+=65535&P,D+=P>>>16,D+=(A+=(S+=(T+=65535&L)>>>16)>>>16)>>>16,t[6]=I=65535&A|D<<16,e[6]=F=65535&T|S<<16,T=65535&(L=U),S=L>>>16,A=65535&(P=B),D=P>>>16,P=t[7],S+=(L=e[7])>>>16,A+=65535&P,D+=P>>>16,D+=(A+=(S+=(T+=65535&L)>>>16)>>>16)>>>16,t[7]=B=65535&A|D<<16,e[7]=U=65535&T|S<<16,G+=128,n-=128}return n}function J(t,e,r){var n,i=new Int32Array(8),s=new Int32Array(8),o=new Uint8Array(256),a=r;for(i[0]=1779033703,i[1]=3144134277,i[2]=1013904242,i[3]=2773480762,i[4]=1359893119,i[5]=2600822924,i[6]=528734635,i[7]=1541459225,s[0]=4089235720,s[1]=2227873595,s[2]=4271175723,s[3]=1595750129,s[4]=2917565137,s[5]=725511199,s[6]=4215389547,s[7]=327033209,K(i,s,e,r),r%=128,n=0;n<r;n++)o[n]=e[a-r+n];for(o[r]=128,o[(r=256-128*(r<112?1:0))-9]=0,p(o,r-8,a/536870912|0,a<<3),K(i,s,o,r),n=0;n<8;n++)p(t,8*n,i[n],s[n]);return 0}function Q(t,r){var n=e(),i=e(),s=e(),o=e(),a=e(),u=e(),h=e(),l=e(),d=e();I(n,t[1],t[0]),I(d,r[1],r[0]),B(n,n,d),R(i,t[0],t[1]),R(d,r[0],r[1]),B(i,i,d),B(s,t[3],r[3]),B(s,s,c),B(o,t[2],r[2]),R(o,o,o),I(a,i,n),I(u,o,s),R(h,o,s),R(l,i,n),B(t[0],a,u),B(t[1],l,h),B(t[2],h,u),B(t[3],a,l)}function $(t,e,r){var n;for(n=0;n<4;n++)O(t[n],e[n],r)}function tt(t,r){var n=e(),i=e(),s=e();V(s,r[2]),B(n,r[0],s),B(i,r[1],s),z(t,i),t[31]^=E(n)<<7}function et(t,e,r){var n,i;for(j(t[0],o),j(t[1],a),j(t[2],a),j(t[3],o),i=255;i>=0;--i)$(t,e,n=r[i/8|0]>>(7&i)&1),Q(e,t),Q(t,t),$(t,e,n)}function rt(t,r){var n=[e(),e(),e(),e()];j(n[0],l),j(n[1],d),j(n[2],a),B(n[3],l,d),et(t,n,r)}function nt(t,r,i){var s,o=new Uint8Array(64),a=[e(),e(),e(),e()];for(i||n(r,32),J(o,r,32),o[0]&=248,o[31]&=127,o[31]|=64,rt(a,o),tt(t,a),s=0;s<32;s++)r[s+32]=t[s];return 0}var it=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function st(t,e){var r,n,i,s;for(n=63;n>=32;--n){for(r=0,i=n-32,s=n-12;i<s;++i)e[i]+=r-16*e[n]*it[i-(n-32)],r=Math.floor((e[i]+128)/256),e[i]-=256*r;e[i]+=r,e[n]=0}for(r=0,i=0;i<32;i++)e[i]+=r-(e[31]>>4)*it[i],r=e[i]>>8,e[i]&=255;for(i=0;i<32;i++)e[i]-=r*it[i];for(n=0;n<32;n++)e[n+1]+=e[n]>>8,t[n]=255&e[n]}function ot(t){var e,r=new Float64Array(64);for(e=0;e<64;e++)r[e]=t[e];for(e=0;e<64;e++)t[e]=0;st(t,r)}function at(t,r,n,i){var s,o,a=new Uint8Array(64),u=new Uint8Array(64),h=new Uint8Array(64),c=new Float64Array(64),l=[e(),e(),e(),e()];J(a,i,32),a[0]&=248,a[31]&=127,a[31]|=64;var d=n+64;for(s=0;s<n;s++)t[64+s]=r[s];for(s=0;s<32;s++)t[32+s]=a[32+s];for(J(h,t.subarray(32),n+32),ot(h),rt(l,h),tt(t,l),s=32;s<64;s++)t[s]=i[s];for(J(u,t,n+64),ot(u),s=0;s<64;s++)c[s]=0;for(s=0;s<32;s++)c[s]=h[s];for(s=0;s<32;s++)for(o=0;o<32;o++)c[s+o]+=u[s]*a[o];return st(t.subarray(32),c),d}function ut(t,r,n,i){var s,u=new Uint8Array(32),c=new Uint8Array(64),l=[e(),e(),e(),e()],d=[e(),e(),e(),e()];if(n<64)return-1;if(function(t,r){var n=e(),i=e(),s=e(),u=e(),c=e(),l=e(),d=e();return j(t[2],a),Y(t[1],r),X(s,t[1]),B(u,s,h),I(s,s,t[2]),R(u,t[2],u),X(c,u),X(l,c),B(d,l,c),B(n,d,s),B(n,n,u),C(n,n),B(n,n,s),B(n,n,u),B(n,n,u),B(t[0],n,u),X(i,t[0]),B(i,i,u),N(i,s)&&B(t[0],t[0],f),X(i,t[0]),B(i,i,u),N(i,s)?-1:(E(t[0])===r[31]>>7&&I(t[0],o,t[0]),B(t[3],t[0],t[1]),0)}(d,i))return-1;for(s=0;s<n;s++)t[s]=r[s];for(s=0;s<32;s++)t[s+32]=i[s];if(J(c,t,n),ot(c),et(l,d,c),rt(d,r.subarray(32)),Q(l,d),tt(u,l),n-=64,v(r,0,u,0)){for(s=0;s<n;s++)t[s]=0;return-1}for(s=0;s<n;s++)t[s]=r[s+64];return n}var ht=16,ct=64,lt=32,dt=64;function ft(t,e){if(32!==t.length)throw new Error("bad key size");if(24!==e.length)throw new Error("bad nonce size")}function pt(){for(var t=0;t<arguments.length;t++)if(!(arguments[t]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function mt(t){for(var e=0;e<t.length;e++)t[e]=0}t.lowlevel={crypto_core_hsalsa20:b,crypto_stream_xor:P,crypto_stream:x,crypto_stream_salsa20_xor:M,crypto_stream_salsa20:k,crypto_onetimeauth:T,crypto_onetimeauth_verify:S,crypto_verify_16:y,crypto_verify_32:v,crypto_secretbox:A,crypto_secretbox_open:D,crypto_scalarmult:W,crypto_scalarmult_base:q,crypto_box_beforenm:F,crypto_box_afternm:U,crypto_box:function(t,e,r,n,i,s){var o=new Uint8Array(32);return F(o,i,s),U(t,e,r,n,o)},crypto_box_open:function(t,e,r,n,i,s){var o=new Uint8Array(32);return F(o,i,s),G(t,e,r,n,o)},crypto_box_keypair:Z,crypto_hash:J,crypto_sign:at,crypto_sign_keypair:nt,crypto_sign_open:ut,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:ht,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:ct,crypto_sign_PUBLICKEYBYTES:lt,crypto_sign_SECRETKEYBYTES:dt,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:e,D:h,L:it,pack25519:z,unpack25519:Y,M:B,A:R,S:X,Z:I,pow2523:C,add:Q,set25519:j,modL:st,scalarmult:et,scalarbase:rt},t.randomBytes=function(t){var e=new Uint8Array(t);return n(e,t),e},t.secretbox=function(t,e,r){pt(t,e,r),ft(r,e);for(var n=new Uint8Array(32+t.length),i=new Uint8Array(n.length),s=0;s<t.length;s++)n[s+32]=t[s];return A(i,n,n.length,e,r),i.subarray(ht)},t.secretbox.open=function(t,e,r){pt(t,e,r),ft(r,e);for(var n=new Uint8Array(ht+t.length),i=new Uint8Array(n.length),s=0;s<t.length;s++)n[s+ht]=t[s];return n.length<32||0!==D(i,n,n.length,e,r)?null:i.subarray(32)},t.secretbox.keyLength=32,t.secretbox.nonceLength=24,t.secretbox.overheadLength=ht,t.scalarMult=function(t,e){if(pt(t,e),32!==t.length)throw new Error("bad n size");if(32!==e.length)throw new Error("bad p size");var r=new Uint8Array(32);return W(r,t,e),r},t.scalarMult.base=function(t){if(pt(t),32!==t.length)throw new Error("bad n size");var e=new Uint8Array(32);return q(e,t),e},t.scalarMult.scalarLength=32,t.scalarMult.groupElementLength=32,t.box=function(e,r,n,i){var s=t.box.before(n,i);return t.secretbox(e,r,s)},t.box.before=function(t,e){pt(t,e),function(t,e){if(32!==t.length)throw new Error("bad public key size");if(32!==e.length)throw new Error("bad secret key size")}(t,e);var r=new Uint8Array(32);return F(r,t,e),r},t.box.after=t.secretbox,t.box.open=function(e,r,n,i){var s=t.box.before(n,i);return t.secretbox.open(e,r,s)},t.box.open.after=t.secretbox.open,t.box.keyPair=function(){var t=new Uint8Array(32),e=new Uint8Array(32);return Z(t,e),{publicKey:t,secretKey:e}},t.box.keyPair.fromSecretKey=function(t){if(pt(t),32!==t.length)throw new Error("bad secret key size");var e=new Uint8Array(32);return q(e,t),{publicKey:e,secretKey:new Uint8Array(t)}},t.box.publicKeyLength=32,t.box.secretKeyLength=32,t.box.sharedKeyLength=32,t.box.nonceLength=24,t.box.overheadLength=t.secretbox.overheadLength,t.sign=function(t,e){if(pt(t,e),e.length!==dt)throw new Error("bad secret key size");var r=new Uint8Array(ct+t.length);return at(r,t,t.length,e),r},t.sign.open=function(t,e){if(pt(t,e),e.length!==lt)throw new Error("bad public key size");var r=new Uint8Array(t.length),n=ut(r,t,t.length,e);if(n<0)return null;for(var i=new Uint8Array(n),s=0;s<i.length;s++)i[s]=r[s];return i},t.sign.detached=function(e,r){for(var n=t.sign(e,r),i=new Uint8Array(ct),s=0;s<i.length;s++)i[s]=n[s];return i},t.sign.detached.verify=function(t,e,r){if(pt(t,e,r),e.length!==ct)throw new Error("bad signature size");if(r.length!==lt)throw new Error("bad public key size");var n,i=new Uint8Array(ct+t.length),s=new Uint8Array(ct+t.length);for(n=0;n<ct;n++)i[n]=e[n];for(n=0;n<t.length;n++)i[n+ct]=t[n];return ut(s,i,i.length,r)>=0},t.sign.keyPair=function(){var t=new Uint8Array(lt),e=new Uint8Array(dt);return nt(t,e),{publicKey:t,secretKey:e}},t.sign.keyPair.fromSecretKey=function(t){if(pt(t),t.length!==dt)throw new Error("bad secret key size");for(var e=new Uint8Array(lt),r=0;r<e.length;r++)e[r]=t[32+r];return{publicKey:e,secretKey:new Uint8Array(t)}},t.sign.keyPair.fromSeed=function(t){if(pt(t),32!==t.length)throw new Error("bad seed size");for(var e=new Uint8Array(lt),r=new Uint8Array(dt),n=0;n<32;n++)r[n]=t[n];return nt(e,r,!0),{publicKey:e,secretKey:r}},t.sign.publicKeyLength=lt,t.sign.secretKeyLength=dt,t.sign.seedLength=32,t.sign.signatureLength=ct,t.hash=function(t){pt(t);var e=new Uint8Array(64);return J(e,t,t.length),e},t.hash.hashLength=64,t.verify=function(t,e){return pt(t,e),0!==t.length&&0!==e.length&&(t.length===e.length&&0===m(t,0,e,0,t.length))},t.setPRNG=function(t){n=t},function(){var e="undefined"!=typeof self?self.crypto||self.msCrypto:null;if(e&&e.getRandomValues){t.setPRNG((function(t,r){var n,i=new Uint8Array(r);for(n=0;n<r;n+=65536)e.getRandomValues(i.subarray(n,n+Math.min(r-n,65536)));for(n=0;n<r;n++)t[n]=i[n];mt(i)}))}else(e=r(55024))&&e.randomBytes&&t.setPRNG((function(t,r){var n,i=e.randomBytes(r);for(n=0;n<r;n++)t[n]=i[n];mt(i)}))}()}(t.exports?t.exports:self.nacl=self.nacl||{})},57458:(t,e)=>{!function(t){var e,r,n,i=String.fromCharCode;function s(t){for(var e,r,n=[],i=0,s=t.length;i<s;)(e=t.charCodeAt(i++))>=55296&&e<=56319&&i<s?56320==(64512&(r=t.charCodeAt(i++)))?n.push(((1023&e)<<10)+(1023&r)+65536):(n.push(e),i--):n.push(e);return n}function o(t){if(t>=55296&&t<=57343)throw Error("Lone surrogate U+"+t.toString(16).toUpperCase()+" is not a scalar value")}function a(t,e){return i(t>>e&63|128)}function u(t){if(0==(4294967168&t))return i(t);var e="";return 0==(4294965248&t)?e=i(t>>6&31|192):0==(4294901760&t)?(o(t),e=i(t>>12&15|224),e+=a(t,6)):0==(4292870144&t)&&(e=i(t>>18&7|240),e+=a(t,12),e+=a(t,6)),e+=i(63&t|128)}function h(){if(n>=r)throw Error("Invalid byte index");var t=255&e[n];if(n++,128==(192&t))return 63&t;throw Error("Invalid continuation byte")}function c(){var t,i;if(n>r)throw Error("Invalid byte index");if(n==r)return!1;if(t=255&e[n],n++,0==(128&t))return t;if(192==(224&t)){if((i=(31&t)<<6|h())>=128)return i;throw Error("Invalid continuation byte")}if(224==(240&t)){if((i=(15&t)<<12|h()<<6|h())>=2048)return o(i),i;throw Error("Invalid continuation byte")}if(240==(248&t)&&(i=(7&t)<<18|h()<<12|h()<<6|h())>=65536&&i<=1114111)return i;throw Error("Invalid UTF-8 detected")}t.version="3.0.0",t.encode=function(t){for(var e=s(t),r=e.length,n=-1,i="";++n<r;)i+=u(e[n]);return i},t.decode=function(t){e=s(t),r=e.length,n=0;for(var o,a=[];!1!==(o=c());)a.push(o);return function(t){for(var e,r=t.length,n=-1,s="";++n<r;)(e=t[n])>65535&&(s+=i((e-=65536)>>>10&1023|55296),e=56320|1023&e),s+=i(e);return s}(a)}}(e)},94927:(t,e,r)=>{function n(t){try{if(!r.g.localStorage)return!1}catch(t){return!1}var e=r.g.localStorage[t];return null!=e&&"true"===String(e).toLowerCase()}t.exports=function(t,e){if(n("noDeprecation"))return t;var r=!1;return function(){if(!r){if(n("throwDeprecation"))throw new Error(e);n("traceDeprecation")?console.trace(e):console.warn(e),r=!0}return t.apply(this,arguments)}}},20384:t=>{t.exports=function(t){return t&&"object"==typeof t&&"function"==typeof t.copy&&"function"==typeof t.fill&&"function"==typeof t.readUInt8}},55955:(t,e,r)=>{"use strict";var n=r(82584),i=r(48662),s=r(86430),o=r(85692);function a(t){return t.call.bind(t)}var u="undefined"!=typeof BigInt,h="undefined"!=typeof Symbol,c=a(Object.prototype.toString),l=a(Number.prototype.valueOf),d=a(String.prototype.valueOf),f=a(Boolean.prototype.valueOf);if(u)var p=a(BigInt.prototype.valueOf);if(h)var m=a(Symbol.prototype.valueOf);function y(t,e){if("object"!=typeof t)return!1;try{return e(t),!0}catch(t){return!1}}function v(t){return"[object Map]"===c(t)}function g(t){return"[object Set]"===c(t)}function b(t){return"[object WeakMap]"===c(t)}function w(t){return"[object WeakSet]"===c(t)}function M(t){return"[object ArrayBuffer]"===c(t)}function k(t){return"undefined"!=typeof ArrayBuffer&&(M.working?M(t):t instanceof ArrayBuffer)}function x(t){return"[object DataView]"===c(t)}function P(t){return"undefined"!=typeof DataView&&(x.working?x(t):t instanceof DataView)}e.isArgumentsObject=n,e.isGeneratorFunction=i,e.isTypedArray=o,e.isPromise=function(t){return"undefined"!=typeof Promise&&t instanceof Promise||null!==t&&"object"==typeof t&&"function"==typeof t.then&&"function"==typeof t.catch},e.isArrayBufferView=function(t){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(t):o(t)||P(t)},e.isUint8Array=function(t){return"Uint8Array"===s(t)},e.isUint8ClampedArray=function(t){return"Uint8ClampedArray"===s(t)},e.isUint16Array=function(t){return"Uint16Array"===s(t)},e.isUint32Array=function(t){return"Uint32Array"===s(t)},e.isInt8Array=function(t){return"Int8Array"===s(t)},e.isInt16Array=function(t){return"Int16Array"===s(t)},e.isInt32Array=function(t){return"Int32Array"===s(t)},e.isFloat32Array=function(t){return"Float32Array"===s(t)},e.isFloat64Array=function(t){return"Float64Array"===s(t)},e.isBigInt64Array=function(t){return"BigInt64Array"===s(t)},e.isBigUint64Array=function(t){return"BigUint64Array"===s(t)},v.working="undefined"!=typeof Map&&v(new Map),e.isMap=function(t){return"undefined"!=typeof Map&&(v.working?v(t):t instanceof Map)},g.working="undefined"!=typeof Set&&g(new Set),e.isSet=function(t){return"undefined"!=typeof Set&&(g.working?g(t):t instanceof Set)},b.working="undefined"!=typeof WeakMap&&b(new WeakMap),e.isWeakMap=function(t){return"undefined"!=typeof WeakMap&&(b.working?b(t):t instanceof WeakMap)},w.working="undefined"!=typeof WeakSet&&w(new WeakSet),e.isWeakSet=function(t){return w(t)},M.working="undefined"!=typeof ArrayBuffer&&M(new ArrayBuffer),e.isArrayBuffer=k,x.working="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView&&x(new DataView(new ArrayBuffer(1),0,1)),e.isDataView=P;var L="undefined"!=typeof SharedArrayBuffer?SharedArrayBuffer:void 0;function T(t){return"[object SharedArrayBuffer]"===c(t)}function S(t){return void 0!==L&&(void 0===T.working&&(T.working=T(new L)),T.working?T(t):t instanceof L)}function A(t){return y(t,l)}function D(t){return y(t,d)}function j(t){return y(t,f)}function H(t){return u&&y(t,p)}function O(t){return h&&y(t,m)}e.isSharedArrayBuffer=S,e.isAsyncFunction=function(t){return"[object AsyncFunction]"===c(t)},e.isMapIterator=function(t){return"[object Map Iterator]"===c(t)},e.isSetIterator=function(t){return"[object Set Iterator]"===c(t)},e.isGeneratorObject=function(t){return"[object Generator]"===c(t)},e.isWebAssemblyCompiledModule=function(t){return"[object WebAssembly.Module]"===c(t)},e.isNumberObject=A,e.isStringObject=D,e.isBooleanObject=j,e.isBigIntObject=H,e.isSymbolObject=O,e.isBoxedPrimitive=function(t){return A(t)||D(t)||j(t)||H(t)||O(t)},e.isAnyArrayBuffer=function(t){return"undefined"!=typeof Uint8Array&&(k(t)||S(t))},["isProxy","isExternal","isModuleNamespaceObject"].forEach((function(t){Object.defineProperty(e,t,{enumerable:!1,value:function(){throw new Error(t+" is not supported in userland")}})}))},89539:(t,e,r)=>{var n=r(34155),i=Object.getOwnPropertyDescriptors||function(t){for(var e=Object.keys(t),r={},n=0;n<e.length;n++)r[e[n]]=Object.getOwnPropertyDescriptor(t,e[n]);return r},s=/%[sdj%]/g;e.format=function(t){if(!b(t)){for(var e=[],r=0;r<arguments.length;r++)e.push(h(arguments[r]));return e.join(" ")}r=1;for(var n=arguments,i=n.length,o=String(t).replace(s,(function(t){if("%%"===t)return"%";if(r>=i)return t;switch(t){case"%s":return String(n[r++]);case"%d":return Number(n[r++]);case"%j":try{return JSON.stringify(n[r++])}catch(t){return"[Circular]"}default:return t}})),a=n[r];r<i;a=n[++r])v(a)||!k(a)?o+=" "+a:o+=" "+h(a);return o},e.deprecate=function(t,r){if(void 0!==n&&!0===n.noDeprecation)return t;if(void 0===n)return function(){return e.deprecate(t,r).apply(this,arguments)};var i=!1;return function(){if(!i){if(n.throwDeprecation)throw new Error(r);n.traceDeprecation?console.trace(r):console.error(r),i=!0}return t.apply(this,arguments)}};var o={},a=/^$/;if(n.env.NODE_DEBUG){var u=n.env.NODE_DEBUG;u=u.replace(/[|\\{}()[\]^$+?.]/g,"\\$&").replace(/\*/g,".*").replace(/,/g,"$|^").toUpperCase(),a=new RegExp("^"+u+"$","i")}function h(t,r){var n={seen:[],stylize:l};return arguments.length>=3&&(n.depth=arguments[2]),arguments.length>=4&&(n.colors=arguments[3]),y(r)?n.showHidden=r:r&&e._extend(n,r),w(n.showHidden)&&(n.showHidden=!1),w(n.depth)&&(n.depth=2),w(n.colors)&&(n.colors=!1),w(n.customInspect)&&(n.customInspect=!0),n.colors&&(n.stylize=c),d(n,t,n.depth)}function c(t,e){var r=h.styles[e];return r?"["+h.colors[r][0]+"m"+t+"["+h.colors[r][1]+"m":t}function l(t,e){return t}function d(t,r,n){if(t.customInspect&&r&&L(r.inspect)&&r.inspect!==e.inspect&&(!r.constructor||r.constructor.prototype!==r)){var i=r.inspect(n,t);return b(i)||(i=d(t,i,n)),i}var s=function(t,e){if(w(e))return t.stylize("undefined","undefined");if(b(e)){var r="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return t.stylize(r,"string")}if(g(e))return t.stylize(""+e,"number");if(y(e))return t.stylize(""+e,"boolean");if(v(e))return t.stylize("null","null")}(t,r);if(s)return s;var o=Object.keys(r),a=function(t){var e={};return t.forEach((function(t,r){e[t]=!0})),e}(o);if(t.showHidden&&(o=Object.getOwnPropertyNames(r)),P(r)&&(o.indexOf("message")>=0||o.indexOf("description")>=0))return f(r);if(0===o.length){if(L(r)){var u=r.name?": "+r.name:"";return t.stylize("[Function"+u+"]","special")}if(M(r))return t.stylize(RegExp.prototype.toString.call(r),"regexp");if(x(r))return t.stylize(Date.prototype.toString.call(r),"date");if(P(r))return f(r)}var h,c="",l=!1,k=["{","}"];(m(r)&&(l=!0,k=["[","]"]),L(r))&&(c=" [Function"+(r.name?": "+r.name:"")+"]");return M(r)&&(c=" "+RegExp.prototype.toString.call(r)),x(r)&&(c=" "+Date.prototype.toUTCString.call(r)),P(r)&&(c=" "+f(r)),0!==o.length||l&&0!=r.length?n<0?M(r)?t.stylize(RegExp.prototype.toString.call(r),"regexp"):t.stylize("[Object]","special"):(t.seen.push(r),h=l?function(t,e,r,n,i){for(var s=[],o=0,a=e.length;o<a;++o)j(e,String(o))?s.push(p(t,e,r,n,String(o),!0)):s.push("");return i.forEach((function(i){i.match(/^\d+$/)||s.push(p(t,e,r,n,i,!0))})),s}(t,r,n,a,o):o.map((function(e){return p(t,r,n,a,e,l)})),t.seen.pop(),function(t,e,r){if(t.reduce((function(t,e){return e.indexOf("\n")>=0&&0,t+e.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60)return r[0]+(""===e?"":e+"\n ")+" "+t.join(",\n  ")+" "+r[1];return r[0]+e+" "+t.join(", ")+" "+r[1]}(h,c,k)):k[0]+c+k[1]}function f(t){return"["+Error.prototype.toString.call(t)+"]"}function p(t,e,r,n,i,s){var o,a,u;if((u=Object.getOwnPropertyDescriptor(e,i)||{value:e[i]}).get?a=u.set?t.stylize("[Getter/Setter]","special"):t.stylize("[Getter]","special"):u.set&&(a=t.stylize("[Setter]","special")),j(n,i)||(o="["+i+"]"),a||(t.seen.indexOf(u.value)<0?(a=v(r)?d(t,u.value,null):d(t,u.value,r-1)).indexOf("\n")>-1&&(a=s?a.split("\n").map((function(t){return"  "+t})).join("\n").substr(2):"\n"+a.split("\n").map((function(t){return"   "+t})).join("\n")):a=t.stylize("[Circular]","special")),w(o)){if(s&&i.match(/^\d+$/))return a;(o=JSON.stringify(""+i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(o=o.substr(1,o.length-2),o=t.stylize(o,"name")):(o=o.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),o=t.stylize(o,"string"))}return o+": "+a}function m(t){return Array.isArray(t)}function y(t){return"boolean"==typeof t}function v(t){return null===t}function g(t){return"number"==typeof t}function b(t){return"string"==typeof t}function w(t){return void 0===t}function M(t){return k(t)&&"[object RegExp]"===T(t)}function k(t){return"object"==typeof t&&null!==t}function x(t){return k(t)&&"[object Date]"===T(t)}function P(t){return k(t)&&("[object Error]"===T(t)||t instanceof Error)}function L(t){return"function"==typeof t}function T(t){return Object.prototype.toString.call(t)}function S(t){return t<10?"0"+t.toString(10):t.toString(10)}e.debuglog=function(t){if(t=t.toUpperCase(),!o[t])if(a.test(t)){var r=n.pid;o[t]=function(){var n=e.format.apply(e,arguments);console.error("%s %d: %s",t,r,n)}}else o[t]=function(){};return o[t]},e.inspect=h,h.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},h.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},e.types=r(55955),e.isArray=m,e.isBoolean=y,e.isNull=v,e.isNullOrUndefined=function(t){return null==t},e.isNumber=g,e.isString=b,e.isSymbol=function(t){return"symbol"==typeof t},e.isUndefined=w,e.isRegExp=M,e.types.isRegExp=M,e.isObject=k,e.isDate=x,e.types.isDate=x,e.isError=P,e.types.isNativeError=P,e.isFunction=L,e.isPrimitive=function(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t},e.isBuffer=r(20384);var A=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function D(){var t=new Date,e=[S(t.getHours()),S(t.getMinutes()),S(t.getSeconds())].join(":");return[t.getDate(),A[t.getMonth()],e].join(" ")}function j(t,e){return Object.prototype.hasOwnProperty.call(t,e)}e.log=function(){console.log("%s - %s",D(),e.format.apply(e,arguments))},e.inherits=r(35717),e._extend=function(t,e){if(!e||!k(e))return t;for(var r=Object.keys(e),n=r.length;n--;)t[r[n]]=e[r[n]];return t};var H="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;function O(t,e){if(!t){var r=new Error("Promise was rejected with a falsy value");r.reason=t,t=r}return e(t)}e.promisify=function(t){if("function"!=typeof t)throw new TypeError('The "original" argument must be of type Function');if(H&&t[H]){var e;if("function"!=typeof(e=t[H]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(e,H,{value:e,enumerable:!1,writable:!1,configurable:!0}),e}function e(){for(var e,r,n=new Promise((function(t,n){e=t,r=n})),i=[],s=0;s<arguments.length;s++)i.push(arguments[s]);i.push((function(t,n){t?r(t):e(n)}));try{t.apply(this,i)}catch(t){r(t)}return n}return Object.setPrototypeOf(e,Object.getPrototypeOf(t)),H&&Object.defineProperty(e,H,{value:e,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(e,i(t))},e.promisify.custom=H,e.callbackify=function(t){if("function"!=typeof t)throw new TypeError('The "original" argument must be of type Function');function e(){for(var e=[],r=0;r<arguments.length;r++)e.push(arguments[r]);var i=e.pop();if("function"!=typeof i)throw new TypeError("The last argument must be of type Function");var s=this,o=function(){return i.apply(s,arguments)};t.apply(this,e).then((function(t){n.nextTick(o.bind(null,null,t))}),(function(t){n.nextTick(O.bind(null,t,o))}))}return Object.setPrototypeOf(e,Object.getPrototypeOf(t)),Object.defineProperties(e,i(t)),e}},18269:(t,e,r)=>{var n=r(94278),i=r(90329),s=r(28668),o=r(61798),a=r(16383),u=function(t,e){var r=[];return e.forEach((function(e){if("object"==typeof e.components){if("tuple"!==e.type.substring(0,5))throw new Error("components found but type is not tuple; report on GitHub");var n="",i=e.type.indexOf("[");i>=0&&(n=e.type.substring(i));var s=u(t,e.components);Array.isArray(s)&&t?r.push("tuple("+s.join(",")+")"+n):t?r.push("("+s+")"):r.push("("+s.join(",")+")"+n)}else r.push(e.type)})),r},h=function(t){if(!i.isHexStrict(t))throw new Error("The parameter must be a valid HEX string.");var e="",r=0,n=t.length;for("0x"===t.substring(0,2)&&(r=2);r<n;r+=2){var s=parseInt(t.substr(r,2),16);e+=String.fromCharCode(s)}return e},c=function(t){if(!t)return"0x00";for(var e="",r=0;r<t.length;r++){var n=t.charCodeAt(r).toString(16);e+=n.length<2?"0"+n:n}return"0x"+e},l=function(t){if(t=t?t.toLowerCase():"ether",!n.unitMap[t])throw new Error('This unit "'+t+"\" doesn't exist, please use the one of the following units"+JSON.stringify(n.unitMap,null,2));return t};t.exports={_fireError:function(t,e,r,n,i){return!t||"object"!=typeof t||t instanceof Error||!t.data||((t.data&&"object"==typeof t.data||Array.isArray(t.data))&&(t.data=JSON.stringify(t.data,null,2)),t=t.message+"\n"+t.data),"string"==typeof t&&(t=new Error(t)),"function"==typeof n&&n(t,i),"function"==typeof r&&((e&&"function"==typeof e.listeners&&e.listeners("error").length||"function"==typeof n)&&e.catch((function(){})),setTimeout((function(){r(t)}),1)),e&&"function"==typeof e.emit&&setTimeout((function(){e.emit("error",t,i),e.removeAllListeners()}),1),e},_jsonInterfaceMethodToString:function(t){return t&&"object"==typeof t&&t.name&&-1!==t.name.indexOf("(")?t.name:t.name+"("+u(!1,t.inputs).join(",")+")"},_flattenTypes:u,randomHex:function(t){return"0x"+o(t).toString("hex")},BN:i.BN,isBN:i.isBN,isBigNumber:i.isBigNumber,isHex:i.isHex,isHexStrict:i.isHexStrict,sha3:i.sha3,sha3Raw:i.sha3Raw,keccak256:i.sha3,soliditySha3:s.soliditySha3,soliditySha3Raw:s.soliditySha3Raw,encodePacked:s.encodePacked,isAddress:i.isAddress,checkAddressChecksum:i.checkAddressChecksum,toChecksumAddress:function(t){if(void 0===t)return"";if(!/^(0x)?[0-9a-f]{40}$/i.test(t))throw new Error('Given address "'+t+'" is not a valid Ethereum address.');t=t.toLowerCase().replace(/^0x/i,"");for(var e=i.sha3(t).replace(/^0x/i,""),r="0x",n=0;n<t.length;n++)parseInt(e[n],16)>7?r+=t[n].toUpperCase():r+=t[n];return r},toHex:i.toHex,toBN:i.toBN,bytesToHex:i.bytesToHex,hexToBytes:i.hexToBytes,hexToNumberString:i.hexToNumberString,hexToNumber:i.hexToNumber,toDecimal:i.hexToNumber,numberToHex:i.numberToHex,fromDecimal:i.numberToHex,hexToUtf8:i.hexToUtf8,hexToString:i.hexToUtf8,toUtf8:i.hexToUtf8,stripHexPrefix:i.stripHexPrefix,utf8ToHex:i.utf8ToHex,stringToHex:i.utf8ToHex,fromUtf8:i.utf8ToHex,hexToAscii:h,toAscii:h,asciiToHex:c,fromAscii:c,unitMap:n.unitMap,toWei:function(t,e){if(e=l(e),!i.isBN(t)&&"string"!=typeof t)throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");return i.isBN(t)?n.toWei(t,e):n.toWei(t,e).toString(10)},fromWei:function(t,e){if(e=l(e),!i.isBN(t)&&"string"!=typeof t)throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");return i.isBN(t)?n.fromWei(t,e):n.fromWei(t,e).toString(10)},padLeft:i.leftPad,leftPad:i.leftPad,padRight:i.rightPad,rightPad:i.rightPad,toTwosComplement:i.toTwosComplement,isBloom:i.isBloom,isUserEthereumAddressInBloom:i.isUserEthereumAddressInBloom,isContractAddressInBloom:i.isContractAddressInBloom,isTopic:i.isTopic,isTopicInBloom:i.isTopicInBloom,isInBloom:i.isInBloom,compareBlockNumbers:function(t,e){if(t==e)return 0;if("genesis"!=t&&"earliest"!=t&&0!=t||"genesis"!=e&&"earliest"!=e&&0!=e){if("genesis"==t||"earliest"==t)return-1;if("genesis"==e||"earliest"==e)return 1;if("latest"==t)return"pending"==e?-1:1;if("latest"===e)return"pending"==t?1:-1;if("pending"==t)return 1;if("pending"==e)return-1;{let r=new a(t),n=new a(e);return r.lt(n)?-1:r.eq(n)?0:1}}return 0},toNumber:i.toNumber}},28668:(t,e,r)=>{var n=r(16383),i=r(90329),s=function(t){var e=typeof t;if("string"===e)return i.isHexStrict(t)?new n(t.replace(/0x/i,""),16):new n(t,10);if("number"===e)return new n(t);if(i.isBigNumber(t))return new n(t.toString(10));if(i.isBN(t))return t;throw new Error(t+" is not a number")},o=function(t,e,r){var o,a,u;if("bytes"===(t=(u=t).startsWith("int[")?"int256"+u.slice(3):"int"===u?"int256":u.startsWith("uint[")?"uint256"+u.slice(4):"uint"===u?"uint256":u.startsWith("fixed[")?"fixed128x128"+u.slice(5):"fixed"===u?"fixed128x128":u.startsWith("ufixed[")?"ufixed128x128"+u.slice(6):"ufixed"===u?"ufixed128x128":u)){if(e.replace(/^0x/i,"").length%2!=0)throw new Error("Invalid bytes characters "+e.length);return e}if("string"===t)return i.utf8ToHex(e);if("bool"===t)return e?"01":"00";if(t.startsWith("address")){if(o=r?64:40,!i.isAddress(e))throw new Error(e+" is not a valid address, or the checksum is invalid.");return i.leftPad(e.toLowerCase(),o)}if(o=function(t){var e=/^\D+(\d+).*$/.exec(t);return e?parseInt(e[1],10):null}(t),t.startsWith("bytes")){if(!o)throw new Error("bytes[] not yet supported in solidity");if(r&&(o=32),o<1||o>32||o<e.replace(/^0x/i,"").length/2)throw new Error("Invalid bytes"+o+" for "+e);return i.rightPad(e,2*o)}if(t.startsWith("uint")){if(o%8||o<8||o>256)throw new Error("Invalid uint"+o+" size");if((a=s(e)).bitLength()>o)throw new Error("Supplied uint exceeds width: "+o+" vs "+a.bitLength());if(a.lt(new n(0)))throw new Error("Supplied uint "+a.toString()+" is negative");return o?i.leftPad(a.toString("hex"),o/8*2):a}if(t.startsWith("int")){if(o%8||o<8||o>256)throw new Error("Invalid int"+o+" size");if((a=s(e)).bitLength()>o)throw new Error("Supplied int exceeds width: "+o+" vs "+a.bitLength());return a.lt(new n(0))?a.toTwos(o).toString("hex"):o?i.leftPad(a.toString("hex"),o/8*2):a}throw new Error("Unsupported or invalid type: "+t)},a=function(t){if(Array.isArray(t))throw new Error("Autodetection of array types is not supported.");var e,r,s="";if(t&&"object"==typeof t&&(t.hasOwnProperty("v")||t.hasOwnProperty("t")||t.hasOwnProperty("value")||t.hasOwnProperty("type"))?(e=t.hasOwnProperty("t")?t.t:t.type,s=t.hasOwnProperty("v")?t.v:t.value):(e=i.toHex(t,!0),s=i.toHex(t),e.startsWith("int")||e.startsWith("uint")||(e="bytes")),!e.startsWith("int")&&!e.startsWith("uint")||"string"!=typeof s||/^(-)?0x/i.test(s)||(s=new n(s)),Array.isArray(s)){if(r=function(t){var e=/^\D+\d*\[(\d+)\]$/.exec(t);return e?parseInt(e[1],10):null}(e),r&&s.length!==r)throw new Error(e+" is not matching the given array "+JSON.stringify(s));r=s.length}return Array.isArray(s)?s.map((function(t){return o(e,t,r).toString("hex").replace("0x","")})).join(""):o(e,s,r).toString("hex").replace("0x","")};t.exports={soliditySha3:function(){var t=Array.prototype.slice.call(arguments),e=t.map(a);return i.sha3("0x"+e.join(""))},soliditySha3Raw:function(){return i.sha3Raw("0x"+Array.prototype.slice.call(arguments).map(a).join(""))},encodePacked:function(){var t=Array.prototype.slice.call(arguments),e=t.map(a);return"0x"+e.join("").toLowerCase()}}},90329:(t,e,r)=>{var n=r(23085).Buffer,i=r(16383),s=r(83206),o=r(57458),a=r(22751),u=r(46877),h=function(t){return i.isBN(t)},c=function(t){return t&&t.constructor&&"BigNumber"===t.constructor.name},l=function(t){try{return s.apply(null,arguments)}catch(e){throw new Error(e+' Given value: "'+t+'"')}},d=function(t){return!!/^(0x)?[0-9a-f]{40}$/i.test(t)&&(!(!/^(0x|0X)?[0-9a-f]{40}$/.test(t)&&!/^(0x|0X)?[0-9A-F]{40}$/.test(t))||f(t))},f=function(t){t=t.replace(/^0x/i,"");for(var e=M(t.toLowerCase()).replace(/^0x/i,""),r=0;r<40;r++)if(parseInt(e[r],16)>7&&t[r].toUpperCase()!==t[r]||parseInt(e[r],16)<=7&&t[r].toLowerCase()!==t[r])return!1;return!0},p=function(t){var e="";t=(t=(t=(t=(t=o.encode(t)).replace(/^(?:\u0000)*/,"")).split("").reverse().join("")).replace(/^(?:\u0000)*/,"")).split("").reverse().join("");for(var r=0;r<t.length;r++){var n=t.charCodeAt(r).toString(16);e+=n.length<2?"0"+n:n}return"0x"+e},m=function(t){if(!t)return t;if("string"==typeof t&&!g(t))throw new Error('Given value "'+t+'" is not a valid hex string.');return l(t).toNumber()},y=function(t){if(null==t)return t;if(!isFinite(t)&&!g(t))throw new Error('Given input "'+t+'" is not a number.');var e=l(t),r=e.toString(16);return e.lt(new i(0))?"-0x"+r.substr(1):"0x"+r},v=function(t,e){if(d(t))return e?"address":"0x"+t.toLowerCase().replace(/^0x/i,"");if("boolean"==typeof t)return e?"bool":t?"0x01":"0x00";if(n.isBuffer(t))return"0x"+t.toString("hex");if("object"==typeof t&&t&&!c(t)&&!h(t))return e?"string":p(JSON.stringify(t));if("string"==typeof t){if(0===t.indexOf("-0x")||0===t.indexOf("-0X"))return e?"int256":y(t);if(0===t.indexOf("0x")||0===t.indexOf("0X"))return e?"bytes":t;if(!isFinite(t))return e?"string":p(t)}return e?t<0?"int256":"uint256":y(t)},g=function(t){return("string"==typeof t||"number"==typeof t)&&/^(-)?0x[0-9a-f]*$/i.test(t)},b=function(t){return("string"==typeof t||"number"==typeof t)&&/^(-0x|0x)?[0-9a-f]*$/i.test(t)},w="0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",M=function(t){h(t)&&(t=t.toString()),g(t)&&/^0x/i.test(t.toString())?t=a.toBuffer(t):"string"==typeof t&&(t=n.from(t,"utf-8"));var e=a.bufferToHex(a.keccak256(t));return e===w?null:e};M._Hash=a.keccak256;t.exports={BN:i,isBN:h,isBigNumber:c,toBN:l,isAddress:d,isBloom:function(t){return u.isBloom(t)},isUserEthereumAddressInBloom:function(t,e){return u.isUserEthereumAddressInBloom(t,e)},isContractAddressInBloom:function(t,e){return u.isContractAddressInBloom(t,e)},isTopic:function(t){return u.isTopic(t)},isTopicInBloom:function(t,e){return u.isTopicInBloom(t,e)},isInBloom:function(t,e){return u.isInBloom(t,e)},checkAddressChecksum:f,utf8ToHex:p,hexToUtf8:function(t){if(!g(t))throw new Error('The parameter "'+t+'" must be a valid HEX string.');for(var e="",r=0,n=(t=(t=(t=(t=(t=t.replace(/^0x/i,"")).replace(/^(?:00)*/,"")).split("").reverse().join("")).replace(/^(?:00)*/,"")).split("").reverse().join("")).length,i=0;i<n;i+=2)r=parseInt(t.substr(i,2),16),e+=String.fromCharCode(r);return o.decode(e)},hexToNumber:m,hexToNumberString:function(t){if(!t)return t;if("string"==typeof t&&!g(t))throw new Error('Given value "'+t+'" is not a valid hex string.');return l(t).toString(10)},numberToHex:y,toHex:v,hexToBytes:function(t){if(t=t.toString(16),!g(t))throw new Error('Given value "'+t+'" is not a valid hex string.');t=t.replace(/^0x/i,"");for(var e=[],r=0;r<t.length;r+=2)e.push(parseInt(t.substr(r,2),16));return e},bytesToHex:function(t){for(var e=[],r=0;r<t.length;r++)e.push((t[r]>>>4).toString(16)),e.push((15&t[r]).toString(16));return"0x"+e.join("")},isHex:b,isHexStrict:g,stripHexPrefix:function(t){return 0!==t&&b(t)?t.replace(/^(-)?0x/i,"$1"):t},leftPad:function(t,e,r){var n=/^0x/i.test(t)||"number"==typeof t,i=e-(t=t.toString(16).replace(/^0x/i,"")).length+1>=0?e-t.length+1:0;return(n?"0x":"")+new Array(i).join(r||"0")+t},rightPad:function(t,e,r){var n=/^0x/i.test(t)||"number"==typeof t,i=e-(t=t.toString(16).replace(/^0x/i,"")).length+1>=0?e-t.length+1:0;return(n?"0x":"")+t+new Array(i).join(r||"0")},toTwosComplement:function(t){return"0x"+l(t).toTwos(256).toString(16,64)},sha3:M,sha3Raw:function(t){return null===(t=M(t))?w:t},toNumber:function(t){return"number"==typeof t?t:m(v(t))}}},16383:function(t,e,r){!function(t,e){"use strict";function n(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(87500).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(t,e,r){var n=a(t,r);return r-1>=e&&(n|=a(t,r-1)<<4),n}function h(t,e,r,n){for(var i=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<t.length&&(16===e?this._parseHex(t,i,r):(this._parseBase(t,e,i),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var s,o,a=0;if("be"===r)for(i=t.length-1,s=0;i>=0;i-=3)o=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(i=0,s=0;i<t.length;i+=3)o=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,s=0,o=0;if("be"===r)for(n=t.length-1;n>=e;n-=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;else for(n=(t.length-e)%2==0?e+1:e;n<t.length;n+=2)i=u(t,e,n)<<s,this.words[o]|=67108863&i,s>=18?(s-=18,o+=1,this.words[o]|=i>>>26):s+=8;this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var s=t.length-r,o=s%n,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=n)u=h(t,c,c+n,e),this.imuln(i),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],s=0|e.words[0],o=i*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(i=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var i=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<i|s)).toString(16);r=0!==(s=a>>>24-i&16777215)||o!==this.length-1?c[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],f=d[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?m+r:c[h-m.length]+m+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return n(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var i=this.byteLength(),s=r||Math.max(1,i);n(i<=s,"byte array longer than desired length"),n(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-i;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){n("number"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},s.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,s=0;s<n.length;s++)e=(0|r.words[s])+(0|n.words[s])+i,this.words[s]=67108863&e,i=e>>>26;for(;0!==i&&s<r.length;s++)e=(0|r.words[s])+i,this.words[s]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var s=0,o=0;o<n.length;o++)s=(e=(0|r.words[o])-(0|n.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,r){var n,i,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,m=f>>>13,y=0|o[2],v=8191&y,g=y>>>13,b=0|o[3],w=8191&b,M=b>>>13,k=0|o[4],x=8191&k,P=k>>>13,L=0|o[5],T=8191&L,S=L>>>13,A=0|o[6],D=8191&A,j=A>>>13,H=0|o[7],O=8191&H,z=H>>>13,N=0|o[8],E=8191&N,Y=N>>>13,R=0|o[9],I=8191&R,B=R>>>13,X=0|a[0],V=8191&X,C=X>>>13,W=0|a[1],q=8191&W,Z=W>>>13,F=0|a[2],U=8191&F,G=F>>>13,_=0|a[3],K=8191&_,J=_>>>13,Q=0|a[4],$=8191&Q,tt=Q>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],st=8191&it,ot=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,mt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var yt=(h+(n=Math.imul(l,V))|0)+((8191&(i=(i=Math.imul(l,C))+Math.imul(d,V)|0))<<13)|0;h=((s=Math.imul(d,C))+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(p,V),i=(i=Math.imul(p,C))+Math.imul(m,V)|0,s=Math.imul(m,C);var vt=(h+(n=n+Math.imul(l,q)|0)|0)+((8191&(i=(i=i+Math.imul(l,Z)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,Z)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(v,V),i=(i=Math.imul(v,C))+Math.imul(g,V)|0,s=Math.imul(g,C),n=n+Math.imul(p,q)|0,i=(i=i+Math.imul(p,Z)|0)+Math.imul(m,q)|0,s=s+Math.imul(m,Z)|0;var gt=(h+(n=n+Math.imul(l,U)|0)|0)+((8191&(i=(i=i+Math.imul(l,G)|0)+Math.imul(d,U)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(w,V),i=(i=Math.imul(w,C))+Math.imul(M,V)|0,s=Math.imul(M,C),n=n+Math.imul(v,q)|0,i=(i=i+Math.imul(v,Z)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,Z)|0,n=n+Math.imul(p,U)|0,i=(i=i+Math.imul(p,G)|0)+Math.imul(m,U)|0,s=s+Math.imul(m,G)|0;var bt=(h+(n=n+Math.imul(l,K)|0)|0)+((8191&(i=(i=i+Math.imul(l,J)|0)+Math.imul(d,K)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(x,V),i=(i=Math.imul(x,C))+Math.imul(P,V)|0,s=Math.imul(P,C),n=n+Math.imul(w,q)|0,i=(i=i+Math.imul(w,Z)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,Z)|0,n=n+Math.imul(v,U)|0,i=(i=i+Math.imul(v,G)|0)+Math.imul(g,U)|0,s=s+Math.imul(g,G)|0,n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,J)|0)+Math.imul(m,K)|0,s=s+Math.imul(m,J)|0;var wt=(h+(n=n+Math.imul(l,$)|0)|0)+((8191&(i=(i=i+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(T,V),i=(i=Math.imul(T,C))+Math.imul(S,V)|0,s=Math.imul(S,C),n=n+Math.imul(x,q)|0,i=(i=i+Math.imul(x,Z)|0)+Math.imul(P,q)|0,s=s+Math.imul(P,Z)|0,n=n+Math.imul(w,U)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(M,U)|0,s=s+Math.imul(M,G)|0,n=n+Math.imul(v,K)|0,i=(i=i+Math.imul(v,J)|0)+Math.imul(g,K)|0,s=s+Math.imul(g,J)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,s=s+Math.imul(m,tt)|0;var Mt=(h+(n=n+Math.imul(l,rt)|0)|0)+((8191&(i=(i=i+Math.imul(l,nt)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,nt)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,C))+Math.imul(j,V)|0,s=Math.imul(j,C),n=n+Math.imul(T,q)|0,i=(i=i+Math.imul(T,Z)|0)+Math.imul(S,q)|0,s=s+Math.imul(S,Z)|0,n=n+Math.imul(x,U)|0,i=(i=i+Math.imul(x,G)|0)+Math.imul(P,U)|0,s=s+Math.imul(P,G)|0,n=n+Math.imul(w,K)|0,i=(i=i+Math.imul(w,J)|0)+Math.imul(M,K)|0,s=s+Math.imul(M,J)|0,n=n+Math.imul(v,$)|0,i=(i=i+Math.imul(v,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,s=s+Math.imul(m,nt)|0;var kt=(h+(n=n+Math.imul(l,st)|0)|0)+((8191&(i=(i=i+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(O,V),i=(i=Math.imul(O,C))+Math.imul(z,V)|0,s=Math.imul(z,C),n=n+Math.imul(D,q)|0,i=(i=i+Math.imul(D,Z)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,Z)|0,n=n+Math.imul(T,U)|0,i=(i=i+Math.imul(T,G)|0)+Math.imul(S,U)|0,s=s+Math.imul(S,G)|0,n=n+Math.imul(x,K)|0,i=(i=i+Math.imul(x,J)|0)+Math.imul(P,K)|0,s=s+Math.imul(P,J)|0,n=n+Math.imul(w,$)|0,i=(i=i+Math.imul(w,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,n=n+Math.imul(v,rt)|0,i=(i=i+Math.imul(v,nt)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,nt)|0,n=n+Math.imul(p,st)|0,i=(i=i+Math.imul(p,ot)|0)+Math.imul(m,st)|0,s=s+Math.imul(m,ot)|0;var xt=(h+(n=n+Math.imul(l,ut)|0)|0)+((8191&(i=(i=i+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(E,V),i=(i=Math.imul(E,C))+Math.imul(Y,V)|0,s=Math.imul(Y,C),n=n+Math.imul(O,q)|0,i=(i=i+Math.imul(O,Z)|0)+Math.imul(z,q)|0,s=s+Math.imul(z,Z)|0,n=n+Math.imul(D,U)|0,i=(i=i+Math.imul(D,G)|0)+Math.imul(j,U)|0,s=s+Math.imul(j,G)|0,n=n+Math.imul(T,K)|0,i=(i=i+Math.imul(T,J)|0)+Math.imul(S,K)|0,s=s+Math.imul(S,J)|0,n=n+Math.imul(x,$)|0,i=(i=i+Math.imul(x,tt)|0)+Math.imul(P,$)|0,s=s+Math.imul(P,tt)|0,n=n+Math.imul(w,rt)|0,i=(i=i+Math.imul(w,nt)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,nt)|0,n=n+Math.imul(v,st)|0,i=(i=i+Math.imul(v,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,s=s+Math.imul(m,ht)|0;var Pt=(h+(n=n+Math.imul(l,lt)|0)|0)+((8191&(i=(i=i+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(i>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,n=Math.imul(I,V),i=(i=Math.imul(I,C))+Math.imul(B,V)|0,s=Math.imul(B,C),n=n+Math.imul(E,q)|0,i=(i=i+Math.imul(E,Z)|0)+Math.imul(Y,q)|0,s=s+Math.imul(Y,Z)|0,n=n+Math.imul(O,U)|0,i=(i=i+Math.imul(O,G)|0)+Math.imul(z,U)|0,s=s+Math.imul(z,G)|0,n=n+Math.imul(D,K)|0,i=(i=i+Math.imul(D,J)|0)+Math.imul(j,K)|0,s=s+Math.imul(j,J)|0,n=n+Math.imul(T,$)|0,i=(i=i+Math.imul(T,tt)|0)+Math.imul(S,$)|0,s=s+Math.imul(S,tt)|0,n=n+Math.imul(x,rt)|0,i=(i=i+Math.imul(x,nt)|0)+Math.imul(P,rt)|0,s=s+Math.imul(P,nt)|0,n=n+Math.imul(w,st)|0,i=(i=i+Math.imul(w,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,n=n+Math.imul(v,ut)|0,i=(i=i+Math.imul(v,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0,n=n+Math.imul(p,lt)|0,i=(i=i+Math.imul(p,dt)|0)+Math.imul(m,lt)|0,s=s+Math.imul(m,dt)|0;var Lt=(h+(n=n+Math.imul(l,pt)|0)|0)+((8191&(i=(i=i+Math.imul(l,mt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,mt)|0)+(i>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,n=Math.imul(I,q),i=(i=Math.imul(I,Z))+Math.imul(B,q)|0,s=Math.imul(B,Z),n=n+Math.imul(E,U)|0,i=(i=i+Math.imul(E,G)|0)+Math.imul(Y,U)|0,s=s+Math.imul(Y,G)|0,n=n+Math.imul(O,K)|0,i=(i=i+Math.imul(O,J)|0)+Math.imul(z,K)|0,s=s+Math.imul(z,J)|0,n=n+Math.imul(D,$)|0,i=(i=i+Math.imul(D,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,n=n+Math.imul(T,rt)|0,i=(i=i+Math.imul(T,nt)|0)+Math.imul(S,rt)|0,s=s+Math.imul(S,nt)|0,n=n+Math.imul(x,st)|0,i=(i=i+Math.imul(x,ot)|0)+Math.imul(P,st)|0,s=s+Math.imul(P,ot)|0,n=n+Math.imul(w,ut)|0,i=(i=i+Math.imul(w,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,n=n+Math.imul(v,lt)|0,i=(i=i+Math.imul(v,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var Tt=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((s=s+Math.imul(m,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,n=Math.imul(I,U),i=(i=Math.imul(I,G))+Math.imul(B,U)|0,s=Math.imul(B,G),n=n+Math.imul(E,K)|0,i=(i=i+Math.imul(E,J)|0)+Math.imul(Y,K)|0,s=s+Math.imul(Y,J)|0,n=n+Math.imul(O,$)|0,i=(i=i+Math.imul(O,tt)|0)+Math.imul(z,$)|0,s=s+Math.imul(z,tt)|0,n=n+Math.imul(D,rt)|0,i=(i=i+Math.imul(D,nt)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,nt)|0,n=n+Math.imul(T,st)|0,i=(i=i+Math.imul(T,ot)|0)+Math.imul(S,st)|0,s=s+Math.imul(S,ot)|0,n=n+Math.imul(x,ut)|0,i=(i=i+Math.imul(x,ht)|0)+Math.imul(P,ut)|0,s=s+Math.imul(P,ht)|0,n=n+Math.imul(w,lt)|0,i=(i=i+Math.imul(w,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var St=(h+(n=n+Math.imul(v,pt)|0)|0)+((8191&(i=(i=i+Math.imul(v,mt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(I,K),i=(i=Math.imul(I,J))+Math.imul(B,K)|0,s=Math.imul(B,J),n=n+Math.imul(E,$)|0,i=(i=i+Math.imul(E,tt)|0)+Math.imul(Y,$)|0,s=s+Math.imul(Y,tt)|0,n=n+Math.imul(O,rt)|0,i=(i=i+Math.imul(O,nt)|0)+Math.imul(z,rt)|0,s=s+Math.imul(z,nt)|0,n=n+Math.imul(D,st)|0,i=(i=i+Math.imul(D,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,n=n+Math.imul(T,ut)|0,i=(i=i+Math.imul(T,ht)|0)+Math.imul(S,ut)|0,s=s+Math.imul(S,ht)|0,n=n+Math.imul(x,lt)|0,i=(i=i+Math.imul(x,dt)|0)+Math.imul(P,lt)|0,s=s+Math.imul(P,dt)|0;var At=(h+(n=n+Math.imul(w,pt)|0)|0)+((8191&(i=(i=i+Math.imul(w,mt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,mt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(I,$),i=(i=Math.imul(I,tt))+Math.imul(B,$)|0,s=Math.imul(B,tt),n=n+Math.imul(E,rt)|0,i=(i=i+Math.imul(E,nt)|0)+Math.imul(Y,rt)|0,s=s+Math.imul(Y,nt)|0,n=n+Math.imul(O,st)|0,i=(i=i+Math.imul(O,ot)|0)+Math.imul(z,st)|0,s=s+Math.imul(z,ot)|0,n=n+Math.imul(D,ut)|0,i=(i=i+Math.imul(D,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,n=n+Math.imul(T,lt)|0,i=(i=i+Math.imul(T,dt)|0)+Math.imul(S,lt)|0,s=s+Math.imul(S,dt)|0;var Dt=(h+(n=n+Math.imul(x,pt)|0)|0)+((8191&(i=(i=i+Math.imul(x,mt)|0)+Math.imul(P,pt)|0))<<13)|0;h=((s=s+Math.imul(P,mt)|0)+(i>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,n=Math.imul(I,rt),i=(i=Math.imul(I,nt))+Math.imul(B,rt)|0,s=Math.imul(B,nt),n=n+Math.imul(E,st)|0,i=(i=i+Math.imul(E,ot)|0)+Math.imul(Y,st)|0,s=s+Math.imul(Y,ot)|0,n=n+Math.imul(O,ut)|0,i=(i=i+Math.imul(O,ht)|0)+Math.imul(z,ut)|0,s=s+Math.imul(z,ht)|0,n=n+Math.imul(D,lt)|0,i=(i=i+Math.imul(D,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var jt=(h+(n=n+Math.imul(T,pt)|0)|0)+((8191&(i=(i=i+Math.imul(T,mt)|0)+Math.imul(S,pt)|0))<<13)|0;h=((s=s+Math.imul(S,mt)|0)+(i>>>13)|0)+(jt>>>26)|0,jt&=67108863,n=Math.imul(I,st),i=(i=Math.imul(I,ot))+Math.imul(B,st)|0,s=Math.imul(B,ot),n=n+Math.imul(E,ut)|0,i=(i=i+Math.imul(E,ht)|0)+Math.imul(Y,ut)|0,s=s+Math.imul(Y,ht)|0,n=n+Math.imul(O,lt)|0,i=(i=i+Math.imul(O,dt)|0)+Math.imul(z,lt)|0,s=s+Math.imul(z,dt)|0;var Ht=(h+(n=n+Math.imul(D,pt)|0)|0)+((8191&(i=(i=i+Math.imul(D,mt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,mt)|0)+(i>>>13)|0)+(Ht>>>26)|0,Ht&=67108863,n=Math.imul(I,ut),i=(i=Math.imul(I,ht))+Math.imul(B,ut)|0,s=Math.imul(B,ht),n=n+Math.imul(E,lt)|0,i=(i=i+Math.imul(E,dt)|0)+Math.imul(Y,lt)|0,s=s+Math.imul(Y,dt)|0;var Ot=(h+(n=n+Math.imul(O,pt)|0)|0)+((8191&(i=(i=i+Math.imul(O,mt)|0)+Math.imul(z,pt)|0))<<13)|0;h=((s=s+Math.imul(z,mt)|0)+(i>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,n=Math.imul(I,lt),i=(i=Math.imul(I,dt))+Math.imul(B,lt)|0,s=Math.imul(B,dt);var zt=(h+(n=n+Math.imul(E,pt)|0)|0)+((8191&(i=(i=i+Math.imul(E,mt)|0)+Math.imul(Y,pt)|0))<<13)|0;h=((s=s+Math.imul(Y,mt)|0)+(i>>>13)|0)+(zt>>>26)|0,zt&=67108863;var Nt=(h+(n=Math.imul(I,pt))|0)+((8191&(i=(i=Math.imul(I,mt))+Math.imul(B,pt)|0))<<13)|0;return h=((s=Math.imul(B,mt))+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,u[0]=yt,u[1]=vt,u[2]=gt,u[3]=bt,u[4]=wt,u[5]=Mt,u[6]=kt,u[7]=xt,u[8]=Pt,u[9]=Lt,u[10]=Tt,u[11]=St,u[12]=At,u[13]=Dt,u[14]=jt,u[15]=Ht,u[16]=Ot,u[17]=zt,u[18]=Nt,0!==h&&(u[19]=h,r.length++),r};function m(t,e,r){return(new y).mulp(t,e,r)}function y(t,e){this.x=t,this.y=e}Math.imul||(p=f),s.prototype.mulTo=function(t,e){var r,n=this.length+t.length;return r=10===this.length&&10===t.length?p(this,t,e):n<63?f(this,t,e):n<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,s=0;s<r.length-1;s++){var o=i;i=0;for(var a=67108863&n,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),i+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,n=o,o=i}return 0!==n?r.words[s]=n:r.length--,r.strip()}(this,t,e):m(this,t,e),r},y.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},y.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},y.prototype.permute=function(t,e,r,n,i,s){for(var o=0;o<s;o++)n[o]=e[t[o]],i[o]=r[t[o]]},y.prototype.transform=function(t,e,r,n,i,s){this.permute(s,t,e,r,n,i);for(var o=1;o<i;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<i;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],m=n[c+f],y=r[c+f+o],v=n[c+f+o],g=l*y-d*v;v=l*v+d*y,y=g,r[c+f]=p+y,n[c+f]=m+v,r[c+f+o]=p-y,n[c+f+o]=m-v,f!==a&&(g=u*l-h*d,d=u*d+h*l,l=g)}},y.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},y.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},y.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},y.prototype.convert13b=function(t,e,r,i){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<i;++o)r[o]=0;n(0===s),n(0==(-8192&s))},y.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},y.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),s=this.stub(n),o=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),c=new Array(n),l=new Array(n),d=r.words;d.length=n,this.convert13b(t.words,t.length,o,n),this.convert13b(e.words,e.length,h,n),this.transform(o,s,a,u,n,i),this.transform(h,s,c,l,n,i);for(var f=0;f<n;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,n),this.transform(a,u,d,s,n,i),this.conjugate(d,s,n),this.normalize13b(d,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),m(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var e=0,r=0;r<this.length;r++){var i=(0|this.words[r])*t,s=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=(t.words[n]&1<<i)>>>i}return e}(t);if(0===e.length)return new s(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},s.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},s.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var i;n("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(i-=o,i=Math.max(0,i),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=i);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r)&&!!(this.words[r]&i)},s.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var i,s,o=t.length+r;this._expand(o);var a=0;for(i=0;i<t.length;i++){s=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&s}for(;i<this.length-r;i++)a=(s=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&s;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(s=-(0|this.words[i])+a)>>26,this.words[i]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,o=0|i.words[i.length-1];0!==(r=26-this._countBits(o))&&(i=i.ushln(r),n.iushln(r),o=0|i.words[i.length-1]);var a,u=n.length-i.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=n.clone()._ishlnsubmul(i,1,u);0===c.negative&&(n=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|n.words[i.length+l])+(0|n.words[i.length+l-1]);for(d=Math.min(d/o|0,67108863),n._ishlnsubmul(i,d,l);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(i,1,l),n.isZero()||(n.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),n.strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},s.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(i=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:i,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var i,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),s=r.cmp(n);return s<0||1===i&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){n(t<=67108863);for(var e=(1<<26)%t,r=0,i=this.length-1;i>=0;i--)r=(e*r+(0|this.words[i]))%t;return r},s.prototype.idivn=function(t){n(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*e;this.words[r]=i/t|0,e=i%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(c),o.isub(l)),i.iushrn(1),o.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),o.isub(u)):(r.isub(e),a.isub(i),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(i=0===e.cmpn(1)?o:a).cmpn(0)<0&&i.iadd(t),i},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var s=e;e=r,r=s}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){n("number"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var s=i,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new x(t)},s.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function g(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){g.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){g.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function M(){g.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function k(){g.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function x(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function P(t){x.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}g.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},g.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},g.prototype.split=function(t,e){t.iushrn(this.n,0,e)},g.prototype.imulK=function(t){return t.imul(this.k)},i(b,g),b.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,i=10;i<t.length;i++){var o=0|t.words[i];t.words[i-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[i-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(w,g),i(M,g),i(k,g),k.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(v[t])return v[t];var e;if("k256"===t)e=new b;else if("p224"===t)e=new w;else if("p192"===t)e=new M;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new k}return v[t]=e,e},x.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},x.prototype._verify2=function(t,e){n(0==(t.negative|e.negative),"red works only with positives"),n(t.red&&t.red===e.red,"red works only with red numbers")},x.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},x.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},x.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},x.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},x.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},x.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},x.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},x.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},x.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},x.prototype.isqr=function(t){return this.imul(t,t.clone())},x.prototype.sqr=function(t){return this.mul(t,t)},x.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),o=0;!i.isZero()&&0===i.andln(1);)o++,i.iushrn(1);n(!i.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,i),d=this.pow(t,i.addn(1).iushrn(1)),f=this.pow(t,i),p=o;0!==f.cmp(a);){for(var m=f,y=0;0!==m.cmp(a);y++)m=m.redSqr();n(y<p);var v=this.pow(l,new s(1).iushln(p-y-1));d=d.redMul(v),l=v.redSqr(),f=f.redMul(l),p=y}return d},x.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},x.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],c=u-1;c>=0;c--){var l=h>>c&1;i!==r[0]&&(i=this.sqr(i)),0!==l||0!==o?(o<<=1,o|=l,(4===++a||0===n&&0===c)&&(i=this.mul(i,r[o]),a=0,o=0)):a=0}u=26}return i},x.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},x.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new P(t)},i(P,x),P.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},P.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},P.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},P.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},P.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},86430:(t,e,r)=>{"use strict";var n=r(49804),i=r(63083),s=r(21924),o=s("Object.prototype.toString"),a=r(96410)(),u="undefined"==typeof globalThis?r.g:globalThis,h=i(),c=s("String.prototype.slice"),l={},d=r(20882),f=Object.getPrototypeOf;a&&d&&f&&n(h,(function(t){if("function"==typeof u[t]){var e=new u[t];if(Symbol.toStringTag in e){var r=f(e),n=d(r,Symbol.toStringTag);if(!n){var i=f(r);n=d(i,Symbol.toStringTag)}l[t]=n.get}}}));var p=r(85692);t.exports=function(t){return!!p(t)&&(a&&Symbol.toStringTag in t?function(t){var e=!1;return n(l,(function(r,n){if(!e)try{var i=r.call(t);i===n&&(e=i)}catch(t){}})),e}(t):c(o(t),8,-1))}},45361:(t,e,r)=>{t.exports={h32:r(88963),h64:r(29214)}},88963:(t,e,r)=>{var n=r(23085).Buffer,i=r(21986).UINT32;i.prototype.xxh_update=function(t,e){var r,n,i=o._low,a=o._high;r=(n=t*i)>>>16,r+=e*i,r&=65535,r+=t*a;var u=this._low+(65535&n),h=u>>>16,c=(h+=this._high+(65535&r))<<16|65535&u;h=(c=c<<13|c>>>19)>>>16,r=(n=(u=65535&c)*(i=s._low))>>>16,r+=h*i,r&=65535,r+=u*(a=s._high),this._low=65535&n,this._high=65535&r};var s=i("2654435761"),o=i("2246822519"),a=i("3266489917"),u=i("668265263"),h=i("374761393");function c(){return 2==arguments.length?new c(arguments[1]).update(arguments[0]).digest():this instanceof c?void l.call(this,arguments[0]):new c(arguments[0])}function l(t){return this.seed=t instanceof i?t.clone():i(t),this.v1=this.seed.clone().add(s).add(o),this.v2=this.seed.clone().add(o),this.v3=this.seed.clone(),this.v4=this.seed.clone().subtract(s),this.total_len=0,this.memsize=0,this.memory=null,this}c.prototype.init=l,c.prototype.update=function(t){var e,r="string"==typeof t;r&&(t=function(t){for(var e=[],r=0,n=t.length;r<n;r++){var i=t.charCodeAt(r);i<128?e.push(i):i<2048?e.push(192|i>>6,128|63&i):i<55296||i>=57344?e.push(224|i>>12,128|i>>6&63,128|63&i):(r++,i=65536+((1023&i)<<10|1023&t.charCodeAt(r)),e.push(240|i>>18,128|i>>12&63,128|i>>6&63,128|63&i))}return new Uint8Array(e)}(t),r=!1,e=!0),"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&(e=!0,t=new Uint8Array(t));var i=0,s=t.length,o=i+s;if(0==s)return this;if(this.total_len+=s,0==this.memsize&&(this.memory=r?"":e?new Uint8Array(16):new n(16)),this.memsize+s<16)return r?this.memory+=t:e?this.memory.set(t.subarray(0,s),this.memsize):t.copy(this.memory,this.memsize,0,s),this.memsize+=s,this;if(this.memsize>0){r?this.memory+=t.slice(0,16-this.memsize):e?this.memory.set(t.subarray(0,16-this.memsize),this.memsize):t.copy(this.memory,this.memsize,0,16-this.memsize);var a=0;r?(this.v1.xxh_update(this.memory.charCodeAt(a+1)<<8|this.memory.charCodeAt(a),this.memory.charCodeAt(a+3)<<8|this.memory.charCodeAt(a+2)),a+=4,this.v2.xxh_update(this.memory.charCodeAt(a+1)<<8|this.memory.charCodeAt(a),this.memory.charCodeAt(a+3)<<8|this.memory.charCodeAt(a+2)),a+=4,this.v3.xxh_update(this.memory.charCodeAt(a+1)<<8|this.memory.charCodeAt(a),this.memory.charCodeAt(a+3)<<8|this.memory.charCodeAt(a+2)),a+=4,this.v4.xxh_update(this.memory.charCodeAt(a+1)<<8|this.memory.charCodeAt(a),this.memory.charCodeAt(a+3)<<8|this.memory.charCodeAt(a+2))):(this.v1.xxh_update(this.memory[a+1]<<8|this.memory[a],this.memory[a+3]<<8|this.memory[a+2]),a+=4,this.v2.xxh_update(this.memory[a+1]<<8|this.memory[a],this.memory[a+3]<<8|this.memory[a+2]),a+=4,this.v3.xxh_update(this.memory[a+1]<<8|this.memory[a],this.memory[a+3]<<8|this.memory[a+2]),a+=4,this.v4.xxh_update(this.memory[a+1]<<8|this.memory[a],this.memory[a+3]<<8|this.memory[a+2])),i+=16-this.memsize,this.memsize=0,r&&(this.memory="")}if(i<=o-16){var u=o-16;do{r?(this.v1.xxh_update(t.charCodeAt(i+1)<<8|t.charCodeAt(i),t.charCodeAt(i+3)<<8|t.charCodeAt(i+2)),i+=4,this.v2.xxh_update(t.charCodeAt(i+1)<<8|t.charCodeAt(i),t.charCodeAt(i+3)<<8|t.charCodeAt(i+2)),i+=4,this.v3.xxh_update(t.charCodeAt(i+1)<<8|t.charCodeAt(i),t.charCodeAt(i+3)<<8|t.charCodeAt(i+2)),i+=4,this.v4.xxh_update(t.charCodeAt(i+1)<<8|t.charCodeAt(i),t.charCodeAt(i+3)<<8|t.charCodeAt(i+2))):(this.v1.xxh_update(t[i+1]<<8|t[i],t[i+3]<<8|t[i+2]),i+=4,this.v2.xxh_update(t[i+1]<<8|t[i],t[i+3]<<8|t[i+2]),i+=4,this.v3.xxh_update(t[i+1]<<8|t[i],t[i+3]<<8|t[i+2]),i+=4,this.v4.xxh_update(t[i+1]<<8|t[i],t[i+3]<<8|t[i+2])),i+=4}while(i<=u)}return i<o&&(r?this.memory+=t.slice(i):e?this.memory.set(t.subarray(i,o),this.memsize):t.copy(this.memory,this.memsize,i,o),this.memsize=o-i),this},c.prototype.digest=function(){var t,e,r=this.memory,n="string"==typeof r,c=0,l=this.memsize,d=new i;for((t=this.total_len>=16?this.v1.rotl(1).add(this.v2.rotl(7).add(this.v3.rotl(12).add(this.v4.rotl(18)))):this.seed.clone().add(h)).add(d.fromNumber(this.total_len));c<=l-4;)n?d.fromBits(r.charCodeAt(c+1)<<8|r.charCodeAt(c),r.charCodeAt(c+3)<<8|r.charCodeAt(c+2)):d.fromBits(r[c+1]<<8|r[c],r[c+3]<<8|r[c+2]),t.add(d.multiply(a)).rotl(17).multiply(u),c+=4;for(;c<l;)d.fromBits(n?r.charCodeAt(c++):r[c++],0),t.add(d.multiply(h)).rotl(11).multiply(s);return e=t.clone().shiftRight(15),t.xor(e).multiply(o),e=t.clone().shiftRight(13),t.xor(e).multiply(a),e=t.clone().shiftRight(16),t.xor(e),this.init(this.seed),t},t.exports=c},29214:(t,e,r)=>{var n=r(23085).Buffer,i=r(21986).UINT64,s=i("11400714785074694791"),o=i("14029467366897019727"),a=i("1609587929392839161"),u=i("9650029242287828579"),h=i("2870177450012600261");function c(){return 2==arguments.length?new c(arguments[1]).update(arguments[0]).digest():this instanceof c?void l.call(this,arguments[0]):new c(arguments[0])}function l(t){return this.seed=t instanceof i?t.clone():i(t),this.v1=this.seed.clone().add(s).add(o),this.v2=this.seed.clone().add(o),this.v3=this.seed.clone(),this.v4=this.seed.clone().subtract(s),this.total_len=0,this.memsize=0,this.memory=null,this}c.prototype.init=l,c.prototype.update=function(t){var e,r="string"==typeof t;r&&(t=function(t){for(var e=[],r=0,n=t.length;r<n;r++){var i=t.charCodeAt(r);i<128?e.push(i):i<2048?e.push(192|i>>6,128|63&i):i<55296||i>=57344?e.push(224|i>>12,128|i>>6&63,128|63&i):(r++,i=65536+((1023&i)<<10|1023&t.charCodeAt(r)),e.push(240|i>>18,128|i>>12&63,128|i>>6&63,128|63&i))}return new Uint8Array(e)}(t),r=!1,e=!0),"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&(e=!0,t=new Uint8Array(t));var a=0,u=t.length,h=a+u;if(0==u)return this;if(this.total_len+=u,0==this.memsize&&(this.memory=r?"":e?new Uint8Array(32):new n(32)),this.memsize+u<32)return r?this.memory+=t:e?this.memory.set(t.subarray(0,u),this.memsize):t.copy(this.memory,this.memsize,0,u),this.memsize+=u,this;if(this.memsize>0){r?this.memory+=t.slice(0,32-this.memsize):e?this.memory.set(t.subarray(0,32-this.memsize),this.memsize):t.copy(this.memory,this.memsize,0,32-this.memsize);var c=0;if(r)d=i(this.memory.charCodeAt(c+1)<<8|this.memory.charCodeAt(c),this.memory.charCodeAt(c+3)<<8|this.memory.charCodeAt(c+2),this.memory.charCodeAt(c+5)<<8|this.memory.charCodeAt(c+4),this.memory.charCodeAt(c+7)<<8|this.memory.charCodeAt(c+6)),this.v1.add(d.multiply(o)).rotl(31).multiply(s),c+=8,d=i(this.memory.charCodeAt(c+1)<<8|this.memory.charCodeAt(c),this.memory.charCodeAt(c+3)<<8|this.memory.charCodeAt(c+2),this.memory.charCodeAt(c+5)<<8|this.memory.charCodeAt(c+4),this.memory.charCodeAt(c+7)<<8|this.memory.charCodeAt(c+6)),this.v2.add(d.multiply(o)).rotl(31).multiply(s),c+=8,d=i(this.memory.charCodeAt(c+1)<<8|this.memory.charCodeAt(c),this.memory.charCodeAt(c+3)<<8|this.memory.charCodeAt(c+2),this.memory.charCodeAt(c+5)<<8|this.memory.charCodeAt(c+4),this.memory.charCodeAt(c+7)<<8|this.memory.charCodeAt(c+6)),this.v3.add(d.multiply(o)).rotl(31).multiply(s),c+=8,d=i(this.memory.charCodeAt(c+1)<<8|this.memory.charCodeAt(c),this.memory.charCodeAt(c+3)<<8|this.memory.charCodeAt(c+2),this.memory.charCodeAt(c+5)<<8|this.memory.charCodeAt(c+4),this.memory.charCodeAt(c+7)<<8|this.memory.charCodeAt(c+6)),this.v4.add(d.multiply(o)).rotl(31).multiply(s);else d=i(this.memory[c+1]<<8|this.memory[c],this.memory[c+3]<<8|this.memory[c+2],this.memory[c+5]<<8|this.memory[c+4],this.memory[c+7]<<8|this.memory[c+6]),this.v1.add(d.multiply(o)).rotl(31).multiply(s),c+=8,d=i(this.memory[c+1]<<8|this.memory[c],this.memory[c+3]<<8|this.memory[c+2],this.memory[c+5]<<8|this.memory[c+4],this.memory[c+7]<<8|this.memory[c+6]),this.v2.add(d.multiply(o)).rotl(31).multiply(s),c+=8,d=i(this.memory[c+1]<<8|this.memory[c],this.memory[c+3]<<8|this.memory[c+2],this.memory[c+5]<<8|this.memory[c+4],this.memory[c+7]<<8|this.memory[c+6]),this.v3.add(d.multiply(o)).rotl(31).multiply(s),c+=8,d=i(this.memory[c+1]<<8|this.memory[c],this.memory[c+3]<<8|this.memory[c+2],this.memory[c+5]<<8|this.memory[c+4],this.memory[c+7]<<8|this.memory[c+6]),this.v4.add(d.multiply(o)).rotl(31).multiply(s);a+=32-this.memsize,this.memsize=0,r&&(this.memory="")}if(a<=h-32){var l=h-32;do{var d;if(r)d=i(t.charCodeAt(a+1)<<8|t.charCodeAt(a),t.charCodeAt(a+3)<<8|t.charCodeAt(a+2),t.charCodeAt(a+5)<<8|t.charCodeAt(a+4),t.charCodeAt(a+7)<<8|t.charCodeAt(a+6)),this.v1.add(d.multiply(o)).rotl(31).multiply(s),a+=8,d=i(t.charCodeAt(a+1)<<8|t.charCodeAt(a),t.charCodeAt(a+3)<<8|t.charCodeAt(a+2),t.charCodeAt(a+5)<<8|t.charCodeAt(a+4),t.charCodeAt(a+7)<<8|t.charCodeAt(a+6)),this.v2.add(d.multiply(o)).rotl(31).multiply(s),a+=8,d=i(t.charCodeAt(a+1)<<8|t.charCodeAt(a),t.charCodeAt(a+3)<<8|t.charCodeAt(a+2),t.charCodeAt(a+5)<<8|t.charCodeAt(a+4),t.charCodeAt(a+7)<<8|t.charCodeAt(a+6)),this.v3.add(d.multiply(o)).rotl(31).multiply(s),a+=8,d=i(t.charCodeAt(a+1)<<8|t.charCodeAt(a),t.charCodeAt(a+3)<<8|t.charCodeAt(a+2),t.charCodeAt(a+5)<<8|t.charCodeAt(a+4),t.charCodeAt(a+7)<<8|t.charCodeAt(a+6)),this.v4.add(d.multiply(o)).rotl(31).multiply(s);else d=i(t[a+1]<<8|t[a],t[a+3]<<8|t[a+2],t[a+5]<<8|t[a+4],t[a+7]<<8|t[a+6]),this.v1.add(d.multiply(o)).rotl(31).multiply(s),d=i(t[(a+=8)+1]<<8|t[a],t[a+3]<<8|t[a+2],t[a+5]<<8|t[a+4],t[a+7]<<8|t[a+6]),this.v2.add(d.multiply(o)).rotl(31).multiply(s),d=i(t[(a+=8)+1]<<8|t[a],t[a+3]<<8|t[a+2],t[a+5]<<8|t[a+4],t[a+7]<<8|t[a+6]),this.v3.add(d.multiply(o)).rotl(31).multiply(s),d=i(t[(a+=8)+1]<<8|t[a],t[a+3]<<8|t[a+2],t[a+5]<<8|t[a+4],t[a+7]<<8|t[a+6]),this.v4.add(d.multiply(o)).rotl(31).multiply(s);a+=8}while(a<=l)}return a<h&&(r?this.memory+=t.slice(a):e?this.memory.set(t.subarray(a,h),this.memsize):t.copy(this.memory,this.memsize,a,h),this.memsize=h-a),this},c.prototype.digest=function(){var t,e,r=this.memory,n="string"==typeof r,c=0,l=this.memsize,d=new i;for(this.total_len>=32?((t=this.v1.clone().rotl(1)).add(this.v2.clone().rotl(7)),t.add(this.v3.clone().rotl(12)),t.add(this.v4.clone().rotl(18)),t.xor(this.v1.multiply(o).rotl(31).multiply(s)),t.multiply(s).add(u),t.xor(this.v2.multiply(o).rotl(31).multiply(s)),t.multiply(s).add(u),t.xor(this.v3.multiply(o).rotl(31).multiply(s)),t.multiply(s).add(u),t.xor(this.v4.multiply(o).rotl(31).multiply(s)),t.multiply(s).add(u)):t=this.seed.clone().add(h),t.add(d.fromNumber(this.total_len));c<=l-8;)n?d.fromBits(r.charCodeAt(c+1)<<8|r.charCodeAt(c),r.charCodeAt(c+3)<<8|r.charCodeAt(c+2),r.charCodeAt(c+5)<<8|r.charCodeAt(c+4),r.charCodeAt(c+7)<<8|r.charCodeAt(c+6)):d.fromBits(r[c+1]<<8|r[c],r[c+3]<<8|r[c+2],r[c+5]<<8|r[c+4],r[c+7]<<8|r[c+6]),d.multiply(o).rotl(31).multiply(s),t.xor(d).rotl(27).multiply(s).add(u),c+=8;for(c+4<=l&&(n?d.fromBits(r.charCodeAt(c+1)<<8|r.charCodeAt(c),r.charCodeAt(c+3)<<8|r.charCodeAt(c+2),0,0):d.fromBits(r[c+1]<<8|r[c],r[c+3]<<8|r[c+2],0,0),t.xor(d.multiply(s)).rotl(23).multiply(o).add(a),c+=4);c<l;)d.fromBits(n?r.charCodeAt(c++):r[c++],0,0,0),t.xor(d.multiply(h)).rotl(11).multiply(s);return e=t.clone().shiftRight(33),t.xor(e).multiply(o),e=t.clone().shiftRight(29),t.xor(e).multiply(a),e=t.clone().shiftRight(32),t.xor(e),this.init(this.seed),t},t.exports=c},72617:()=>{},70573:()=>{},80950:()=>{},46601:()=>{},89214:()=>{},8623:()=>{},7748:()=>{},85568:()=>{},56619:()=>{},77108:()=>{},52361:()=>{},94616:()=>{},55024:()=>{},87500:()=>{},35583:t=>{t.exports={bytes:"",sizeCompressed:153363,sizeUncompressed:301802}},31057:t=>{t.exports={bytes:"",sizeCompressed:153363,sizeUncompressed:301802}},53201:t=>{t.exports={bytes:"",sizeCompressed:153363,sizeUncompressed:301802}},31218:t=>{t.exports={bytes:"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",sizeCompressed:152995,sizeUncompressed:300595}},63083:(t,e,r)=>{"use strict";var n=["BigInt64Array","BigUint64Array","Float32Array","Float64Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray"],i="undefined"==typeof globalThis?r.g:globalThis;t.exports=function(){for(var t=[],e=0;e<n.length;e++)"function"==typeof i[n[e]]&&(t[t.length]=n[e]);return t}},20882:(t,e,r)=>{"use strict";var n=r(40210)("%Object.getOwnPropertyDescriptor%",!0);if(n)try{n([],"length")}catch(t){n=null}t.exports=n},44946:t=>{"use strict";t.exports=JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}')},75207:t=>{"use strict";t.exports=JSON.parse('{"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}')},1308:t=>{"use strict";t.exports=JSON.parse('{"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}')},29799:t=>{"use strict";t.exports=JSON.parse('{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}')},18597:t=>{"use strict";t.exports={i8:"6.5.4"}},22562:t=>{"use strict";t.exports=JSON.parse('{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}')}},__webpack_module_cache__={};function __webpack_require__(t){var e=__webpack_module_cache__[t];if(void 0!==e)return e.exports;var r=__webpack_module_cache__[t]={id:t,loaded:!1,exports:{}};return __webpack_modules__[t].call(r.exports,r,r.exports,__webpack_require__),r.loaded=!0,r.exports}__webpack_require__.amdO={},__webpack_require__.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return __webpack_require__.d(e,{a:e}),e},__webpack_require__.d=(t,e)=>{for(var r in e)__webpack_require__.o(e,r)&&!__webpack_require__.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),__webpack_require__.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),__webpack_require__.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},__webpack_require__.nmd=t=>(t.paths=[],t.children||(t.children=[]),t);var __webpack_exports__={};(()=>{"use strict";var t={};__webpack_require__.r(t),__webpack_require__.d(t,{__wbg_crypto_968f1772287e2df0:()=>er,__wbg_getRandomValues_a3d34b4fee3c2869:()=>rr,__wbg_getRandomValues_f5e14ab7ac8e995d:()=>nr,__wbg_randomFillSync_d5bd2d655fdf256a:()=>ir,__wbg_require_604837428532a733:()=>tr,__wbg_self_1b7a39e3a92c949c:()=>$e,__wbindgen_is_undefined:()=>Qe,__wbindgen_object_drop_ref:()=>sr,abort:()=>or});var e={};__webpack_require__.r(e),__webpack_require__.d(e,{__wbg_crypto_968f1772287e2df0:()=>Yc,__wbg_getRandomValues_a3d34b4fee3c2869:()=>Rc,__wbg_getRandomValues_f5e14ab7ac8e995d:()=>Ic,__wbg_randomFillSync_d5bd2d655fdf256a:()=>Bc,__wbg_require_604837428532a733:()=>Ec,__wbg_self_1b7a39e3a92c949c:()=>Nc,__wbindgen_is_undefined:()=>zc,__wbindgen_object_drop_ref:()=>Xc,abort:()=>Vc});var r={};__webpack_require__.r(r),__webpack_require__.d(r,{BitVec:()=>Ff,Bool:()=>Xf,Bytes:()=>_f,Data:()=>Jf,GenericAccountId:()=>kf,GenericAccountIndex:()=>gf,GenericAddress:()=>Bf,GenericBlock:()=>xf,GenericCall:()=>Sf,GenericChainProperties:()=>jf,GenericConsensusEngineId:()=>Ef,GenericEthereumAccountId:()=>Gd,GenericEthereumLookupSource:()=>wf,GenericEvent:()=>Cl,GenericEventData:()=>Vl,GenericExtrinsic:()=>$l,GenericExtrinsicEra:()=>xd,GenericExtrinsicPayload:()=>Ld,GenericExtrinsicPayloadUnknown:()=>Td,GenericExtrinsicPayloadV4:()=>Yd,GenericExtrinsicSignatureV4:()=>Xd,GenericExtrinsicUnknown:()=>Sd,GenericExtrinsicV4:()=>Nd,GenericImmortalEra:()=>Md,GenericLookupSource:()=>Rf,GenericMortalEra:()=>kd,GenericMultiAddress:()=>Bf,GenericSignerPayload:()=>zd,GenericVote:()=>qf,I128:()=>np,I16:()=>tp,I256:()=>ip,I32:()=>ep,I64:()=>rp,I8:()=>$f,Null:()=>Yl,StorageKey:()=>hp,Text:()=>fp,Type:()=>Pp,U128:()=>Sp,U16:()=>Tp,U256:()=>Ap,U32:()=>ff,U64:()=>wd,U8:()=>Lp,USize:()=>Dp,bool:()=>Xf,i128:()=>np,i16:()=>tp,i256:()=>ip,i32:()=>ep,i64:()=>rp,i8:()=>$f,u128:()=>Sp,u16:()=>Tp,u256:()=>Ap,u32:()=>ff,u64:()=>wd,u8:()=>Lp,usize:()=>Dp});var n={};__webpack_require__.r(n),__webpack_require__.d(n,{assets:()=>Rp,attestations:()=>bm,aura:()=>Bp,author:()=>Ym,authorship:()=>Ip,babe:()=>Xp,balances:()=>Vp,beefy:()=>Cp,bridges:()=>wm,chain:()=>Rm,childstate:()=>Im,claims:()=>Mm,collective:()=>Wp,consensus:()=>qp,contracts:()=>Zp,contractsAbi:()=>zm,crowdloan:()=>km,cumulus:()=>xm,democracy:()=>Fp,elections:()=>Up,engine:()=>Gp,eth:()=>Nm,evm:()=>_p,extrinsics:()=>Kp,genericAsset:()=>Jp,gilt:()=>Qp,grandpa:()=>$p,identity:()=>tm,imOnline:()=>em,lottery:()=>rm,metadata:()=>Np,mmr:()=>nm,offchain:()=>Bm,offences:()=>im,parachains:()=>Lm,payment:()=>Vm,poll:()=>Tm,proxy:()=>sm,purchase:()=>Sm,recovery:()=>om,rpc:()=>Em,runtime:()=>Ep,scaleInfo:()=>Yp,scheduler:()=>am,session:()=>um,society:()=>hm,staking:()=>cm,state:()=>Cm,support:()=>lm,syncstate:()=>dm,system:()=>fm,treasury:()=>pm,txpayment:()=>mm,uniques:()=>ym,utility:()=>vm,vesting:()=>gm,xcm:()=>jm});var i={};__webpack_require__.r(i),__webpack_require__.d(i,{__wbg_crypto_968f1772287e2df0:()=>sM,__wbg_getRandomValues_a3d34b4fee3c2869:()=>oM,__wbg_getRandomValues_f5e14ab7ac8e995d:()=>aM,__wbg_randomFillSync_d5bd2d655fdf256a:()=>uM,__wbg_require_604837428532a733:()=>iM,__wbg_self_1b7a39e3a92c949c:()=>nM,__wbindgen_is_undefined:()=>rM,__wbindgen_object_drop_ref:()=>hM,abort:()=>cM});var s={};__webpack_require__.r(s),__webpack_require__.d(s,{__wbg_crypto_968f1772287e2df0:()=>kk,__wbg_getRandomValues_a3d34b4fee3c2869:()=>xk,__wbg_getRandomValues_f5e14ab7ac8e995d:()=>Pk,__wbg_randomFillSync_d5bd2d655fdf256a:()=>Lk,__wbg_require_604837428532a733:()=>Mk,__wbg_self_1b7a39e3a92c949c:()=>wk,__wbindgen_is_undefined:()=>bk,__wbindgen_object_drop_ref:()=>Tk,abort:()=>Sk});var o={};__webpack_require__.r(o),__webpack_require__.d(o,{accountId:()=>gx,flags:()=>bx,hasIdentity:()=>Lx,hasIdentityMulti:()=>Tx,idAndIndex:()=>wx,idToIndex:()=>Mx,identity:()=>Px,indexToId:()=>Sx,indexes:()=>zx,info:()=>Ex});var a={};__webpack_require__.r(a),__webpack_require__.d(a,{account:()=>Kx,all:()=>Wx,fees:()=>Jx,votingBalance:()=>$x,votingBalances:()=>Qx});var u={};__webpack_require__.r(u),__webpack_require__.d(u,{bounties:()=>rP});var h={};__webpack_require__.r(h),__webpack_require__.d(h,{bestNumber:()=>nP,bestNumberFinalized:()=>iP,bestNumberLag:()=>sP,getBlock:()=>cP,getHeader:()=>uP,subscribeNewBlocks:()=>lP,subscribeNewHeads:()=>dP});var c={};__webpack_require__.r(c),__webpack_require__.d(c,{fees:()=>fP});var l={};__webpack_require__.r(l),__webpack_require__.d(l,{hasProposals:()=>LP,members:()=>yP,prime:()=>gP,proposal:()=>TP,proposalCount:()=>SP,proposalHashes:()=>AP,proposals:()=>DP,votes:()=>zP,votesOf:()=>NP});var d={};__webpack_require__.r(d),__webpack_require__.d(d,{childKey:()=>EP,contributions:()=>VP,ownContributions:()=>qP});var f={};__webpack_require__.r(f),__webpack_require__.d(f,{_referendumInfo:()=>gL,_referendumVotes:()=>yL,_referendumsVotes:()=>vL,dispatchQueue:()=>UP,locks:()=>KP,nextExternal:()=>JP,preimage:()=>sL,preimages:()=>oL,proposals:()=>hL,referendumIds:()=>cL,referendums:()=>lL,referendumsActive:()=>dL,referendumsFinished:()=>fL,referendumsInfo:()=>bL,sqrtElectorate:()=>wL});var p={};__webpack_require__.r(p),__webpack_require__.d(p,{info:()=>PL});var m={};__webpack_require__.r(m),__webpack_require__.d(m,{receivedHeartbeats:()=>TL});var y={};__webpack_require__.r(y),__webpack_require__.d(y,{hasProposals:()=>DL,members:()=>SL,prime:()=>AL,proposal:()=>jL,proposalCount:()=>HL,proposalHashes:()=>OL,proposals:()=>zL});var v={};__webpack_require__.r(v),__webpack_require__.d(v,{info:()=>RL,overview:()=>BL});var g={};__webpack_require__.r(g),__webpack_require__.d(g,{eraLength:()=>XL,eraProgress:()=>VL,indexes:()=>WL,info:()=>qL,progress:()=>ZL,sessionProgress:()=>FL});var b={};__webpack_require__.r(b),__webpack_require__.d(b,{_members:()=>KL,candidates:()=>UL,info:()=>GL,member:()=>_L,members:()=>JL});var w={};__webpack_require__.r(w),__webpack_require__.d(w,{_eraExposure:()=>oT,_eraPrefs:()=>mT,_eraSlashes:()=>MT,_erasExposure:()=>uT,_erasPoints:()=>fT,_erasPrefs:()=>vT,_erasRewards:()=>bT,_erasSlashes:()=>xT,_ownExposures:()=>jT,_ownSlashes:()=>zT,_stakerExposures:()=>BT,_stakerPoints:()=>CT,_stakerPrefs:()=>qT,_stakerRewards:()=>GT,_stakerRewardsEras:()=>UT,_stakerSlashes:()=>QT,account:()=>rT,accounts:()=>eT,currentPoints:()=>nT,electedInfo:()=>TT,eraExposure:()=>aT,eraPrefs:()=>yT,eraSlashes:()=>kT,erasExposure:()=>hT,erasHistoric:()=>cT,erasPoints:()=>pT,erasPrefs:()=>gT,erasRewards:()=>wT,erasSlashes:()=>PT,keys:()=>ST,keysMulti:()=>AT,nextElected:()=>eS,overview:()=>DT,ownExposure:()=>HT,ownExposures:()=>OT,ownSlash:()=>NT,ownSlashes:()=>ET,query:()=>RT,queryMulti:()=>IT,stakerExposure:()=>VT,stakerExposures:()=>XT,stakerPoints:()=>WT,stakerPrefs:()=>ZT,stakerRewards:()=>_T,stakerRewardsMulti:()=>JT,stakerRewardsMultiEras:()=>KT,stakerSlashes:()=>$T,stashes:()=>tS,validators:()=>rS,waitingInfo:()=>iS});var M={};__webpack_require__.r(M),__webpack_require__.d(M,{hasProposals:()=>aS,members:()=>sS,prime:()=>oS,proposal:()=>uS,proposalCount:()=>hS,proposalHashes:()=>cS,proposals:()=>lS});var k={};__webpack_require__.r(k),__webpack_require__.d(k,{proposals:()=>dS});var x={};__webpack_require__.r(x),__webpack_require__.d(x,{events:()=>fS,signingInfo:()=>wS});var P=__webpack_require__(2043),L=__webpack_require__.n(P),T={status:"success",message:"success"},S={status:"error",message:"error"},A=function(){return A=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var i in e=arguments[r])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},A.apply(this,arguments)},D=function(t,e,r,n){return new(r||(r=Promise))((function(i,s){function o(t){try{u(n.next(t))}catch(t){s(t)}}function a(t){try{u(n.throw(t))}catch(t){s(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(o,a)}u((n=n.apply(t,e||[])).next())}))},j=function(t,e){var r,n,i,s,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(s){return function(a){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(i=2&s[0]?n.return:s[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,s[1])).done)return i;switch(n=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(i=o.trys,(i=i.length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){o.label=s[1];break}if(6===s[0]&&o.label<i[1]){o.label=i[1],i=s;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(s);break}i[2]&&o.ops.pop(),o.trys.pop();continue}s=e.call(t,o)}catch(t){s=[6,t],n=0}finally{r=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,a])}}},H=__webpack_require__(75972),O=__webpack_require__.n(H);function z(){var t=O().runtime.lastError;if(t)return t.stack&&t.message?t:new Error(t.message)}var N=function(){function t(){}return t.prototype.reload=function(){O().runtime.reload()},t.prototype.openTab=function(t){return new Promise((function(e,r){O().tabs.create(t,(function(t){var n=z();return n?r(n):e(t)}))}))},t.prototype.openWindow=function(t){return new Promise((function(e,r){O().windows.create(t,(function(t){var n=z();return n?r(n):e(t)}))}))},t.prototype.focusWindow=function(t){return new Promise((function(e,r){O().windows.update(t,{focused:!0},(function(){var t=z();return t?r(t):e()}))}))},t.prototype.updateWindowPosition=function(t,e,r){return new Promise((function(n,i){O().windows.update(t,{left:e,top:r},(function(){var t=z();return t?i(t):n()}))}))},t.prototype.getLastFocusedWindow=function(){return new Promise((function(t,e){O().windows.getLastFocused((function(r){var n=z();return n?e(n):t(r)}))}))},t.prototype.closeCurrentWindow=function(){return O().windows.getCurrent((function(t){return O().windows.remove(t.id)}))},t.prototype.getVersion=function(){return O().runtime.getManifest().version},t.prototype.getPlatformInfo=function(t){try{O().runtime.getPlatformInfo((function(e){t(null,e)}))}catch(e){return void t(e)}},t.prototype.getAllWindows=function(){return new Promise((function(t,e){O().windows.getAll((function(r){var n=z();return n?e(n):t(r)}))}))},t.prototype.getActiveTabs=function(){return new Promise((function(t,e){O().tabs.query({active:!0},(function(r){var n=z();return n?e(n):t(r)}))}))},t.prototype.currentTab=function(){return new Promise((function(t,e){O().tabs.getCurrent((function(r){var n=z();n?e(n):t(r)}))}))},t.prototype.switchToTab=function(t){return new Promise((function(e,r){O().tabs.update(t,{highlighted:!0},(function(t){var n=z();n?r(n):e(t)}))}))},t.prototype.closeTab=function(t){return new Promise((function(e,r){O().tabs.remove(t,(function(){var t=z();t?r(t):e(!0)}))}))},t.prototype._showNotification=function(t,e,r){O().notifications.create(r,{type:"basic",title:t,iconUrl:O().extension.getURL("../../images/icon-64.png"),message:e})},t.prototype._subscribeToNotificationClicked=function(){O().notifications.onClicked.hasListener(this._viewOnEtherscan)||O().notifications.onClicked.addListener(this._viewOnEtherscan)},t.prototype._viewOnEtherscan=function(t){t.startsWith("https://")&&O().tabs.create({url:t})},t}(),E=function(t,e,r,n){return new(r||(r=Promise))((function(i,s){function o(t){try{u(n.next(t))}catch(t){s(t)}}function a(t){try{u(n.throw(t))}catch(t){s(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(o,a)}u((n=n.apply(t,e||[])).next())}))},Y=function(t,e){var r,n,i,s,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(s){return function(a){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(i=2&s[0]?n.return:s[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,s[1])).done)return i;switch(n=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(i=o.trys,(i=i.length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){o.label=s[1];break}if(6===s[0]&&o.label<i[1]){o.label=i[1],i=s;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(s);break}i[2]&&o.ops.pop(),o.trys.pop();continue}s=e.call(t,o)}catch(t){s=[6,t],n=0}finally{r=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,a])}}},R=function(){function t(){this.isSupported=Boolean(O().storage.local),this.isSupported||L().error("Storage local API not available.")}return t.prototype.get=function(t){return E(this,void 0,void 0,(function(){var e;return Y(this,(function(r){switch(r.label){case 0:return this.isSupported?[4,this._get(t)]:[2,void 0];case 1:return e=r.sent(),n=e,0===Object.keys(n).length?[2,void 0]:[2,e[t]]}var n}))}))},t.prototype.getAllStorageData=function(){var t=O().storage.local;return new Promise((function(e,r){t.get(null,(function(t){var n=z();n?r(n):e(t)}))}))},t.prototype.set=function(t){return E(this,void 0,void 0,(function(){return Y(this,(function(e){switch(e.label){case 0:return[4,this._set(t)];case 1:return[2,e.sent()]}}))}))},t.prototype._get=function(t){var e=O().storage.local;return new Promise((function(r,n){e.get(t,(function(t){var e=z();e?n(e):r(t)}))}))},t.prototype._set=function(t){var e=O().storage.local;return new Promise((function(r,n){e.set(t,(function(){var e=z();e?n(e):r(t)}))}))},t}();var I=__webpack_require__(9669),B=__webpack_require__.n(I),X=function(){return X=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var i in e=arguments[r])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},X.apply(this,arguments)},V=function(t,e,r,n){return new(r||(r=Promise))((function(i,s){function o(t){try{u(n.next(t))}catch(t){s(t)}}function a(t){try{u(n.throw(t))}catch(t){s(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(o,a)}u((n=n.apply(t,e||[])).next())}))},C=function(t,e){var r,n,i,s,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(s){return function(a){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(i=2&s[0]?n.return:s[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,s[1])).done)return i;switch(n=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(i=o.trys,(i=i.length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){o.label=s[1];break}if(6===s[0]&&o.label<i[1]){o.label=i[1],i=s;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(s);break}i[2]&&o.ops.pop(),o.trys.pop();continue}s=e.call(t,o)}catch(t){s=[6,t],n=0}finally{r=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,a])}}},W=function(){function t(t){var e=this,r=t.initialState,n={application:{activeTabHomePage:0,isLoading:!1},wallet:{isInitialized:"none",isLocked:!1,accounts:{},selectedAddress:null,firstAddress:null,priceUsd:null},transactions:{},settings:{locale:"en",currency:"usd",autoLock:{openTime:(new Date).getTime(),duration:6e4}}};this.localStore=new R,this.defaultState=n,this.localStore.set(X(X({},n),r)).then((function(t){e.store=t}))}return t.prototype.getState=function(){return V(this,void 0,void 0,(function(){return C(this,(function(t){switch(t.label){case 0:return[4,this.localStore.getAllStorageData()];case 1:return[2,t.sent()]}}))}))},t.prototype.getDefaultState=function(){return V(this,void 0,void 0,(function(){return C(this,(function(t){return[2,this.defaultState]}))}))},t.prototype.setDefaultState=function(){return V(this,void 0,void 0,(function(){return C(this,(function(t){switch(t.label){case 0:return[4,this.localStore.set(X({},this.defaultState))];case 1:return t.sent(),[2,X({},this.defaultState)]}}))}))},t.prototype.getWalletState=function(){return V(this,void 0,void 0,(function(){return C(this,(function(t){switch(t.label){case 0:return[4,this.localStore.get("wallet")];case 1:return[2,t.sent()]}}))}))},t.prototype.getTransactionsState=function(){return V(this,void 0,void 0,(function(){return C(this,(function(t){switch(t.label){case 0:return[4,this.localStore.get("transactions")];case 1:return[2,t.sent()]}}))}))},t.prototype.getSettingsState=function(){return V(this,void 0,void 0,(function(){return C(this,(function(t){switch(t.label){case 0:return[4,this.localStore.get("settings")];case 1:return[2,t.sent()]}}))}))},t.prototype.setEncryptKey=function(t){return V(this,void 0,void 0,(function(){return C(this,(function(e){switch(e.label){case 0:return[4,this.localStore.set({encryptKey:t})];case 1:return e.sent(),[2]}}))}))},t.prototype.getEncryptKey=function(){return V(this,void 0,void 0,(function(){return C(this,(function(t){switch(t.label){case 0:return[4,this.localStore.get("encryptKey")];case 1:return[2,t.sent()]}}))}))},t.prototype.setKeyAccounts=function(t){return V(this,void 0,void 0,(function(){var e,r;return C(this,(function(n){switch(n.label){case 0:return[4,this.getKeyAccounts()];case 1:return e=n.sent(),r=e.push(t),[4,this.localStore.set({keyAccounts:r})];case 2:return n.sent(),[2]}}))}))},t.prototype.getKeyAccounts=function(){return V(this,void 0,void 0,(function(){return C(this,(function(t){switch(t.label){case 0:return[4,this.localStore.get("keyAccounts")];case 1:return[2,t.sent()]}}))}))},t.prototype.getAddressSelected=function(){return V(this,void 0,void 0,(function(){return C(this,(function(t){switch(t.label){case 0:return[4,this.getWalletState()];case 1:return[2,t.sent().selectedAddress]}}))}))},t.prototype.getFirstAddress=function(){return V(this,void 0,void 0,(function(){return C(this,(function(t){switch(t.label){case 0:return[4,this.getWalletState()];case 1:return[2,t.sent().firstAddress]}}))}))},t.prototype.getAccounts=function(){return V(this,void 0,void 0,(function(){return C(this,(function(t){switch(t.label){case 0:return[4,this.getWalletState()];case 1:return[2,t.sent().accounts]}}))}))},t.prototype.updateState=function(t,e){return V(this,void 0,void 0,(function(){var r,n;return C(this,(function(i){switch(i.label){case 0:return[4,this.getState()];case 1:return r=i.sent(),[4,this.localStore.set((n={},n[t]=X(X({},r[t]),e),n))];case 2:return[2,i.sent()]}}))}))},t}();const q="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this");function Z(t){return"function"==typeof t}function F(t){return"string"==typeof t||t instanceof String}function U(t){return null===t}function G(t){return void 0===t}function _(t,e){if(!t)throw new Error(Z(e)?e():e)}function K(t,e){return _(!G(t)&&!U(t),e),t}const J="Either remove and explicitly install matching versions or dedupe using your package manager.\nThe following conflicting packages were found:";function Q(t){let e=0;for(const{version:r}of t)e=Math.max(e,r.length);return e}function $(t){if(Z(t))try{return t()||""}catch(t){return""}return t||""}function tt(t,e){if(!Object.prototype.hasOwnProperty.call(t,e))throw new TypeError("attempted to use private field on non-instance");return t}!function({name:t,version:e},r,n=[]){_(t.startsWith("@polkadot"),(()=>`Invalid package descriptor ${t}`));const i=function(t){const e=q;return e.__polkadotjs||(e.__polkadotjs={}),e.__polkadotjs[t]||(e.__polkadotjs[t]=[]),e.__polkadotjs[t]}(t);if(i.push({path:$(r),version:e}),1!==i.length)console.warn(`${t} has multiple versions, ensure that there is only one installed.\n${J}\n${function(t){const e=t.map((t=>F(t)?{version:t}:t)),r=Q(e);return e.map((({path:t,version:e})=>`\t${e.padEnd(r)}\t${!t||t.length<5?"<unknown>":t}`)).join("\n")}(i)}`);else{const r=n.filter((t=>t&&t.version!==e));r.length&&console.warn(`${t} requires direct dependencies exactly matching version ${e}.\n${J}\n${function(t){const e=Q(t);return t.map((({name:t,version:r})=>`\t${r.padEnd(e)}\t${t}`)).join("\n")}(r)}`)}}({name:"@polkadot/ui-keyring",version:"0.86.6"},"undefined"!=typeof __dirname&&__dirname,[{name:"@polkadot/ui-settings",version:"0.86.6"}]);var et=0;function rt(t){return"__private_"+et+++"_"+t}function nt(t,e){if(!t)throw new Error("function"==typeof e?e():e)}const it=new Array(256),st=new Array(65536),ot={},at={};for(let t=0;t<256;t++){const e=t.toString(16).padStart(2,"0");it[t]=e,ot[e]=t}for(let t=0;t<256;t++)for(let e=0;e<256;e++){const r=it[t]+it[e],n=256*t+e;st[n]=r,at[r]=n}const ut=/^0x[\da-fA-F]+$/,ht=/^[\da-fA-F]+$/;function ct(t,e=-1,r=!1){return!("string"!=typeof t||"0x"!==t&&!ut.test(t))&&(-1===e?!!r||t.length%2==0:t.length===2+Math.ceil(e/4))}function lt(t,e=-1){if(!t)return new Uint8Array;const r=function(t){if(!t||"0x"===t)return"";if(ut.test(t))return t.substr(2);if(ht.test(t))return t;throw new Error(`Expected hex value to convert, found '${t}'`)}(t).toLowerCase(),n=r.length/2,i=Math.ceil(-1===e?n:e/8),s=new Uint8Array(i),o=i>n?i-n:0,a=new DataView(s.buffer,o),u=(i-o)%2,h=i-o-u;for(let t=0;t<h;t+=2)a.setUint16(t,at[r.substr(2*t,4)]);return u&&a.setUint8(h,ot[r.substr(r.length-2,2)]),s}var dt=__webpack_require__(23085).Buffer;__webpack_require__(34155);const ft=void 0!==dt;var pt=__webpack_require__(23085).Buffer;function mt(t){return t instanceof Uint8Array}const yt="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:function(t){return t("return this")}(Function);const vt=void 0===yt.TextEncoder?class{encode(t){const e=new Uint8Array(t.length);for(let r=0;r<t.length;r++)e[r]=t.charCodeAt(r);return e}}:yt.TextEncoder,gt=new vt;function bt(t){return t?gt.encode(t.toString()):new Uint8Array}function wt(t){return t?ct(t)?lt(t):function(t){return"string"==typeof t||t instanceof String}(t)?bt(t):Array.isArray(t)||function(t){return ft&&pt.isBuffer(t)}(t)?new Uint8Array(t):(nt(mt(t),(()=>`Unable to convert ${t.toString()} (typeof ${typeof t}) to a Uint8Array`)),t):new Uint8Array}function Mt(...t){let e=0,r=0;const n=new Array(t.length);for(let r=0;r<t.length;r++)n[r]=wt(t[r]),e+=n[r].length;const i=new Uint8Array(e);for(let t=0;t<n.length;t++)i.set(n[t],r),r+=n[t].length;return i}function kt(t,...e){for(let n=0;n<e.length;n++){const i=e[n];if(i){const e=(r=i,Object.keys(r));for(let r=0;r<e.length;r++){const n=e[r];t[n]=i[n]}}}var r;return t}function xt(t){const e=t.length%2,r=t.length-e,n=new DataView(t.buffer,t.byteOffset);let i="";for(let t=0;t<r;t+=2)i+=st[n.getUint16(t)];return e&&(i+=it[n.getUint8(r)]),i}function Pt(t,e=-1,r=!0){const n=Math.ceil(e/8);return`${r?"0x":""}${t&&t.length?n>0&&t.length>n?`${xt(t.subarray(0,n/2))}…${xt(t.subarray(t.length-n/2))}`:xt(t):""}`}function Lt(t,e){const r=wt(t),n=wt(e);if(r.length===n.length){const t=new DataView(r.buffer,r.byteOffset),e=new DataView(n.buffer,n.byteOffset),i=r.length%4,s=r.length-i;for(let r=0;r<s;r+=4)if(t.getUint32(r)!==e.getUint32(r))return!1;for(let t=s;t<r.length;t++)if(r[t]!==n[t])return!1;return!0}return!1}function Tt(t){return"function"==typeof t}function St(t){return null===t}function At(t,e){if(!t)throw new Error(Tt(e)?e():e)}function Dt(t){return"number"==typeof t}function jt(t,...e){for(let n=0;n<e.length;n++){const i=e[n];if(i){const e=(r=i,Object.keys(r));for(let r=0;r<e.length;r++){const n=e[r];t[n]=i[n]}}}var r;return t}var Ht=__webpack_require__(58189);const Ot=/^0x[\da-fA-F]+$/,zt=/^[\da-fA-F]+$/;function Nt(t,e=-1,r=!1){return!("string"!=typeof t||"0x"!==t&&!Ot.test(t))&&(-1===e?!!r||t.length%2==0:t.length===2+Math.ceil(e/4))}function Et(t){if(!t||"0x"===t)return"";if(Ot.test(t))return t.substr(2);if(zt.test(t))return t;throw new Error(`Expected hex value to convert, found '${t}'`)}const Yt={isLe:!1,isNegative:!1};function Rt(t,e=Yt){if(!t||"0x"===t)return new Ht(0);const{isLe:r,isNegative:n}=jt({isLe:!1,isNegative:!1},function(t){return"boolean"==typeof t}(e)?{isLe:e}:e),i=Et(t),s=new Ht(i,16,r?"le":"be");return n?s.fromTwos(4*i.length):s}function It(t){return"bigint"==typeof t||t instanceof BigInt}function Bt(t){return Ht.isBN(t)?t:t?Nt(t)?Rt(t.toString()):It(t)?new Ht(t.toString()):function(t){return!!t&&Tt(t.toBn)}(t)?t.toBn():function(t){return!!t&&Tt(t.toBigInt)}(t)?new Ht(t.toBigInt().toString()):new Ht(t):new Ht(0)}const Xt={bitLength:-1,isLe:!0,isNegative:!1};function Vt(t,e=Xt,r){const n=jt({bitLength:-1,isLe:!0,isNegative:!1},Dt(e)?{bitLength:e,isLe:r}:e),i=Bt(t),s=-1===n.bitLength?Math.ceil(i.bitLength()/8):Math.ceil((n.bitLength||0)/8);return t?function(t,e,{isLe:r,isNegative:n}){const i=new Uint8Array(e),s=n?t.toTwos(8*e):t;return i.set(s.toArray(r?"le":"be",e),0),i}(i,s,n):function(t,e){return-1===e.bitLength?new Uint8Array:new Uint8Array(t)}(s,n)}const Ct={isLe:!0},Wt={bitLength:16,isLe:!0},qt={bitLength:32,isLe:!1},Zt={bitLength:32,isLe:!0},Ft={bitLength:256,isLe:!1},Ut={bitLength:256,isLe:!0};var Gt=__webpack_require__(86266);const _t=new Gt.ec("secp256k1");function Kt(t){At(32===t.length,"Expected valid 32-byte private key as a seed");const e=_t.keyFromPrivate(t);return{publicKey:new Uint8Array(e.getPublic().encodeCompressed()),secretKey:Vt(e.getPrivate(),Ft)}}var Jt=__webpack_require__(50780);const Qt="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",$t=[],te=[];for(let t=0;t<Qt.length;++t)$t[t]=Qt[t],te[Qt.charCodeAt(t)]=t;te["-".charCodeAt(0)]=62,te["_".charCodeAt(0)]=63;var ee=__webpack_require__(31218);const re=ee.bytes,ne=ee.sizeUncompressed,ie=Uint8Array,se=Uint16Array,oe=Uint32Array,ae=new ie([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),ue=new ie([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),he=new ie([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),ce=(t,e)=>{const r=new se(31);for(let n=0;n<31;++n)r[n]=e+=1<<t[n-1];const n=new oe(r[30]);for(let t=1;t<30;++t)for(let e=r[t];e<r[t+1];++e)n[e]=e-r[t]<<5|t;return[r,n]},[le,de]=ce(ue,2);le[28]=258,de[258]=28;const[fe]=ce(he,0),pe=new se(32768);for(let t=0;t<32768;++t){let e=(43690&t)>>>1|(21845&t)<<1;e=(52428&e)>>>2|(13107&e)<<2,e=(61680&e)>>>4|(3855&e)<<4,pe[t]=((65280&e)>>>8|(255&e)<<8)>>>1}const me=(t,e,r)=>{const n=t.length;let i=0;const s=new se(e);for(;i<n;++i)++s[t[i]-1];const o=new se(e);for(i=0;i<e;++i)o[i]=o[i-1]+s[i-1]<<1;let a;if(r){a=new se(1<<e);const r=15-e;for(i=0;i<n;++i)if(t[i]){const n=i<<4|t[i],s=e-t[i];let u=o[t[i]-1]++<<s;for(const t=u|(1<<s)-1;u<=t;++u)a[pe[u]>>>r]=n}}else for(a=new se(n),i=0;i<n;++i)a[i]=pe[o[t[i]-1]++]>>>15-t[i];return a},ye=new ie(288);for(let t=0;t<144;++t)ye[t]=8;for(let t=144;t<256;++t)ye[t]=9;for(let t=256;t<280;++t)ye[t]=7;for(let t=280;t<288;++t)ye[t]=8;const ve=new ie(32);for(let t=0;t<32;++t)ve[t]=5;const ge=me(ye,9,1),be=me(ve,5,1),we=(t,e,r)=>{const n=e>>>3;return(t[n]|t[n+1]<<8)>>>(7&e)&r},Me=(t,e)=>{const r=e>>>3;return(t[r]|t[r+1]<<8|t[r+2]<<16)>>>(7&e)},ke=t=>{let e=t[0];for(let r=1;r<t.length;++r)t[r]>e&&(e=t[r]);return e},xe=(t,e,r)=>{const n=!r||r.i;r||(r={});const i=t.length,s=!e||!n;e||(e=new ie(3*i));const o=t=>{let r=e.length;if(t>r){const n=new ie(Math.max(r<<1,t));n.set(e),e=n}};let a=r.f||0,u=r.p||0,h=r.b||0,c=r.l,l=r.d,d=r.m,f=r.n;if(a&&!c)return e;const p=i<<3;do{if(!c){r.f=a=we(t,u,1);const y=we(t,u+1,3);if(u+=3,!y){const a=((m=u)>>>3)+(7&m&&1)+4,c=t[a-4]|t[a-3]<<8,l=a+c;if(l>i){if(n)throw"unexpected EOF";break}s&&o(h+c),e.set(t.subarray(a,l),h),r.b=h+=c,r.p=u=l<<3;continue}if(1==y)c=ge,l=be,d=9,f=5;else{if(2!=y)throw"invalid block type";{const e=we(t,u,31)+257,r=we(t,u+10,15)+4,i=e+we(t,u+5,31)+1;u+=14;const s=new ie(i),o=new ie(19);for(let e=0;e<r;++e)o[ae[e]]=we(t,u+3*e,7);u+=3*r;const a=ke(o),h=(1<<a)-1;if(!n&&u+i*(a+7)>p)break;const m=me(o,a,1);for(let e=0;e<i;){const r=m[we(t,u,h)];u+=15&r;const n=r>>>4;if(n<16)s[e++]=n;else{let r=0,i=0;for(16==n?(i=3+we(t,u,3),u+=2,r=s[e-1]):17==n?(i=3+we(t,u,7),u+=3):18==n&&(i=11+we(t,u,127),u+=7);i--;)s[e++]=r}}const y=s.subarray(0,e),v=s.subarray(e);d=ke(y),f=ke(v),c=me(y,d,1),l=me(v,f,1)}}if(u>p)throw"unexpected EOF"}s&&o(h+131072);const y=(1<<d)-1,v=(1<<f)-1,g=d+f+18;for(;n||u+g<p;){const r=c[Me(t,u)&y],n=r>>>4;if(u+=15&r,u>p)throw"unexpected EOF";if(!r)throw"invalid length/literal";if(n<256)e[h++]=n;else{if(256==n){c=void 0;break}{let r=n-254;if(n>264){const e=n-257,i=ue[e];r=we(t,u,(1<<i)-1)+le[e],u+=i}const i=l[Me(t,u)&v],a=i>>>4;if(!i)throw"invalid distance";u+=15&i;let c=fe[a];if(a>3){const e=he[a];c+=Me(t,u)&(1<<e)-1,u+=e}if(u>p)throw"unexpected EOF";s&&o(h+131072);const d=h+r;for(;h<d;h+=4)e[h]=e[h-c],e[h+1]=e[h+1-c],e[h+2]=e[h+2-c],e[h+3]=e[h+3-c];h=d}}}r.l=c,r.p=u,r.b=h,c&&(a=1,r.m=d,r.d=l,r.n=f)}while(!a);var m;return h==e.length?e:((t,e,r)=>{(null==e||e<0)&&(e=0),(null==r||r>t.length)&&(r=t.length);const n=new(t instanceof se?se:t instanceof oe?oe:ie)(r-e);return n.set(t.subarray(e,r)),n})(e,0,h)};const Pe=(Le=function(t){const[e,r]=function(t){const e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");const r=t.indexOf("=");return-1===r?[e,0]:[r,4-r%4]}(t),n=new Uint8Array(3*(e+r)/4-r);let i,s,o=0;const a=r>0?e-4:e;for(i=0;i<a;i+=4)s=te[t.charCodeAt(i)]<<18|te[t.charCodeAt(i+1)]<<12|te[t.charCodeAt(i+2)]<<6|te[t.charCodeAt(i+3)],n[o++]=s>>16&255,n[o++]=s>>8&255,n[o++]=255&s;return 2===r?(s=te[t.charCodeAt(i)]<<2|te[t.charCodeAt(i+1)]>>4,n[o++]=255&s):1===r&&(s=te[t.charCodeAt(i)]<<10|te[t.charCodeAt(i+1)]<<4|te[t.charCodeAt(i+2)]>>2,n[o++]=s>>8&255,n[o++]=255&s),n}(re),Te=new Uint8Array(ne),xe(((t=>{if(8!=(15&t[0])||t[0]>>>4>7||(t[0]<<8|t[1])%31)throw"invalid zlib data";if(32&t[1])throw"invalid zlib data: preset dictionaries not supported"})(Le),Le.subarray(2,-4)),Te));var Le,Te;const Se="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:function(t){return t("return this")}(Function);const Ae=void 0===Se.TextDecoder?class{constructor(t){}decode(t){let e="";for(let r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e}}:Se.TextDecoder,De=new Ae("utf-8");function je(t){return null!=t&&t.length?De.decode(t):""}const He=void 0===Se.TextEncoder?class{encode(t){const e=new Uint8Array(t.length);for(let r=0;r<t.length;r++)e[r]=t.charCodeAt(r);return e}}:Se.TextEncoder,Oe=new He;function ze(t){return t?Oe.encode(t.toString()):new Uint8Array}let Ne=null,Ee=null,Ye=null;function Re(t){return(...e)=>(At(Ne,"The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces."),t(Ne)(...e))}function Ie(){return null!==Ee&&Ee.buffer===Ne.memory.buffer||(Ee=new Int32Array(Ne.memory.buffer)),Ee}function Be(){return null!==Ye&&Ye.buffer===Ne.memory.buffer||(Ye=new Uint8Array(Ne.memory.buffer)),Ye}function Xe(t,e){return Be().subarray(t/1,t/1+e)}function Ve(t){const e=Ne.__wbindgen_malloc(1*t.length);return Be().set(t,e/1),[e,t.length]}function Ce(t){return Ve(ze(t))}function We(){const t=Ie()[2],e=Ie()[3],r=Xe(t,e).slice();return Ne.__wbindgen_free(t,1*e),r}function qe(t){return crypto.getRandomValues(t)}const Ze={getRandomValues:qe},Fe={crypto:Ze},Ue=new Array(32).fill(void 0).concat(void 0,null,!0,!1);let Ge=Ue.length;function _e(t){return Ue[t]}function Ke(t){const e=_e(t);return function(t){t<36||(Ue[t]=Ge,Ge=t)}(t),e}function Je(t){Ge===Ue.length&&Ue.push(Ue.length+1);const e=Ge;return Ge=Ue[e],Ue[e]=t,e}function Qe(t){return void 0===_e(t)}function $e(){return Je(Fe)}function tr(t,e){throw new Error(`Unable to require ${function(t,e){return je(Xe(t,e))}(t,e)}`)}function er(t){return Je(Ze)}function rr(t){return Je(Ze.getRandomValues)}function nr(t,e,r){Ze.getRandomValues(Xe(e,r))}function ir(t,e,r){throw new Error("randomFillsync is not available")}function sr(t){Ke(t)}function or(){throw new Error("abort")}const ar=async function(t,e,r){try{At("undefined"!=typeof WebAssembly&&t&&t.length,"WebAssembly is not available in your environment");const e=await WebAssembly.instantiate(t,{wbg:r});Ne=e.instance.exports}catch(t){e?Ne=e(r):(console.error("FATAL: Unable to initialize @polkadot/wasm-crypto"),console.error(t),Ne=null)}}(Pe,null,t).catch((()=>null)),ur=Re((t=>e=>(t.ext_bip39_generate(8,e),je(We())))),hr=Re((t=>e=>{const[r,n]=Ce(e);return t.ext_bip39_to_entropy(8,r,n),We()})),cr=Re((t=>(e,r)=>{const[n,i]=Ce(e),[s,o]=Ce(r);return t.ext_bip39_to_mini_secret(8,n,i,s,o),We()})),lr=Re((t=>(e,r)=>{const[n,i]=Ce(e),[s,o]=Ce(r);return t.ext_bip39_to_seed(8,n,i,s,o),We()})),dr=Re((t=>e=>{const[r,n]=Ce(e);return 0!==t.ext_bip39_validate(r,n)})),fr=Re((t=>e=>{const[r,n]=Ve(e);return t.ext_ed_from_seed(8,r,n),We()})),pr=Re((t=>(e,r,n)=>{const[i,s]=Ve(e),[o,a]=Ve(r),[u,h]=Ve(n);return t.ext_ed_sign(8,i,s,o,a,u,h),We()})),mr=Re((t=>(e,r,n)=>{const[i,s]=Ve(e),[o,a]=Ve(r),[u,h]=Ve(n);return 0!==t.ext_ed_verify(i,s,o,a,u,h)})),yr=Re((t=>(e,r)=>{const[n,i]=Ve(e),[s,o]=Ve(r);return t.ext_sr_derive_keypair_hard(8,n,i,s,o),We()})),vr=Re((t=>(e,r)=>{const[n,i]=Ve(e),[s,o]=Ve(r);return t.ext_sr_derive_keypair_soft(8,n,i,s,o),We()})),gr=(Re((t=>(e,r)=>{const[n,i]=Ve(e),[s,o]=Ve(r);return t.ext_sr_derive_public_soft(8,n,i,s,o),We()})),Re((t=>e=>{const[r,n]=Ve(e);return t.ext_sr_from_seed(8,r,n),We()}))),br=Re((t=>(e,r,n)=>{const[i,s]=Ve(e),[o,a]=Ve(r),[u,h]=Ve(n);return t.ext_sr_sign(8,i,s,o,a,u,h),We()})),wr=Re((t=>(e,r,n)=>{const[i,s]=Ve(e),[o,a]=Ve(r),[u,h]=Ve(n);return 0!==t.ext_sr_verify(i,s,o,a,u,h)})),Mr=(Re((t=>(e,r)=>{const[n,i]=Ve(e),[s,o]=Ve(r);return t.ext_sr_agree(8,n,i,s,o),We()})),Re((t=>(e,r,n,i)=>{const[s,o]=Ve(e),[a,u]=Ve(r),[h,c]=Ve(n),[l,d]=Ve(i);return t.ext_vrf_sign(8,s,o,a,u,h,c,l,d),We()}))),kr=Re((t=>(e,r,n,i,s)=>{const[o,a]=Ve(e),[u,h]=Ve(r),[c,l]=Ve(n),[d,f]=Ve(i),[p,m]=Ve(s);return 0!==t.ext_vrf_verify(o,a,u,h,c,l,d,f,p,m)})),xr=Re((t=>(e,r,n)=>{const[i,s]=Ve(e),[o,a]=Ve(r);return t.ext_blake2b(8,i,s,o,a,n),We()})),Pr=Re((t=>e=>{const[r,n]=Ve(e);return t.ext_keccak256(8,r,n),We()})),Lr=Re((t=>e=>{const[r,n]=Ve(e);return t.ext_keccak512(8,r,n),We()})),Tr=Re((t=>(e,r,n)=>{const[i,s]=Ve(e),[o,a]=Ve(r);return t.ext_pbkdf2(8,i,s,o,a,n),We()})),Sr=Re((t=>(e,r,n,i,s)=>{const[o,a]=Ve(e),[u,h]=Ve(r);return t.ext_scrypt(8,o,a,u,h,n,i,s),We()})),Ar=Re((t=>e=>{const[r,n]=Ve(e);return t.ext_sha256(8,r,n),We()})),Dr=Re((t=>e=>{const[r,n]=Ve(e);return t.ext_sha512(8,r,n),We()}));Re((t=>(e,r)=>{const[n,i]=Ve(e);return t.ext_twox(8,n,i,r),We()}));function jr(){return!!Ne}function Hr(t,e=!1){if(!e&&jr()){const e=fr(t);return{publicKey:e.slice(32),secretKey:e.slice(0,64)}}return Jt.sign.keyPair.fromSeed(t)}const Or=new Array(256),zr=new Array(65536),Nr={},Er={};for(let t=0;t<256;t++){const e=t.toString(16).padStart(2,"0");Or[t]=e,Nr[e]=t}for(let t=0;t<256;t++)for(let e=0;e<256;e++){const r=Or[t]+Or[e],n=256*t+e;zr[n]=r,Er[r]=n}function Yr(t,e=-1){if(!t)return new Uint8Array;const r=Et(t).toLowerCase(),n=r.length/2,i=Math.ceil(-1===e?n:e/8),s=new Uint8Array(i),o=i>n?i-n:0,a=new DataView(s.buffer,o),u=(i-o)%2,h=i-o-u;for(let t=0;t<h;t+=2)a.setUint16(t,Er[r.substr(2*t,4)]);return u&&a.setUint8(h,Nr[r.substr(r.length-2,2)]),s}var Rr=__webpack_require__(23085).Buffer;__webpack_require__(34155);const Ir=void 0!==Rr;var Br=__webpack_require__(23085).Buffer;function Xr(t){return"string"==typeof t||t instanceof String}function Vr(t){return t instanceof Uint8Array}function Cr(t){return t?Nt(t)?Yr(t):Xr(t)?ze(t):Array.isArray(t)||function(t){return Ir&&Br.isBuffer(t)}(t)?new Uint8Array(t):(At(Vr(t),(()=>`Unable to convert ${t.toString()} (typeof ${typeof t}) to a Uint8Array`)),t):new Uint8Array}function Wr(t){const e=Cr(t);return At(96===e.length,(()=>`Expected keypair with 96 bytes, found ${e.length}`)),{publicKey:e.slice(64,96),secretKey:e.slice(0,64)}}function qr(t){const e=Cr(t);return At(32===e.length,(()=>`Expected a seed matching 32 bytes, found ${e.length}`)),Wr(gr(e))}function Zr(...t){let e=0,r=0;const n=new Array(t.length);for(let r=0;r<t.length;r++)n[r]=Cr(t[r]),e+=n[r].length;const i=new Uint8Array(e);for(let t=0;t<n.length;t++)i.set(n[t],r),r+=n[t].length;return i}var Fr=__webpack_require__(1191);function Ur(t,e=256,r,n=!1){const i=Math.ceil(e/8),s=Cr(t);return jr()&&!n?xr(s,Cr(r),i):Fr.blake2b(s,r||void 0,i)}var Gr=__webpack_require__(91094);function _r(t,e=256,r=!1){const n=256===e,i=Cr(t);return jr()&&!r?n?Pr(i):Lr(i):new Uint8Array(n?Gr.keccak256.update(i).arrayBuffer():Gr.keccak512.update(i).arrayBuffer())}const Kr=["blake2","keccak"];function Jr(t,e){if("blake2"===t)return Ur(e);if("keccak"===t)return _r(e);throw new Error(`Unsupported secp256k1 hasher '${t}', expected one of ${Kr.join(", ")}`)}function Qr(t,{secretKey:e},r="blake2"){At(32===(null==e?void 0:e.length),"Expected valid secp256k1 secretKey, 32-bytes");const n=_t.keyFromPrivate(e).sign(Jr(r,t));return Zr(Vt(n.r,Ft),Vt(n.s,Ft),new Uint8Array([n.recoveryParam||0]))}function $r(t){At([33,65].includes(t.length),"Invalid publicKey provided");const e=_t.keyFromPublic(t).getPublic();return Zr(Vt(e.getX(),Ft),Vt(e.getY(),Ft))}function tn(t){const e=t.length%2,r=t.length-e,n=new DataView(t.buffer,t.byteOffset);let i="";for(let t=0;t<r;t+=2)i+=zr[n.getUint16(t)];return e&&(i+=Or[n.getUint8(r)]),i}function en(t,e=-1,r=!0){const n=Math.ceil(e/8);return`${r?"0x":""}${t&&t.length?n>0&&t.length>n?`${tn(t.subarray(0,n/2))}…${tn(t.subarray(t.length-n/2))}`:tn(t):""}`}function rn(t){if(!t)return"0x";const e=Cr(t);At([20,32,33,65].includes(e.length),"Invalid address or publicKey passed");const r=en(([33,65].includes((n=e).length)&&(n=_r($r(n))),n.slice(-20)),-1,!1);var n;const i=en(_r(r),-1,!1);let s="";for(let t=0;t<40;t++)s=`${s}${parseInt(i[t],16)>7?r[t].toUpperCase():r[t]}`;return`0x${s}`}var nn=__webpack_require__(75678);function sn(t){return nn.convertSecretKey(t)}function on(t){return e=nn.convertPublicKey(t),r="Unable to convert publicKey to ed25519",At(!function(t){return void 0===t}(e)&&!St(e),r),e;var e,r}new Ht(0);const an=new Ht(1),un=new Ht(2),hn=(new Ht(3),new Ht(4),new Ht(5),new Ht(6),new Ht(7),new Ht(8),new Ht(9),new Ht(10),new Ht(100),new Ht(1e3),new Ht(1e6),new Ht(1e9)),cn=(hn.mul(hn),new Ht(Number.MAX_SAFE_INTEGER),un.pow(new Ht(6)).isub(an)),ln=un.pow(new Ht(14)).isub(an),dn=un.pow(new Ht(30)).isub(an);function fn(t){const e=Bt(t);if(e.lte(cn))return new Uint8Array([e.toNumber()<<2]);if(e.lte(ln))return Vt(e.shln(2).iadd(an),16,!0);if(e.lte(dn))return Vt(e.shln(2).iadd(un),32,!0);const r=Vt(e);let n=r.length;for(;0===r[n-1];)n--;return At(n>=4,"Invalid length, previous checks match anything less than 2^30"),Zr([3+(n-4<<2)],r.subarray(0,n))}function pn(t){return Zr(fn(t.length),t)}const mn=/^\d+$/;var yn=rt("chainCode"),vn=rt("isHard");class gn{constructor(){Object.defineProperty(this,yn,{writable:!0,value:new Uint8Array(32)}),Object.defineProperty(this,vn,{writable:!0,value:!1})}static from(t){const e=new gn,[r,n]=t.startsWith("/")?[t.substr(1),!0]:[t,!1];return e.soft(mn.test(r)?new Ht(r,10):r),n?e.harden():e}get chainCode(){return tt(this,yn)[yn]}get isHard(){return tt(this,vn)[vn]}get isSoft(){return!tt(this,vn)[vn]}hard(t){return this.soft(t).harden()}harden(){return tt(this,vn)[vn]=!0,this}soft(t){return Dt(t)||function(t){return Ht.isBN(t)}(t)||It(t)?this.soft(Vt(t,Ut)):Nt(t)?this.soft(Yr(t)):Xr(t)?this.soft(pn(ze(t))):t.length>32?this.soft(Ur(t)):(tt(this,yn)[yn].fill(0),tt(this,yn)[yn].set(t,0),this)}soften(){return tt(this,vn)[vn]=!1,this}}const bn=/\/(\/?)([^/]+)/g;function wn(t){const e=t.match(bn),r=[];let n="";if(e){n=e.join("");for(const t of e)r.push(gn.from(t.substr(1)))}return At(n===t,(()=>`Re-constructed path "${n}" does not match input`)),{parts:e,path:r}}const Mn=pn(ze("Secp256k1HDKD"));function kn(t,e){return(r,{chainCode:n,isHard:i})=>(At(i,"A soft key was found in the path and is not supported"),t(e(r.secretKey.subarray(0,32),n)))}const xn=kn(Kt,(function(t,e){return At(Vr(e)&&32===e.length,"Invalid chainCode passed to derive"),Ur(Zr(Mn,t,e),256)})),Pn=pn(ze("Ed25519HDKD"));const Ln=kn(Hr,(function(t,e){return At(Vr(e)&&32===e.length,"Invalid chainCode passed to derive"),Ur(Zr(Pn,t,e))}));function Tn(t){return(e,r)=>(At(Vr(r)&&32===r.length,"Invalid chainCode passed to derive"),Wr(t(function({publicKey:t,secretKey:e}){return Zr(e,t).slice()}(e),r)))}const Sn=Tn(yr),An=Tn(vr);const Dn={ecdsa:xn,ed25519:Ln,ethereum:xn,sr25519:function(t,{chainCode:e,isSoft:r}){return r?An(t,e):Sn(t,e)}};function jn(t,e,r){const n=Dn[r];let i=t;for(const t of e)i=n(i,t);return i}function Hn(t=32){return qe(new Uint8Array(t))}function On(t,e){const r=Cr(t),n=Cr(e);if(r.length===n.length){const t=new DataView(r.buffer,r.byteOffset),e=new DataView(n.buffer,n.byteOffset),i=r.length%4,s=r.length-i;for(let r=0;r<s;r+=4)if(t.getUint32(r)!==e.getUint32(r))return!1;for(let t=s;t<r.length;t++)if(r[t]!==n[t])return!1;return!0}return!1}const zn=Cr("Ethereum Signed Message:\n"),Nn=Cr("<Bytes>"),En=Cr("</Bytes>"),Yn=Nn.length+En.length;function Rn(t,e){return t.length>=Yn&&On(t.subarray(0,Nn.length),Nn)&&On(t.slice(-En.length),En)||e&&t.length>=zn.length&&On(t.subarray(0,zn.length),zn)}var In=__webpack_require__(74841);function Bn({coder:t,ipfsChar:e},r){return(n,i)=>(r(n,i),t.decode(e&&i?n.substr(1):n))}function Xn({coder:t,ipfsChar:e}){return(r,n)=>{const i=t.encode(Cr(r));return e&&n?`${e}${i}`:i}}function Vn(t){return(e,r)=>{try{return t(e,r)}catch(t){return!1}}}function Cn({alphabet:t,ipfsChar:e,regex:r,type:n}){return(i,s)=>{if(At(i&&"string"==typeof i,(()=>`Expected non-null, non-empty ${n} string input`)),e&&s&&At(i[0]===e,(()=>`Expected ipfs-compatible ${n} to start with '${e}'`)),r)At(r.test(i),`Invalid ${n} encoding`);else for(let e=s?1:0;e<i.length;e++)At(t.includes(i[e]),(()=>`Invalid ${n} character "${i[e]}" (0x${i.charCodeAt(e).toString(16)}) at index ${e}`));return!0}}const Wn={alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:In.Jq,ipfsChar:"z",type:"base58"},qn=Cn(Wn),Zn=Bn(Wn,qn),Fn=Xn(Wn),Un=(Vn(qn),ze("SS58PRE"));function Gn(t){return Ur(Zr(Un,t),512)}const _n={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],bifrost:["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],centrifuge:["0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],"dock-mainnet":["0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],"nodle-chain":["0xa3d114c2b8d0627c1aa9b134eafcf7d05ca561fdc19fb388bb9457f81809fb23"],plasm:["0x3e86364d4b4894021cb2a0390bcf2feb5517d5292f2de2bb9404227e908b0b8b"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"]},Kn={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},Jn={centrifuge:747,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,kusama:434,"nodle-chain":1003,polkadot:354,polymesh:595,statemine:434},Qn={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,subspace_testnet:!0,"zero-alphaville":!0},$n=[0,2,42],ti=["testnet"];const ei=[{decimals:[10],displayName:"Polkadot Relay Chain",network:"polkadot",prefix:0,standardAccount:"*25519",symbols:["DOT"],website:"https://polkadot.network"},{decimals:null,displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",network:"BareSr25519",prefix:1,standardAccount:"Sr25519",symbols:null,website:null},{decimals:[12],displayName:"Kusama Relay Chain",network:"kusama",prefix:2,standardAccount:"*25519",symbols:["KSM"],website:"https://kusama.network"},{decimals:null,displayName:"Bare 32-bit Ed25519 public key.",network:"BareEd25519",prefix:3,standardAccount:"Ed25519",symbols:null,website:null},{decimals:null,displayName:"Katal Chain",network:"katalchain",prefix:4,standardAccount:"*25519",symbols:null,website:null},{decimals:[15],displayName:"Plasm Network",network:"plasm",prefix:5,standardAccount:"*25519",symbols:["PLM"],website:"https://plasmnet.io"},{decimals:[12],displayName:"Bifrost",network:"bifrost",prefix:6,standardAccount:"*25519",symbols:["BNC"],website:"https://bifrost.finance/"},{decimals:[18],displayName:"Edgeware",network:"edgeware",prefix:7,standardAccount:"*25519",symbols:["EDG"],website:"https://edgewa.re"},{decimals:[12],displayName:"Karura",network:"karura",prefix:8,standardAccount:"*25519",symbols:["KAR"],website:"https://karura.network/"},{decimals:[18],displayName:"Laminar Reynolds Canary",network:"reynolds",prefix:9,standardAccount:"*25519",symbols:["REY"],website:"http://laminar.network/"},{decimals:[12],displayName:"Acala",network:"acala",prefix:10,standardAccount:"*25519",symbols:["ACA"],website:"https://acala.network/"},{decimals:[18],displayName:"Laminar",network:"laminar",prefix:11,standardAccount:"*25519",symbols:["LAMI"],website:"http://laminar.network/"},{decimals:[6],displayName:"Polymesh",network:"polymesh",prefix:12,standardAccount:"*25519",symbols:["POLYX"],website:"https://polymath.network/"},{decimals:[12],displayName:"Integritee",network:"integritee",prefix:13,standardAccount:"*25519",symbols:["TEER"],website:"https://integritee.network"},{decimals:[0],displayName:"Totem",network:"totem",prefix:14,standardAccount:"*25519",symbols:["TOTEM"],website:"https://totemaccounting.com"},{decimals:[12],displayName:"Synesthesia",network:"synesthesia",prefix:15,standardAccount:"*25519",symbols:["SYN"],website:"https://synesthesia.network/"},{decimals:[12],displayName:"Kulupu",network:"kulupu",prefix:16,standardAccount:"*25519",symbols:["KLP"],website:"https://kulupu.network/"},{decimals:null,displayName:"Dark Mainnet",network:"dark",prefix:17,standardAccount:"*25519",symbols:null,website:null},{decimals:[9,9],displayName:"Darwinia Network",network:"darwinia",prefix:18,standardAccount:"*25519",symbols:["RING","KTON"],website:"https://darwinia.network/"},{decimals:[12],displayName:"GeekCash",network:"geek",prefix:19,standardAccount:"*25519",symbols:["GEEK"],website:"https://geekcash.org"},{decimals:[12],displayName:"Stafi",network:"stafi",prefix:20,standardAccount:"*25519",symbols:["FIS"],website:"https://stafi.io"},{decimals:[6],displayName:"Dock Testnet",network:"dock-testnet",prefix:21,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:[6],displayName:"Dock Mainnet",network:"dock-mainnet",prefix:22,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:null,displayName:"ShiftNrg",network:"shift",prefix:23,standardAccount:"*25519",symbols:null,website:null},{decimals:[18],displayName:"ZERO",network:"zero",prefix:24,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:[18],displayName:"ZERO Alphaville",network:"zero-alphaville",prefix:25,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:[10],displayName:"Jupiter",network:"jupiter",prefix:26,standardAccount:"*25519",symbols:["jDOT"],website:"https://jupiter.patract.io"},{decimals:null,displayName:"Subsocial",network:"subsocial",prefix:28,standardAccount:"*25519",symbols:null,website:null},{decimals:[12,12],displayName:"CORD Network",network:"cord",prefix:29,standardAccount:"*25519",symbols:["DHI","WAY"],website:"https://cord.network/"},{decimals:[12],displayName:"Phala Network",network:"phala",prefix:30,standardAccount:"*25519",symbols:["PHA"],website:"https://phala.network"},{decimals:[12],displayName:"Litentry Network",network:"litentry",prefix:31,standardAccount:"*25519",symbols:["LIT"],website:"https://litentry.com/"},{decimals:[9],displayName:"Robonomics",network:"robonomics",prefix:32,standardAccount:"*25519",symbols:["XRT"],website:"https://robonomics.network"},{decimals:null,displayName:"DataHighway",network:"datahighway",prefix:33,standardAccount:"*25519",symbols:null,website:null},{decimals:[12],displayName:"Ares Protocol",network:"ares",prefix:34,standardAccount:"*25519",symbols:["ARES"],website:"https://www.aresprotocol.com/"},{decimals:[15],displayName:"Valiu Liquidity Network",network:"vln",prefix:35,standardAccount:"*25519",symbols:["USDv"],website:"https://valiu.com/"},{decimals:[18],displayName:"Centrifuge Chain",network:"centrifuge",prefix:36,standardAccount:"*25519",symbols:["CFG"],website:"https://centrifuge.io/"},{decimals:[18],displayName:"Nodle Chain",network:"nodle",prefix:37,standardAccount:"*25519",symbols:["NODL"],website:"https://nodle.io/"},{decimals:[18],displayName:"KILT Chain",network:"kilt",prefix:38,standardAccount:"*25519",symbols:["KILT"],website:"https://kilt.io/"},{decimals:[18],displayName:"MathChain mainnet",network:"mathchain",prefix:39,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:[18],displayName:"MathChain testnet",network:"mathchain-testnet",prefix:40,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:null,displayName:"Polimec Chain",network:"poli",prefix:41,standardAccount:"*25519",symbols:null,website:"https://polimec.io/"},{decimals:null,displayName:"Substrate",network:"substrate",prefix:42,standardAccount:"*25519",symbols:null,website:"https://substrate.io/"},{decimals:null,displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",network:"BareSecp256k1",prefix:43,standardAccount:"secp256k1",symbols:null,website:null},{decimals:[8],displayName:"ChainX",network:"chainx",prefix:44,standardAccount:"*25519",symbols:["PCX"],website:"https://chainx.org/"},{decimals:[12,12],displayName:"UniArts Network",network:"uniarts",prefix:45,standardAccount:"*25519",symbols:["UART","UINK"],website:"https://uniarts.me"},{decimals:null,displayName:"This prefix is reserved.",network:"reserved46",prefix:46,standardAccount:null,symbols:null,website:null},{decimals:null,displayName:"This prefix is reserved.",network:"reserved47",prefix:47,standardAccount:null,symbols:null,website:null},{decimals:[12],displayName:"Neatcoin Mainnet",network:"neatcoin",prefix:48,standardAccount:"*25519",symbols:["NEAT"],website:"https://neatcoin.org"},{decimals:[12],displayName:"Picasso",network:"picasso",prefix:49,standardAccount:"*25519",symbols:["PICA"],website:"https://picasso.composable.finance"},{decimals:[12],displayName:"Composable",network:"composable",prefix:50,standardAccount:"*25519",symbols:["LAYR"],website:"https://composable.finance"},{decimals:[9],displayName:"xx network",network:"xxnetwork",prefix:55,standardAccount:"*25519",symbols:["XX"],website:"https://xx.network"},{decimals:[12],displayName:"HydraDX",network:"hydradx",prefix:63,standardAccount:"*25519",symbols:["HDX"],website:"https://hydradx.io"},{decimals:[18],displayName:"AvN Mainnet",network:"aventus",prefix:65,standardAccount:"*25519",symbols:["AVT"],website:"https://aventus.io"},{decimals:[12],displayName:"Crust Network",network:"crust",prefix:66,standardAccount:"*25519",symbols:["CRU"],website:"https://crust.network"},{decimals:[0,9,9,9,9,9,9,9],displayName:"Equilibrium Network",network:"equilibrium",prefix:67,standardAccount:"*25519",symbols:["Unknown","USD","EQ","ETH","BTC","EOS","DOT","CRV"],website:"https://equilibrium.io"},{decimals:[18],displayName:"SORA Network",network:"sora",prefix:69,standardAccount:"*25519",symbols:["XOR"],website:"https://sora.org"},{decimals:[10],displayName:"Zeitgeist",network:"zeitgeist",prefix:73,standardAccount:"*25519",symbols:["ZTG"],website:"https://zeitgeist.pm"},{decimals:[12],displayName:"Manta network",network:"manta",prefix:77,standardAccount:"*25519",symbols:["MA"],website:"https://manta.network"},{decimals:[12],displayName:"Calamari: Manta Canary Network",network:"calamari",prefix:78,standardAccount:"*25519",symbols:["KMA"],website:"https://manta.network"},{decimals:[12],displayName:"Polkadex Mainnet",network:"polkadex",prefix:88,standardAccount:"*25519",symbols:["PDEX"],website:"https://polkadex.trade"},{decimals:[18],displayName:"PolkaSmith Canary Network",network:"polkasmith",prefix:98,standardAccount:"*25519",symbols:["PKS"],website:"https://polkafoundry.com"},{decimals:[18],displayName:"PolkaFoundry Network",network:"polkafoundry",prefix:99,standardAccount:"*25519",symbols:["PKF"],website:"https://polkafoundry.com"},{decimals:[18],displayName:"OriginTrail Parachain",network:"origintrail-parachain",prefix:101,standardAccount:"secp256k1",symbols:["TRAC"],website:"https://origintrail.io"},{decimals:[10],displayName:"Pontem Network",network:"pontem-network",prefix:105,standardAccount:"*25519",symbols:["PONT"],website:"https://pontem.network"},{decimals:[12],displayName:"Heiko",network:"heiko",prefix:110,standardAccount:"*25519",symbols:["HKO"],website:"https://parallel.fi/"},{decimals:null,displayName:"Integritee Incognito",network:"integritee-incognito",prefix:113,standardAccount:"*25519",symbols:null,website:"https://integritee.network"},{decimals:[18],displayName:"Clover Finance",network:"clover",prefix:128,standardAccount:"*25519",symbols:["CLV"],website:"https://clover.finance"},{decimals:[18],displayName:"Altair",network:"altair",prefix:136,standardAccount:"*25519",symbols:["AIR"],website:"https://centrifuge.io/"},{decimals:[12],displayName:"Parallel",network:"parallel",prefix:172,standardAccount:"*25519",symbols:["PARA"],website:"https://parallel.fi/"},{decimals:[18],displayName:"Social Network",network:"social-network",prefix:252,standardAccount:"*25519",symbols:["NET"],website:"https://social.network"},{decimals:[15],displayName:"QUARTZ by UNIQUE",network:"quartz_mainnet",prefix:255,standardAccount:"*25519",symbols:["QTZ"],website:"https://unique.network"},{decimals:[18],displayName:"Pioneer Network by Bit.Country",network:"pioneer_network",prefix:268,standardAccount:"*25519",symbols:["NEER"],website:"https://bit.country"},{decimals:[18],displayName:"Moonbeam",network:"moonbeam",prefix:1284,standardAccount:"secp256k1",symbols:["GLMR"],website:"https://moonbeam.network"},{decimals:[18],displayName:"Moonriver",network:"moonriver",prefix:1285,standardAccount:"secp256k1",symbols:["MOVR"],website:"https://moonbeam.network"},{decimals:[12],displayName:"Kapex",network:"kapex",prefix:2007,standardAccount:"*25519",symbols:["KAPEX"],website:"https://totemaccounting.com"},{decimals:[18],displayName:"Subspace testnet",network:"subspace_testnet",prefix:2254,standardAccount:"*25519",symbols:["tSSC"],website:"https://subspace.network"},{decimals:[18],displayName:"Subspace",network:"subspace",prefix:6094,standardAccount:"*25519",symbols:["SSC"],website:"https://subspace.network"},{decimals:[12],displayName:"Basilisk",network:"basilisk",prefix:10041,standardAccount:"*25519",symbols:["BSX"],website:"https://bsx.fi"},{decimals:[12],displayName:"CESS Testnet",network:"cess-testnet",prefix:10042,standardAccount:"*25519",symbols:["TCESS"],website:"https://cess.cloud"},{decimals:[12],displayName:"CESS",network:"cess",prefix:10043,standardAccount:"*25519",symbols:["CESS"],website:"https://cess.cloud"},{decimals:[18],displayName:"Automata ContextFree",network:"contextfree",prefix:11820,standardAccount:"*25519",symbols:["CTX"],website:"https://ata.network"}].map((function(t){const e=t.network||"",r=e.replace(/_/g,"-").split("-"),n=t;return n.slip44=Jn[e],n.hasLedgerSupport=!!n.slip44,n.genesisHash=_n[e]||[],n.icon=Kn[e]||"substrate",n.isTestnet=!!Qn[e]||ti.includes(r[r.length-1]),n.isIgnored=n.isTestnet||!(t.standardAccount&&t.decimals&&t.symbols)&&42!==t.prefix,n})).filter((function(t){return!t.isIgnored&&!!t.network})).sort((function(t,e){const r=$n.includes(t.prefix),n=$n.includes(e.prefix);return r===n?0:r?-1:n?1:t.displayName.localeCompare(e.displayName)})),ri=ei.filter((function({genesisHash:t,prefix:e}){return!!t.length||42===e}));const ni={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:ei.map((function({prefix:t}){return t})),prefix:42};function ii(t,e,r=-1){if(At(t,"Invalid empty address passed"),Vr(t)||Nt(t))return Cr(t);try{const n=Zn(t);At(ni.allowedEncodedLengths.includes(n.length),"Invalid decoded address length");const[i,s,o,a]=function(t){const e=64&t[0]?2:1,r=1===e?t[0]:(63&t[0])<<2|t[1]>>6|(63&t[1])<<8,n=[34+e,35+e].includes(t.length),i=t.length-(n?2:1),s=Gn(t.subarray(0,i));return[0==(128&t[0])&&![46,47].includes(t[0])&&(n?t[t.length-2]===s[0]&&t[t.length-1]===s[1]:t[t.length-1]===s[0]),i,e,r]}(n);return At(e||i,"Invalid decoded address checksum"),At([-1,a].includes(r),(()=>`Expected ss58Format ${r}, received ${a}`)),n.slice(o,s)}catch(e){throw new Error(`Decoding ${t}: ${e.message}`)}}function si(t,e,r,n=!1){const i=Cr(t),s=Cr(r),o=Cr(e);return At(32===s.length,(()=>`Invalid publicKey, received ${s.length}, expected 32`)),At(64===o.length,(()=>`Invalid signature, received ${o.length} bytes, expected 64`)),jr()&&!n?mr(o,i,s):Jt.sign.detached.verify(i,o,s)}function oi(t,e,r){const n=Cr(r),i=Cr(e);return At(32===n.length,(()=>`Invalid publicKey, received ${n.length} bytes, expected 32`)),At(64===i.length,(()=>`Invalid signature, received ${i.length} bytes, expected 64`)),wr(i,Cr(t),n)}const ai=t=>(e,r,n)=>function(t,e,r,n="blake2"){const i="keccak"===n,s=Cr(e);At(65===s.length,`Expected signature with 65 bytes, ${s.length} found instead`);const o=new Uint8Array(_t.recoverPubKey(Jr(n,t),{r:s.slice(0,32),s:s.slice(32,64)},s[64]).encodeCompressed()),a=Jr(n,i?$r(o):o),u=Cr(r);return i?On(a.slice(-20),u.slice(-20)):On(a,u)}(e,r,n,t),ui=[["ecdsa",ai("blake2")],["ethereum",ai("keccak")]],hi=[["ed25519",si],["sr25519",oi],...ui],ci=["ed25519","sr25519","ecdsa"];function li(t,{message:e,publicKey:r,signature:n},i=hi){return t.isValid=i.some((([i,s])=>{try{if(s(e,n,r))return t.crypto=i,!0}catch(t){}return!1})),t}function di(t,{message:e,publicKey:r,signature:n}){At([0,1,2].includes(n[0]),(()=>`Unknown crypto type, expected signature prefix [0..2], found ${n[0]}`));const i=ci[n[0]]||"none";t.crypto=i;try{t.isValid={ecdsa:()=>li(t,{message:e,publicKey:r,signature:n.subarray(1)},ui).isValid,ed25519:()=>si(e,n.subarray(1),r),none:()=>{throw Error("no verify for `none` crypto type")},sr25519:()=>oi(e,n.subarray(1),r)}[i]()}catch(t){}return t}function fi(t,e,r){const n=Cr(e);At([64,65,66].includes(n.length),(()=>`Invalid signature length, expected [64..66] bytes, found ${n.length}`));const i=ii(r),s={message:Cr(t),publicKey:i,signature:n},o={crypto:"none",isValid:!1,isWrapped:Rn(s.message,!0),publicKey:i},a=Rn(s.message,!1),u=function(t){return[0,1,2].includes(t[0])&&[65,66].includes(t.length)?di:li}(n);return u(o,s),"none"!==o.crypto||o.isWrapped&&!a?o:(s.message=a?function(t){const e=Cr(t);return Rn(e,!1)?e.subarray(Nn.length,e.length-En.length):e}(s.message):function(t){const e=Cr(t);return Rn(e,!0)?e:Zr(Nn,e,En)}(s.message),u(o,s))}const pi=new Uint8Array;const mi=new Uint8Array;function yi(t){return void 0===t}const vi={isLe:!0,isNegative:!1};function gi(t,e=vi){return Rt(en(t),e)}const bi={N:32768,p:1,r:8};var wi=__webpack_require__(73151);var Mi=__webpack_require__(23085).Buffer;function ki(t){return Mi.from(t||[])}function xi(t,e=Hn(),r=bi,n=!1){const i=Cr(t);var s;return{params:r,password:jr()&&!n?Sr(i,e,Math.log2(r.N),r.r,r.p):(s=wi(ki(i),ki(e),r.N,r.r,r.p,64),new Uint8Array(s||[])),salt:e}}const Pi=["scrypt","xsalsa20-poly1305"],Li=["none"];function Ti(t,e,r=Pi){At(t,"No encrypted data available to decode"),At(e||!r.includes("xsalsa20-poly1305"),"Password required to decode encrypted data");let n=t;if(e){let i;if(r.includes("scrypt")){const{params:r,salt:n}=function(t){const e=t.subarray(0,32),r=gi(t.subarray(32,36),Ct).toNumber(),n=gi(t.subarray(36,40),Ct).toNumber(),i=gi(t.subarray(40,44),Ct).toNumber();return At(r===bi.N&&n===bi.p&&i===bi.r,"Invalid injected scrypt params found"),{params:{N:r,p:n,r:i},salt:e}}(t);i=xi(e,n,r).password,t=t.subarray(44)}else i=ze(e);n=function(t,e,r){return Jt.secretbox.open(t,e,r)||null}(t.subarray(24),t.subarray(0,24),function(t,e=-1,r=!1){const n=Math.ceil(e/8);if(-1===e||t.length===n)return t;if(t.length>n)return t.subarray(0,n);const i=new Uint8Array(n);return i.set(t,r?0:n-t.length),i}(i,256,!0))}return At(n,"Unable to decode using the supplied passphrase"),n}const Si=new Uint8Array([161,35,3,33,0]),Ai=new Uint8Array([48,83,2,1,1,48,5,6,3,43,101,112,4,34,4,32]),Di=Ai.length;function ji(t,e,r=Hn(24)){return{encrypted:Jt.secretbox(t,r,e),nonce:r}}function Hi(t,{N:e,p:r,r:n}){return Zr(t,Vt(e,Zt),Vt(r,Zt),Vt(n,Zt))}const Oi={alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",coder:In.US,regex:/^(?:[A-Za-z0-9+/]{2}[A-Za-z0-9+/]{2})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/,type:"base64"},zi=Cn(Oi),Ni=(Vn(zi),Bn(Oi,zi)),Ei=Xn(Oi);function Yi(t,e,r){return{encoded:Ei(t),encoding:{content:e,type:r?Pi:Li,version:"3"}}}const Ri=new Uint8Array,Ii={ecdsa:Kt,ed25519:Hr,ethereum:Kt,sr25519:qr},Bi={ecdsa:new Uint8Array([2]),ed25519:new Uint8Array([0]),ethereum:new Uint8Array([2]),sr25519:new Uint8Array([1])},Xi={ecdsa:(t,e)=>Qr(t,e,"blake2"),ed25519:function(t,{publicKey:e,secretKey:r},n=!1){At(r,"Expected a valid secretKey");const i=Cr(t);return jr()&&!n?pr(e,r.subarray(0,32),i):Jt.sign.detached(i,r)},ethereum:(t,e)=>Qr(t,e,"keccak"),sr25519:function(t,{publicKey:e,secretKey:r}){return At(32===(null==e?void 0:e.length),"Expected a valid publicKey, 32-bytes"),At(64===(null==r?void 0:r.length),"Expected a valid secretKey, 64-bytes"),br(e,r,Cr(t))}},Vi={ecdsa:t=>t.length>32?Ur(t):t,ed25519:t=>t,ethereum:t=>20===t.length?t:_r($r(t)),sr25519:t=>t};function Ci(t){return!t||function(t){for(let e=0;e<t.length;e++)if(t[e])return!1;return!0}(t)}function Wi(t,e,r){return Ur(Mt(e||"",r||"",t))}function qi({toSS58:t,type:e},{publicKey:r,secretKey:n},i={},s=null,o){const a=(t,i)=>{const a=function(t,e,r){const n=Ti(e,t,Array.isArray(r)||yi(r)?r:[r]);nt(Lt(n.subarray(0,Ai.length),Ai),"Invalid Pkcs8 header found in body");let i=n.subarray(Di,Di+64),s=Di+64,o=n.subarray(s,s+Si.length);Lt(o,Si)||(s=Di+32,i=n.subarray(Di,s),o=n.subarray(s,s+Si.length),nt(Lt(o,Si),"Invalid Pkcs8 divider found in body"));const a=s+Si.length;return{publicKey:n.subarray(a,a+32),secretKey:i}}(t,i||s,o);if(64===a.secretKey.length)r=a.publicKey,n=a.secretKey;else{const t=Ii[e](a.secretKey);r=t.publicKey,n=t.secretKey}},u=t=>(Ci(n)&&s&&a(t,s),s=function({publicKey:t,secretKey:e},r){nt(e,"Expected a valid secretKey to be passed to encode");const n=Mt(Ai,e,Si,t);if(!r)return n;const{params:i,password:s,salt:o}=xi(r),{encrypted:a,nonce:u}=ji(n,s.subarray(0,32));return Mt(Hi(o,i),u,a)}({publicKey:r,secretKey:n},t),o=void 0,s),h=()=>{const n=Vi[e](r);return"ethereum"===e?rn(n):t(n)};return{get address(){return h()},get addressRaw(){const t=Vi[e](r);return"ethereum"===e?t.slice(-20):t},get isLocked(){return Ci(n)},get meta(){return i},get publicKey(){return r},get type(){return e},decodePkcs8:a,decryptMessage:(t,r)=>{nt(!Ci(n),"Cannot encrypt with a locked key pair"),nt(!["ecdsa","ethereum"].includes(e),"Secp256k1 not supported yet");const i=wt(t);return s=i.slice(24,i.length),o=i.slice(0,24),a=on(wt(r)),u=sn(n),Jt.box.open(s,o,a,u)||null;var s,o,a,u},derive:(i,s)=>{nt("ethereum"!==e,"Unable to derive on this keypair"),nt(!Ci(n),"Cannot derive on a locked keypair");const{path:o}=wn(i),a=jn({publicKey:r,secretKey:n},o,e);return qi({toSS58:t,type:e},a,s,null)},encodePkcs8:t=>u(t),encryptMessage:(t,r,i)=>{nt(!Ci(n),"Cannot encrypt with a locked key pair"),nt(!["ecdsa","ethereum"].includes(e),"Secp256k1 not supported yet");const{nonce:s,sealed:o}=function(t,e,r,n=Hn(24)){return{nonce:n,sealed:Jt.box(t,n,r,e)}}(wt(t),sn(n),on(wt(r)),i);return Mt(s,o)},lock:()=>{n=new Uint8Array},setMeta:t=>{i=kt({},i,t)},sign:(t,i={})=>(nt(!Ci(n),"Cannot sign with a locked key pair"),Mt(i.withType?Bi[e]:Ri,Xi[e](wt(t),{publicKey:r,secretKey:n}))),toJson:t=>{const n=["ecdsa","ethereum"].includes(e)?20===r.length?Pt(r):Pt(function(t){return At([33,65].includes(t.length),"Invalid publicKey provided"),new Uint8Array(_t.keyFromPublic(t).getPublic().encodeCompressed())}(r)):h();return function(t,{address:e,meta:r},n,i){return kt(Yi(n,["pkcs8",t],i),{address:e,meta:r})}(e,{address:n,meta:i},u(t),!!t)},unlock:t=>a(t),verify:(t,r,n)=>fi(t,r,Vi[e](wt(n))).isValid,vrfSign:(t,i,s)=>{if(nt(!Ci(n),"Cannot sign with a locked key pair"),"sr25519"===e)return function(t,{secretKey:e},r=pi,n=pi){return At(64===(null==e?void 0:e.length),"Invalid secretKey, expected 64-bytes"),Mr(e,Cr(r),Cr(t),Cr(n))}(t,{secretKey:n},i,s);const o=Xi[e](wt(t),{publicKey:r,secretKey:n});return Mt(Wi(o,i,s),o)},vrfVerify:(t,n,i,s,o)=>{if("sr25519"===e)return function(t,e,r,n=mi,i=mi){const s=Cr(r),o=Cr(e);return At(32===s.length,"Invalid publicKey, expected 32-bytes"),At(96===o.length,"Invalid vrfSign output, expected 96 bytes"),kr(s,Cr(n),Cr(t),Cr(i),o)}(t,n,r,s,o);return fi(t,Mt(Bi[e],n.subarray(32)),Vi[e](wt(i))).isValid&&Lt(n.subarray(0,32),Wi(n.subarray(32),s,o))}}}const Zi=ri.filter((t=>t.genesisHash.length)).reduce(((t,{genesisHash:e,network:r})=>function(t,...e){for(let n=0;n<e.length;n++){const i=e[n];if(i){const e=(r=i,Object.keys(r));for(let r=0;r<e.length;r++){const n=e[r];t[n]=i[n]}}}var r;return t}(t,{[r]:e})),{});function Fi(t,...e){for(let n=0;n<e.length;n++){const i=e[n];if(i){const e=(r=i,Object.keys(r));for(let r=0;r<e.length;r++){const n=e[r];t[n]=i[n]}}}var r;return t}const Ui=new Array(256),Gi=new Array(65536),_i={},Ki={};for(let t=0;t<256;t++){const e=t.toString(16).padStart(2,"0");Ui[t]=e,_i[e]=t}for(let t=0;t<256;t++)for(let e=0;e<256;e++){const r=Ui[t]+Ui[e],n=256*t+e;Gi[n]=r,Ki[r]=n}const Ji=/^0x[\da-fA-F]+$/,Qi=/^[\da-fA-F]+$/;function $i(t,e=-1,r=!1){return!("string"!=typeof t||"0x"!==t&&!Ji.test(t))&&(-1===e?!!r||t.length%2==0:t.length===2+Math.ceil(e/4))}function ts(t){if(!t||"0x"===t)return"";if(Ji.test(t))return t.substr(2);if(Qi.test(t))return t;throw new Error(`Expected hex value to convert, found '${t}'`)}function es(t,e=-1){if(!t)return new Uint8Array;const r=ts(t).toLowerCase(),n=r.length/2,i=Math.ceil(-1===e?n:e/8),s=new Uint8Array(i),o=i>n?i-n:0,a=new DataView(s.buffer,o),u=(i-o)%2,h=i-o-u;for(let t=0;t<h;t+=2)a.setUint16(t,Ki[r.substr(2*t,4)]);return u&&a.setUint8(h,_i[r.substr(r.length-2,2)]),s}var rs=__webpack_require__(23085).Buffer,ns=__webpack_require__(34155);const is=void 0!==rs,ss="object"==typeof ns;var os=__webpack_require__(23085).Buffer;function as(t){return is&&os.isBuffer(t)}function us(t){return t instanceof Uint8Array}const hs=void 0===q.TextEncoder?class{encode(t){const e=new Uint8Array(t.length);for(let r=0;r<t.length;r++)e[r]=t.charCodeAt(r);return e}}:q.TextEncoder,cs=new hs;function ls(t){return t?cs.encode(t.toString()):new Uint8Array}function ds(t){return t?$i(t)?es(t):F(t)?ls(t):Array.isArray(t)||as(t)?new Uint8Array(t):(_(us(t),(()=>`Unable to convert ${t.toString()} (typeof ${typeof t}) to a Uint8Array`)),t):new Uint8Array}function fs(t,e){const r=ds(t),n=ds(e);let i=0;for(;;){const t=i>=r.length,e=i>=n.length;if(t&&e)return 0;if(t)return-1;if(e)return 1;if(r[i]!==n[i])return r[i]>n[i]?1:-1;i++}}var ps=__webpack_require__(52207);function ms(t){return"boolean"==typeof t}const ys={isLe:!1,isNegative:!1};function vs(t,e=ys){if(!t||"0x"===t)return new ps(0);const{isLe:r,isNegative:n}=Fi({isLe:!1,isNegative:!1},ms(e)?{isLe:e}:e),i=ts(t),s=new ps(i,16,r?"le":"be");return n?s.fromTwos(4*i.length):s}function gs(t){return"bigint"==typeof t||t instanceof BigInt}function bs(t){return ps.isBN(t)?t:t?$i(t)?vs(t.toString()):gs(t)?new ps(t.toString()):function(t){return!!t&&Z(t.toBn)}(t)?t.toBn():function(t){return!!t&&Z(t.toBigInt)}(t)?new ps(t.toBigInt().toString()):new ps(t):new ps(0)}const ws=void 0===q.TextDecoder?class{constructor(t){}decode(t){let e="";for(let r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e}}:q.TextDecoder,Ms=new ws("utf-8");function ks(t){return null!=t&&t.length?Ms.decode(t):""}function xs(t,e){const r=Cr(t),n=Cr(e);let i=0;for(;;){const t=i>=r.length,e=i>=n.length;if(t&&e)return 0;if(t)return-1;if(e)return 1;if(r[i]!==n[i])return r[i]>n[i]?1:-1;i++}}function Ps(t){return ii(t)}const Ls=ze("modlpy/utilisuba");function Ts(t,e){return Ur(Zr(Ls,fn(t.length),...(r=t.map(Ps),r.sort(xs)),Vt(e,Wt)));var r}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var Ss=function(t,e){return Ss=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])},Ss(t,e)};function As(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=t}Ss(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}function Ds(t,e,r,n){return new(r||(r=Promise))((function(i,s){function o(t){try{u(n.next(t))}catch(t){s(t)}}function a(t){try{u(n.throw(t))}catch(t){s(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(o,a)}u((n=n.apply(t,e||[])).next())}))}function js(t,e){var r,n,i,s,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(s){return function(a){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(i=2&s[0]?n.return:s[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,s[1])).done)return i;switch(n=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(i=o.trys,(i=i.length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){o.label=s[1];break}if(6===s[0]&&o.label<i[1]){o.label=i[1],i=s;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(s);break}i[2]&&o.ops.pop(),o.trys.pop();continue}s=e.call(t,o)}catch(t){s=[6,t],n=0}finally{r=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,a])}}}Object.create;function Hs(t){var e="function"==typeof Symbol&&Symbol.iterator,r=e&&t[e],n=0;if(r)return r.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function Os(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var n,i,s=r.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(n=s.next()).done;)o.push(n.value)}catch(t){i={error:t}}finally{try{n&&!n.done&&(r=s.return)&&r.call(s)}finally{if(i)throw i.error}}return o}function zs(t,e){for(var r=0,n=e.length,i=t.length;r<n;r++,i++)t[i]=e[r];return t}function Ns(t){return this instanceof Ns?(this.v=t,this):new Ns(t)}function Es(t,e,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,i=r.apply(t,e||[]),s=[];return n={},o("next"),o("throw"),o("return"),n[Symbol.asyncIterator]=function(){return this},n;function o(t){i[t]&&(n[t]=function(e){return new Promise((function(r,n){s.push([t,e,r,n])>1||a(t,e)}))})}function a(t,e){try{(r=i[t](e)).value instanceof Ns?Promise.resolve(r.value.v).then(u,h):c(s[0][2],r)}catch(t){c(s[0][3],t)}var r}function u(t){a("next",t)}function h(t){a("throw",t)}function c(t,e){t(e),s.shift(),s.length&&a(s[0][0],s[0][1])}}function Ys(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,r=t[Symbol.asyncIterator];return r?r.call(t):(t=Hs(t),e={},n("next"),n("throw"),n("return"),e[Symbol.asyncIterator]=function(){return this},e);function n(r){e[r]=t[r]&&function(e){return new Promise((function(n,i){(function(t,e,r,n){Promise.resolve(n).then((function(e){t({value:e,done:r})}),e)})(n,i,(e=t[r](e)).done,e.value)}))}}}Object.create;function Rs(t){return"function"==typeof t}function Is(t){var e=t((function(t){Error.call(t),t.stack=(new Error).stack}));return e.prototype=Object.create(Error.prototype),e.prototype.constructor=e,e}var Bs=Is((function(t){return function(e){t(this),this.message=e?e.length+" errors occurred during unsubscription:\n"+e.map((function(t,e){return e+1+") "+t.toString()})).join("\n  "):"",this.name="UnsubscriptionError",this.errors=e}}));function Xs(t,e){if(t){var r=t.indexOf(e);0<=r&&t.splice(r,1)}}var Vs=function(){function t(t){this.initialTeardown=t,this.closed=!1,this._parentage=null,this._teardowns=null}return t.prototype.unsubscribe=function(){var t,e,r,n,i;if(!this.closed){this.closed=!0;var s=this._parentage;if(s)if(this._parentage=null,Array.isArray(s))try{for(var o=Hs(s),a=o.next();!a.done;a=o.next()){a.value.remove(this)}}catch(e){t={error:e}}finally{try{a&&!a.done&&(e=o.return)&&e.call(o)}finally{if(t)throw t.error}}else s.remove(this);var u=this.initialTeardown;if(Rs(u))try{u()}catch(t){i=t instanceof Bs?t.errors:[t]}var h=this._teardowns;if(h){this._teardowns=null;try{for(var c=Hs(h),l=c.next();!l.done;l=c.next()){var d=l.value;try{qs(d)}catch(t){i=null!=i?i:[],t instanceof Bs?i=zs(zs([],Os(i)),Os(t.errors)):i.push(t)}}}catch(t){r={error:t}}finally{try{l&&!l.done&&(n=c.return)&&n.call(c)}finally{if(r)throw r.error}}}if(i)throw new Bs(i)}},t.prototype.add=function(e){var r;if(e&&e!==this)if(this.closed)qs(e);else{if(e instanceof t){if(e.closed||e._hasParent(this))return;e._addParent(this)}(this._teardowns=null!==(r=this._teardowns)&&void 0!==r?r:[]).push(e)}},t.prototype._hasParent=function(t){var e=this._parentage;return e===t||Array.isArray(e)&&e.includes(t)},t.prototype._addParent=function(t){var e=this._parentage;this._parentage=Array.isArray(e)?(e.push(t),e):e?[e,t]:t},t.prototype._removeParent=function(t){var e=this._parentage;e===t?this._parentage=null:Array.isArray(e)&&Xs(e,t)},t.prototype.remove=function(e){var r=this._teardowns;r&&Xs(r,e),e instanceof t&&e._removeParent(this)},t.EMPTY=function(){var e=new t;return e.closed=!0,e}(),t}(),Cs=Vs.EMPTY;function Ws(t){return t instanceof Vs||t&&"closed"in t&&Rs(t.remove)&&Rs(t.add)&&Rs(t.unsubscribe)}function qs(t){Rs(t)?t():t.unsubscribe()}var Zs={onUnhandledError:null,onStoppedNotification:null,Promise:void 0,useDeprecatedSynchronousErrorHandling:!1,useDeprecatedNextContext:!1},Fs={setTimeout:function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var r=Fs.delegate;return((null==r?void 0:r.setTimeout)||setTimeout).apply(void 0,zs([],Os(t)))},clearTimeout:function(t){var e=Fs.delegate;return((null==e?void 0:e.clearTimeout)||clearTimeout)(t)},delegate:void 0};function Us(t){Fs.setTimeout((function(){var e=Zs.onUnhandledError;if(!e)throw t;e(t)}))}function Gs(){}var _s=Ks("C",void 0,void 0);function Ks(t,e,r){return{kind:t,value:e,error:r}}var Js=null;function Qs(t){if(Zs.useDeprecatedSynchronousErrorHandling){var e=!Js;if(e&&(Js={errorThrown:!1,error:null}),t(),e){var r=Js,n=r.errorThrown,i=r.error;if(Js=null,n)throw i}}else t()}function $s(t){Zs.useDeprecatedSynchronousErrorHandling&&Js&&(Js.errorThrown=!0,Js.error=t)}var to=function(t){function e(e){var r=t.call(this)||this;return r.isStopped=!1,e?(r.destination=e,Ws(e)&&e.add(r)):r.destination=so,r}return As(e,t),e.create=function(t,e,r){return new eo(t,e,r)},e.prototype.next=function(t){this.isStopped?io(function(t){return Ks("N",t,void 0)}(t),this):this._next(t)},e.prototype.error=function(t){this.isStopped?io(Ks("E",void 0,t),this):(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped?io(_s,this):(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,t.prototype.unsubscribe.call(this),this.destination=null)},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){try{this.destination.error(t)}finally{this.unsubscribe()}},e.prototype._complete=function(){try{this.destination.complete()}finally{this.unsubscribe()}},e}(Vs),eo=function(t){function e(e,r,n){var i,s=t.call(this)||this;if(Rs(e))i=e;else if(e){var o;i=e.next,r=e.error,n=e.complete,s&&Zs.useDeprecatedNextContext?(o=Object.create(e)).unsubscribe=function(){return s.unsubscribe()}:o=e,i=null==i?void 0:i.bind(o),r=null==r?void 0:r.bind(o),n=null==n?void 0:n.bind(o)}return s.destination={next:i?ro(i,s):Gs,error:ro(null!=r?r:no,s),complete:n?ro(n,s):Gs},s}return As(e,t),e}(to);function ro(t,e){return function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];try{t.apply(void 0,zs([],Os(e)))}catch(t){Zs.useDeprecatedSynchronousErrorHandling?$s(t):Us(t)}}}function no(t){throw t}function io(t,e){var r=Zs.onStoppedNotification;r&&Fs.setTimeout((function(){return r(t,e)}))}var so={closed:!0,next:Gs,error:no,complete:Gs},oo="function"==typeof Symbol&&Symbol.observable||"@@observable";function ao(t){return t}function uo(t){return 0===t.length?ao:1===t.length?t[0]:function(e){return t.reduce((function(t,e){return e(t)}),e)}}var ho=function(){function t(t){t&&(this._subscribe=t)}return t.prototype.lift=function(e){var r=new t;return r.source=this,r.operator=e,r},t.prototype.subscribe=function(t,e,r){var n,i=this,s=(n=t)&&n instanceof to||function(t){return t&&Rs(t.next)&&Rs(t.error)&&Rs(t.complete)}(n)&&Ws(n)?t:new eo(t,e,r);return Qs((function(){var t=i,e=t.operator,r=t.source;s.add(e?e.call(s,r):r?i._subscribe(s):i._trySubscribe(s))})),s},t.prototype._trySubscribe=function(t){try{return this._subscribe(t)}catch(e){t.error(e)}},t.prototype.forEach=function(t,e){var r=this;return new(e=co(e))((function(e,n){var i;i=r.subscribe((function(e){try{t(e)}catch(t){n(t),null==i||i.unsubscribe()}}),n,e)}))},t.prototype._subscribe=function(t){var e;return null===(e=this.source)||void 0===e?void 0:e.subscribe(t)},t.prototype[oo]=function(){return this},t.prototype.pipe=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return uo(t)(this)},t.prototype.toPromise=function(t){var e=this;return new(t=co(t))((function(t,r){var n;e.subscribe((function(t){return n=t}),(function(t){return r(t)}),(function(){return t(n)}))}))},t.create=function(e){return new t(e)},t}();function co(t){var e;return null!==(e=null!=t?t:Zs.Promise)&&void 0!==e?e:Promise}var lo=Is((function(t){return function(){t(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"}})),fo=function(t){function e(){var e=t.call(this)||this;return e.closed=!1,e.observers=[],e.isStopped=!1,e.hasError=!1,e.thrownError=null,e}return As(e,t),e.prototype.lift=function(t){var e=new po(this,this);return e.operator=t,e},e.prototype._throwIfClosed=function(){if(this.closed)throw new lo},e.prototype.next=function(t){var e=this;Qs((function(){var r,n;if(e._throwIfClosed(),!e.isStopped){var i=e.observers.slice();try{for(var s=Hs(i),o=s.next();!o.done;o=s.next()){o.value.next(t)}}catch(t){r={error:t}}finally{try{o&&!o.done&&(n=s.return)&&n.call(s)}finally{if(r)throw r.error}}}}))},e.prototype.error=function(t){var e=this;Qs((function(){if(e._throwIfClosed(),!e.isStopped){e.hasError=e.isStopped=!0,e.thrownError=t;for(var r=e.observers;r.length;)r.shift().error(t)}}))},e.prototype.complete=function(){var t=this;Qs((function(){if(t._throwIfClosed(),!t.isStopped){t.isStopped=!0;for(var e=t.observers;e.length;)e.shift().complete()}}))},e.prototype.unsubscribe=function(){this.isStopped=this.closed=!0,this.observers=null},Object.defineProperty(e.prototype,"observed",{get:function(){var t;return(null===(t=this.observers)||void 0===t?void 0:t.length)>0},enumerable:!1,configurable:!0}),e.prototype._trySubscribe=function(e){return this._throwIfClosed(),t.prototype._trySubscribe.call(this,e)},e.prototype._subscribe=function(t){return this._throwIfClosed(),this._checkFinalizedStatuses(t),this._innerSubscribe(t)},e.prototype._innerSubscribe=function(t){var e=this,r=e.hasError,n=e.isStopped,i=e.observers;return r||n?Cs:(i.push(t),new Vs((function(){return Xs(i,t)})))},e.prototype._checkFinalizedStatuses=function(t){var e=this,r=e.hasError,n=e.thrownError,i=e.isStopped;r?t.error(n):i&&t.complete()},e.prototype.asObservable=function(){var t=new ho;return t.source=this,t},e.create=function(t,e){return new po(t,e)},e}(ho),po=function(t){function e(e,r){var n=t.call(this)||this;return n.destination=e,n.source=r,n}return As(e,t),e.prototype.next=function(t){var e,r;null===(r=null===(e=this.destination)||void 0===e?void 0:e.next)||void 0===r||r.call(e,t)},e.prototype.error=function(t){var e,r;null===(r=null===(e=this.destination)||void 0===e?void 0:e.error)||void 0===r||r.call(e,t)},e.prototype.complete=function(){var t,e;null===(e=null===(t=this.destination)||void 0===t?void 0:t.complete)||void 0===e||e.call(t)},e.prototype._subscribe=function(t){var e,r;return null!==(r=null===(e=this.source)||void 0===e?void 0:e.subscribe(t))&&void 0!==r?r:Cs},e}(fo),mo=function(t){function e(e){var r=t.call(this)||this;return r._value=e,r}return As(e,t),Object.defineProperty(e.prototype,"value",{get:function(){return this.getValue()},enumerable:!1,configurable:!0}),e.prototype._subscribe=function(e){var r=t.prototype._subscribe.call(this,e);return!r.closed&&e.next(this._value),r},e.prototype.getValue=function(){var t=this,e=t.hasError,r=t.thrownError,n=t._value;if(e)throw r;return this._throwIfClosed(),n},e.prototype.next=function(e){t.prototype.next.call(this,this._value=e)},e}(fo);const yo=new mo(!1),vo={isDevelopment:()=>yo.getValue(),set:t=>{yo.next(t)},subject:yo};const go=/^(\w+( \w+)*)((\/\/?[^/]+)*)(\/\/\/(.*))?$/;var bo=__webpack_require__(33715);function wo(t,e){return function(t,e,r){return Uint8Array.from(bo.hmac(r?bo.sha512:bo.sha256,t).update(e).digest())}(t,e,!0)}function Mo(t,e,r,n=64){let i=new Uint8Array,s=0;const o=Zr(e,new Uint8Array(4));for(;i.length<n;){s++,o.set(Vt(s,qt),e.length);let n=wo(t,o);const a=n;let u=0;for(;++u<r;){n=wo(t,n);let e=-1;for(;++e<n.length;)a[e]^=n[e]}i=Zr(i,a)}return i.slice(0,n)}function ko(t,e=Hn(),r=2048,n=!1){const i=Cr(t),s=Cr(e);return{password:jr()&&!n?Tr(i,s,r):Mo(i,s,r),rounds:r,salt:e}}function xo(t,e=!1){return function(t,e=256,r=!1){const n=256===e,i=Cr(t);return jr()&&!r?n?Ar(i):Dr(i):new Uint8Array(n?bo.sha256().update(i).digest():bo.sha512().update(i).digest())}(t,256,e)}const Po="abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nchild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nkey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nseed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\ntypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo".split("\n"),Lo="Invalid mnemonic",To="Invalid entropy";function So(t){return(t||"").normalize("NFKD")}function Ao(t){return parseInt(t,2)}function Do(t){return t.map((t=>t.toString(2).padStart(8,"0"))).join("")}function jo(t){return Do(Array.from(xo(t))).slice(0,8*t.length/32)}function Ho(t,e){return ko(ze(So(t)),ze(`mnemonic${So(e)}`)).password}function Oo(t){var e;const r=So(t).split(" ");At(r.length%3==0,Lo);const n=r.map((t=>{const e=Po.indexOf(t);return At(-1!==e,Lo),e.toString(2).padStart(11,"0")})).join(""),i=32*Math.floor(n.length/33),s=n.slice(0,i),o=n.slice(i),a=null===(e=s.match(/(.{1,8})/g))||void 0===e?void 0:e.map(Ao);At(a&&a.length%4==0&&a.length>=16&&a.length<=32,To);const u=Cr(a);return At(jo(u)===o,"Invalid mnemonic checksum"),u}function zo(t){return At((t=t||128)%32==0,To),At((e=Hn(t/8)).length%4==0&&e.length>=16&&e.length<=32,To),(Do(Array.from(e))+jo(e)).match(/(.{1,11})/g).map((t=>Po[Ao(t)])).join(" ");var e}function No(t,e=!1){return jr()&&!e?dr(t):function(t){try{Oo(t)}catch(t){return!1}return!0}(t)}function Eo(t,e="",r=!1){if(At(No(t),"Invalid bip39 mnemonic specified"),jr()&&!r)return cr(t,e);const n=function(t,e=!1){return jr()&&!e?hr(t):Oo(t)}(t);return ko(n,ze(`mnemonic${e}`)).password.slice(0,32)}const Yo=new Ht("ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141".replace(/ /g,""),"hex");const Ro=2147483648;const Io=ze("Bitcoin seed");function Bo(t,e){return{chainCode:e,publicKey:Kt(t).publicKey,secretKey:t}}function Xo(t,e){const r=Vt(e,qt),n=e>=Ro?Zr(new Uint8Array(1),t.secretKey,r):Zr(t.publicKey,r);try{const e=wo(t.chainCode,n);return Bo(function(t,e){At(Vr(t)&&32===t.length,"Expected seckey to be an Uint8Array with length 32"),At(Vr(e)&&32===e.length,"Expected tweak to be an Uint8Array with length 32");const r=new Ht(e);return At(r.cmp(Yo)<0,"Tweak parameter is out of range"),r.iadd(new Ht(t)),r.cmp(Yo)>=0&&r.isub(Yo),At(!r.isZero(),"Invalid resulting private key"),Vt(r,Ft)}(t.secretKey,e.slice(0,32)),e.slice(32))}catch(r){return Xo(t,e+1)}}function Vo(t,e=""){const r=wo(Io,t);let n=Bo(r.slice(0,32),r.slice(32));if(!e||"m"===e||"M"===e||"m'"===e||"M'"===e)return n;At(function(t){if(!t.startsWith("m/"))return!1;const e=t.split("/").slice(1);for(const t of e){const e=/^\d+'?$/.test(t)?parseInt(t.replace(/'$/,""),10):Number.NaN;if(isNaN(e)||e>=Ro||e<0)return!1}return!0}(e),"Invalid derivation path");const i=e.split("/").slice(1);for(const t of i)n=Xo(n,parseInt(t,10)+(t.length>1&&t.endsWith("'")?Ro:0));return n}var Co=rt("map");class Wo{constructor(){Object.defineProperty(this,Co,{writable:!0,value:{}})}add(t){return tt(this,Co)[Co][ii(t.address).toString()]=t,t}all(){return Object.values(tt(this,Co)[Co])}get(t){const e=tt(this,Co)[Co][ii(t).toString()];return nt(e,(()=>`Unable to retrieve keypair '${mt(t)||ct(t)?Pt(wt(t)):t}'`)),e}remove(t){delete tt(this,Co)[Co][ii(t).toString()]}}const qo={ecdsa:t=>Kt(t),ed25519:t=>Hr(t),ethereum:t=>Kt(t),sr25519:t=>qr(t)};function Zo({publicKey:t}){return t}var Fo=rt("pairs"),Uo=rt("type"),Go=rt("ss58");class _o{constructor(t={}){Object.defineProperty(this,Fo,{writable:!0,value:void 0}),Object.defineProperty(this,Uo,{writable:!0,value:void 0}),Object.defineProperty(this,Go,{writable:!0,value:void 0}),this.decodeAddress=ii,this.encodeAddress=(t,e)=>"ethereum"===this.type?rn(t):function(t,e=ni.prefix){const r=ii(t);At(e>=0&&e<=16383&&![46,47].includes(e),"Out of range ss58Format specified"),At(ni.allowedDecodedLengths.includes(r.length),(()=>`Expected a valid key to convert, with length ${ni.allowedDecodedLengths.join(", ")}`));const n=Zr(e<64?[e]:[(252&e)>>2|64,e>>8|(3&e)<<6],r);return Fn(Zr(n,Gn(n).subarray(0,[32,33].includes(r.length)?2:1)))}(t,yi(e)?tt(this,Go)[Go]:e),t.type=t.type||"ed25519",nt(["ecdsa","ethereum","ed25519","sr25519"].includes(t.type||"undefined"),(()=>`Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '${t.type||"unknown"}`)),tt(this,Fo)[Fo]=new Wo,tt(this,Go)[Go]=t.ss58Format,tt(this,Uo)[Uo]=t.type}get pairs(){return this.getPairs()}get publicKeys(){return this.getPublicKeys()}get type(){return tt(this,Uo)[Uo]}addPair(t){return tt(this,Fo)[Fo].add(t)}addFromAddress(t,e={},r=null,n=this.type,i,s){const o=this.decodeAddress(t,i);return this.addPair(qi({toSS58:this.encodeAddress,type:n},{publicKey:o,secretKey:new Uint8Array},e,r,s))}addFromJson(t,e){return this.addPair(this.createFromJson(t,e))}addFromMnemonic(t,e={},r=this.type){return this.addFromUri(t,e,r)}addFromPair(t,e={},r=this.type){return this.addPair(this.createFromPair(t,e,r))}addFromSeed(t,e={},r=this.type){return this.addPair(qi({toSS58:this.encodeAddress,type:r},qo[r](t),e,null))}addFromUri(t,e={},r=this.type){return this.addPair(this.createFromUri(t,e,r))}createFromJson({address:t,encoded:e,encoding:{content:r,type:n,version:i},meta:s},o){nt("3"!==i||"pkcs8"===r[0],(()=>`Unable to decode non-pkcs8 type, [${r.join(",")}] found}`));const a="0"!==i&&Array.isArray(r)?r[1]:this.type,u=Array.isArray(n)?n:[n];nt(["ed25519","sr25519","ecdsa","ethereum"].includes(a),(()=>`Unknown crypto type ${a}`));const h=ct(t)?lt(t):this.decodeAddress(t,o),c=ct(e)?lt(e):Ni(e);return qi({toSS58:this.encodeAddress,type:a},{publicKey:h,secretKey:new Uint8Array},s,c,u)}createFromPair(t,e={},r=this.type){return qi({toSS58:this.encodeAddress,type:r},t,e,null)}createFromUri(t,e={},r=this.type){const n=t.startsWith("//")?`bottom drive obey lake curtain smoke basket hold race lonely fit walk${t}`:t,{derivePath:i,password:s,path:o,phrase:a}=function(t){const e=t.match(go);At(!St(e),"Unable to match provided value to a secret URI");const[,r,,n,,,i]=e,{path:s}=wn(n);return{derivePath:n,password:i,path:s,phrase:r}}(n);let u;const h=ct(a,256);if(h)u=lt(a);else{const t=a.split(" ");[12,15,18,21,24].includes(t.length)?u="ethereum"===r?function(t,e="",r=!1,n=32){return At(No(t),"Invalid bip39 mnemonic specified"),At([32,64].includes(n),(()=>`Invalid seed length ${n}, expected 32 or 64`)),32===n?jr()&&!r?lr(t,e):Ho(t,e).subarray(0,32):64===n?Ho(t,e):new Uint8Array}(a,"",!1,64):Eo(a,s):(nt(a.length<=32,"specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes"),u=bt(a.padEnd(32)))}const c="ethereum"===r?h?qo[r](u):Vo(u,i.substring(1)):jn(qo[r](u),o,r);return qi({toSS58:this.encodeAddress,type:r},c,e,null)}getPair(t){return tt(this,Fo)[Fo].get(t)}getPairs(){return tt(this,Fo)[Fo].all()}getPublicKeys(){return tt(this,Fo)[Fo].all().map(Zo)}removePair(t){tt(this,Fo)[Fo].remove(t)}setSS58Format(t){tt(this,Go)[Go]=t}toJson(t,e){return tt(this,Fo)[Fo].get(t).toJson(e)}}const Ko=[{publicKey:lt("0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d"),secretKey:lt("0x98319d4ff8a9508c4bb0cf0b5a78d760a0b2082c02775e6e82370816fedfff48925a225d97aa00682d6a59b95b18780c10d7032336e88f3442b42361f4a66011"),seed:"Alice",type:"sr25519"},{publicKey:lt("0xbe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f"),secretKey:lt("0xe8da6c9d810e020f5e3c7f5af2dea314cbeaa0d72bc6421e92c0808a0c584a6046ab28e97c3ffc77fe12b5a4d37e8cd4afbfebbf2391ffc7cb07c0f38c023efd"),seed:"Alice//stash",type:"sr25519"},{publicKey:lt("0x8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48"),secretKey:lt("0x081ff694633e255136bdb456c20a5fc8fed21f8b964c11bb17ff534ce80ebd5941ae88f85d0c1bfc37be41c904e1dfc01de8c8067b0d6d5df25dd1ac0894a325"),seed:"Bob",type:"sr25519"},{publicKey:lt("0xfe65717dad0447d715f660a0a58411de509b42e6efb8375f562f58a554d5860e"),secretKey:lt("0xc006507cdfc267a21532394c49ca9b754ca71de21e15a1cdf807c7ceab6d0b6c3ed408d9d35311540dcd54931933e67cf1ea10d46f75408f82b789d9bd212fde"),seed:"Bob//stash",type:"sr25519"},{publicKey:lt("0x90b5ab205c6974c9ea841be688864633dc9ca8a357843eeacf2314649965fe22"),secretKey:lt("0xa8f2d83016052e5d6d77b2f6fd5d59418922a09024cda701b3c34369ec43a7668faf12ff39cd4e5d92bb773972f41a7a5279ebc2ed92264bed8f47d344f8f18c"),seed:"Charlie",type:"sr25519"},{publicKey:lt("0x306721211d5404bd9da88e0204360a1a9ab8b87c66c1bc2fcdd37f3c2222cc20"),secretKey:lt("0x20e05482ca4677e0edbc58ae9a3a59f6ed3b1a9484ba17e64d6fe8688b2b7b5d108c4487b9323b98b11fe36cb301b084e920f7b7895536809a6d62a451b25568"),seed:"Dave",type:"sr25519"},{publicKey:lt("0xe659a7a1628cdd93febc04a4e0646ea20e9f5f0ce097d9a05290d4a9e054df4e"),secretKey:lt("0x683576abfd5dc35273e4264c23095a1bf21c14517bece57c7f0cc5c0ed4ce06a3dbf386b7828f348abe15d76973a72009e6ef86a5c91db2990cb36bb657c6587"),seed:"Eve",type:"sr25519"},{publicKey:lt("0x1cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c"),secretKey:lt("0xb835c20f450079cf4f513900ae9faf8df06ad86c681884122c752a4b2bf74d4303e4f21bc6cc62bb4eeed5a9cce642c25e2d2ac1464093b50f6196d78e3a7426"),seed:"Ferdie",type:"sr25519"}],Jo=[{name:"Alith",publicKey:lt("0x02509540919faacf9ab52146c9aa40db68172d83777250b28e4679176e49ccdd9f"),secretKey:lt("0x5fb92d6e98884f76de468fa3f6278f8807c48bebc13595d45af5bdc4da702133"),type:"ethereum"},{name:"Baltathar",publicKey:lt("0x033bc19e36ff1673910575b6727a974a9abd80c9a875d41ab3e2648dbfb9e4b518"),secretKey:lt("0x8075991ce870b93a8870eca0c0f91913d12f47948ca0fd25b49c6fa7cdbeee8b"),type:"ethereum"},{name:"Charleth",publicKey:lt("0x0234637bdc0e89b5d46543bcbf8edff329d2702bc995e27e9af4b1ba009a3c2a5e"),secretKey:lt("0x0b6e18cafb6ed99687ec547bd28139cafdd2bffe70e6b688025de6b445aa5c5b"),type:"ethereum"},{name:"Dorothy",publicKey:lt("0x02a00d60b2b408c2a14c5d70cdd2c205db8985ef737a7e55ad20ea32cc9e7c417c"),secretKey:lt("0x39539ab1876910bbf3a223d84a29e28f1cb4e2e456503e7e91ed39b2e7223d68"),type:"ethereum"},{name:"Ethan",publicKey:lt("0x025cdc005b752651cd3f728fb9192182acb3a9c89e19072cbd5b03f3ee1f1b3ffa"),secretKey:lt("0x7dce9bc8babb68fec1409be38c8e1a52650206a7ed90ff956ae8a6d15eeaaef4"),type:"ethereum"},{name:"Faith",publicKey:lt("0x037964b6c9d546da4646ada28a99e34acaa1d14e7aba861a9055f9bd200c8abf74"),secretKey:lt("0xb9d2ea9a615f3165812e8d44de0d24da9bbd164b65c4f0573e1ce2c8dbd9c8df"),type:"ethereum"}];function Qo(t){return"number"==typeof t}function $o(t){const e=t.length%2,r=t.length-e,n=new DataView(t.buffer,t.byteOffset);let i="";for(let t=0;t<r;t+=2)i+=Gi[n.getUint16(t)];return e&&(i+=Ui[n.getUint8(r)]),i}function ta(t,e=-1,r=!0){const n=Math.ceil(e/8);return`${r?"0x":""}${t&&t.length?n>0&&t.length>n?`${$o(t.subarray(0,n/2))}…${$o(t.subarray(t.length-n/2))}`:$o(t):""}`}function ea(t){return ta(ii(t,!0))}const ra=t=>`account:${ea(t)}`,na=t=>`address:${ea(t)}`,ia=t=>`contract:${ea(t)}`,sa=new RegExp("^account:0x[0-9a-f]*",""),oa=new RegExp("^address:0x[0-9a-f]*",""),aa=new RegExp("^contract:0x[0-9a-f]*","");function ua(t){return Fi({},t)}function ha(t,e){const r=G(e)?t.length>15?`${t.slice(0,6)}…${t.slice(-6)}`:t:e;return{key:t,name:r,value:t}}function ca(t,e=!1){let r={};const n=new mo({}),i=()=>function(t,e,r){const n=vo.isDevelopment(),i={};Object.keys(t).forEach((e=>{const{json:{meta:{isTesting:s=!1}={}}={}}=t[e];r&&!n&&!0===s||(i[e]=t[e])})),e.next(i)}(r,n,e);return vo.subject.subscribe(i),{add:(e,n,s,o)=>(r=ua(r),r[n]={json:Fi({},s,{address:n}),option:ha(n,s.meta.name),type:o},s.meta.isInjected||s.meta.isTesting&&!vo.isDevelopment()||e.set(t(n),s),i(),r[n]),remove:(e,n)=>{r=ua(r),delete r[n],e.remove(t(n)),i()},subject:n}}const la=ca(ra,!0),da=ca(na),fa=ca(ia);var pa=__webpack_require__(58971);class ma{all(t){pa.each(((e,r)=>{t(r,e)}))}get(t,e){e(pa.get(t))}remove(t,e){pa.remove(t),e&&e()}set(t,e,r){pa.set(t,e),r&&r()}}var ya=rt("accounts"),va=rt("addresses"),ga=rt("contracts"),ba=rt("keyring");var wa=Array.isArray,Ma=Object.getPrototypeOf,ka=Object.prototype,xa=Object.keys;function Pa(t){if(1===t.length){var e=t[0];if(wa(e))return{args:e,keys:null};if((n=e)&&"object"==typeof n&&Ma(n)===ka){var r=xa(e);return{args:r.map((function(t){return e[t]})),keys:r}}}var n;return{args:t,keys:null}}var La=function(t){return t&&"number"==typeof t.length&&"function"!=typeof t};function Ta(t){return Rs(null==t?void 0:t.then)}function Sa(t){return Rs(t[oo])}function Aa(t){return Symbol.asyncIterator&&Rs(null==t?void 0:t[Symbol.asyncIterator])}function Da(t){return new TypeError("You provided "+(null!==t&&"object"==typeof t?"an invalid object":"'"+t+"'")+" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.")}var ja="function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator";function Ha(t){return Rs(null==t?void 0:t[ja])}function Oa(t){return Es(this,arguments,(function(){var e,r,n;return js(this,(function(i){switch(i.label){case 0:e=t.getReader(),i.label=1;case 1:i.trys.push([1,,9,10]),i.label=2;case 2:return[4,Ns(e.read())];case 3:return r=i.sent(),n=r.value,r.done?[4,Ns(void 0)]:[3,5];case 4:return[2,i.sent()];case 5:return[4,Ns(n)];case 6:return[4,i.sent()];case 7:return i.sent(),[3,2];case 8:return[3,10];case 9:return e.releaseLock(),[7];case 10:return[2]}}))}))}function za(t){return Rs(null==t?void 0:t.getReader)}function Na(t){if(t instanceof ho)return t;if(null!=t){if(Sa(t))return i=t,new ho((function(t){var e=i[oo]();if(Rs(e.subscribe))return e.subscribe(t);throw new TypeError("Provided object does not correctly implement Symbol.observable")}));if(La(t))return n=t,new ho((function(t){for(var e=0;e<n.length&&!t.closed;e++)t.next(n[e]);t.complete()}));if(Ta(t))return r=t,new ho((function(t){r.then((function(e){t.closed||(t.next(e),t.complete())}),(function(e){return t.error(e)})).then(null,Us)}));if(Aa(t))return Ea(t);if(Ha(t))return e=t,new ho((function(t){var r,n;try{for(var i=Hs(e),s=i.next();!s.done;s=i.next()){var o=s.value;if(t.next(o),t.closed)return}}catch(t){r={error:t}}finally{try{s&&!s.done&&(n=i.return)&&n.call(i)}finally{if(r)throw r.error}}t.complete()}));if(za(t))return Ea(Oa(t))}var e,r,n,i;throw Da(t)}function Ea(t){return new ho((function(e){(function(t,e){var r,n,i,s;return Ds(this,void 0,void 0,(function(){var o,a;return js(this,(function(u){switch(u.label){case 0:u.trys.push([0,5,6,11]),r=Ys(t),u.label=1;case 1:return[4,r.next()];case 2:if((n=u.sent()).done)return[3,4];if(o=n.value,e.next(o),e.closed)return[2];u.label=3;case 3:return[3,1];case 4:return[3,11];case 5:return a=u.sent(),i={error:a},[3,11];case 6:return u.trys.push([6,,9,10]),n&&!n.done&&(s=r.return)?[4,s.call(r)]:[3,8];case 7:u.sent(),u.label=8;case 8:return[3,10];case 9:if(i)throw i.error;return[7];case 10:return[7];case 11:return e.complete(),[2]}}))}))})(t,e).catch((function(t){return e.error(t)}))}))}function Ya(t,e,r,n,i){void 0===n&&(n=0),void 0===i&&(i=!1);var s=e.schedule((function(){r(),i?t.add(this.schedule(null,n)):this.unsubscribe()}),n);if(t.add(s),!i)return s}function Ra(t){return Rs(null==t?void 0:t.lift)}function Ia(t){return function(e){if(Ra(e))return e.lift((function(e){try{return t(e,this)}catch(t){this.error(t)}}));throw new TypeError("Unable to lift unknown Observable type")}}var Ba=function(t){function e(e,r,n,i,s){var o=t.call(this,e)||this;return o.onFinalize=s,o._next=r?function(t){try{r(t)}catch(t){e.error(t)}}:t.prototype._next,o._error=i?function(t){try{i(t)}catch(t){e.error(t)}finally{this.unsubscribe()}}:t.prototype._error,o._complete=n?function(){try{n()}catch(t){e.error(t)}finally{this.unsubscribe()}}:t.prototype._complete,o}return As(e,t),e.prototype.unsubscribe=function(){var e,r=this.closed;t.prototype.unsubscribe.call(this),!r&&(null===(e=this.onFinalize)||void 0===e||e.call(this))},e}(to);function Xa(t,e){return void 0===e&&(e=0),Ia((function(r,n){r.subscribe(new Ba(n,(function(r){return Ya(n,t,(function(){return n.next(r)}),e)}),(function(){return Ya(n,t,(function(){return n.complete()}),e)}),(function(r){return Ya(n,t,(function(){return n.error(r)}),e)})))}))}function Va(t,e){return void 0===e&&(e=0),Ia((function(r,n){n.add(t.schedule((function(){return r.subscribe(n)}),e))}))}function Ca(t,e){if(!t)throw new Error("Iterable cannot be null");return new ho((function(r){Ya(r,e,(function(){var n=t[Symbol.asyncIterator]();Ya(r,e,(function(){n.next().then((function(t){t.done?r.complete():r.next(t.value)}))}),0,!0)}))}))}function Wa(t,e){if(null!=t){if(Sa(t))return function(t,e){return Na(t).pipe(Va(e),Xa(e))}(t,e);if(La(t))return function(t,e){return new ho((function(r){var n=0;return e.schedule((function(){n===t.length?r.complete():(r.next(t[n++]),r.closed||this.schedule())}))}))}(t,e);if(Ta(t))return function(t,e){return Na(t).pipe(Va(e),Xa(e))}(t,e);if(Aa(t))return Ca(t,e);if(Ha(t))return function(t,e){return new ho((function(r){var n;return Ya(r,e,(function(){n=t[ja](),Ya(r,e,(function(){var t,e,i;try{e=(t=n.next()).value,i=t.done}catch(t){return void r.error(t)}i?r.complete():r.next(e)}),0,!0)})),function(){return Rs(null==n?void 0:n.return)&&n.return()}}))}(t,e);if(za(t))return function(t,e){return Ca(Oa(t),e)}(t,e)}throw Da(t)}function qa(t,e){return e?Wa(t,e):Na(t)}function Za(t,e){return Ia((function(r,n){var i=0;r.subscribe(new Ba(n,(function(r){n.next(t.call(e,r,i++))})))}))}var Fa=Array.isArray;function Ua(t){return Za((function(e){return function(t,e){return Fa(e)?t.apply(void 0,zs([],Os(e))):t(e)}(t,e)}))}function Ga(t){return t[t.length-1]}function _a(t){return Rs(Ga(t))?t.pop():void 0}function Ka(t){return(e=Ga(t))&&Rs(e.schedule)?t.pop():void 0;var e}function Ja(t,e){return t.reduce((function(t,r,n){return t[r]=e[n],t}),{})}function Qa(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var r=Ka(t),n=_a(t),i=Pa(t),s=i.args,o=i.keys;if(0===s.length)return qa([],r);var a=new ho($a(s,r,o?function(t){return Ja(o,t)}:ao));return n?a.pipe(Ua(n)):a}function $a(t,e,r){return void 0===r&&(r=ao),function(n){tu(e,(function(){for(var i=t.length,s=new Array(i),o=i,a=i,u=function(i){tu(e,(function(){var u=qa(t[i],e),h=!1;u.subscribe(new Ba(n,(function(t){s[i]=t,h||(h=!0,a--),a||n.next(r(s.slice()))}),(function(){--o||n.complete()})))}),n)},h=0;h<i;h++)u(h)}),n)}}function tu(t,e,r){t?Ya(r,t,e):e()}const eu=Qa([la.subject,da.subject,fa.subject]).pipe(Za((([t,e,r])=>({accounts:t,addresses:e,contracts:r}))));let ru=!1;const nu=(t,e)=>{const r=t.option.name,n=e.option.name;return r.localeCompare(n)},iu=(t,e)=>{const r=t.json.meta.whenCreated||0,n=e.json.meta.whenCreated||0;return r<n?1:r>n?-1:0};class su{constructor(){this.optionsSubject=new mo(this.emptyOptions())}createOptionHeader(t){return{key:`header-${t.toLowerCase()}`,name:t,value:null}}init(t){_(!ru,"Unable to initialise options more than once"),eu.subscribe((()=>{const e=this.emptyOptions();this.addAccounts(t,e),this.addAddresses(t,e),this.addContracts(t,e),e.address=this.linkItems({Addresses:e.address,Recent:e.recent}),e.account=this.linkItems({Accounts:e.account,Development:e.testing}),e.contract=this.linkItems({Contracts:e.contract}),e.all=[].concat(e.account,e.address),e.allPlus=[].concat(e.account,e.address,e.contract),this.optionsSubject.next(e)})),ru=!0}linkItems(t){return Object.keys(t).reduce(((e,r)=>{const n=t[r];return e.concat(n.length?[this.createOptionHeader(r)]:[],n)}),[])}addAccounts(t,e){const r=t.accounts.subject.getValue();Object.values(r).sort(nu).forEach((({json:{meta:{isTesting:t=!1}},option:r})=>{t?e.testing.push(r):e.account.push(r)}))}addAddresses(t,e){const r=t.addresses.subject.getValue();Object.values(r).filter((({json:t})=>!!t.meta.isRecent)).sort(iu).forEach((({option:t})=>{e.recent.push(t)})),Object.values(r).filter((({json:t})=>!t.meta.isRecent)).sort(nu).forEach((({option:t})=>{e.address.push(t)}))}addContracts(t,e){const r=t.contracts.subject.getValue();Object.values(r).sort(nu).forEach((({option:t})=>{e.contract.push(t)}))}emptyOptions(){return{account:[],address:[],all:[],allPlus:[],contract:[],recent:[],testing:[]}}}var ou=rt("stores");const au=new class extends class{constructor(){Object.defineProperty(this,ya,{writable:!0,value:void 0}),Object.defineProperty(this,va,{writable:!0,value:void 0}),Object.defineProperty(this,ga,{writable:!0,value:void 0}),Object.defineProperty(this,ba,{writable:!0,value:void 0}),this._store=void 0,this._genesisHash=void 0,this.decodeAddress=(t,e,r)=>this.keyring.decodeAddress(t,e,r),this.encodeAddress=(t,e)=>this.keyring.encodeAddress(t,e),tt(this,ya)[ya]=la,tt(this,va)[va]=da,tt(this,ga)[ga]=fa,this._store=new ma}get accounts(){return tt(this,ya)[ya]}get addresses(){return tt(this,va)[va]}get contracts(){return tt(this,ga)[ga]}get keyring(){if(tt(this,ba)[ba])return tt(this,ba)[ba];throw new Error("Keyring should be initialised via 'loadAll' before use")}get genesisHash(){return this._genesisHash}getPair(t){return this.keyring.getPair(t)}getPairs(){return this.keyring.getPairs().filter((t=>vo.isDevelopment()||!0!==t.meta.isTesting))}isAvailable(t){const e=this.accounts.subject.getValue(),r=this.addresses.subject.getValue(),n=this.contracts.subject.getValue(),i=F(t)?t:this.encodeAddress(t);return!e[i]&&!r[i]&&!n[i]}isPassValid(t){return t.length>0}setSS58Format(t){tt(this,ba)[ba]&&Qo(t)&&tt(this,ba)[ba].setSS58Format(t)}setDevMode(t){vo.set(t)}initKeyring(t){const e=function(t={},e=!0){const r=new _o(t),n=t.type&&"ethereum"===t.type?Jo:Ko;for(const{name:i,publicKey:s,secretKey:o,seed:a,type:u}of n){if(!i&&!a)throw new Error("Testing pair should have either a name or a seed");const n={isTesting:!0,name:i||a&&a.replace("//","_").toLowerCase()};(e||i||!a?r.addPair(qi({toSS58:r.encodeAddress,type:u},{publicKey:s,secretKey:o},n)):r.addFromUri(a,n,t.type)).lock=()=>{}}return r}(t,!0);ms(t.isDevelopment)&&this.setDevMode(t.isDevelopment),tt(this,ba)[ba]=e,this._genesisHash=t.genesisHash&&(F(t.genesisHash)?t.genesisHash.toString():t.genesisHash.toHex()),this._store=t.store||this._store,this.addAccountPairs()}addAccountPairs(){this.keyring.getPairs().forEach((({address:t,meta:e})=>{this.accounts.add(this._store,t,{address:t,meta:e})}))}addTimestamp(t){t.meta.whenCreated||t.setMeta({whenCreated:Date.now()})}}{constructor(...t){super(...t),this.keyringOption=new su,Object.defineProperty(this,ou,{writable:!0,value:{account:()=>this.accounts,address:()=>this.addresses,contract:()=>this.contracts}})}addExternal(t,e={}){const r=this.keyring.addFromAddress(t,Fi({},e,{isExternal:!0}),null);return{json:this.saveAccount(r),pair:r}}addHardware(t,e,r={}){return this.addExternal(t,Fi({},r,{hardwareType:e,isHardware:!0}))}addMultisig(t,e,r={}){const n=Ts(t,e),i=(s=t.map((t=>this.decodeAddress(t))),s.sort(fs)).map((t=>this.encodeAddress(t)));var s;return this.addExternal(n,Fi({},r,{isMultisig:!0,threshold:bs(e).toNumber(),who:i}))}addPair(t,e){return this.keyring.addPair(t),{json:this.saveAccount(t,e),pair:t}}addUri(t,e,r={},n){const i=this.keyring.addFromUri(t,r,n);return{json:this.saveAccount(i,e),pair:i}}backupAccount(t,e){return t.isLocked||t.lock(),t.decodePkcs8(e),t.toJson(e)}async backupAccounts(t,e){const r=t.map((t=>new Promise((e=>{this._store.get(ra(t),e)})))),n=await Promise.all(r);return Fi({},function(t,e,r){let n=!1,i=t;if(r){const{params:t,password:e,salt:s}=xi(r),{encrypted:o,nonce:a}=ji(i,e.subarray(0,32));n=!0,i=Zr(Hi(s,t),a,o)}return Yi(i,e,n)}(ls(JSON.stringify(n)),["batch-pkcs8"],e),{accounts:n.map((t=>({address:t.address,meta:t.meta})))})}createFromJson(t,e={}){return this.keyring.createFromJson(Fi({},t,{meta:Fi({},t.meta,e)}))}createFromUri(t,e={},r){return this.keyring.createFromUri(t,e,r)}encryptAccount(t,e){const r=t.toJson(e);r.meta.whenEdited=Date.now(),this.keyring.addFromJson(r),this.accounts.add(this._store,t.address,r,t.type)}forgetAccount(t){this.keyring.removePair(t),this.accounts.remove(this._store,t)}forgetAddress(t){this.addresses.remove(this._store,t)}forgetContract(t){this.contracts.remove(this._store,t)}getAccount(t){return this.getAddress(t,"account")}getAccounts(){const t=this.accounts.subject.getValue();return Object.keys(t).map((t=>this.getAddress(t,"account"))).filter((t=>vo.isDevelopment()||!0!==t.meta.isTesting))}getAddress(t,e=null){const r=F(t)?t:this.encodeAddress(t),n=this.decodeAddress(r),i=(e?[tt(this,ou)[ou][e]]:Object.values(tt(this,ou)[ou])).reduce(((t,e)=>e().subject.getValue()[r]||t),void 0);return i&&{address:r,meta:i.json.meta,publicKey:n}}getAddresses(){const t=this.addresses.subject.getValue();return Object.keys(t).map((t=>this.getAddress(t)))}getContract(t){return this.getAddress(t,"contract")}getContracts(){const t=this.contracts.subject.getValue();return Object.entries(t).filter((([,{json:{meta:{contract:t}}}])=>!!t&&t.genesisHash===this.genesisHash)).map((([t])=>this.getContract(t)))}rewriteKey(t,e,r,n){"0x"!==r.substr(0,2)&&(this._store.remove(e),this._store.set(n(r),t))}loadAccount(t,e){if(!t.meta.isTesting&&t.encoded){const e=this.keyring.addFromJson(t,!0);this.accounts.add(this._store,e.address,t,e.type)}const[,r]=e.split(":");this.rewriteKey(t,e,r.trim(),ra)}loadAddress(t,e){const{isRecent:r,whenCreated:n=0}=t.meta;if(r&&Date.now()-n>86400)return void this._store.remove(e);const i=$i(t.address)&&66!==t.address.length?t.address:this.encodeAddress($i(t.address)?es(t.address):this.decodeAddress(t.address,!0)),[,s]=e.split(":");this.addresses.add(this._store,i,t),this.rewriteKey(t,e,s,na)}loadContract(t,e){const r=this.encodeAddress(this.decodeAddress(t.address)),[,n]=e.split(":");t.meta.genesisHash=t.meta.genesisHash||t.meta.contract&&t.meta.contract.genesisHash,this.contracts.add(this._store,r,t),this.rewriteKey(t,e,n,ia)}loadInjected(t,e,r){const n={address:t,meta:Fi({},e,{isInjected:!0})},i=this.keyring.addFromAddress(t,n.meta,null,r);this.accounts.add(this._store,i.address,n,i.type)}allowGenesis(t){if(t&&t.meta&&this.genesisHash){const e=Object.values(Zi).find((t=>t.includes(this.genesisHash||"")))||[this.genesisHash];if(t.meta.genesisHash)return e.includes(t.meta.genesisHash);if(t.meta.contract)return e.includes(t.meta.contract.genesisHash)}return!0}loadAll(t,e=[]){super.initKeyring(t),this._store.all(((e,r)=>{if(!t.filter||t.filter(r))try{this.allowGenesis(r)&&(sa.test(e)?this.loadAccount(r,e):oa.test(e)?this.loadAddress(r,e):aa.test(e)&&this.loadContract(r,e))}catch(t){}})),e.forEach((t=>{if(this.allowGenesis(t))try{this.loadInjected(t.address,t.meta,t.type)}catch(t){}})),this.keyringOption.init(this)}restoreAccount(t,e){const r=Array.isArray(t.encoding.content)?t.encoding.content[1]:"ed25519",n=Array.isArray(t.encoding.type)?t.encoding.type:[t.encoding.type],i=qi({toSS58:this.encodeAddress,type:r},{publicKey:this.decodeAddress(t.address,!0)},t.meta,$i(t.encoded)?es(t.encoded):Ni(t.encoded),n);return i.decodePkcs8(e),this.addPair(i,e),i.lock(),i}restoreAccounts(t,e){JSON.parse(ks(function({encoded:t,encoding:e},r){return At(t,"No encrypted data available to decode"),Ti(Nt(t)?Yr(t):Ni(t),r,Array.isArray(e.type)?e.type:[e.type])}(t,e))).forEach((t=>{this.loadAccount(t,ra(t.address))}))}saveAccount(t,e){this.addTimestamp(t);const r=t.toJson(e);return this.keyring.addFromJson(r),this.accounts.add(this._store,t.address,r,t.type),r}saveAccountMeta(t,e){const r=t.address;this._store.get(ra(r),(n=>{t.setMeta(e),n.meta=t.meta,this.accounts.add(this._store,r,n,t.type)}))}saveAddress(t,e,r="address"){const n=this.addresses.subject.getValue(),i=n[t]&&n[t].json||{address:t,meta:{isRecent:void 0,whenCreated:Date.now()}};return Object.keys(e).forEach((t=>{i.meta[t]=e[t]})),delete i.meta.isRecent,tt(this,ou)[ou][r]().add(this._store,t,i),i}saveContract(t,e){return this.saveAddress(t,e,"contract")}saveRecent(t){return this.addresses.subject.getValue()[t]||this.addresses.add(this._store,t,{address:t,meta:{genesisHash:this.genesisHash,isRecent:!0,whenCreated:Date.now()}}),this.addresses.subject.getValue()[t]}},uu=au;function hu(){return ar.then((()=>jr())).then((()=>!0)).catch((t=>(console.error("Unable to initialize @polkadot/util-crypto",t),!1)))}const cu={12:128,15:160,18:192,21:224,24:256};var lu=__webpack_require__(26729);function du(t){return t.toString().padStart(2,"0")}function fu(t){return ps.isBN(t)}function pu(t){return!!t&&"object"==typeof t}var mu=__webpack_require__(34155);const yu={debug:"log",error:"error",log:"log",warn:"warn"};function vu(t){return Array.isArray(t)?t.map(vu):fu(t)?t.toString():us(t)||as(t)?ta(ds(t)):function(t){if(t&&pu(t)&&t.constructor===Object){const e={};for(const r of Object.keys(t))e[r]=vu(t[r]);return e}return t}(t)}function gu(t,e,r,n=-1){if(1===r.length&&Z(r[0])){const i=r[0]();return gu(t,e,Array.isArray(i)?i:[i],n)}var i,s;console[yu[t]](`${(s=new Date).getFullYear().toString()}-${du(s.getMonth()+1)}-${du(s.getDate())} ${du(s.getHours())}:${du(s.getMinutes())}:${du(s.getSeconds())}`,e,...r.map(vu).map((i=n,t=>{if(i<=0)return t;const e=`${t}`;return e.length<i?t:`${e.substr(0,i)} ...`})))}function bu(){}function wu(t,e){return!!t&&("*"===t||e===t||t.endsWith("*")&&e.startsWith(t.slice(0,-1)))}function Mu(t,e){return!!t&&t.startsWith("-")&&(e===t.slice(1)||t.endsWith("*")&&e.startsWith(t.slice(1,-1)))}function ku(t,e){let r=!1;for(const n of t)wu(n,e)?r=!0:Mu(n,e)&&(r=!1);return r}function xu(t){const e=`${t.toUpperCase()}:`.padStart(16),[r,n]=function(t){const e=(ss?mu:{}).env||{},r=parseInt(e.DEBUG_MAX||"-1",10);return[ku((e.DEBUG||"").toLowerCase().split(","),t),isNaN(r)?-1:r]}(t.toLowerCase());return{debug:r?(...t)=>gu("debug",e,t,n):bu,error:(...t)=>gu("error",e,t),log:(...t)=>gu("log",e,t),noop:bu,warn:(...t)=>gu("warn",e,t)}}const Pu=q.WebSocket;function Lu(t,e){return gs(e)?e.toString():e}function Tu(t,e){return JSON.stringify(t,Lu,e)}var Su=rt("id");class Au{constructor(){Object.defineProperty(this,Su,{writable:!0,value:0})}decodeResponse(t){_(t,"Empty response object received"),_("2.0"===t.jsonrpc,"Invalid jsonrpc field in decoded object");const e=!G(t.params)&&!G(t.method);return _(Qo(t.id)||e&&(Qo(t.params.subscription)||F(t.params.subscription)),"Invalid id field in decoded object"),this._checkError(t.error),_(!G(t.result)||e,"No result found in JsonRpc response"),e?(this._checkError(t.params.error),t.params.result):t.result}encodeJson(t,e){return Tu(this.encodeObject(t,e))}encodeObject(t,e){return{id:++tt(this,Su)[Su],jsonrpc:"2.0",method:t,params:e}}getId(){return tt(this,Su)[Su]}_checkError(t){if(t){const{code:e,data:r,message:n}=t;throw new Error(`${e}: ${n}${function(t){if(G(t))return"";const e=`: ${F(t)?t.replace(/Error\("/g,"").replace(/\("/g,"(").replace(/"\)/g,")").replace(/\(/g,", ").replace(/\)/g,""):Tu(t)}`;return e.length<=256?e:`${e.substr(0,255)}…`}(r)}`)}}}const Du="ws://127.0.0.1:9944";class ju{constructor(t){this.key=void 0,this.next=void 0,this.prev=void 0,this.key=t,this.next=this.prev=this}}var Hu=rt("data"),Ou=rt("refs"),zu=rt("length"),Nu=rt("head"),Eu=rt("tail"),Yu=rt("toHead");class Ru{constructor(t=2048){Object.defineProperty(this,Yu,{value:Iu}),this.capacity=void 0,Object.defineProperty(this,Hu,{writable:!0,value:new Map}),Object.defineProperty(this,Ou,{writable:!0,value:new Map}),Object.defineProperty(this,zu,{writable:!0,value:0}),Object.defineProperty(this,Nu,{writable:!0,value:void 0}),Object.defineProperty(this,Eu,{writable:!0,value:void 0}),this.capacity=t,tt(this,Nu)[Nu]=tt(this,Eu)[Eu]=new ju("<empty>")}get length(){return tt(this,zu)[zu]}get lengthData(){return tt(this,Hu)[Hu].size}get lengthRefs(){return tt(this,Ou)[Ou].size}entries(){const t=this.keys(),e=new Array(t.length);for(let r=0;r<t.length;r++){const n=t[r];e[r]=[n,tt(this,Hu)[Hu].get(n)]}return e}keys(){const t=[];if(tt(this,zu)[zu]){let e=tt(this,Nu)[Nu];for(;e!==tt(this,Eu)[Eu];)t.push(e.key),e=e.next;t.push(e.key)}return t}get(t){const e=tt(this,Hu)[Hu].get(t);return e?(tt(this,Yu)[Yu](t),e):null}set(t,e){if(tt(this,Hu)[Hu].has(t))tt(this,Yu)[Yu](t);else{const e=new ju(t);tt(this,Ou)[Ou].set(e.key,e),0===this.length?tt(this,Nu)[Nu]=tt(this,Eu)[Eu]=e:(tt(this,Nu)[Nu].prev=e,e.next=tt(this,Nu)[Nu],tt(this,Nu)[Nu]=e),tt(this,zu)[zu]===this.capacity?(tt(this,Hu)[Hu].delete(tt(this,Eu)[Eu].key),tt(this,Ou)[Ou].delete(tt(this,Eu)[Eu].key),tt(this,Eu)[Eu]=tt(this,Eu)[Eu].prev):tt(this,zu)[zu]+=1}tt(this,Hu)[Hu].set(t,e)}}function Iu(t){const e=tt(this,Ou)[Ou].get(t);e&&e!==tt(this,Nu)[Nu]&&(e.prev.next=e.next,e.next.prev=e.prev,e.next=tt(this,Nu)[Nu],tt(this,Nu)[Nu].prev=e,tt(this,Nu)[Nu]=e)}const Bu={1e3:"Normal Closure",1001:"Going Away",1002:"Protocol Error",1003:"Unsupported Data",1004:"(For future)",1005:"No Status Received",1006:"Abnormal Closure",1007:"Invalid frame payload data",1008:"Policy Violation",1009:"Message too big",1010:"Missing Extension",1011:"Internal Error",1012:"Service Restart",1013:"Try Again Later",1014:"Bad Gateway",1015:"TLS Handshake"};const Xu={chain_finalisedHead:"chain_finalizedHead",chain_subscribeFinalisedHeads:"chain_subscribeFinalizedHeads",chain_unsubscribeFinalisedHeads:"chain_unsubscribeFinalizedHeads"},Vu=xu("api-ws");function Cu(t,e){Object.keys(t).forEach((r=>{e&&e(t[r]),delete t[r]}))}var Wu=rt("callCache"),qu=rt("coder"),Zu=rt("endpoints"),Fu=rt("headers"),Uu=rt("eventemitter"),Gu=rt("handlers"),_u=rt("isReadyPromise"),Ku=rt("waitingForId"),Ju=rt("autoConnectMs"),Qu=rt("endpointIndex"),$u=rt("isConnected"),th=rt("subscriptions"),eh=rt("websocket"),rh=rt("send"),nh=rt("emit"),ih=rt("onSocketClose"),sh=rt("onSocketError"),oh=rt("onSocketMessage"),ah=rt("onSocketMessageResult"),uh=rt("onSocketMessageSubscribe"),hh=rt("onSocketOpen"),ch=rt("resubscribe");class lh{constructor(t=Du,e=2500,r={}){Object.defineProperty(this,rh,{value:dh}),Object.defineProperty(this,Wu,{writable:!0,value:new Ru}),Object.defineProperty(this,qu,{writable:!0,value:void 0}),Object.defineProperty(this,Zu,{writable:!0,value:void 0}),Object.defineProperty(this,Fu,{writable:!0,value:void 0}),Object.defineProperty(this,Uu,{writable:!0,value:void 0}),Object.defineProperty(this,Gu,{writable:!0,value:{}}),Object.defineProperty(this,_u,{writable:!0,value:void 0}),Object.defineProperty(this,Ku,{writable:!0,value:{}}),Object.defineProperty(this,Ju,{writable:!0,value:void 0}),Object.defineProperty(this,Qu,{writable:!0,value:void 0}),Object.defineProperty(this,$u,{writable:!0,value:!1}),Object.defineProperty(this,th,{writable:!0,value:{}}),Object.defineProperty(this,eh,{writable:!0,value:void 0}),Object.defineProperty(this,nh,{writable:!0,value:(t,...e)=>{tt(this,Uu)[Uu].emit(t,...e)}}),Object.defineProperty(this,ih,{writable:!0,value:t=>{const e=new Error(`disconnected from ${tt(this,Zu)[Zu][tt(this,Qu)[Qu]]}: ${t.code}:: ${t.reason||(r=t.code,r>=0&&r<=999?"(Unused)":Bu[r]||function(t){return t<=1999?"(For WebSocket standard)":t<=2999?"(For WebSocket extensions)":t<=3999?"(For libraries and frameworks)":t<=4999?"(For applications)":void 0}(r)||"(Unknown)")}`);var r;tt(this,Ju)[Ju]>0&&Vu.error(e.message),tt(this,$u)[$u]=!1,tt(this,eh)[eh]&&(tt(this,eh)[eh].onclose=null,tt(this,eh)[eh].onerror=null,tt(this,eh)[eh].onmessage=null,tt(this,eh)[eh].onopen=null,tt(this,eh)[eh]=null),tt(this,nh)[nh]("disconnected"),Cu(tt(this,Gu)[Gu],(t=>t.callback(e,void 0))),Cu(tt(this,Ku)[Ku]),tt(this,Ju)[Ju]>0&&setTimeout((()=>{this.connectWithRetry().catch((()=>{}))}),tt(this,Ju)[Ju])}}),Object.defineProperty(this,sh,{writable:!0,value:t=>{Vu.debug((()=>["socket error",t])),tt(this,nh)[nh]("error",t)}}),Object.defineProperty(this,oh,{writable:!0,value:t=>{Vu.debug((()=>["received",t.data]));const e=JSON.parse(t.data);return G(e.method)?tt(this,ah)[ah](e):tt(this,uh)[uh](e)}}),Object.defineProperty(this,ah,{writable:!0,value:t=>{const e=tt(this,Gu)[Gu][t.id];if(e){try{const{method:r,params:n,subscription:i}=e,s=tt(this,qu)[qu].decodeResponse(t);if(e.callback(null,s),i){const t=`${i.type}::${s}`;tt(this,th)[th][t]=Fi({},i,{method:r,params:n}),tt(this,Ku)[Ku][t]&&tt(this,uh)[uh](tt(this,Ku)[Ku][t])}}catch(t){e.callback(t,void 0)}delete tt(this,Gu)[Gu][t.id]}else Vu.debug((()=>`Unable to find handler for id=${t.id}`))}}),Object.defineProperty(this,uh,{writable:!0,value:t=>{const e=`${Xu[t.method]||t.method||"invalid"}::${t.params.subscription}`,r=tt(this,th)[th][e];if(!r)return tt(this,Ku)[Ku][e]=t,void Vu.debug((()=>`Unable to find handler for subscription=${e}`));delete tt(this,Ku)[Ku][e];try{const e=tt(this,qu)[qu].decodeResponse(t);r.callback(null,e)}catch(t){r.callback(t,void 0)}}}),Object.defineProperty(this,hh,{writable:!0,value:()=>(_(!U(tt(this,eh)[eh]),"WebSocket cannot be null in onOpen"),Vu.debug((()=>["connected to",tt(this,Zu)[Zu][tt(this,Qu)[Qu]]])),tt(this,$u)[$u]=!0,tt(this,nh)[nh]("connected"),tt(this,ch)[ch](),!0)}),Object.defineProperty(this,ch,{writable:!0,value:()=>{const t=tt(this,th)[th];tt(this,th)[th]={},Promise.all(Object.keys(t).map((async e=>{const{callback:r,method:n,params:i,type:s}=t[e];if(!s.startsWith("author_"))try{await this.subscribe(s,n,i,r)}catch(t){Vu.error(t)}}))).catch(Vu.error)}});const n=Array.isArray(t)?t:[t];_(0!==n.length,"WsProvider requires at least one Endpoint"),n.forEach((t=>{_(/^(wss|ws):\/\//.test(t),(()=>`Endpoint should start with 'ws://', received '${t}'`))})),tt(this,Uu)[Uu]=new lu,tt(this,Ju)[Ju]=e||0,tt(this,qu)[qu]=new Au,tt(this,Qu)[Qu]=-1,tt(this,Zu)[Zu]=n,tt(this,Fu)[Fu]=r,tt(this,eh)[eh]=null,e>0&&this.connectWithRetry().catch((()=>{})),tt(this,_u)[_u]=new Promise((t=>{tt(this,Uu)[Uu].once("connected",(()=>{t(this)}))}))}get hasSubscriptions(){return!0}get isConnected(){return tt(this,$u)[$u]}get isReady(){return tt(this,_u)[_u]}clone(){return new lh(tt(this,Zu)[Zu])}async connect(){try{tt(this,Qu)[Qu]=(tt(this,Qu)[Qu]+1)%tt(this,Zu)[Zu].length,tt(this,eh)[eh]=void 0!==q.WebSocket&&(t=q.WebSocket,(e=Pu)&&(t===e||t.isPrototypeOf(e)))?new Pu(tt(this,Zu)[Zu][tt(this,Qu)[Qu]]):new Pu(tt(this,Zu)[Zu][tt(this,Qu)[Qu]],void 0,void 0,tt(this,Fu)[Fu],void 0,{fragmentOutgoingMessages:!0,fragmentationThreshold:1048576,maxReceivedFrameSize:25165824,maxReceivedMessageSize:25165824}),tt(this,eh)[eh].onclose=tt(this,ih)[ih],tt(this,eh)[eh].onerror=tt(this,sh)[sh],tt(this,eh)[eh].onmessage=tt(this,oh)[oh],tt(this,eh)[eh].onopen=tt(this,hh)[hh]}catch(t){throw Vu.error(t),tt(this,nh)[nh]("error",t),t}var t,e}async connectWithRetry(){if(tt(this,Ju)[Ju]>0)try{await this.connect()}catch(t){setTimeout((()=>{this.connectWithRetry().catch((()=>{}))}),tt(this,Ju)[Ju])}}async disconnect(){tt(this,Ju)[Ju]=0;try{tt(this,eh)[eh]&&tt(this,eh)[eh].close(1e3)}catch(t){throw Vu.error(t),tt(this,nh)[nh]("error",t),t}}on(t,e){return tt(this,Uu)[Uu].on(t,e),()=>{tt(this,Uu)[Uu].removeListener(t,e)}}send(t,e,r,n){const i=tt(this,qu)[qu].encodeJson(t,e);let s=r?tt(this,Wu)[Wu].get(i):null;return s||(s=tt(this,rh)[rh](i,t,e,n),r&&tt(this,Wu)[Wu].set(i,s)),s}subscribe(t,e,r,n){return this.send(e,r,!1,{callback:n,type:t})}async unsubscribe(t,e,r){const n=`${t}::${r}`;if(G(tt(this,th)[th][n]))return Vu.debug((()=>`Unable to find active subscription=${n}`)),!1;delete tt(this,th)[th][n];try{return!(this.isConnected&&!U(tt(this,eh)[eh]))||this.send(e,[r])}catch(t){return!1}}}async function dh(t,e,r,n){return new Promise(((i,s)=>{try{_(this.isConnected&&!U(tt(this,eh)[eh]),"WebSocket is not connected");const o=tt(this,qu)[qu].getId(),a=(t,e)=>{t?s(t):i(e)};Vu.debug((()=>["calling",e,t])),tt(this,Gu)[Gu][o]={callback:a,method:e,params:r,subscription:n},tt(this,eh)[eh].send(t)}catch(t){s(t)}}))}const fh="@polkadot/api",ph="6.9.2";function mh(t,e){return t.findMetaCall(ds(e))}function yh(t,e){return t.findMetaError(ds(e))}var vh=Is((function(t){return function(){t(this),this.name="EmptyError",this.message="no elements in sequence"}}));function gh(t,e){var r="object"==typeof e;return new Promise((function(n,i){var s=new eo({next:function(t){n(t),s.unsubscribe()},error:i,complete:function(){r?n(e.defaultValue):i(new vh)}});t.subscribe(s)}))}function bh(t,e){return Ia((function(r,n){var i=null,s=0,o=!1,a=function(){return o&&!i&&n.complete()};r.subscribe(new Ba(n,(function(r){null==i||i.unsubscribe();var o=0,u=s++;Na(t(r,u)).subscribe(i=new Ba(n,(function(t){return n.next(e?e(r,t,u,o++):t)}),(function(){i=null,a()})))}),(function(){o=!0,a()})))}))}function wh(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var r=Ka(t);return qa(t,r)}var Mh=__webpack_require__(23204);function kh(t){return Mh(t.toString())}function xh(t,e,r,n){const i=n?n(e):e.toString();let s;Object.defineProperty(t,i,{configurable:!0,enumerable:!0,get:function(){if(G(s)){s=r(e);try{Object.defineProperty(this,i,{value:s})}catch{}}return s}})}function Ph(t,e,r,n){for(let i=0;i<e.length;i++)xh(t,e[i],r,n);return t}const Lh=new RegExp("(\\d+?)(?=(\\d{3})+(?!\\d)|$)","g");function Th(t){const e=t[0].startsWith("-"),r=e?t.substr(1).match(Lh):t.match(Lh);return r?`${e?"-":""}${r.join(",")}`:t}const Sh=[{power:-24,text:"yocto",value:"y"},{power:-21,text:"zepto",value:"z"},{power:-18,text:"atto",value:"a"},{power:-15,text:"femto",value:"f"},{power:-12,text:"pico",value:"p"},{power:-9,text:"nano",value:"n"},{power:-6,text:"micro",value:"µ"},{power:-3,text:"milli",value:"m"},{power:0,text:"Unit",value:"-"},{power:3,text:"Kilo",value:"k"},{power:6,text:"Mill",value:"M"},{power:9,text:"Bill",value:"B"},{power:12,text:"Tril",value:"T"},{power:15,text:"Peta",value:"P"},{power:18,text:"Exa",value:"E"},{power:21,text:"Zeta",value:"Z"},{power:24,text:"Yotta",value:"Y"}];function Ah(t){for(let e=0;e<Sh.length;e++)if(Sh[e].value===t)return Sh[e];return Sh[8]}function Dh(t,e,r){if(r)return Ah(r);const n=7+Math.ceil((t.length-e)/3);return Sh[n]||Sh[n<0?0:Sh.length-1]}const jh=Sh[8].text;let Hh=0,Oh=jh;const zh=function(t,e=!0,r=Hh){let n=bs(t).toString();if(0===n.length||"0"===n)return"0";const i=n[0].startsWith("-");i&&(n=n.substr(1));const{decimals:s=r,forceUnit:o,withSi:a=!0,withSiFull:u=!1,withUnit:h=!0}=ms(e)?{withSi:e}:e,c=Dh(n,s,o),l=n.length-(s+c.power),d=n.substr(0,l),f=`${`${new Array((l<0?0-l:0)+1).join("0")}${n}`.substr(l<0?0:l)}0000`.substr(0,4),p=a||u?"-"===c.value?h?` ${ms(h)?c.text:h}`:"":` ${u?c.text:c.value}${h?`${u?" ":""}${ms(h)?Sh[8].text:h}`:""}`:"";return`${i?"-":""}${Th(d||"0")}.${f}${p}`};zh.calcSi=(t,e=Hh)=>Dh(t,e),zh.findSi=Ah,zh.getDefaults=()=>({decimals:Hh,unit:Oh}),zh.getOptions=(t=Hh)=>Sh.filter((({power:e})=>!(e<0)||t+e>=0)),zh.setDefaults=({decimals:t,unit:e})=>{Hh=G(t)?Hh:Array.isArray(t)?t[0]:t,Oh=G(e)?Oh:Array.isArray(e)?e[0]:e,Sh[8].text=Oh};const Nh=new ps(0),Eh=new ps(1),Yh=new ps(2),Rh=(new ps(3),new ps(4)),Ih=(new ps(5),new ps(6),new ps(7),new ps(8),new ps(9),new ps(10),new ps(100)),Bh=(new ps(1e3),new ps(1e6)),Xh=new ps(1e9),Vh=Xh.mul(Xh),Ch=new ps(Number.MAX_SAFE_INTEGER),Wh="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",qh=[],Zh=[];for(let t=0;t<Wh.length;++t)qh[t]=Wh[t],Zh[Wh.charCodeAt(t)]=t;Zh["-".charCodeAt(0)]=62,Zh["_".charCodeAt(0)]=63;var Fh=__webpack_require__(53201);const Uh=Fh.bytes,Gh=Fh.sizeUncompressed,_h=Uint8Array,Kh=Uint16Array,Jh=Uint32Array,Qh=new _h([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),$h=new _h([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),tc=new _h([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),ec=(t,e)=>{const r=new Kh(31);for(let n=0;n<31;++n)r[n]=e+=1<<t[n-1];const n=new Jh(r[30]);for(let t=1;t<30;++t)for(let e=r[t];e<r[t+1];++e)n[e]=e-r[t]<<5|t;return[r,n]},[rc,nc]=ec($h,2);rc[28]=258,nc[258]=28;const[ic]=ec(tc,0),sc=new Kh(32768);for(let t=0;t<32768;++t){let e=(43690&t)>>>1|(21845&t)<<1;e=(52428&e)>>>2|(13107&e)<<2,e=(61680&e)>>>4|(3855&e)<<4,sc[t]=((65280&e)>>>8|(255&e)<<8)>>>1}const oc=(t,e,r)=>{const n=t.length;let i=0;const s=new Kh(e);for(;i<n;++i)++s[t[i]-1];const o=new Kh(e);for(i=0;i<e;++i)o[i]=o[i-1]+s[i-1]<<1;let a;if(r){a=new Kh(1<<e);const r=15-e;for(i=0;i<n;++i)if(t[i]){const n=i<<4|t[i],s=e-t[i];let u=o[t[i]-1]++<<s;for(const t=u|(1<<s)-1;u<=t;++u)a[sc[u]>>>r]=n}}else for(a=new Kh(n),i=0;i<n;++i)a[i]=sc[o[t[i]-1]++]>>>15-t[i];return a},ac=new _h(288);for(let t=0;t<144;++t)ac[t]=8;for(let t=144;t<256;++t)ac[t]=9;for(let t=256;t<280;++t)ac[t]=7;for(let t=280;t<288;++t)ac[t]=8;const uc=new _h(32);for(let t=0;t<32;++t)uc[t]=5;const hc=oc(ac,9,1),cc=oc(uc,5,1),lc=(t,e,r)=>{const n=e>>>3;return(t[n]|t[n+1]<<8)>>>(7&e)&r},dc=(t,e)=>{const r=e>>>3;return(t[r]|t[r+1]<<8|t[r+2]<<16)>>>(7&e)},fc=t=>{let e=t[0];for(let r=1;r<t.length;++r)t[r]>e&&(e=t[r]);return e},pc=(t,e,r)=>{const n=!r||r.i;r||(r={});const i=t.length,s=!e||!n;e||(e=new _h(3*i));const o=t=>{let r=e.length;if(t>r){const n=new _h(Math.max(r<<1,t));n.set(e),e=n}};let a=r.f||0,u=r.p||0,h=r.b||0,c=r.l,l=r.d,d=r.m,f=r.n;if(a&&!c)return e;const p=i<<3;do{if(!c){r.f=a=lc(t,u,1);const y=lc(t,u+1,3);if(u+=3,!y){const a=((m=u)>>>3)+(7&m&&1)+4,c=t[a-4]|t[a-3]<<8,l=a+c;if(l>i){if(n)throw"unexpected EOF";break}s&&o(h+c),e.set(t.subarray(a,l),h),r.b=h+=c,r.p=u=l<<3;continue}if(1==y)c=hc,l=cc,d=9,f=5;else{if(2!=y)throw"invalid block type";{const e=lc(t,u,31)+257,r=lc(t,u+10,15)+4,i=e+lc(t,u+5,31)+1;u+=14;const s=new _h(i),o=new _h(19);for(let e=0;e<r;++e)o[Qh[e]]=lc(t,u+3*e,7);u+=3*r;const a=fc(o),h=(1<<a)-1;if(!n&&u+i*(a+7)>p)break;const m=oc(o,a,1);for(let e=0;e<i;){const r=m[lc(t,u,h)];u+=15&r;const n=r>>>4;if(n<16)s[e++]=n;else{let r=0,i=0;for(16==n?(i=3+lc(t,u,3),u+=2,r=s[e-1]):17==n?(i=3+lc(t,u,7),u+=3):18==n&&(i=11+lc(t,u,127),u+=7);i--;)s[e++]=r}}const y=s.subarray(0,e),v=s.subarray(e);d=fc(y),f=fc(v),c=oc(y,d,1),l=oc(v,f,1)}}if(u>p)throw"unexpected EOF"}s&&o(h+131072);const y=(1<<d)-1,v=(1<<f)-1,g=d+f+18;for(;n||u+g<p;){const r=c[dc(t,u)&y],n=r>>>4;if(u+=15&r,u>p)throw"unexpected EOF";if(!r)throw"invalid length/literal";if(n<256)e[h++]=n;else{if(256==n){c=void 0;break}{let r=n-254;if(n>264){const e=n-257,i=$h[e];r=lc(t,u,(1<<i)-1)+rc[e],u+=i}const i=l[dc(t,u)&v],a=i>>>4;if(!i)throw"invalid distance";u+=15&i;let c=ic[a];if(a>3){const e=tc[a];c+=dc(t,u)&(1<<e)-1,u+=e}if(u>p)throw"unexpected EOF";s&&o(h+131072);const d=h+r;for(;h<d;h+=4)e[h]=e[h-c],e[h+1]=e[h+1-c],e[h+2]=e[h+2-c],e[h+3]=e[h+3-c];h=d}}}r.l=c,r.p=u,r.b=h,c&&(a=1,r.m=d,r.d=l,r.n=f)}while(!a);var m;return h==e.length?e:((t,e,r)=>{(null==e||e<0)&&(e=0),(null==r||r>t.length)&&(r=t.length);const n=new(t instanceof Kh?Kh:t instanceof Jh?Jh:_h)(r-e);return n.set(t.subarray(e,r)),n})(e,0,h)};const mc=function(t,e){return pc(((t=>{if(8!=(15&t[0])||t[0]>>>4>7||(t[0]<<8|t[1])%31)throw"invalid zlib data";if(32&t[1])throw"invalid zlib data: preset dictionaries not supported"})(t),t.subarray(2,-4)),e)}(function(t){const[e,r]=function(t){const e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");const r=t.indexOf("=");return-1===r?[e,0]:[r,4-r%4]}(t),n=new Uint8Array(3*(e+r)/4-r);let i,s,o=0;const a=r>0?e-4:e;for(i=0;i<a;i+=4)s=Zh[t.charCodeAt(i)]<<18|Zh[t.charCodeAt(i+1)]<<12|Zh[t.charCodeAt(i+2)]<<6|Zh[t.charCodeAt(i+3)],n[o++]=s>>16&255,n[o++]=s>>8&255,n[o++]=255&s;return 2===r?(s=Zh[t.charCodeAt(i)]<<2|Zh[t.charCodeAt(i+1)]>>4,n[o++]=255&s):1===r&&(s=Zh[t.charCodeAt(i)]<<10|Zh[t.charCodeAt(i+1)]<<4|Zh[t.charCodeAt(i+2)]>>2,n[o++]=s>>8&255,n[o++]=255&s),n}(Uh),new Uint8Array(Gh));let yc=null,vc=null,gc=null;function bc(t){return(...e)=>(_(yc,"The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces."),t(yc)(...e))}function wc(){return null!==vc&&vc.buffer===yc.memory.buffer||(vc=new Int32Array(yc.memory.buffer)),vc}function Mc(){return null!==gc&&gc.buffer===yc.memory.buffer||(gc=new Uint8Array(yc.memory.buffer)),gc}function kc(t,e){return Mc().subarray(t/1,t/1+e)}function xc(t){const e=yc.__wbindgen_malloc(1*t.length);return Mc().set(t,e/1),[e,t.length]}function Pc(t){return xc(ls(t))}function Lc(){const t=wc()[2],e=wc()[3],r=kc(t,e).slice();return yc.__wbindgen_free(t,1*e),r}const Tc={getRandomValues:function(t){return crypto.getRandomValues(t)}},Sc={crypto:Tc},Ac=new Array(32).fill(void 0).concat(void 0,null,!0,!1);let Dc=Ac.length;function jc(t){return Ac[t]}function Hc(t){const e=jc(t);return function(t){t<36||(Ac[t]=Dc,Dc=t)}(t),e}function Oc(t){Dc===Ac.length&&Ac.push(Ac.length+1);const e=Dc;return Dc=Ac[e],Ac[e]=t,e}function zc(t){return void 0===jc(t)}function Nc(){return Oc(Sc)}function Ec(t,e){throw new Error(`Unable to require ${function(t,e){return ks(kc(t,e))}(t,e)}`)}function Yc(t){return Oc(Tc)}function Rc(t){return Oc(Tc.getRandomValues)}function Ic(t,e,r){Tc.getRandomValues(kc(e,r))}function Bc(t,e,r){throw new Error("randomFillsync is not available")}function Xc(t){Hc(t)}function Vc(){throw new Error("abort")}(async function(t,e,r){try{_("undefined"!=typeof WebAssembly&&t&&t.length,"WebAssembly is not available in your environment");const e=await WebAssembly.instantiate(t,{wbg:r});yc=e.instance.exports}catch(t){e?yc=e(r):(console.error("FATAL: Unable to initialize @polkadot/wasm-crypto"),console.error(t),yc=null)}})(mc,null,e).catch((()=>null)),bc((t=>e=>(t.ext_bip39_generate(8,e),ks(Lc())))),bc((t=>e=>{const[r,n]=Pc(e);return t.ext_bip39_to_entropy(8,r,n),Lc()})),bc((t=>(e,r)=>{const[n,i]=Pc(e),[s,o]=Pc(r);return t.ext_bip39_to_mini_secret(8,n,i,s,o),Lc()})),bc((t=>(e,r)=>{const[n,i]=Pc(e),[s,o]=Pc(r);return t.ext_bip39_to_seed(8,n,i,s,o),Lc()})),bc((t=>e=>{const[r,n]=Pc(e);return 0!==t.ext_bip39_validate(r,n)})),bc((t=>e=>{const[r,n]=xc(e);return t.ext_ed_from_seed(8,r,n),Lc()})),bc((t=>(e,r,n)=>{const[i,s]=xc(e),[o,a]=xc(r),[u,h]=xc(n);return t.ext_ed_sign(8,i,s,o,a,u,h),Lc()})),bc((t=>(e,r,n)=>{const[i,s]=xc(e),[o,a]=xc(r),[u,h]=xc(n);return 0!==t.ext_ed_verify(i,s,o,a,u,h)})),bc((t=>(e,r)=>{const[n,i]=xc(e),[s,o]=xc(r);return t.ext_sr_derive_keypair_hard(8,n,i,s,o),Lc()})),bc((t=>(e,r)=>{const[n,i]=xc(e),[s,o]=xc(r);return t.ext_sr_derive_keypair_soft(8,n,i,s,o),Lc()})),bc((t=>(e,r)=>{const[n,i]=xc(e),[s,o]=xc(r);return t.ext_sr_derive_public_soft(8,n,i,s,o),Lc()})),bc((t=>e=>{const[r,n]=xc(e);return t.ext_sr_from_seed(8,r,n),Lc()})),bc((t=>(e,r,n)=>{const[i,s]=xc(e),[o,a]=xc(r),[u,h]=xc(n);return t.ext_sr_sign(8,i,s,o,a,u,h),Lc()})),bc((t=>(e,r,n)=>{const[i,s]=xc(e),[o,a]=xc(r),[u,h]=xc(n);return 0!==t.ext_sr_verify(i,s,o,a,u,h)})),bc((t=>(e,r)=>{const[n,i]=xc(e),[s,o]=xc(r);return t.ext_sr_agree(8,n,i,s,o),Lc()})),bc((t=>(e,r,n,i)=>{const[s,o]=xc(e),[a,u]=xc(r),[h,c]=xc(n),[l,d]=xc(i);return t.ext_vrf_sign(8,s,o,a,u,h,c,l,d),Lc()})),bc((t=>(e,r,n,i,s)=>{const[o,a]=xc(e),[u,h]=xc(r),[c,l]=xc(n),[d,f]=xc(i),[p,m]=xc(s);return 0!==t.ext_vrf_verify(o,a,u,h,c,l,d,f,p,m)}));const Cc=bc((t=>(e,r,n)=>{const[i,s]=xc(e),[o,a]=xc(r);return t.ext_blake2b(8,i,s,o,a,n),Lc()})),Wc=(bc((t=>(e,r)=>{const[n,i]=xc(e),[s,o]=xc(r);return t.ext_hmac_sha256(8,n,i,s,o),Lc()})),bc((t=>(e,r)=>{const[n,i]=xc(e),[s,o]=xc(r);return t.ext_hmac_sha512(8,n,i,s,o),Lc()})),bc((t=>e=>{const[r,n]=xc(e);return t.ext_keccak256(8,r,n),Lc()}))),qc=bc((t=>e=>{const[r,n]=xc(e);return t.ext_keccak512(8,r,n),Lc()})),Zc=(bc((t=>(e,r,n)=>{const[i,s]=xc(e),[o,a]=xc(r);return t.ext_pbkdf2(8,i,s,o,a,n),Lc()})),bc((t=>(e,r,n,i,s)=>{const[o,a]=xc(e),[u,h]=xc(r);return t.ext_scrypt(8,o,a,u,h,n,i,s),Lc()})),bc((t=>e=>{const[r,n]=xc(e);return t.ext_sha256(8,r,n),Lc()})),bc((t=>e=>{const[r,n]=xc(e);return t.ext_sha512(8,r,n),Lc()})),bc((t=>(e,r)=>{const[n,i]=xc(e);return t.ext_twox(8,n,i,r),Lc()})));function Fc(){return!!yc}function Uc(t){return(...e)=>ta(t(...e))}function Gc(t,e){return(r,n)=>e(r,t,n)}function _c(t){return Fc()&&!t}function Kc(t,e=256,r,n){const i=Math.ceil(e/8),s=ds(t);return _c(n)?Cc(s,ds(r),i):Fr.blake2b(s,r||void 0,i)}Uc(Kc);var Jc=rt("neverError");class Qc{constructor(t,e="DoNotConstruct"){throw this.registry=void 0,this.createdAtHash=void 0,Object.defineProperty(this,Jc,{writable:!0,value:void 0}),this.registry=t,tt(this,Jc)[Jc]=new Error(`DoNotConstruct: Cannot construct unknown type ${e}`),tt(this,Jc)[Jc]}static with(t){return class extends Qc{constructor(e){super(e,t)}}}get encodedLength(){throw tt(this,Jc)[Jc]}get hash(){throw tt(this,Jc)[Jc]}get isEmpty(){throw tt(this,Jc)[Jc]}eq(){throw tt(this,Jc)[Jc]}toHex(){throw tt(this,Jc)[Jc]}toHuman(){throw tt(this,Jc)[Jc]}toJSON(){throw tt(this,Jc)[Jc]}toRawType(){throw tt(this,Jc)[Jc]}toString(){throw tt(this,Jc)[Jc]}toU8a(){throw tt(this,Jc)[Jc]}}function $c(t,e,r){!Object.prototype.hasOwnProperty.call(t,e)&&G(t[e])&&Object.defineProperty(t,e,{enumerable:!0,get:()=>r(e)})}function tl(t,e,r){for(let n=0;n<e.length;n++)$c(t,e[n],(t=>r(t,n)))}function el(t){return Z(t.eq)}function rl(t,e){return t.size===e.length&&!e.some((e=>{return r=e,!Array.isArray(r)||2!==r.length||function(t,e){return G(t)||(el(t)?!t.eq(e):t!==e)}(t.get(e[0]),e[1]);var r}))}function nl(t,e){return Array.isArray(e)?rl(t,e):e instanceof Map?rl(t,[...e.entries()]):!!pu(e)&&rl(t,Object.entries(e))}class il extends Map{constructor(t,e){const r=function(t){return Object.entries(t||{})}(e);super(r),this.registry=void 0,this.createdAtHash=void 0,this.registry=t,tl(this,r.map((([t])=>t)),(t=>this.get(t)))}get encodedLength(){return 0}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===[...this.keys()].length}eq(t){return nl(this,t)}toHex(){throw new Error("Unimplemented")}toHuman(){return[...this.entries()].reduce(((t,[e,r])=>(t[e]=Z(r.toHuman)?r.toHuman():r,t)),{})}toJSON(){return[...this.entries()].reduce(((t,[e,r])=>(t[e]=r,t)),{})}toRawType(){return"Json"}toString(){return Tu(this.toJSON())}toU8a(t){throw new Error("Unimplemented")}}const sl=[9,10,13];function ol(t){return t<127&&(t>=32||sl.includes(t))}function al(t){return ol(t.charCodeAt(0))}function ul(t){const e=F(t);return t?e&&!$i(t)?t.toString().split("").every(al):ds(t).every(ol):e}class hl extends Uint8Array{constructor(t,e,r){super(ds(e)),this.registry=void 0,this.createdAtHash=void 0,this.initialU8aLength=void 0,this.registry=t,this.initialU8aLength=r}get encodedLength(){return this.length}get hash(){return this.registry.hash(this.toU8a())}get isAscii(){return ul(this)}get isEmpty(){return!this.length||G(this.find((t=>!!t)))}get isUtf8(){return function(t){if(!t)return F(t);const e=ds(t),r=e.length;let n=0;for(;n<r;)if(e[n]<=127)n+=1;else if(e[n]>=194&&e[n]<=223){if(!(n+1<r))return!1;if(e[n+1]<128||e[n+1]>191)return!1;n+=2}else if(224===e[n]){if(!(n+2<r))return!1;if(e[n+1]<160||e[n+1]>191)return!1;if(e[n+2]<128||e[n+2]>191)return!1;n+=3}else if(e[n]>=225&&e[n]<=236){if(!(n+2<r))return!1;if(e[n+1]<128||e[n+1]>191)return!1;if(e[n+2]<128||e[n+2]>191)return!1;n+=3}else if(237===e[n]){if(!(n+2<r))return!1;if(e[n+1]<128||e[n+1]>159)return!1;if(e[n+2]<128||e[n+2]>191)return!1;n+=3}else if(e[n]>=238&&e[n]<=239){if(!(n+2<r))return!1;if(e[n+1]<128||e[n+1]>191)return!1;if(e[n+2]<128||e[n+2]>191)return!1;n+=3}else if(240===e[n]){if(!(n+3<r))return!1;if(e[n+1]<144||e[n+1]>191)return!1;if(e[n+2]<128||e[n+2]>191)return!1;if(e[n+3]<128||e[n+3]>191)return!1;n+=4}else if(e[n]>=241&&e[n]<=243){if(!(n+3<r))return!1;if(e[n+1]<128||e[n+1]>191)return!1;if(e[n+2]<128||e[n+2]>191)return!1;if(e[n+3]<128||e[n+3]>191)return!1;n+=4}else{if(244!==e[n])return!1;if(!(n+3<r))return!1;if(e[n+1]<128||e[n+1]>143)return!1;if(e[n+2]<128||e[n+2]>191)return!1;if(e[n+3]<128||e[n+3]>191)return!1;n+=4}return!0}(this)}get length(){return super.length}bitLength(){return 8*this.length}eq(t){return t instanceof Uint8Array?this.length===t.length&&!this.some(((e,r)=>e!==t[r])):this.eq(ds(t))}slice(t,e){return Uint8Array.from(this).slice(t,e)}subarray(t,e){return Uint8Array.from(this).subarray(t,e)}toHex(){return ta(this)}toHuman(){if(this.isAscii){const t=this.toUtf8();if(ul(t))return t}return this.toJSON()}toJSON(){return this.toHex()}toRawType(){return"Raw"}toString(){return this.toHex()}toU8a(t){return Uint8Array.from(this)}toUtf8(){return _(this.isUtf8,"The character sequence is not a valid Utf8 string"),ks(this)}}const cl={extrinsic:{},payload:{}},ll={extrinsic:{era:"ExtrinsicEra"},payload:{blockHash:"Hash"}},dl=Fi({},{ChargeTransactionPayment:{extrinsic:{tip:"Compact<Balance>"},payload:{}},CheckBlockGasLimit:cl,CheckEra:ll,CheckGenesis:{extrinsic:{},payload:{genesisHash:"Hash"}},CheckMortality:ll,CheckNonce:{extrinsic:{nonce:"Compact<Index>"},payload:{}},CheckSpecVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckTxVersion:{extrinsic:{},payload:{transactionVersion:"u32"}},CheckVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckWeight:cl,LockStakingStatus:cl,ValidateEquivocationReport:cl},{LimitParathreadCommits:cl,OnlyStakingAndClaims:cl,PrevalidateAttests:cl,RestrictFunctionality:cl,TransactionCallFilter:cl,ValidateDoubleVoteReports:cl},{DisallowSigned:cl},{ChargeAssetTxPayment:{extrinsic:{tip:"Compact<Balance>",assetId:"Option<AssetId>"},payload:{}}}),fl=["CheckVersion","CheckGenesis","CheckEra","CheckNonce","CheckWeight","ChargeTransactionPayment","CheckBlockGasLimit"];function pl(t,e,r={}){return t.map((t=>r[t]||dl[t])).filter((t=>!!t)).reduce(((t,r)=>Fi(t,r[e])),{})}function ml(...t){let e=0,r=0;const n=new Array(t.length);for(let r=0;r<t.length;r++)n[r]=ds(t[r]),e+=n[r].length;const i=new Uint8Array(e);for(let t=0;t<n.length;t++)i.set(n[t],r),r+=n[t].length;return i}function yl(t,e){return F(e)?t.createClass(e):e}function vl(t,e){const r=Object.entries(e),n={};for(let e=0;e<r.length;e++)n[r[e][0]]=yl(t,r[e][1]);return n}function gl(t,e,r,n){return`decodeU8a: failed at ${ta(r)}…${n?` on ${n}`:""}${e?`: ${e}`:""}:: ${t.message}`}function bl(t,e){try{return new e(t).toRawType()}catch{return null}}function wl(t,e,r,n){const[i,s]=Array.isArray(r)?[r,[]]:[Object.values(r),Object.keys(r)],o=new Array(i.length);let a=0;for(let r=0;r<i.length;r++)try{const u=new i[r](t,e.subarray(a));a+=u.initialU8aLength||u.encodedLength,o[r]=n?[s[r],u]:u}catch(n){throw new Error(gl(n,bl(t,i[r]),e.subarray(a,a+16),s[r]))}return[o,a]}function Ml(t,e,r,n,i){const s=new Array(i);let o=r;for(let r=0;r<i;r++)try{const i=new n(t,e.subarray(o));o+=i.initialU8aLength||i.encodedLength,s[r]=i}catch(r){throw new Error(gl(r,bl(t,n),e.subarray(o,o+16)))}return[s,o,o-r]}function kl(t,e){const r=Object.entries(e),n={};for(let e=0;e<r.length;e++){const[i,s]=r[e];n[i]=t.getClassName(s)||new s(t).toRawType()}return n}var xl=rt("jsonMap"),Pl=rt("Types");class Ll extends Map{constructor(t,e,r,n=new Map){const i=vl(t,e),[s,o]=us(r)?wl(t,r,i,!0):$i(r)?wl(t,ds(r),i,!0):r instanceof Ll?[r,0]:function(t,e,r,n){let i;const s=Object.keys(e),o=Array.isArray(r),a=r instanceof Map;_(o||a||pu(r),(()=>`Struct: Cannot decode value ${Tu(r)} (typeof ${typeof r}), expected an input object, map or array`)),_(!o||r.length===s.length,(()=>`Struct: Unable to map ${Tu(r)} array to object with known keys ${s.join(", ")}`));const u=new Array(s.length);for(let h=0;h<s.length;h++){const c=s[h],l=n.get(c)||c,d=e[c];let f;try{if(o)f=r[h];else if(a)f=l&&r.get(l);else if(f=l&&r[l],G(f)){if(G(i)){const t=Object.entries(r);i={};for(let e=0;e<t.length;e++)i[kh(t[e][0])]=t[e][1]}f=l&&i[l]}u[h]=[c,f instanceof d?f:new d(t,f)]}catch(e){let r=d.name;try{r=new d(t).toRawType()}catch(t){}throw new Error(`Struct: failed on ${l}: ${r}:: ${e.message}`)}}return[u,0]}(t,i,r||{},n);super(s),this.registry=void 0,this.createdAtHash=void 0,this.initialU8aLength=void 0,Object.defineProperty(this,xl,{writable:!0,value:void 0}),Object.defineProperty(this,Pl,{writable:!0,value:void 0}),this.registry=t,this.initialU8aLength=o,tt(this,xl)[xl]=n,tt(this,Pl)[Pl]=i}static with(t,e){const r=Object.keys(t);return class extends Ll{constructor(n,i){super(n,t,i,e),tl(this,r,(t=>this.get(t)))}}}get defKeys(){return Object.keys(tt(this,Pl)[Pl])}get isEmpty(){for(const t of this.values())if(!t.isEmpty)return!1;return!0}get Type(){const t={},e=Object.entries(tt(this,Pl)[Pl]);for(let r=0;r<e.length;r++){const[n,i]=e[r];t[n]=new i(this.registry).toRawType()}return t}get encodedLength(){let t=0;for(const e of this.values())t+=e.encodedLength;return t}get hash(){return this.registry.hash(this.toU8a())}eq(t){return nl(this,t)}get(t){return super.get(t)}getAtIndex(t){return this.toArray()[t]}toArray(){return[...this.values()]}toHex(){return ta(this.toU8a())}toHuman(t){const e={};for(const[r,n]of this.entries())e[r]=n&&n.toHuman(t);return e}toJSON(){const t={};for(const[e,r]of this.entries()){t[tt(this,xl)[xl].get(e)||e]=r&&r.toJSON()}return t}toRawType(){return Tu(kl(this.registry,tt(this,Pl)[Pl]))}toString(){return Tu(this.toJSON())}toU8a(t){const e=[];for(const[r,n]of this.entries())n&&Z(n.toU8a)&&e.push(n.toU8a(!t||ms(t)?t:t[r]));return ml(...e)}}const Tl={bitLength:-1,isLe:!0,isNegative:!1};function Sl(t,e=Tl,r){const n=Fi({bitLength:-1,isLe:!0,isNegative:!1},Qo(e)?{bitLength:e,isLe:r}:e),i=bs(t),s=-1===n.bitLength?Math.ceil(i.bitLength()/8):Math.ceil((n.bitLength||0)/8);return t?function(t,e,{isLe:r,isNegative:n}){const i=new Uint8Array(e),s=n?t.toTwos(8*e):t;return i.set(s.toArray(r?"le":"be",e),0),i}(i,s,n):function(t,e){return-1===e.bitLength?new Uint8Array:new Uint8Array(t)}(s,n)}const Al=Yh.pow(new ps(6)).isub(Eh),Dl=Yh.pow(new ps(14)).isub(Eh),jl=Yh.pow(new ps(30)).isub(Eh);function Hl(t){const e=bs(t);if(e.lte(Al))return new Uint8Array([e.toNumber()<<2]);if(e.lte(Dl))return Sl(e.shln(2).iadd(Eh),16,!0);if(e.lte(jl))return Sl(e.shln(2).iadd(Yh),32,!0);const r=Sl(e);let n=r.length;for(;0===r[n-1];)n--;return _(n>=4,"Invalid length, previous checks match anything less than 2^30"),ml([3+(n-4<<2)],r.subarray(0,n))}function Ol(t,e){return!!Array.isArray(e)&&(t.length===e.length&&G(t.find(((t,r)=>el(t)?!t.eq(e[r]):t!==e[r]))))}class zl extends Array{constructor(t,e,r){super(e.length),this.registry=void 0,this.createdAtHash=void 0,this.initialU8aLength=void 0;for(let t=0;t<e.length;t++)this[t]=e[t];this.registry=t,this.initialU8aLength=r}get encodedLength(){let t=Hl(this.length).length;for(let e=0;e<this.length;e++)t+=this[e].encodedLength;return t}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.length}get length(){return super.length}eq(t){return Ol(this,t)}toArray(){return Array.from(this)}toHex(){return ta(this.toU8a())}toHuman(t){const e=new Array(this.length);for(let r=0;r<this.length;r++)e[r]=this[r].toHuman(t);return e}toJSON(){const t=new Array(this.length);for(let e=0;e<this.length;e++)t[e]=this[e].toJSON();return t}toString(){const t=new Array(this.length);for(let e=0;e<this.length;e++)t[e]=this[e].toString();return`[${t.join(", ")}]`}toU8a(t){const e=new Array(this.length);for(let r=0;r<this.length;r++)e[r]=this[r].toU8a(t);return t?ml(...e):ml(Hl(this.length),...e)}concat(t){return this.toArray().concat(t instanceof zl?t.toArray():t)}filter(t,e){return this.toArray().filter(t,e)}map(t,e){return this.toArray().map(t,e)}includes(t){return this.some((e=>e.eq(t)))}slice(t,e){return this.toArray().slice(t,e)}}var Nl=rt("Types");class El extends zl{constructor(t,e,r){const n=Array.isArray(e)?e.map((e=>yl(t,e))):Z(e)||F(e)?[yl(t,e)]:vl(t,e),[i,s]=us(r)?wl(t,r,n):function(t,e,r){return us(r)||$i(r)?wl(t,ds(r),e):[(Array.isArray(e)?e:Object.values(e)).map(((e,n)=>{try{const i=null==r?void 0:r[n];return i instanceof e?i:new e(t,i)}catch(t){throw new Error(`Tuple: failed on ${n}:: ${t.message}`)}})),0]}(t,n,r);super(t,i,s),Object.defineProperty(this,Nl,{writable:!0,value:void 0}),tt(this,Nl)[Nl]=n}static with(t){return class extends El{constructor(e,r){super(e,t,r)}}}get encodedLength(){let t=0;for(let e=0;e<this.length;e++)t+=this[e].encodedLength;return t}get Types(){return Array.isArray(tt(this,Nl)[Nl])?tt(this,Nl)[Nl].map((t=>new t(this.registry).toRawType())):Object.keys(tt(this,Nl)[Nl])}toRawType(){return`(${(Array.isArray(tt(this,Nl)[Nl])?tt(this,Nl)[Nl]:Object.values(tt(this,Nl)[Nl])).map((t=>this.registry.getClassName(t)||new t(this.registry).toRawType())).join(",")})`}toString(){return Tu(this.toJSON())}toU8a(t){const e=new Array(this.length);for(let r=0;r<this.length;r++)e[r]=this[r].toU8a(t);return ml(...e)}}class Yl{constructor(t){this.registry=void 0,this.createdAtHash=void 0,this.initialU8aLength=0,this.registry=t}get encodedLength(){return 0}get hash(){throw new Error(".hash is not implemented on Null")}get isEmpty(){return!0}eq(t){return t instanceof Yl||U(t)}toHex(){return"0x"}toHuman(){return this.toJSON()}toJSON(){return null}toRawType(){return"Null"}toString(){return""}toU8a(t){return new Uint8Array}}var Rl=rt("meta"),Il=rt("method"),Bl=rt("section"),Xl=rt("typeDef");class Vl extends El{constructor(t,e,r,n="<unknown>",i="<unknown>"){const s=(null==r?void 0:r.fields)||[];super(t,s.map((({type:e})=>t.createLookupType(e))),e),Object.defineProperty(this,Rl,{writable:!0,value:void 0}),Object.defineProperty(this,Il,{writable:!0,value:void 0}),Object.defineProperty(this,Bl,{writable:!0,value:void 0}),Object.defineProperty(this,Xl,{writable:!0,value:void 0}),tt(this,Rl)[Rl]=r,tt(this,Il)[Il]=i,tt(this,Bl)[Bl]=n,tt(this,Xl)[Xl]=s.map((({type:e})=>t.lookup.getTypeDef(e)))}get meta(){return tt(this,Rl)[Rl]}get method(){return tt(this,Il)[Il]}get section(){return tt(this,Bl)[Bl]}get typeDef(){return tt(this,Xl)[Xl]}}class Cl extends Ll{constructor(t,e){const{DataType:r,value:n}=function(t,e){if(!e||!e.length)return{DataType:Yl};const r=e.subarray(0,2);return{DataType:t.findMetaEvent(r),value:{data:e.subarray(2),index:r}}}(t,e);super(t,{index:"EventId",data:r},n)}get data(){return this.get("data")}get index(){return this.get("index")}get meta(){return this.data.meta}get method(){return this.data.method}get section(){return this.data.section}get typeDef(){return this.data.typeDef}toHuman(t){return Fi({method:this.method,section:this.section},t?{docs:this.meta.docs.map((t=>t.toString()))}:null,super.toHuman(t))}}const Wl={isLe:!0,isNegative:!1};function ql(t,e=Wl){return vs(ta(t),e)}function Zl(t){const e=ds(t),r=3&e[0];if(0===r)return[1,new ps(e[0]).ishrn(2)];if(1===r)return[2,ql(e.subarray(0,2),!0).ishrn(2)];if(2===r)return[4,ql(e.subarray(0,4),!0).ishrn(2)];const n=1+new ps(e[0]).ishrn(2).iadd(Rh).toNumber();return[n,ql(e.subarray(1,n),!0)]}function Fl(t){return ml(Hl(t.length),t)}class Ul{constructor(t,e,r){this.registry=void 0,this.createdAtHash=void 0,this.initialU8aLength=void 0,this._raw=void 0,this.registry=t,this._raw=e,this.initialU8aLength=r}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this._raw.isEmpty}eq(t){return this._raw.eq(t)}toHex(t){return this._raw.toHex(t)}toHuman(t){return this._raw.toHuman(t)}toJSON(){return this._raw.toJSON()}toString(){return this._raw.toString()}toU8a(t){return this._raw.toU8a(t)}toRawType(){return"Base"}}const Gl=new Uint8Array,_l=new Uint8Array([0]),Kl=["ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicV4"];class Jl extends Ul{constructor(t,e,r){super(t,e,r);const n=Object.keys(t.getSignedExtensionTypes()),i=t=>this._raw.signature[t];for(let t=0;t<n.length;t++)$c(this,n[t],i)}get args(){return this.method.args}get argsDef(){return this.method.argsDef}get callIndex(){return this.method.callIndex}get data(){return this.method.data}get era(){return this._raw.signature.era}get encodedLength(){return this.toU8a().length}get isSigned(){return this._raw.signature.isSigned}get length(){return this.toU8a(!0).length}get meta(){return this.method.meta}get method(){return this._raw.method}get nonce(){return this._raw.signature.nonce}get signature(){return this._raw.signature.signature}get signer(){return this._raw.signature.signer}get tip(){return this._raw.signature.tip}get type(){return this._raw.version}get version(){return this.type|(this.isSigned?128:0)}is(t){return this.method.is(t)}}var Ql=rt("hashCache");class $l extends Jl{constructor(t,e,{version:r}={}){super(t,$l._decodeExtrinsic(t,e,r)),Object.defineProperty(this,Ql,{writable:!0,value:void 0})}static _newFromValue(t,e,r){if(e instanceof $l)return e._raw;const n=128==(128&r),i=Kl[127&r]||Kl[0];return t.createType(i,e,{isSigned:n,version:r})}static _decodeExtrinsic(t,e,r=4){return us(e)||Array.isArray(e)||$i(e)?$l._decodeU8a(t,ds(e),r):e instanceof t.createClass("Call")?$l._newFromValue(t,{method:e},r):$l._newFromValue(t,e,r)}static _decodeU8a(t,e,r){if(!e.length)return $l._newFromValue(t,new Uint8Array,r);const[n,i]=Zl(e),s=n+i.toNumber();_(s<=e.length,(()=>`Extrinsic: length less than remainder, expected at least ${s}, found ${e.length}`));const o=e.subarray(n,s);return $l._newFromValue(t,o.subarray(1),o[0])}get hash(){return tt(this,Ql)[Ql]||(tt(this,Ql)[Ql]=super.hash),tt(this,Ql)[Ql]}addSignature(t,e,r){return this._raw.addSignature(t,e,r),tt(this,Ql)[Ql]=void 0,this}sign(t,e){return this._raw.sign(t,e),tt(this,Ql)[Ql]=void 0,this}signFake(t,e){return this._raw.signFake(t,e),tt(this,Ql)[Ql]=void 0,this}toHex(t){return ta(this.toU8a(t))}toHuman(t){return Fi({},{isSigned:this.isSigned,method:this.method.toHuman(t)},this.isSigned?{era:this.era.toHuman(t),nonce:this.nonce.toHuman(t),signature:this.signature.toHex(),signer:this.signer.toHuman(t),tip:this.tip.toHuman(t)}:null)}toJSON(){return this.toHex()}toRawType(){return"Extrinsic"}toU8a(t){const e=ml(new Uint8Array([this.version]),this._raw.toU8a());return t?e:Fl(e)}}function td(t){return Th(bs(t).toString())}const ed={pascalCase:!0};function rd(t){return Mh(t.toString(),ed)}function nd(t,e){const r={};let n,i;if(Array.isArray(e)){for(let t=0;t<e.length;t++)r[e[t]]={Type:Yl,index:t};n=!0,i=!1}else if(function(t){const e=Object.values(t);return!e.some((t=>Qo(t)))||(_(e.every((t=>Qo(t)&&t>=0&&t<=255)),"Invalid number-indexed enum definition"),!1)}(e)){const s=Object.entries(vl(t,e));for(let t=0;t<s.length;t++){const[e,n]=s[t];r[e]={Type:n,index:t}}n=!Object.values(r).some((({Type:t})=>t!==Yl)),i=!1}else{const t=Object.entries(e);for(let e=0;e<t.length;e++){const[n,i]=t[e];r[n]={Type:Yl,index:i}}n=!0,i=!0}return{def:r,isBasic:n,isIndexed:i}}function id(t,e,r=0,n){const i=Object.values(e).find((t=>t.index===r));return _(!G(i),(()=>`Unable to create Enum via index ${r}, in ${Object.keys(e).join(", ")}`)),{index:r,value:n instanceof i.Type?n:new i.Type(t,n)}}function sd(t,e,r,n){const i=Object.keys(e).map((t=>t.toLowerCase())),s=r.toLowerCase(),o=i.indexOf(s);_(-1!==o,(()=>`Cannot map Enum JSON, unable to find '${r}' in ${i.join(", ")}`));try{return id(t,e,Object.values(e)[o].index,n)}catch(t){throw new Error(`Enum(${r}):: ${t.message}`)}}var od=rt("def"),ad=rt("entryIndex"),ud=rt("indexes"),hd=rt("isBasic"),cd=rt("isIndexed"),ld=rt("raw");class dd{constructor(t,e,r,n){this.registry=void 0,this.createdAtHash=void 0,Object.defineProperty(this,od,{writable:!0,value:void 0}),Object.defineProperty(this,ad,{writable:!0,value:void 0}),this.initialU8aLength=void 0,Object.defineProperty(this,ud,{writable:!0,value:void 0}),Object.defineProperty(this,hd,{writable:!0,value:void 0}),Object.defineProperty(this,cd,{writable:!0,value:void 0}),Object.defineProperty(this,ld,{writable:!0,value:void 0});const{def:i,isBasic:s,isIndexed:o}=nd(t,e),a=us(r)&&r.length&&!Qo(n)?id(t,i,r[0],r.subarray(1)):function(t,e,r,n){if(Qo(n))return id(t,e,n,r);if(us(r)||$i(r)){const n=ds(r);if(n.length)return id(t,e,n[0],n.subarray(1))}else{if(r instanceof dd)return id(t,e,r.index,r.value);if(Qo(r))return id(t,e,r);if(F(r))return sd(t,e,r.toString());if(pu(r)){const n=Object.keys(r)[0];return sd(t,e,n,r[n])}}return id(t,e,Object.values(e)[0].index)}(t,i,r,n);this.registry=t,tt(this,od)[od]=i,tt(this,hd)[hd]=s,tt(this,cd)[cd]=o,tt(this,ud)[ud]=Object.values(i).map((({index:t})=>t)),tt(this,ad)[ad]=tt(this,ud)[ud].indexOf(a.index)||0,tt(this,ld)[ld]=a.value,tt(this,ld)[ld].initialU8aLength&&(this.initialU8aLength=1+tt(this,ld)[ld].initialU8aLength)}static with(t){const e=Array.isArray(t)?t:Object.keys(t),r=new Array(e.length),n=new Array(e.length);for(let t=0;t<e.length;t++){const i=rd(e[t].replace(" ","_"));r[t]=`as${i}`,n[t]=`is${i}`}return class extends dd{constructor(i,s,o){super(i,t,s,o),tl(this,n,((t,r)=>this.type===e[r])),tl(this,r,((t,e)=>(_(this[n[e]],(()=>`Cannot convert '${this.type}' via ${t}`)),this.value)))}}}get encodedLength(){return 1+tt(this,ld)[ld].encodedLength}get hash(){return this.registry.hash(this.toU8a())}get index(){return tt(this,ud)[ud][tt(this,ad)[ad]]}get isBasic(){return tt(this,hd)[hd]}get isEmpty(){return tt(this,ld)[ld].isEmpty}get isNone(){return tt(this,ld)[ld]instanceof Yl}get isNull(){return tt(this,ld)[ld]instanceof Yl}get defIndexes(){return tt(this,ud)[ud]}get defKeys(){return Object.keys(tt(this,od)[od])}get type(){return this.defKeys[tt(this,ad)[ad]]}get value(){return tt(this,ld)[ld]}eq(t){return us(t)?!this.toU8a().some(((e,r)=>e!==t[r])):Qo(t)?this.toNumber()===t:tt(this,hd)[hd]&&F(t)?this.type===t:$i(t)?this.toHex()===t:t instanceof dd?this.index===t.index&&this.value.eq(t.value):pu(t)?this.value.eq(t[this.type]):this.value.eq(t)}toHex(){return ta(this.toU8a())}toHuman(t){return tt(this,hd)[hd]||this.isNone?this.type:{[this.type]:tt(this,ld)[ld].toHuman(t)}}toJSON(){return tt(this,hd)[hd]?this.type:{[kh(this.type)]:tt(this,ld)[ld].toJSON()}}toNumber(){return this.index}_toRawStruct(){if(tt(this,hd)[hd])return tt(this,cd)[cd]?this.defKeys.reduce(((t,e,r)=>(t[e]=tt(this,ud)[ud][r],t)),{}):this.defKeys;const t=Object.entries(tt(this,od)[od]).reduce(((t,[e,{Type:r}])=>(t[e]=r,t)),{});return kl(this.registry,t)}toRawType(){return Tu({_enum:this._toRawStruct()})}toString(){return this.isNull?this.type:Tu(this.toJSON())}toU8a(t){return ml(new Uint8Array(t?[]:[this.index]),tt(this,ld)[ld].toU8a(t))}}const fd={bitLength:-1,isLe:!1,isNegative:!1};const pd=new ps(1e4),md=[["Perquintill",Vh],["Perbill",Xh],["Permill",Bh],["Percent",Ih]];var yd=rt("bitLength"),vd=rt("isSigned");class gd extends ps{constructor(t,e=0,r=64,n=!1){super(us(e)?ql(e.subarray(0,r/8),{isLe:!0,isNegative:n}).toString():function(t,e,r){return us(t)?ql(t.subarray(0,e/8),{isLe:!0,isNegative:r}).toString():fu(t)?t.toString():$i(t,-1,!0)?vs(t,{isLe:!1,isNegative:r}).toString():bs(t).toString()}(e,r,n)),this.registry=void 0,this.createdAtHash=void 0,this.encodedLength=void 0,Object.defineProperty(this,yd,{writable:!0,value:void 0}),Object.defineProperty(this,vd,{writable:!0,value:void 0}),this.registry=t,tt(this,yd)[yd]=r,this.encodedLength=tt(this,yd)[yd]/8,tt(this,vd)[vd]=n;const i=this.gte(Nh),s=r-(n&&i?1:0);_(n||i,(()=>`${this.toRawType()}: Negative number passed to unsigned type`)),_(super.bitLength()<=s,(()=>`${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${s}`))}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isZero()}get isUnsigned(){return!tt(this,vd)[vd]}bitLength(){return tt(this,yd)[yd]}eq(t){return super.eq($i(t)?vs(t.toString(),{isLe:!1,isNegative:tt(this,vd)[vd]}):bs(t))}isMax(){return this.toU8a().filter((t=>255===t)).length===tt(this,yd)[yd]/8}toBigInt(){return BigInt(this.toString())}toBn(){return this}toHex(t=!1){return function(t,e=fd,r){return t?ta(Sl(t,Fi({isLe:!1,isNegative:!1},Qo(e)?{bitLength:e,isLe:r}:e))):"0x00"}(this,{bitLength:this.bitLength(),isLe:t,isNegative:!this.isUnsigned})}toHuman(t){const e=this.toRawType();if("Balance"===e)return this.isMax()?"everything":zh(this,{decimals:this.registry.chainDecimals[0],withSi:!0,withUnit:this.registry.chainTokens[0]});const[,r]=md.find((([t])=>t===e))||[];return r?function(t,e){return`${(t.mul(pd).div(e).toNumber()/100).toFixed(2)}%`}(this,r):td(this)}toJSON(t=!1){return t||super.bitLength()>52?this.toHex():this.toNumber()}toRawType(){return this instanceof this.registry.createClass("Balance")?"Balance":`${this.isUnsigned?"u":"i"}${this.bitLength()}`}toString(t){return super.toString(t)}toU8a(t){return Sl(this,{bitLength:this.bitLength(),isLe:!0,isNegative:!this.isUnsigned})}}class bd extends gd{static with(t,e){return class extends bd{constructor(e,r){super(e,r,t)}toRawType(){return e||super.toRawType()}}}}class wd extends(bd.with(64)){constructor(...t){super(...t),this.__UIntType="u64"}}class Md extends hl{constructor(t,e){super(t,_l)}}class kd extends El{constructor(t,e){super(t,{period:wd,phase:wd},kd._decodeMortalEra(t,e))}static _decodeMortalEra(t,e){if(us(e)||$i(e)||Array.isArray(e))return kd._decodeMortalU8a(t,ds(e));if(!e)return[new wd(t),new wd(t)];if(pu(e))return kd._decodeMortalObject(t,e);throw new Error("Invalid data passed to Mortal era")}static _decodeMortalObject(t,e){const{current:r,period:n}=e;let i=Math.pow(2,Math.ceil(Math.log2(n)));i=Math.min(Math.max(i,4),65536);const s=r%i,o=Math.max(i>>12,1),a=s/o*o;return[new wd(t,i),new wd(t,a)]}static _decodeMortalU8a(t,e){if(0===e.length)return[new wd(t),new wd(t)];const r=ql(e.subarray(0,1)).toNumber()+(ql(e.subarray(1,2)).toNumber()<<8),n=2<<r%16,i=(r>>4)*Math.max(n>>12,1);return _(n>=4&&i<n,"Invalid data passed to Mortal era"),[new wd(t,n),new wd(t,i)]}get encodedLength(){return 2}get period(){return this[0]}get phase(){return this[1]}toHuman(){return{period:td(this.period),phase:td(this.phase)}}toJSON(){return this.toHex()}toU8a(t){const e=this.period.toNumber(),r=this.phase.toNumber(),n=Math.max(e>>12,1),i=function(t){const e=t.toString(2);let r=0;for(;"0"===e[e.length-1-r];)r++;return r}(e),s=Math.min(15,Math.max(1,i-1))+(r/n<<4);return new Uint8Array([255&s,s>>8])}birth(t){return Math.floor((Math.max(bs(t).toNumber(),this.phase.toNumber())-this.phase.toNumber())/this.period.toNumber())*this.period.toNumber()+this.phase.toNumber()}death(t){return this.birth(t)+this.period.toNumber()}}class xd extends dd{constructor(t,e){super(t,{ImmortalEra:Md,MortalEra:kd},xd._decodeExtrinsicEra(e))}static _decodeExtrinsicEra(t=new Uint8Array){if(us(t))return t.length&&0!==t[0]?new Uint8Array([1,t[0],t[1]]):new Uint8Array([0]);if(!t)return new Uint8Array([0]);if(t instanceof xd)return xd._decodeExtrinsicEra(t.toU8a());if($i(t))return xd._decodeExtrinsicEra(es(t));if(pu(t)){const e=Object.entries(t).map((([t,e])=>[t.toLowerCase(),e])),r=e.find((([t])=>"mortalera"===t.toLowerCase())),n=e.find((([t])=>"immortalera"===t.toLowerCase()));return r?{MortalEra:r[1]}:n?{ImmortalEra:n[1]}:{MortalEra:t}}throw new Error("Invalid data passed to Era")}get encodedLength(){return this.isImmortalEra?this.asImmortalEra.encodedLength:this.asMortalEra.encodedLength}get asImmortalEra(){return _(this.isImmortalEra,(()=>`Cannot convert '${this.type}' via asImmortalEra`)),this.value}get asMortalEra(){return _(this.isMortalEra,(()=>`Cannot convert '${this.type}' via asMortalEra`)),this.value}get isImmortalEra(){return 0===this.index}get isMortalEra(){return this.index>0}toU8a(t){return this.isMortalEra?this.asMortalEra.toU8a(t):this.asImmortalEra.toU8a(t)}}const Pd=["ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadV4"];class Ld extends Ul{constructor(t,e,{version:r}={}){super(t,Ld.decodeExtrinsicPayload(t,e,r))}static decodeExtrinsicPayload(t,e,r=4){return e instanceof Ld?e._raw:t.createType(Pd[r]||Pd[0],e,{version:r})}get blockHash(){return this._raw.blockHash}get era(){return this._raw.era}get genesisHash(){return this._raw.genesisHash||this.registry.createType("Hash")}get method(){return this._raw.method}get nonce(){return this._raw.nonce}get specVersion(){return this._raw.specVersion||this.registry.createType("u32")}get tip(){return this._raw.tip||this.registry.createType("Compact<Balance>")}get transactionVersion(){return this._raw.transactionVersion||this.registry.createType("u32")}eq(t){return this._raw.eq(t)}sign(t){return{signature:ta(this._raw.sign(t))}}toHuman(t){return this._raw.toHuman(t)}toJSON(){return this.toHex()}toString(){return this.toHex()}toU8a(t){return super.toU8a(!!t&&{method:!0})}}class Td extends Ll{constructor(t,e,{version:r=0}={}){throw super(t,{}),new Error(`Unsupported extrinsic payload version ${r}`)}}class Sd extends Ll{constructor(t,e,{isSigned:r=!1,version:n=0}={}){throw super(t,{}),new Error(`Unsupported ${r?"":"un"}signed extrinsic version ${127&n}`)}}var Ad=rt("Type"),Dd=rt("initialU8aLength"),jd=rt("raw");class Hd{constructor(t,e,r){this.registry=void 0,this.createdAtHash=void 0,Object.defineProperty(this,Ad,{writable:!0,value:void 0}),Object.defineProperty(this,Dd,{writable:!0,value:void 0}),Object.defineProperty(this,jd,{writable:!0,value:void 0});const n=yl(t,e),i=us(r)&&r.length&&!function(t){return pu(t)&&Z(t.toU8a)&&pu(t.registry)&&Z(t.registry.get)}(r)?0===r[0]?new Yl(t):new n(t,r.subarray(1)):function(t,e,r){return r instanceof Hd&&(r=r.value),U(r)||G(r)||r instanceof Yl||"0x"===r?new Yl(t):r instanceof e?r:us(r)?r.length&&0!==r[0]?new e(t,r.subarray(1)):new Yl(t):new e(t,r)}(t,n,r);this.registry=t,tt(this,Ad)[Ad]=n,tt(this,jd)[jd]=i,i.initialU8aLength&&(tt(this,Dd)[Dd]=1+i.initialU8aLength)}static with(t){return class extends Hd{constructor(e,r){super(e,t,r)}}}get encodedLength(){return 1+tt(this,jd)[jd].encodedLength}get initialU8aLength(){return tt(this,Dd)[Dd]}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isNone}get isNone(){return tt(this,jd)[jd]instanceof Yl}get isSome(){return!this.isNone}get value(){return tt(this,jd)[jd]}eq(t){return t instanceof Hd?this.isSome===t.isSome&&this.value.eq(t.value):this.value.eq(t)}toHex(){return this.isNone?"0x":ta(this.toU8a().subarray(1))}toHuman(t){return tt(this,jd)[jd].toHuman(t)}toJSON(){return this.isNone?null:tt(this,jd)[jd].toJSON()}toRawType(t){const e=this.registry.getClassName(tt(this,Ad)[Ad])||new(tt(this,Ad)[Ad])(this.registry).toRawType();return t?e:`Option<${e}>`}toString(){return tt(this,jd)[jd].toString()}toU8a(t){if(t)return tt(this,jd)[jd].toU8a(!0);const e=new Uint8Array(this.encodedLength);return this.isSome&&(e.set([1]),e.set(tt(this,jd)[jd].toU8a(),1)),e}unwrap(){return _(this.isSome,"Option: unwrapping a None value"),tt(this,jd)[jd]}unwrapOr(t){return this.isSome?this.unwrap():t}unwrapOrDefault(){return this.isSome?this.unwrap():new(tt(this,Ad)[Ad])(this.registry)}}const Od={address:"Address",blockHash:"Hash",blockNumber:"BlockNumber",era:"ExtrinsicEra",genesisHash:"Hash",method:"Call",nonce:"Compact<Index>",runtimeVersion:"RuntimeVersion",signedExtensions:"Vec<Text>",tip:"Compact<Balance>",version:"u8"};class zd extends Ll{constructor(t,e){const r=Fi({},t.getSignedExtensionTypes(),t.getSignedExtensionExtra());super(t,Fi({},r,Od),e),this._extraTypes=void 0,this._extraTypes={};const n=t=>this.get(t);for(const[t,e]of Object.entries(r))Od[t]||(this._extraTypes[t]=e),$c(this,t,n)}get address(){return this.get("address")}get blockHash(){return this.get("blockHash")}get blockNumber(){return this.get("blockNumber")}get era(){return this.get("era")}get genesisHash(){return this.get("genesisHash")}get method(){return this.get("method")}get nonce(){return this.get("nonce")}get runtimeVersion(){return this.get("runtimeVersion")}get signedExtensions(){return this.get("signedExtensions")}get tip(){return this.get("tip")}get version(){return this.get("version")}toPayload(){const t={},e=Object.keys(this._extraTypes);for(let r=0;r<e.length;r++){const n=e[r],i=this.get(n);i instanceof Hd&&!i.isSome||(t[n]=i.toHex())}return Fi(t,{address:this.address.toString(),blockHash:this.blockHash.toHex(),blockNumber:this.blockNumber.toHex(),era:this.era.toHex(),genesisHash:this.genesisHash.toHex(),method:this.method.toHex(),nonce:this.nonce.toHex(),signedExtensions:this.signedExtensions.map((t=>t.toString())),specVersion:this.runtimeVersion.specVersion.toHex(),tip:this.tip.toHex(),transactionVersion:this.runtimeVersion.transactionVersion.toHex(),version:this.version.toNumber()})}toRaw(){const t=this.toPayload(),e=ta(this.registry.createType("ExtrinsicPayload",t,{version:t.version}).toU8a({method:!0}));return{address:t.address,data:e,type:"payload"}}}class Nd extends Ll{constructor(t,e,{isSigned:r}={}){super(t,{signature:"ExtrinsicSignatureV4",method:"Call"},Nd.decodeExtrinsic(t,e,r))}static decodeExtrinsic(t,e,r=!1){if(e instanceof Nd)return e;if(e instanceof t.createClass("Call"))return{method:e};if(us(e)){const n=t.createType("ExtrinsicSignatureV4",e,{isSigned:r});return{method:t.createType("Call",e.subarray(n.encodedLength)),signature:n}}return e||{}}get encodedLength(){return this.toU8a().length}get method(){return this.get("method")}get signature(){return this.get("signature")}get version(){return 4}addSignature(t,e,r){return this.signature.addSignature(t,e,r),this}sign(t,e){return this.signature.sign(this.method,t,e),this}signFake(t,e){return this.signature.signFake(this.method,t,e),this}}var Ed=rt("signOptions");class Yd extends Ll{constructor(t,e){super(t,Fi({method:"Bytes"},t.getSignedExtensionTypes(),t.getSignedExtensionExtra()),e),Object.defineProperty(this,Ed,{writable:!0,value:void 0}),tt(this,Ed)[Ed]={withType:t.createType("ExtrinsicSignature")instanceof dd}}get blockHash(){return this.get("blockHash")}get era(){return this.get("era")}get genesisHash(){return this.get("genesisHash")}get method(){return this.get("method")}get nonce(){return this.get("nonce")}get specVersion(){return this.get("specVersion")}get tip(){return this.get("tip")}get transactionVersion(){return this.get("transactionVersion")}get assetId(){return this.get("assetId")}sign(t){return function(t,e,r,n){const i=r.length>256?t.hash(r):r;return e.sign(i,n)}(this.registry,t,this.toU8a({method:!0}),tt(this,Ed)[Ed])}}const Rd=new Uint8Array(256).fill(1);function Id(t,e){return t.createType("Address",us(e)?ta(e):e)}var Bd=rt("signKeys");class Xd extends Ll{constructor(t,e,{isSigned:r}={}){const n=t.getSignedExtensionTypes();super(t,Fi({signer:"Address",signature:"ExtrinsicSignature"},n),Xd.decodeExtrinsicSignature(e,r)),Object.defineProperty(this,Bd,{writable:!0,value:void 0}),tt(this,Bd)[Bd]=Object.keys(n),tl(this,tt(this,Bd)[Bd],(t=>this.get(t)))}static decodeExtrinsicSignature(t,e=!1){return t&&(t instanceof Xd||e)?t:Gl}get encodedLength(){return this.isSigned?super.encodedLength:0}get isSigned(){return!this.signature.isEmpty}get era(){return this.get("era")}get nonce(){return this.get("nonce")}get signature(){return this.multiSignature.value||this.multiSignature}get multiSignature(){return this.get("signature")}get signer(){return this.get("signer")}get tip(){return this.get("tip")}_injectSignature(t,e,r){for(let t=0;t<tt(this,Bd)[Bd].length;t++){const e=tt(this,Bd)[Bd][t],n=r.get(e);G(n)||this.set(e,n)}return this.set("signer",t),this.set("signature",e),this}addSignature(t,e,r){return this._injectSignature(Id(this.registry,t),this.registry.createType("ExtrinsicSignature",e),new Yd(this.registry,r))}createPayload(t,e){const{era:r,runtimeVersion:{specVersion:n,transactionVersion:i}}=e;return new Yd(this.registry,Fi({},e,{era:r||_l,method:t.toHex(),specVersion:n,transactionVersion:i}))}sign(t,e,r){_(e&&e.addressRaw,(()=>`Expected a valid keypair for signing, found ${Tu(e)}`));const n=Id(this.registry,e.addressRaw),i=this.createPayload(t,r),s=this.registry.createType("ExtrinsicSignature",i.sign(e));return this._injectSignature(n,s,i)}signFake(t,e,r){_(e,(()=>`Expected a valid address for signing, found ${Tu(e)}`));const n=Id(this.registry,e),i=this.createPayload(t,r),s=this.registry.createType("ExtrinsicSignature",Rd);return this._injectSignature(n,s,i)}toU8a(t){return this.isSigned?super.toU8a(t):Gl}}function Vd(t,e=256,r){const n=256===e,i=ds(t);return _c(r)?n?Wc(i):qc(i):new Uint8Array(n?Gr.keccak256.update(i).arrayBuffer():Gr.keccak512.update(i).arrayBuffer())}Gc(256,Vd),Gc(512,Vd),Uc(Vd);function Cd(t){return!(!t||42!==t.length||!$i(t))&&(!(!/^(0x)?[0-9a-f]{40}$/.test(t)&&!/^(0x)?[0-9A-F]{40}$/.test(t))||function(t){const e=t.replace("0x",""),r=ta(Vd(e.toLowerCase()),-1,!1);for(let t=0;t<40;t++)if(n=e[t],i=parseInt(r[t],16),n!==(i>7?n.toUpperCase():n.toLowerCase()))return!1;var n,i;return!0}(t))}const Wd={bitLength:256,isLe:!1},qd=new Gt.ec("secp256k1");function Zd(t){return[33,65].includes(t.length)&&(t=Vd(function(t){_([33,65].includes(t.length),"Invalid publicKey provided");const e=qd.keyFromPublic(t).getPublic();return ml(Sl(e.getX(),Wd),Sl(e.getY(),Wd))}(t))),t.slice(-20)}class Fd extends hl{constructor(t,e=new Uint8Array,r=256){const[n,i]=function(t,e){const r=ds(t),n=e/8;return r.length?(_(r.length>=n,(()=>`Expected at least ${n} bytes (${e} bits), found ${r.length} bytes`)),[r.subarray(0,n),n]):[new Uint8Array(n),0]}(e,r);super(t,n,i)}static with(t,e){return class extends Fd{constructor(e,r){super(e,r,t)}toRawType(){return e||super.toRawType()}}}toRawType(){return`[u8;${this.length}]`}}function Ud(t){return us(t)||Array.isArray(t)?ds(t):$i(t)||Cd(t)?es(t):F(t)?ds(t):t}class Gd extends Fd{constructor(t,e=new Uint8Array){super(t,Ud(e),160)}static encode(t){return function(t){if(!t)return"0x";const e=ds(t);_([20,32,33,65].includes(e.length),"Invalid address or publicKey passed");const r=ta(Zd(e),-1,!1),n=ta(Vd(r),-1,!1);let i="";for(let t=0;t<40;t++)i=`${i}${parseInt(n[t],16)>7?r[t].toUpperCase():r[t]}`;return`0x${i}`}(t)}eq(t){return super.eq(Ud(t))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toString(){return Gd.encode(this)}toRawType(){return"AccountId"}}const _d={alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:In.Jq,ipfsChar:"z",type:"base58"},Kd=function({alphabet:t,ipfsChar:e,regex:r,type:n}){return(i,s)=>{if(_(i&&"string"==typeof i,(()=>`Expected non-null, non-empty ${n} string input`)),e&&s&&_(i[0]===e,(()=>`Expected ipfs-compatible ${n} to start with '${e}'`)),r)_(r.test(i),`Invalid ${n} encoding`);else for(let e=s?1:0;e<i.length;e++)_(t.includes(i[e]),(()=>`Invalid ${n} character "${i[e]}" (0x${i.charCodeAt(e).toString(16)}) at index ${e}`));return!0}}(_d),Jd=function({coder:t,ipfsChar:e},r){return(n,i)=>(r(n,i),t.decode(e&&i?n.substr(1):n))}(_d,Kd),Qd=function({coder:t,ipfsChar:e}){return(r,n)=>{const i=t.encode(ds(r));return e&&n?`${e}${i}`:i}}(_d);$d=Kd;var $d;const tf=ls("SS58PRE");function ef(t){return Kc(ml(tf,t),512)}const rf={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],bifrost:["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],centrifuge:["0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],"dock-mainnet":["0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],"nodle-chain":["0xa3d114c2b8d0627c1aa9b134eafcf7d05ca561fdc19fb388bb9457f81809fb23"],plasm:["0x3e86364d4b4894021cb2a0390bcf2feb5517d5292f2de2bb9404227e908b0b8b"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"]},nf={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},sf={centrifuge:747,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,kusama:434,"nodle-chain":1003,polkadot:354,polymesh:595,statemine:434},of={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,subspace_testnet:!0,"zero-alphaville":!0},af=[0,2,42],uf=["testnet"];const hf=[{decimals:[10],displayName:"Polkadot Relay Chain",network:"polkadot",prefix:0,standardAccount:"*25519",symbols:["DOT"],website:"https://polkadot.network"},{decimals:null,displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",network:"BareSr25519",prefix:1,standardAccount:"Sr25519",symbols:null,website:null},{decimals:[12],displayName:"Kusama Relay Chain",network:"kusama",prefix:2,standardAccount:"*25519",symbols:["KSM"],website:"https://kusama.network"},{decimals:null,displayName:"Bare 32-bit Ed25519 public key.",network:"BareEd25519",prefix:3,standardAccount:"Ed25519",symbols:null,website:null},{decimals:null,displayName:"Katal Chain",network:"katalchain",prefix:4,standardAccount:"*25519",symbols:null,website:null},{decimals:[15],displayName:"Plasm Network",network:"plasm",prefix:5,standardAccount:"*25519",symbols:["PLM"],website:"https://plasmnet.io"},{decimals:[12],displayName:"Bifrost",network:"bifrost",prefix:6,standardAccount:"*25519",symbols:["BNC"],website:"https://bifrost.finance/"},{decimals:[18],displayName:"Edgeware",network:"edgeware",prefix:7,standardAccount:"*25519",symbols:["EDG"],website:"https://edgewa.re"},{decimals:[12],displayName:"Karura",network:"karura",prefix:8,standardAccount:"*25519",symbols:["KAR"],website:"https://karura.network/"},{decimals:[18],displayName:"Laminar Reynolds Canary",network:"reynolds",prefix:9,standardAccount:"*25519",symbols:["REY"],website:"http://laminar.network/"},{decimals:[12],displayName:"Acala",network:"acala",prefix:10,standardAccount:"*25519",symbols:["ACA"],website:"https://acala.network/"},{decimals:[18],displayName:"Laminar",network:"laminar",prefix:11,standardAccount:"*25519",symbols:["LAMI"],website:"http://laminar.network/"},{decimals:[6],displayName:"Polymesh",network:"polymesh",prefix:12,standardAccount:"*25519",symbols:["POLYX"],website:"https://polymath.network/"},{decimals:[12],displayName:"Integritee",network:"integritee",prefix:13,standardAccount:"*25519",symbols:["TEER"],website:"https://integritee.network"},{decimals:[0],displayName:"Totem",network:"totem",prefix:14,standardAccount:"*25519",symbols:["TOTEM"],website:"https://totemaccounting.com"},{decimals:[12],displayName:"Synesthesia",network:"synesthesia",prefix:15,standardAccount:"*25519",symbols:["SYN"],website:"https://synesthesia.network/"},{decimals:[12],displayName:"Kulupu",network:"kulupu",prefix:16,standardAccount:"*25519",symbols:["KLP"],website:"https://kulupu.network/"},{decimals:null,displayName:"Dark Mainnet",network:"dark",prefix:17,standardAccount:"*25519",symbols:null,website:null},{decimals:[9,9],displayName:"Darwinia Network",network:"darwinia",prefix:18,standardAccount:"*25519",symbols:["RING","KTON"],website:"https://darwinia.network/"},{decimals:[12],displayName:"GeekCash",network:"geek",prefix:19,standardAccount:"*25519",symbols:["GEEK"],website:"https://geekcash.org"},{decimals:[12],displayName:"Stafi",network:"stafi",prefix:20,standardAccount:"*25519",symbols:["FIS"],website:"https://stafi.io"},{decimals:[6],displayName:"Dock Testnet",network:"dock-testnet",prefix:21,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:[6],displayName:"Dock Mainnet",network:"dock-mainnet",prefix:22,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:null,displayName:"ShiftNrg",network:"shift",prefix:23,standardAccount:"*25519",symbols:null,website:null},{decimals:[18],displayName:"ZERO",network:"zero",prefix:24,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:[18],displayName:"ZERO Alphaville",network:"zero-alphaville",prefix:25,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:[10],displayName:"Jupiter",network:"jupiter",prefix:26,standardAccount:"*25519",symbols:["jDOT"],website:"https://jupiter.patract.io"},{decimals:null,displayName:"Subsocial",network:"subsocial",prefix:28,standardAccount:"*25519",symbols:null,website:null},{decimals:[12,12],displayName:"CORD Network",network:"cord",prefix:29,standardAccount:"*25519",symbols:["DHI","WAY"],website:"https://cord.network/"},{decimals:[12],displayName:"Phala Network",network:"phala",prefix:30,standardAccount:"*25519",symbols:["PHA"],website:"https://phala.network"},{decimals:[12],displayName:"Litentry Network",network:"litentry",prefix:31,standardAccount:"*25519",symbols:["LIT"],website:"https://litentry.com/"},{decimals:[9],displayName:"Robonomics",network:"robonomics",prefix:32,standardAccount:"*25519",symbols:["XRT"],website:"https://robonomics.network"},{decimals:null,displayName:"DataHighway",network:"datahighway",prefix:33,standardAccount:"*25519",symbols:null,website:null},{decimals:[12],displayName:"Ares Protocol",network:"ares",prefix:34,standardAccount:"*25519",symbols:["ARES"],website:"https://www.aresprotocol.com/"},{decimals:[15],displayName:"Valiu Liquidity Network",network:"vln",prefix:35,standardAccount:"*25519",symbols:["USDv"],website:"https://valiu.com/"},{decimals:[18],displayName:"Centrifuge Chain",network:"centrifuge",prefix:36,standardAccount:"*25519",symbols:["CFG"],website:"https://centrifuge.io/"},{decimals:[18],displayName:"Nodle Chain",network:"nodle",prefix:37,standardAccount:"*25519",symbols:["NODL"],website:"https://nodle.io/"},{decimals:[18],displayName:"KILT Chain",network:"kilt",prefix:38,standardAccount:"*25519",symbols:["KILT"],website:"https://kilt.io/"},{decimals:[18],displayName:"MathChain mainnet",network:"mathchain",prefix:39,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:[18],displayName:"MathChain testnet",network:"mathchain-testnet",prefix:40,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:null,displayName:"Polimec Chain",network:"poli",prefix:41,standardAccount:"*25519",symbols:null,website:"https://polimec.io/"},{decimals:null,displayName:"Substrate",network:"substrate",prefix:42,standardAccount:"*25519",symbols:null,website:"https://substrate.io/"},{decimals:null,displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",network:"BareSecp256k1",prefix:43,standardAccount:"secp256k1",symbols:null,website:null},{decimals:[8],displayName:"ChainX",network:"chainx",prefix:44,standardAccount:"*25519",symbols:["PCX"],website:"https://chainx.org/"},{decimals:[12,12],displayName:"UniArts Network",network:"uniarts",prefix:45,standardAccount:"*25519",symbols:["UART","UINK"],website:"https://uniarts.me"},{decimals:null,displayName:"This prefix is reserved.",network:"reserved46",prefix:46,standardAccount:null,symbols:null,website:null},{decimals:null,displayName:"This prefix is reserved.",network:"reserved47",prefix:47,standardAccount:null,symbols:null,website:null},{decimals:[12],displayName:"Neatcoin Mainnet",network:"neatcoin",prefix:48,standardAccount:"*25519",symbols:["NEAT"],website:"https://neatcoin.org"},{decimals:[12],displayName:"Picasso",network:"picasso",prefix:49,standardAccount:"*25519",symbols:["PICA"],website:"https://picasso.composable.finance"},{decimals:[12],displayName:"Composable",network:"composable",prefix:50,standardAccount:"*25519",symbols:["LAYR"],website:"https://composable.finance"},{decimals:[9],displayName:"xx network",network:"xxnetwork",prefix:55,standardAccount:"*25519",symbols:["XX"],website:"https://xx.network"},{decimals:[12],displayName:"HydraDX",network:"hydradx",prefix:63,standardAccount:"*25519",symbols:["HDX"],website:"https://hydradx.io"},{decimals:[18],displayName:"AvN Mainnet",network:"aventus",prefix:65,standardAccount:"*25519",symbols:["AVT"],website:"https://aventus.io"},{decimals:[12],displayName:"Crust Network",network:"crust",prefix:66,standardAccount:"*25519",symbols:["CRU"],website:"https://crust.network"},{decimals:[0,9,9,9,9,9,9,9],displayName:"Equilibrium Network",network:"equilibrium",prefix:67,standardAccount:"*25519",symbols:["Unknown","USD","EQ","ETH","BTC","EOS","DOT","CRV"],website:"https://equilibrium.io"},{decimals:[18],displayName:"SORA Network",network:"sora",prefix:69,standardAccount:"*25519",symbols:["XOR"],website:"https://sora.org"},{decimals:[10],displayName:"Zeitgeist",network:"zeitgeist",prefix:73,standardAccount:"*25519",symbols:["ZTG"],website:"https://zeitgeist.pm"},{decimals:[12],displayName:"Manta network",network:"manta",prefix:77,standardAccount:"*25519",symbols:["MA"],website:"https://manta.network"},{decimals:[12],displayName:"Calamari: Manta Canary Network",network:"calamari",prefix:78,standardAccount:"*25519",symbols:["KMA"],website:"https://manta.network"},{decimals:[12],displayName:"Polkadex Mainnet",network:"polkadex",prefix:88,standardAccount:"*25519",symbols:["PDEX"],website:"https://polkadex.trade"},{decimals:[18],displayName:"PolkaSmith Canary Network",network:"polkasmith",prefix:98,standardAccount:"*25519",symbols:["PKS"],website:"https://polkafoundry.com"},{decimals:[18],displayName:"PolkaFoundry Network",network:"polkafoundry",prefix:99,standardAccount:"*25519",symbols:["PKF"],website:"https://polkafoundry.com"},{decimals:[18],displayName:"OriginTrail Parachain",network:"origintrail-parachain",prefix:101,standardAccount:"secp256k1",symbols:["TRAC"],website:"https://origintrail.io"},{decimals:[10],displayName:"Pontem Network",network:"pontem-network",prefix:105,standardAccount:"*25519",symbols:["PONT"],website:"https://pontem.network"},{decimals:[12],displayName:"Heiko",network:"heiko",prefix:110,standardAccount:"*25519",symbols:["HKO"],website:"https://parallel.fi/"},{decimals:null,displayName:"Integritee Incognito",network:"integritee-incognito",prefix:113,standardAccount:"*25519",symbols:null,website:"https://integritee.network"},{decimals:[18],displayName:"Clover Finance",network:"clover",prefix:128,standardAccount:"*25519",symbols:["CLV"],website:"https://clover.finance"},{decimals:[18],displayName:"Altair",network:"altair",prefix:136,standardAccount:"*25519",symbols:["AIR"],website:"https://centrifuge.io/"},{decimals:[12],displayName:"Parallel",network:"parallel",prefix:172,standardAccount:"*25519",symbols:["PARA"],website:"https://parallel.fi/"},{decimals:[18],displayName:"Social Network",network:"social-network",prefix:252,standardAccount:"*25519",symbols:["NET"],website:"https://social.network"},{decimals:[15],displayName:"QUARTZ by UNIQUE",network:"quartz_mainnet",prefix:255,standardAccount:"*25519",symbols:["QTZ"],website:"https://unique.network"},{decimals:[18],displayName:"Pioneer Network by Bit.Country",network:"pioneer_network",prefix:268,standardAccount:"*25519",symbols:["NEER"],website:"https://bit.country"},{decimals:[18],displayName:"Moonbeam",network:"moonbeam",prefix:1284,standardAccount:"secp256k1",symbols:["GLMR"],website:"https://moonbeam.network"},{decimals:[18],displayName:"Moonriver",network:"moonriver",prefix:1285,standardAccount:"secp256k1",symbols:["MOVR"],website:"https://moonbeam.network"},{decimals:[12],displayName:"Kapex",network:"kapex",prefix:2007,standardAccount:"*25519",symbols:["KAPEX"],website:"https://totemaccounting.com"},{decimals:[18],displayName:"Subspace testnet",network:"subspace_testnet",prefix:2254,standardAccount:"*25519",symbols:["tSSC"],website:"https://subspace.network"},{decimals:[18],displayName:"Subspace",network:"subspace",prefix:6094,standardAccount:"*25519",symbols:["SSC"],website:"https://subspace.network"},{decimals:[12],displayName:"Basilisk",network:"basilisk",prefix:10041,standardAccount:"*25519",symbols:["BSX"],website:"https://bsx.fi"},{decimals:[12],displayName:"CESS Testnet",network:"cess-testnet",prefix:10042,standardAccount:"*25519",symbols:["TCESS"],website:"https://cess.cloud"},{decimals:[12],displayName:"CESS",network:"cess",prefix:10043,standardAccount:"*25519",symbols:["CESS"],website:"https://cess.cloud"},{decimals:[18],displayName:"Automata ContextFree",network:"contextfree",prefix:11820,standardAccount:"*25519",symbols:["CTX"],website:"https://ata.network"}].map((function(t){const e=t.network||"",r=e.replace(/_/g,"-").split("-"),n=t;return n.slip44=sf[e],n.hasLedgerSupport=!!n.slip44,n.genesisHash=rf[e]||[],n.icon=nf[e]||"substrate",n.isTestnet=!!of[e]||uf.includes(r[r.length-1]),n.isIgnored=n.isTestnet||!(t.standardAccount&&t.decimals&&t.symbols)&&42!==t.prefix,n})).filter((function(t){return!t.isIgnored&&!!t.network})).sort((function(t,e){const r=af.includes(t.prefix),n=af.includes(e.prefix);return r===n?0:r?-1:n?1:t.displayName.localeCompare(e.displayName)}));hf.filter((function({genesisHash:t,prefix:e}){return!!t.length||42===e}));const cf={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:hf.map((function({prefix:t}){return t})),prefix:42};function lf(t,e,r=-1){if(_(t,"Invalid empty address passed"),us(t)||$i(t))return ds(t);try{const n=Jd(t);_(cf.allowedEncodedLengths.includes(n.length),"Invalid decoded address length");const[i,s,o,a]=function(t){const e=64&t[0]?2:1,r=1===e?t[0]:(63&t[0])<<2|t[1]>>6|(63&t[1])<<8,n=[34+e,35+e].includes(t.length),i=t.length-(n?2:1),s=ef(t.subarray(0,i));return[0==(128&t[0])&&![46,47].includes(t[0])&&(n?t[t.length-2]===s[0]&&t[t.length-1]===s[1]:t[t.length-1]===s[0]),i,e,r]}(n);return _(e||i,"Invalid decoded address checksum"),_([-1,a].includes(r),(()=>`Expected ss58Format ${r}, received ${a}`)),n.slice(o,s)}catch(e){throw new Error(`Decoding ${t}: ${e.message}`)}}function df(t,e=cf.prefix){const r=lf(t);_(e>=0&&e<=16383&&![46,47].includes(e),"Out of range ss58Format specified"),_(cf.allowedDecodedLengths.includes(r.length),(()=>`Expected a valid key to convert, with length ${cf.allowedDecodedLengths.join(", ")}`));const n=ml(e<64?[e]:[(252&e)>>2|64,e>>8|(3&e)<<6],r);return Qd(ml(n,ef(n).subarray(0,[32,33].includes(r.length)?2:1)))}class ff extends(bd.with(32)){constructor(...t){super(...t),this.__UIntType="u32"}}const pf=new ps(239),mf=new ps(1).shln(16),yf=new ps(1).shln(32);function vf(t){return t instanceof gf?t.toBn():fu(t)||Qo(t)||$i(t)||us(t)||gs(t)?t:vf(lf(t))}class gf extends ff{constructor(t,e=new ps(0)){super(t,vf(e))}static calcLength(t){const e=bs(t);return e.lte(pf)?1:e.lt(mf)?2:e.lt(yf)?4:8}static readLength(t){const e=t[0];return 252===e?[1,2]:253===e?[1,4]:254===e?[1,8]:[0,1]}static writeLength(t){switch(t.length){case 2:return new Uint8Array([252]);case 4:return new Uint8Array([253]);case 8:return new Uint8Array([254]);default:return new Uint8Array([])}}eq(t){return fu(t)||Qo(t)?super.eq(t):super.eq(this.registry.createType("AccountIndex",t))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toString(){const t=gf.calcLength(this);return df(this.toU8a().subarray(0,t),this.registry.chainSS58)}toRawType(){return"AccountIndex"}}const bf=new Uint8Array([255]);class wf extends Ul{constructor(t,e=new Uint8Array){super(t,wf._decodeAddress(t,e))}static _decodeAddress(t,e){return e instanceof wf?e._raw:e instanceof Gd||e instanceof gf?e:us(e)||Array.isArray(e)||$i(e)?function(t,e){if(20===e.length)return t.createType("EthereumAccountId",e);if(255===e[0])return t.createType("EthereumAccountId",e.subarray(1));const[r,n]=gf.readLength(e);return t.createType("AccountIndex",ql(e.subarray(r,r+n),!0))}(t,ds(e)):fu(e)||Qo(e)||gs(e)?t.createType("AccountIndex",e):function(t,e){const r=lf(e);return 20===r.length?t.createType("EthereumAccountId",r):t.createType("AccountIndex",ql(r,!0))}(t,e)}get encodedLength(){const t=this._rawLength;return t+(t>1?1:0)}get _rawLength(){return this._raw instanceof gf?gf.calcLength(this._raw):this._raw.encodedLength}toHex(){return ta(this.toU8a())}toRawType(){return"Address"}toU8a(t){const e=this._raw.toU8a().subarray(0,this._rawLength);return t?e:ml(this._raw instanceof gf?gf.writeLength(e):bf,e)}}function Mf(t){if(us(t)||Array.isArray(t))return ds(t);if(!t)return new Uint8Array;if($i(t))return es(t);if(F(t))return lf(t);throw new Error("Unknown type passed to AccountId constructor, found typeof "+typeof t)}class kf extends Fd{constructor(t,e){const r=Mf(e);_(r.length>=32||!r.some((t=>t)),(()=>`Invalid AccountId provided, expected 32 bytes, found ${r.length}`)),super(t,r,256)}eq(t){return super.eq(Mf(t))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toString(){return df(this,this.registry.chainSS58)}toRawType(){return"AccountId"}}class xf extends Ll{constructor(t,e){super(t,{header:"Header",extrinsics:"Vec<Extrinsic>"},e)}get contentHash(){return this.registry.hash(this.toU8a())}get extrinsics(){return this.get("extrinsics")}get hash(){return this.header.hash}get header(){return this.get("header")}}function Pf(t,e){return e.fields.reduce(((e,{name:r,type:n},i)=>(e[r.unwrapOr(`param${i}`).toString()]=t.createLookupType(n),e)),{})}function Lf(t,e=new Uint8Array,r){if(us(e)||$i(e))return function(t,e,r){const n=new Uint8Array(2);n.set(e.subarray(0,2),0);const i=r||t.findMetaCall(n).meta;return{args:e.subarray(2),argsDef:Pf(t,i),callIndex:n,meta:i}}(t,ds(e),r);if(pu(e)&&e.callIndex&&e.args)return function(t,e,r){const{args:n,callIndex:i}=e,s=i instanceof Tf?i.toU8a():i,o=r||t.findMetaCall(s).meta;return{args:n,argsDef:Pf(t,o),callIndex:i,meta:o}}(t,e,r);throw new Error(`Call: Cannot decode value '${e}' of type ${typeof e}`)}class Tf extends Fd{constructor(t,e){super(t,e,16)}}class Sf extends Ll{constructor(t,e,r){const n=Lf(t,e,r);try{super(t,{callIndex:Tf,args:Ll.with(n.argsDef)},n),this._meta=void 0}catch(e){let r="unknown.unknown";try{const e=t.findMetaCall(n.callIndex);r=`${e.section}.${e.method}`}catch(t){}throw new Error(`Call: failed decoding ${r}:: ${e.message}`)}this._meta=n.meta}get args(){return[...this.get("args").values()]}get argsDef(){return Pf(this.registry,this.meta)}get argsEntries(){return[...this.get("args").entries()]}get callIndex(){return this.get("callIndex").toU8a()}get data(){return this.get("args").toU8a()}get meta(){return this._meta}get method(){return this.registry.findMetaCall(this.callIndex).method}get section(){return this.registry.findMetaCall(this.callIndex).section}is(t){return t.callIndex[0]===this.callIndex[0]&&t.callIndex[1]===this.callIndex[1]}toHuman(t){var e,r;let n;try{n=this.registry.findMetaCall(this.callIndex)}catch(t){}return Fi({args:this.argsEntries.reduce(((e,[r,n])=>Fi(e,{[r]:n.toHuman(t)})),{}),method:null===(e=n)||void 0===e?void 0:e.method,section:null===(r=n)||void 0===r?void 0:r.section},t&&n?{docs:n.meta.docs.map((t=>t.toString()))}:null)}toRawType(){return"Call"}}function Af(t,e,r,n=!0){return r&&Z(r.unwrapOrDefault)?r:t.createType(e,n?U(r)||G(r)?null:Array.isArray(r)?r:[r]:r)}function Df(t,e){return(e&&Z(e.entries)?[...e.entries()]:Object.entries(e||{})).reduce(((e,[r,n])=>(e[r]=function(t,e,r){return"ss58Format"===e?Af(t,"Option<u32>",r,!1):"tokenDecimals"===e?Af(t,"Option<Vec<u32>>",r):"tokenSymbol"===e?Af(t,"Option<Vec<Text>>",r):r}(t,r,n),e)),{ss58Format:t.createType("Option<u32>"),tokenDecimals:t.createType("Option<Vec<u32>>"),tokenSymbol:t.createType("Option<Vec<Text>>")})}class jf extends il{constructor(t,e){super(t,Df(t,e))}get ss58Format(){return this.get("ss58Format")}get tokenDecimals(){return this.get("tokenDecimals")}get tokenSymbol(){return this.get("tokenSymbol")}}const Hf=ls("aura"),Of=ls("BABE"),zf=ls("FRNK"),Nf=ls("pow_");class Ef extends Fd{constructor(t,e){super(t,Qo(e)?Sl(e,{isLe:!1}):e,32)}get isAura(){return this.eq(Hf)}get isBabe(){return this.eq(Of)}get isGrandpa(){return this.eq(zf)}get isPow(){return this.eq(Nf)}_getAuraAuthor(t,e){return e[this.registry.createType("RawAuraPreDigest",t.toU8a(!0)).slotNumber.mod(new ps(e.length)).toNumber()]}_getBabeAuthor(t,e){return e[this.registry.createType("RawBabePreDigestCompat",t.toU8a(!0)).value.toNumber()]}_getBytesAsAuthor(t){return this.registry.createType("AccountId",t)}extractAuthor(t,e){if(null!=e&&e.length){if(this.isAura)return this._getAuraAuthor(t,e);if(this.isBabe)return this._getBabeAuthor(t,e)}if(this.isPow||20===t.length)return this._getBytesAsAuthor(t)}toHuman(){return this.toString()}toRawType(){return"ConsensusEngineId"}toString(){return this.isAscii?ks(this):ta(this)}}const Yf=new Uint8Array([255]);class Rf extends Ul{constructor(t,e=new Uint8Array){super(t,Rf._decodeAddress(t,e))}static _decodeAddress(t,e){return e instanceof Rf?e._raw:e instanceof kf||e instanceof gf?e:fu(e)||Qo(e)||gs(e)?t.createType("AccountIndex",e):Array.isArray(e)||$i(e)||us(e)?function(t,e){if(32===e.length)return t.createType("AccountId",e);if(255===e[0])return t.createType("AccountId",e.subarray(1));const[r,n]=gf.readLength(e);return t.createType("AccountIndex",ql(e.subarray(r,r+n),!0))}(t,ds(e)):function(t,e){const r=lf(e);return 32===r.length?t.createType("AccountId",r):t.createType("AccountIndex",ql(r,!0))}(t,e)}get encodedLength(){const t=this._rawLength;return t+(t>1?1:0)}get _rawLength(){return this._raw instanceof gf?gf.calcLength(this._raw):this._raw.encodedLength}toHex(){return ta(this.toU8a())}toRawType(){return"Address"}toU8a(t){const e=this._raw.toU8a().subarray(0,this._rawLength);return t?e:ml(this._raw instanceof gf?gf.writeLength(e):Yf,e)}}function If(t,e){return[0,32].includes(e.length)?{Id:e}:20===e.length?{Address20:e}:e.length<=8?{Index:t.createType("AccountIndex",e).toNumber()}:e}class Bf extends dd{constructor(t,e){super(t,{Id:"AccountId",Index:"Compact<AccountIndex>",Raw:"Bytes",Address32:"H256",Address20:"H160"},function(t,e){return e instanceof kf?{Id:e}:us(e)?If(t,e):e instanceof Bf?e:e instanceof gf||fu(e)||Qo(e)?{Index:Qo(e)?e:e.toNumber()}:F(e)?If(t,lf(e.toString())):e}(t,e))}toString(){return this.value.toString()}}class Xf extends Boolean{constructor(t,e=!1){super(function(t){return us(t)?1===t[0]:t instanceof Boolean?t.valueOf():!!t}(e)),this.registry=void 0,this.createdAtHash=void 0,this.registry=t}get encodedLength(){return 1}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isFalse}get isFalse(){return!this.isTrue}get isTrue(){return this.valueOf()}eq(t){return this.valueOf()===(t instanceof Boolean?t.valueOf():t)}toHex(){return ta(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.valueOf()}toRawType(){return"bool"}toString(){return this.toJSON().toString()}toU8a(t){return new Uint8Array([this.valueOf()?1:0])}}const Vf=128;function Cf(t){return t?new Uint8Array([128]):new Uint8Array([0])}function Wf(t,e){return us(e)?function(t){return t.length?t.subarray(0,1):new Uint8Array([0])}(e):G(e)||e instanceof Boolean||ms(e)?Cf(new Xf(t,e).isTrue):Qo(e)?Cf(e<0):function(t,e){const r=new Xf(t,e.aye).isTrue?Vf:0,n=t.createType("Conviction",e.conviction||0);return new Uint8Array([r|n.index])}(t,e)}class qf extends Fd{constructor(t,e){const r=Wf(t,e);super(t,r,8),this._aye=void 0,this._conviction=void 0,this._aye=(r[0]&Vf)===Vf,this._conviction=this.registry.createType("Conviction",127&r[0])}get conviction(){return this._conviction}get isAye(){return this._aye}get isNay(){return!this.isAye}toHuman(t){return{conviction:this.conviction.toHuman(t),vote:this.isAye?"Aye":"Nay"}}toRawType(){return"Vote"}}function Zf(t){if(Array.isArray(t)||F(t)){const e=ds(t);return[e.length/8,e]}return function(t){if(!t||!t.length)return[0,new Uint8Array];const[e,r]=Zl(t),n=e+Math.ceil(r.toNumber()/8);return _(n<=t.length,(()=>`BitVec: required length less than remainder, expected at least ${n}, found ${t.length}`)),[r.toNumber(),t.subarray(e,n)]}(t)}class Ff extends hl{constructor(t,e){const[r,n]=Zf(e);super(t,n),this._decodedLength=void 0,this._decodedLength=r}get encodedLength(){return this.length+Hl(this._decodedLength).length}toHuman(){return`0b${[...this.toU8a(!0)].map((t=>`00000000${t.toString(2)}`.slice(-8))).join("_")}`}toRawType(){return"BitVec"}toU8a(t){const e=super.toU8a();return t?e:ml(Hl(this._decodedLength),e)}}const Uf=10485760;function Gf(t){return Array.isArray(t)||F(t)?[ds(t),0]:t instanceof hl||!us(t)?[t,0]:function(t){if(!t.length)return[new Uint8Array,0];const[e,r]=Zl(t),n=e+r.toNumber();return _(r.lten(Uf),(()=>`Bytes length ${r.toString()} exceeds 10485760`)),_(n<=t.length,(()=>`Bytes: required length less than remainder, expected at least ${n}, found ${t.length}`)),[t.subarray(e,n),n]}(t)}class _f extends hl{constructor(t,e){const[r,n]=Gf(e);super(t,r,n)}get encodedLength(){return this.length+Hl(this.length).length}toRawType(){return"Bytes"}toU8a(t){return t?super.toU8a(t):Fl(this)}}function Kf(t,e){return us(e)||F(e)?function(t,e){const r=e[0];if(!r)return[void 0,void 0];if(r>=1&&r<=33){const n=r-1,i=e.subarray(1,n+1);return[t.createType("Raw",i),1]}if(r>=34&&r<=37)return[e.subarray(1,33),r-32];throw new Error(`Unable to decode Data, invalid indicator byte ${r}`)}(t,ds(e)):e?[e,void 0]:[void 0,void 0]}class Jf extends dd{constructor(t,e){super(t,{None:"Null",Raw:"Bytes",BlakeTwo256:"H256",Sha256:"H256",Keccak256:"H256",ShaThree256:"H256"},...Kf(t,e)),_(!this.isRaw||this.asRaw.length<=32,"Data.Raw values are limited to a maximum length of 32 bytes")}get asBlakeTwo256(){return this.value}get asKeccak256(){return this.value}get asRaw(){return this.value}get asSha256(){return this.value}get asShaThree256(){return this.value}get isBlakeTwo256(){return 2===this.index}get isKeccak256(){return 4===this.index}get isNone(){return 0===this.index}get isRaw(){return 1===this.index}get isSha256(){return 3===this.index}get isShaThree256(){return 5===this.index}get encodedLength(){return this.toU8a().length}toU8a(){if(0===this.index)return new Uint8Array(1);if(1===this.index){const t=this.value.toU8a(!0),e=Math.min(t.length,32),r=new Uint8Array(e+1);return r.set([e+1],0),r.set(t.subarray(0,e),1),r}const t=new Uint8Array(33);return t.set([this.index+32],0),t.set(this.value.toU8a(),1),t}}class Qf extends gd{constructor(t,e=0,r){super(t,e,r,!0)}static with(t,e){return class extends Qf{constructor(e,r){super(e,r,t)}toRawType(){return e||super.toRawType()}}}}class $f extends(Qf.with(8)){constructor(...t){super(...t),this.__IntType="i8"}}class tp extends(Qf.with(16)){constructor(...t){super(...t),this.__IntType="i16"}}class ep extends(Qf.with(32)){constructor(...t){super(...t),this.__IntType="i32"}}class rp extends(Qf.with(64)){constructor(...t){super(...t),this.__IntType="i64"}}class np extends(Qf.with(128)){constructor(...t){super(...t),this.__IntType="i128"}}class ip extends(Qf.with(256)){constructor(...t){super(...t),this.__IntType="i256"}}function sp(t,e){const r=t.getTypeDef(e);return r.lookupName||r.type}const op={Blake2_128:[16,!1],Blake2_128Concat:[16,!0],Blake2_256:[32,!1],Identity:[0,!0],Twox128:[16,!1],Twox256:[32,!1],Twox64Concat:[8,!0]};function ap(t,e,r){const n=sp(t.lookup,function(t){return t.isPlain?t.asPlain:t.asMap.value}(e));return r?`Option<${n}>`:n}function up(t,e,r){if(!r||!r.type.isMap)return[];const{hashers:n,key:i}=r.type.asMap,s=1===n.length?[i]:t.lookup.getSiType(i).def.asTuple;return function(t,e,r){let n=32;const i=new Array(r.length);for(let s=0;s<r.length;s++){const[o,a]=r[s],[u,h]=op[o.type],c=h?t.createType(t.createLookupType(a),e.subarray(n+u)):t.createType("Raw",e.subarray(n,n+u));n+=u+(h?c.encodedLength:0),i[s]=c}return i}(t,e,n.map(((t,e)=>[t,s[e]])))}class hp extends _f{constructor(t,e,r={}){const{key:n,method:i,section:s}=function(t){if(us(t)||!t||F(t))return{key:t};if(t instanceof hp)return{key:t,method:t.method,section:t.section};if(Z(t))return{key:t(),method:t.method,section:t.section};if(Array.isArray(t)){const[e,r=[]]=t;if(_(Z(e),"Expected function input for key construction"),e.meta&&e.meta.type.isMap){const t=e.meta.type.asMap;_(Array.isArray(r)&&r.length===t.hashers.length,(()=>`Expected an array of ${t.hashers.length} values as params to a Map query`))}return{key:e(...r),method:e.method,section:e.section}}throw new Error(`Unable to convert input ${t} to StorageKey`)}(e);super(t,n),this._args=void 0,this._meta=void 0,this._outputType=void 0,this._method=void 0,this._section=void 0,this._outputType=function(t,e){if(e instanceof hp)return e.outputType;if(Z(e))return ap(t,e.meta.type);if(Array.isArray(e)){const[r]=e;if(r.meta)return ap(t,r.meta.type)}return"Raw"}(t,e),this.setMeta(function(t){if(t instanceof hp)return t.meta;if(Z(t))return t.meta;if(Array.isArray(t)){const[e]=t;return e.meta}}(e),r.section||s,r.method||i)}get args(){return this._args}get meta(){return this._meta}get method(){return this._method}get outputType(){return this._outputType}get section(){return this._section}is(t){return t.section===this.section&&t.method===this.method}setMeta(t,e,r){this._meta=t,this._method=r||this._method,this._section=e||this._section,t&&(this._outputType=ap(this.registry,t.type));try{this._args=up(this.registry,this.toU8a(!0),this.meta)}catch(t){}return this}toHuman(){return this._args.length?this._args.map((t=>t.toHuman())):super.toHuman()}toRawType(){return"StorageKey"}}const cp=131072;var lp=rt("initialU8aLength"),dp=rt("override");class fp extends String{constructor(t,e){const[r,n]=function(t){if(us(t)){if(!t.length)return["",0];if(t instanceof hl)return[ks(t),0];const[e,r]=Zl(t),n=e+r.toNumber();return _(r.lten(cp),(()=>`Text: length ${r.toString()} exceeds 131072`)),_(n<=t.length,(()=>`Text: required length less than remainder, expected at least ${n}, found ${t.length}`)),[ks(t.subarray(e,n)),n]}return $i(t)?[ks(es(t)),0]:[t?t.toString():"",0]}(e);super(r),this.registry=void 0,this.createdAtHash=void 0,Object.defineProperty(this,lp,{writable:!0,value:void 0}),Object.defineProperty(this,dp,{writable:!0,value:null}),this.registry=t,tt(this,lp)[lp]=n}get encodedLength(){return this.toU8a().length}get initialU8aLength(){return tt(this,lp)[lp]}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.length}get length(){return super.length}eq(t){return!!F(t)&&this.toString()===t.toString()}setOverride(t){tt(this,dp)[dp]=t}toHex(){return ta(this.toU8a(!0))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toRawType(){return"Text"}toString(){return tt(this,dp)[dp]||super.toString()}toU8a(t){const e=ls(super.toString());return t?e:Fl(e)}}const pp=["BTreeMap","BTreeSet","HashMap","Vec"],mp=pp.concat(["Compact","DoNotConstruct","Int","Linkage","Range","RangeInclusive","Result","Option","UInt","WrapperOpaque"]),yp=["<","(","[",'"',","," "],vp=[bp("<T::InherentOfflineReport as InherentOfflineReport>::Inherent","InherentOfflineReport",!1),bp("VecDeque<","Vec<",!1),t=>{for(let e=0;e<t.length;e++)if("<"===t[e]){const r=gp(t,e+1)-14;" as HasCompact"===t.substr(r,14)&&(t=`Compact<${t.substr(e+1,r-e-1)}>`)}return t},Mp("Bounded",!0),Mp("Weak",!1),function(){const t=/\s/g,e=/(T|Self)::/g,r=/<(T|Self)asTrait>::/g,n=/<Tas[a-z]+::Trait>::/g,i=/<LookupasStaticLookup>/g,s=/::Type/g;return o=>(t.lastIndex=0,e.lastIndex=0,r.lastIndex=0,n.lastIndex=0,i.lastIndex=0,s.lastIndex=0,o.replace(t,"").replace(e,"").replace(r,"").replace(n,"").replace(i,"Lookup").replace(s,""))}(),function(){const t=t=>`(${t},${t})`;return e=>wp(e,"PairOf<",t)}(),function(t){const e=t=>t;return r=>wp(r,t,e)}("Box<"),t=>{for(let e=0;e<t.length;e++)if("<"===t[e]&&!mp.find((r=>{const n=e-r.length;return n>=0&&t.substr(n,r.length)===r&&(0===n||yp.includes(t[n-1]))}))){const r=gp(t,e+1);t=`${t.substr(0,e)}${t.substr(r+1)}`}return t},bp("String","Text"),bp("Vec<u8>","Bytes"),bp("&\\[u8\\]","Bytes"),bp("&'static\\[u8\\]","Bytes"),bp("RawAddress","Address"),bp("Lookup::Source","LookupSource"),bp("Lookup::Target","LookupTarget"),bp("exec::StorageKey","ContractStorageKey"),function(){const t=/,\)/g,e=/\(([^,]+)\)/;return r=>(t.lastIndex=0,r.replace(t,")").replace(e,"$1"))}(),(t,{allowNamespaces:e}={})=>{let r=0;for(;-1!==r;)if(r=t.indexOf("::"),0===r)t=t.substr(2);else if(-1!==r){if(e)return t;let n=r;for(;-1!==n&&!yp.includes(t[n]);)n--;t=`${t.substr(0,n+1)}${t.substr(r+2)}`}return t}];function gp(t,e){let r=0;for(let n=e;n<t.length;n++)if(">"===t[n]){if(!r)return n;r--}else"<"===t[n]&&r++;throw new Error(`Unable to find closing matching <> on '${t}' (start ${e})`)}function bp(t,e,r=!0){const n=new RegExp(`(^${t}|${yp.map((e=>`\\${e}${t}`)).join("|")})`,"g"),i=t=>(n.lastIndex=0,r&&yp.includes(t[0])?`${t[0]}${e}`:e);return t=>t.replace(n,i)}function wp(t,e,r){let n=-1;for(;;){if(n=t.indexOf(e,n+1),-1===n)return t;const i=n+e.length,s=gp(t,i);t=`${t.substr(0,n)}${r(t.substr(i,s-i))}${t.substr(s+1)}`}}function Mp(t,e){return r=>pp.reduce(((r,n)=>wp(r,`${t}${n}<`,(t=>{const r=t.split(",").map((t=>t.trim())).filter((t=>t));return e&&r.pop(),`${n}<${r.join(",")}>`}))),r)}const kp=new Map;function xp(t,e){let r=t.toString();if(!e){const t=kp.get(r);if(t)return t}for(let t=0;t<vp.length;t++)r=vp[t](r,e);return r=r.trim(),e||kp.set(t.toString(),r),r}class Pp extends fp{constructor(t,e=""){super(t,e),this.setOverride(xp(this.toString()))}toRawType(){return"Type"}}class Lp extends(bd.with(8)){constructor(...t){super(...t),this.__UIntType="u8"}}class Tp extends(bd.with(16)){constructor(...t){super(...t),this.__UIntType="u16"}}class Sp extends(bd.with(128)){constructor(...t){super(...t),this.__UIntType="u128"}}class Ap extends(bd.with(256)){constructor(...t){super(...t),this.__UIntType="u256"}}class Dp extends ff{constructor(t,e){throw super(t,e),new Error("The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.")}}const jp={ErrorMetadataV11:"ErrorMetadataV10",EventMetadataV11:"EventMetadataV10",ExtrinsicMetadataV11:{version:"u8",signedExtensions:"Vec<Text>"},FunctionArgumentMetadataV11:"FunctionArgumentMetadataV10",FunctionMetadataV11:"FunctionMetadataV10",MetadataV11:{modules:"Vec<ModuleMetadataV11>",extrinsic:"ExtrinsicMetadataV11"},ModuleConstantMetadataV11:"ModuleConstantMetadataV10",ModuleMetadataV11:{name:"Text",storage:"Option<StorageMetadataV11>",calls:"Option<Vec<FunctionMetadataV11>>",events:"Option<Vec<EventMetadataV11>>",constants:"Vec<ModuleConstantMetadataV11>",errors:"Vec<ErrorMetadataV11>"},StorageEntryModifierV11:"StorageEntryModifierV10",StorageEntryMetadataV11:{name:"Text",modifier:"StorageEntryModifierV11",type:"StorageEntryTypeV11",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV11:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV11",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV11",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV11"}}},StorageMetadataV11:{prefix:"Text",items:"Vec<StorageEntryMetadataV11>"},StorageHasherV11:{_enum:{Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null,Identity:null}}},Hp={name:"Text",fields:"Vec<Si1Field>",index:"u8",docs:"Vec<Text>"},Op={Si1Field:{name:"Option<Text>",type:"Si1LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si1LookupTypeId:"Compact<u32>",Si1Path:"Si0Path",Si1Type:{path:"Si1Path",params:"Vec<Si1TypeParameter>",def:"Si1TypeDef",docs:"Vec<Text>"},Si1TypeDef:{_enum:{Composite:"Si1TypeDefComposite",Variant:"Si1TypeDefVariant",Sequence:"Si1TypeDefSequence",Array:"Si1TypeDefArray",Tuple:"Si1TypeDefTuple",Primitive:"Si1TypeDefPrimitive",Compact:"Si1TypeDefCompact",BitSequence:"Si1TypeDefBitSequence",HistoricMetaCompat:"Type"}},Si1TypeDefArray:{len:"u32",type:"Si1LookupTypeId"},Si1TypeDefBitSequence:{bitStoreType:"Si1LookupTypeId",bitOrderType:"Si1LookupTypeId"},Si1TypeDefCompact:{type:"Si1LookupTypeId"},Si1TypeDefComposite:{fields:"Vec<Si1Field>"},Si1TypeDefPrimitive:"Si0TypeDefPrimitive",Si1TypeDefSequence:{type:"Si1LookupTypeId"},Si1TypeDefTuple:"Vec<Si1LookupTypeId>",Si1TypeParameter:{name:"Text",type:"Option<Si1LookupTypeId>"},Si1TypeDefVariant:{variants:"Vec<Si1Variant>"},Si1Variant:Hp},zp={PortableTypeV14:{id:"Si1LookupTypeId",type:"Si1Type"},ErrorMetadataV14:Fi({},Hp,{args:"Vec<Type>"}),EventMetadataV14:Fi({},Hp,{args:"Vec<Type>"}),FunctionArgumentMetadataV14:{name:"Text",type:"Type",typeName:"Option<Type>"},FunctionMetadataV14:Fi({},Hp,{args:"Vec<FunctionArgumentMetadataV14>"}),ExtrinsicMetadataV14:{type:"SiLookupTypeId",version:"u8",signedExtensions:"Vec<SignedExtensionMetadataV14>"},MetadataV14:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV14>",extrinsic:"ExtrinsicMetadataV14",type:"SiLookupTypeId"},PalletCallMetadataV14:{type:"SiLookupTypeId"},PalletConstantMetadataV14:{name:"Text",type:"SiLookupTypeId",value:"Bytes",docs:"Vec<Text>"},PalletErrorMetadataV14:{type:"SiLookupTypeId"},PalletEventMetadataV14:{type:"SiLookupTypeId"},PalletMetadataV14:{name:"Text",storage:"Option<PalletStorageMetadataV14>",calls:"Option<PalletCallMetadataV14>",events:"Option<PalletEventMetadataV14>",constants:"Vec<PalletConstantMetadataV14>",errors:"Option<PalletErrorMetadataV14>",index:"u8"},PalletStorageMetadataV14:{prefix:"Text",items:"Vec<StorageEntryMetadataV14>"},SignedExtensionMetadataV14:{identifier:"Text",type:"SiLookupTypeId",additionalSigned:"SiLookupTypeId"},StorageEntryMetadataV14:{name:"Text",modifier:"StorageEntryModifierV14",type:"StorageEntryTypeV14",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV14:"StorageEntryModifierV13",StorageEntryTypeV14:{_enum:{Plain:"SiLookupTypeId",Map:{hashers:"Vec<StorageHasherV14>",key:"SiLookupTypeId",value:"SiLookupTypeId"}}},StorageHasherV14:"StorageHasherV13"},Np={rpc:{},types:Fi({},{ErrorMetadataV9:{name:"Text",docs:"Vec<Text>"},EventMetadataV9:{name:"Text",args:"Vec<Type>",docs:"Vec<Text>"},FunctionArgumentMetadataV9:{name:"Text",type:"Type"},FunctionMetadataV9:{name:"Text",args:"Vec<FunctionArgumentMetadataV9>",docs:"Vec<Text>"},MetadataV9:{modules:"Vec<ModuleMetadataV9>"},ModuleConstantMetadataV9:{name:"Text",type:"Type",value:"Bytes",docs:"Vec<Text>"},ModuleMetadataV9:{name:"Text",storage:"Option<StorageMetadataV9>",calls:"Option<Vec<FunctionMetadataV9>>",events:"Option<Vec<EventMetadataV9>>",constants:"Vec<ModuleConstantMetadataV9>",errors:"Vec<ErrorMetadataV9>"},StorageEntryMetadataV9:{name:"Text",modifier:"StorageEntryModifierV9",type:"StorageEntryTypeV9",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV9:{_enum:["Optional","Default","Required"]},StorageEntryTypeV9:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV9",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV9",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV9"}}},StorageHasherV9:{_enum:{Blake2_128:null,Blake2_256:null,Twox128:null,Twox256:null,Twox64Concat:null}},StorageMetadataV9:{prefix:"Text",items:"Vec<StorageEntryMetadataV9>"}},{ErrorMetadataV10:"ErrorMetadataV9",EventMetadataV10:"EventMetadataV9",FunctionArgumentMetadataV10:"FunctionArgumentMetadataV9",FunctionMetadataV10:"FunctionMetadataV9",MetadataV10:{modules:"Vec<ModuleMetadataV10>"},ModuleConstantMetadataV10:"ModuleConstantMetadataV9",ModuleMetadataV10:{name:"Text",storage:"Option<StorageMetadataV10>",calls:"Option<Vec<FunctionMetadataV10>>",events:"Option<Vec<EventMetadataV10>>",constants:"Vec<ModuleConstantMetadataV10>",errors:"Vec<ErrorMetadataV10>"},StorageEntryModifierV10:"StorageEntryModifierV9",StorageEntryMetadataV10:{name:"Text",modifier:"StorageEntryModifierV10",type:"StorageEntryTypeV10",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV10:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV10",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV10",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV10"}}},StorageMetadataV10:{prefix:"Text",items:"Vec<StorageEntryMetadataV10>"},StorageHasherV10:{_enum:{Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null}}},jp,{ErrorMetadataV12:"ErrorMetadataV11",EventMetadataV12:"EventMetadataV11",ExtrinsicMetadataV12:"ExtrinsicMetadataV11",FunctionArgumentMetadataV12:"FunctionArgumentMetadataV11",FunctionMetadataV12:"FunctionMetadataV11",MetadataV12:{modules:"Vec<ModuleMetadataV12>",extrinsic:"ExtrinsicMetadataV12"},ModuleConstantMetadataV12:"ModuleConstantMetadataV11",ModuleMetadataV12:{name:"Text",storage:"Option<StorageMetadataV12>",calls:"Option<Vec<FunctionMetadataV12>>",events:"Option<Vec<EventMetadataV12>>",constants:"Vec<ModuleConstantMetadataV12>",errors:"Vec<ErrorMetadataV12>",index:"u8"},StorageEntryModifierV12:"StorageEntryModifierV11",StorageEntryMetadataV12:"StorageEntryMetadataV11",StorageEntryTypeV12:"StorageEntryTypeV11",StorageMetadataV12:"StorageMetadataV11",StorageHasherV12:"StorageHasherV11"},{ErrorMetadataV13:"ErrorMetadataV12",EventMetadataV13:"EventMetadataV12",ExtrinsicMetadataV13:"ExtrinsicMetadataV12",FunctionArgumentMetadataV13:"FunctionArgumentMetadataV12",FunctionMetadataV13:"FunctionMetadataV12",MetadataV13:{modules:"Vec<ModuleMetadataV13>",extrinsic:"ExtrinsicMetadataV13"},ModuleConstantMetadataV13:"ModuleConstantMetadataV12",ModuleMetadataV13:{name:"Text",storage:"Option<StorageMetadataV13>",calls:"Option<Vec<FunctionMetadataV13>>",events:"Option<Vec<EventMetadataV13>>",constants:"Vec<ModuleConstantMetadataV13>",errors:"Vec<ErrorMetadataV13>",index:"u8"},StorageEntryModifierV13:"StorageEntryModifierV12",StorageEntryMetadataV13:{name:"Text",modifier:"StorageEntryModifierV13",type:"StorageEntryTypeV13",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV13:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV13",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV13",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV13"},NMap:{keyVec:"Vec<Type>",hashers:"Vec<StorageHasherV13>",value:"Type"}}},StorageMetadataV13:{prefix:"Text",items:"Vec<StorageEntryMetadataV13>"},StorageHasherV13:"StorageHasherV12"},zp,{ErrorMetadataLatest:"ErrorMetadataV14",EventMetadataLatest:"EventMetadataV14",ExtrinsicMetadataLatest:"ExtrinsicMetadataV14",FunctionArgumentMetadataLatest:"FunctionArgumentMetadataV14",FunctionMetadataLatest:"FunctionMetadataV14",MetadataLatest:"MetadataV14",PalletCallMetadataLatest:"PalletCallMetadataV14",PalletConstantMetadataLatest:"PalletConstantMetadataV14",PalletErrorMetadataLatest:"PalletErrorMetadataV14",PalletEventMetadataLatest:"PalletEventMetadataV14",PalletMetadataLatest:"PalletMetadataV14",PalletStorageMetadataLatest:"PalletStorageMetadataV14",PortableType:"PortableTypeV14",SignedExtensionMetadataLatest:"SignedExtensionMetadataV14",StorageEntryMetadataLatest:"StorageEntryMetadataV14",StorageEntryModifierLatest:"StorageEntryModifierV14",StorageEntryTypeLatest:"StorageEntryTypeV14",StorageHasher:"StorageHasherV14",MetadataAll:{_enum:{V0:"DoNotConstruct<MetadataV0>",V1:"DoNotConstruct<MetadataV1>",V2:"DoNotConstruct<MetadataV2>",V3:"DoNotConstruct<MetadataV3>",V4:"DoNotConstruct<MetadataV4>",V5:"DoNotConstruct<MetadataV5>",V6:"DoNotConstruct<MetadataV6>",V7:"DoNotConstruct<MetadataV7>",V8:"DoNotConstruct<MetadataV8>",V9:"MetadataV9",V10:"MetadataV10",V11:"MetadataV11",V12:"MetadataV12",V13:"MetadataV13",V14:"MetadataV14"}}})},Ep={rpc:{},types:Fi({},{Fixed64:"Int<64, Fixed64>",FixedI64:"Int<64, FixedI64>",FixedU64:"UInt<64, FixedU64>",Fixed128:"Int<128, Fixed128>",FixedI128:"Int<128, FixedI128>",FixedU128:"UInt<128, FixedU128>",I32F32:"Int<64, I32F32>",U32F32:"UInt<64, U32F32>",PerU16:"UInt<16, PerU16>",Perbill:"UInt<32, Perbill>",Percent:"UInt<8, Percent>",Permill:"UInt<32, Permill>",Perquintill:"UInt<64, Perquintill>"},{AccountId:"AccountId32",AccountId20:"GenericEthereumAccountId",AccountId32:"GenericAccountId",AccountIdOf:"AccountId",AccountIndex:"GenericAccountIndex",Address:"MultiAddress",AssetId:"u32",Balance:"UInt<128, Balance>",BalanceOf:"Balance",Block:"GenericBlock",BlockNumber:"u32",BlockNumberFor:"BlockNumber",BlockNumberOf:"BlockNumber",Call:"GenericCall",CallHash:"Hash",CallHashOf:"CallHash",ChangesTrieConfiguration:{digestInterval:"u32",digestLevels:"u32"},ChangesTrieSignal:{_enum:{NewConfiguration:"Option<ChangesTrieConfiguration>"}},ConsensusEngineId:"GenericConsensusEngineId",CodecHash:"Hash",CrateVersion:{major:"u16",minor:"u8",patch:"u8"},Digest:{logs:"Vec<DigestItem>"},DigestItem:{_enum:{Other:"Bytes",AuthoritiesChange:"Vec<AuthorityId>",ChangesTrieRoot:"Hash",SealV0:"SealV0",Consensus:"Consensus",Seal:"Seal",PreRuntime:"PreRuntime",ChangesTrieSignal:"ChangesTrieSignal",RuntimeEnvironmentUpdated:"Null"}},ExtrinsicsWeight:{normal:"Weight",operational:"Weight"},H32:"[u8; 4; H32]",H64:"[u8; 8; H64]",H128:"[u8; 16; H128]",H160:"[u8; 20; H160]",H256:"[u8; 32; H256]",H512:"[u8; 64; H512]",H1024:"[u8; 128; H1024]",H2048:"[u8; 256; H2048]",Hash:"H256",Header:{parentHash:"Hash",number:"Compact<BlockNumber>",stateRoot:"Hash",extrinsicsRoot:"Hash",digest:"Digest"},HeaderPartial:{parentHash:"Hash",number:"BlockNumber"},IndicesLookupSource:"GenericLookupSource",Index:"u32",Justification:"(ConsensusEngineId, EncodedJustification)",EncodedJustification:"Bytes",Justifications:"Vec<Justification>",KeyValue:"(StorageKey, StorageData)",KeyTypeId:"u32",LockIdentifier:"[u8; 8]",LookupSource:"MultiAddress",LookupTarget:"AccountId",ModuleId:"LockIdentifier",MultiAddress:"GenericMultiAddress",MultiSigner:{_enum:{Ed25519:"[u8; 32]",Sr25519:"[u8; 32]",Ecdsa:"[u8; 33]"}},Moment:"UInt<64, Moment>",OpaqueCall:"Bytes",Origin:"DoNotConstruct<Origin>",OriginCaller:{_enum:{System:"SystemOrigin"}},PalletId:"LockIdentifier",PalletsOrigin:"OriginCaller",PalletVersion:{major:"u16",minor:"u8",patch:"u8"},Pays:{_enum:["Yes","No"]},Phantom:"Null",PhantomData:"Null",Releases:{_enum:["V1","V2","V3","V4","V5","V6","V7","V8","V9","V10"]},RuntimeDbWeight:{read:"Weight",write:"Weight"},SignedBlock:"SignedBlockWithJustifications",SignedBlockWithJustification:{block:"Block",justification:"Option<EncodedJustification>"},SignedBlockWithJustifications:{block:"Block",justifications:"Option<Justifications>"},Slot:"u64",StorageData:"Bytes",StorageProof:{trieNodes:"Vec<Bytes>"},TransactionPriority:"u64",TransactionInfo:{_alias:{dataSize:"size"},chunkRoot:"H256",contentHash:"H256",dataSize:"u32",blockChunks:"u32"},TransactionStorageProof:{chunk:"Vec<u8>",proof:"Vec<Vec<u8>>"},ValidatorId:"AccountId",ValidatorIdOf:"ValidatorId",Weight:"u64",WeightMultiplier:"Fixed64",PreRuntime:"(ConsensusEngineId, Bytes)",SealV0:"(u64, Signature)",Seal:"(ConsensusEngineId, Bytes)",Consensus:"(ConsensusEngineId, Bytes)"})},Yp={rpc:{},types:Fi({},{Si0Field:{name:"Option<Text>",type:"Si0LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si0LookupTypeId:"u32",Si0Path:"Vec<Text>",Si0Type:{path:"Si0Path",params:"Vec<Si0LookupTypeId>",def:"Si0TypeDef"},Si0TypeDef:{_enum:{Composite:"Si0TypeDefComposite",Variant:"Si0TypeDefVariant",Sequence:"Si0TypeDefSequence",Array:"Si0TypeDefArray",Tuple:"Si0TypeDefTuple",Primitive:"Si0TypeDefPrimitive",Compact:"Si0TypeDefCompact",Phantom:"Si0TypeDefPhantom",BitSequence:"Si0TypeDefBitSequence"}},Si0TypeDefArray:{len:"u32",type:"Si0LookupTypeId"},Si0TypeDefBitSequence:{bitStoreType:"Si0LookupTypeId",bitOrderType:"Si0LookupTypeId"},Si0TypeDefCompact:{type:"Si0LookupTypeId"},Si0TypeDefComposite:{fields:"Vec<Si0Field>"},Si0TypeDefPhantom:"Null",Si0TypeDefVariant:{variants:"Vec<Si0Variant>"},Si0TypeDefPrimitive:{_enum:["Bool","Char","Str","U8","U16","U32","U64","U128","U256","I8","I16","I32","I64","I128","I256"]},Si0TypeDefSequence:{type:"Si0LookupTypeId"},Si0TypeDefTuple:"Vec<Si0LookupTypeId>",Si0TypeParameter:{name:"Text",type:"Option<Si0LookupTypeId>"},Si0Variant:{name:"Text",fields:"Vec<Si0Field>",index:"Option<u8>",discriminant:"Option<u64>",docs:"Vec<Text>"}},Op,{SiField:"Si1Field",SiLookupTypeId:"Si1LookupTypeId",SiPath:"Si1Path",SiType:"Si1Type",SiTypeDef:"Si1TypeDef",SiTypeDefArray:"Si1TypeDefArray",SiTypeDefBitSequence:"Si1TypeDefBitSequence",SiTypeDefCompact:"Si1TypeDefCompact",SiTypeDefComposite:"Si1TypeDefComposite",SiTypeDefPrimitive:"Si1TypeDefPrimitive",SiTypeDefSequence:"Si1TypeDefSequence",SiTypeDefTuple:"Si1TypeDefTuple",SiTypeParameter:"Si1TypeParameter",SiTypeDefVariant:"Si1TypeDefVariant",SiVariant:"Si1Variant"})},Rp={rpc:{},types:{AssetApprovalKey:{owner:"AccountId",delegate:"AccountId"},AssetApproval:{amount:"TAssetBalance",deposit:"TAssetDepositBalance"},AssetBalance:{balance:"TAssetBalance",isFrozen:"bool",isSufficient:"bool"},AssetDestroyWitness:{accounts:"Compact<u32>",sufficients:"Compact<u32>",approvals:"Compact<u32>"},AssetDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",supply:"TAssetBalance",deposit:"TAssetDepositBalance",minBalance:"TAssetBalance",isSufficient:"bool",accounts:"u32",sufficients:"u32",approvals:"u32",isFrozen:"bool"},AssetMetadata:{deposit:"TAssetDepositBalance",name:"Vec<u8>",symbol:"Vec<u8>",decimals:"u8",isFrozen:"bool"},TAssetBalance:"u64",TAssetDepositBalance:"BalanceOf"}},Ip={rpc:{},types:{UncleEntryItem:{_enum:{InclusionHeight:"BlockNumber",Uncle:"(Hash, Option<AccountId>)"}}}},Bp={rpc:{},types:{RawAuraPreDigest:{slotNumber:"u64"}}},Xp={rpc:{epochAuthorship:{description:"Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore",params:[],type:"HashMap<AuthorityId, EpochAuthorship>"}},types:{AllowedSlots:{_enum:["PrimarySlots","PrimaryAndSecondaryPlainSlots","PrimaryAndSecondaryVRFSlots"]},BabeAuthorityWeight:"u64",BabeEpochConfiguration:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},BabeBlockWeight:"u32",BabeEquivocationProof:{offender:"AuthorityId",slotNumber:"SlotNumber",firstHeader:"Header",secondHeader:"Header"},BabeWeight:"u64",MaybeRandomness:"Option<Randomness>",MaybeVrf:"Option<VrfData>",EpochAuthorship:{primary:"Vec<u64>",secondary:"Vec<u64>",secondary_vrf:"Vec<u64>"},NextConfigDescriptor:{_enum:{V0:"Null",V1:"NextConfigDescriptorV1"}},NextConfigDescriptorV1:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},Randomness:"Hash",RawBabePreDigest:{_enum:{Phantom:"Null",Primary:"RawBabePreDigestPrimary",SecondaryPlain:"RawBabePreDigestSecondaryPlain",SecondaryVRF:"RawBabePreDigestSecondaryVRF"}},RawBabePreDigestPrimary:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryPlain:{authorityIndex:"u32",slotNumber:"SlotNumber"},RawBabePreDigestSecondaryVRF:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestTo159:{_enum:{Primary:"RawBabePreDigestPrimaryTo159",Secondary:"RawBabePreDigestSecondaryTo159"}},RawBabePreDigestPrimaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight"},RawBabePreDigestCompat:{_enum:{Zero:"u32",One:"u32",Two:"u32",Three:"u32"}},SlotNumber:"u64",VrfData:"[u8; 32]",VrfOutput:"[u8; 32]",VrfProof:"[u8; 64]"}},Vp={rpc:{},types:{AccountData:{free:"Balance",reserved:"Balance",miscFrozen:"Balance",feeFrozen:"Balance"},BalanceLockTo212:{id:"LockIdentifier",amount:"Balance",until:"BlockNumber",reasons:"WithdrawReasons"},BalanceLock:{id:"LockIdentifier",amount:"Balance",reasons:"Reasons"},BalanceStatus:{_enum:["Free","Reserved"]},Reasons:{_enum:["Fee","Misc","All"]},ReserveData:{id:"ReserveIdentifier",amount:"Balance"},ReserveIdentifier:"[u8; 8]",VestingSchedule:{offset:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"},WithdrawReasons:{_set:{TransactionPayment:1,Transfer:2,Reserve:4,Fee:8,Tip:16}}}},Cp={rpc:{subscribeJustifications:{description:"Returns the block most recently finalized by BEEFY, alongside side its justification.",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"BeefySignedCommitment"}},types:{BeefyCommitment:{payload:"BeefyPayload",blockNumber:"BlockNumber",validatorSetId:"ValidatorSetId"},BeefyId:"[u8; 33]",BeefySignedCommitment:{commitment:"BeefyCommitment",signatures:"Vec<Option<EcdsaSignature>>"},BeefyNextAuthoritySet:{id:"u64",len:"u32",root:"H256"},BeefyPayload:"MmrRootHash",MmrRootHash:"H256",ValidatorSetId:"u64"}},Wp={rpc:{},types:{CollectiveOrigin:{_enum:{Members:"(MemberCount, MemberCount)",Member:"AccountId"}},MemberCount:"u32",ProposalIndex:"u32",VotesTo230:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>"},Votes:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>",end:"BlockNumber"}}},qp={rpc:{},types:{AuthorityId:"AccountId",RawVRFOutput:"[u8; 32]"}},Zp={rpc:{call:{description:"Executes a call to a contract",params:[{name:"callRequest",type:"ContractCallRequest"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"ContractExecResult"},instantiate:{description:"Instantiate a new contract",params:[{name:"request",type:"InstantiateRequest"},{name:"at",type:"BlockHash",isHstoric:!0,isOptional:!0}],type:"ContractInstantiateResult"},getStorage:{description:"Returns the value under a specified storage key in a contract",params:[{name:"address",type:"AccountId"},{name:"key",type:"H256"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Option<Bytes>"},rentProjection:{description:"Returns the projected time a given contract will be able to sustain paying its rent",params:[{name:"address",type:"AccountId"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Option<BlockNumber>"}},types:{AliveContractInfo:{trieId:"TrieId",storageSize:"u32",pairCount:"u32",codeHash:"CodeHash",rentAllowance:"Balance",rentPaid:"Balance",deductBlock:"BlockNumber",lastWrite:"Option<BlockNumber>",_reserved:"Option<Null>"},CodeHash:"Hash",ContractCallRequest:{origin:"AccountId",dest:"AccountId",value:"Balance",gasLimit:"u64",inputData:"Bytes"},ContractExecResultSuccessTo255:{status:"u8",data:"Raw"},ContractExecResultTo255:{_enum:{Success:"ContractExecResultSuccessTo255",Error:"Null"}},ContractExecResultSuccessTo260:{flags:"u32",data:"Bytes",gasConsumed:"u64"},ContractExecResultTo260:{_enum:{Success:"ContractExecResultSuccessTo260",Error:"Null"}},ContractExecResultErrModule:{index:"u8",error:"u8",message:"Option<Text>"},ContractExecResultErr:{_enum:{Other:"Text",CannotLookup:"Null",BadOrigin:"Null",Module:"ContractExecResultErrModule"}},ContractExecResultOk:{flags:"u32",data:"Bytes"},ContractExecResultResult:{_enum:{Ok:"ContractExecResultOk",Err:"ContractExecResultErr"}},ContractExecResultTo267:{gasConsumed:"u64",debugMessage:"Text",result:"ContractExecResultResult"},ContractExecResult:{gasConsumed:"u64",gasRequired:"u64",debugMessage:"Text",result:"ContractExecResultResult"},ContractInfo:{_enum:{Alive:"AliveContractInfo",Tombstone:"TombstoneContractInfo"}},ContractStorageKey:"[u8; 32]",DeletedContract:{pairCount:"u32",trieId:"TrieId"},ExecReturnValue:{flags:"u32",data:"Bytes"},Gas:"u64",HostFnWeightsTo264:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",restoreTo:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight"},HostFnWeights:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",terminatePerCodeByte:"Weight",restoreTo:"Weight",restoreToPerCallerCodeByte:"Weight",restoreToPerTombstoneCodeByte:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callPerCodeByte:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerCodeByte:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",instantiatePerSaltByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight",rentParams:"Weight"},InstantiateRequest:{origin:"AccountId",endowment:"Balance",gasLimit:"Gas",code:"Bytes",data:"Bytes",salt:"Bytes"},ContractInstantiateResultTo267:{_enum:{Ok:"InstantiateReturnValueTo267",Err:"Null"}},ContractInstantiateResult:{_enum:{Ok:"InstantiateReturnValue",Err:"Null"}},InstantiateReturnValueTo267:{result:"ExecReturnValue",accountId:"AccountId",rentProjection:"Option<RentProjection>"},InstantiateReturnValue:{_fallback:"InstantiateReturnValueTo267",result:"ExecReturnValue",accountId:"AccountId"},InstructionWeights:{i64const:"u32",i64load:"u32",i64store:"u32",select:"u32",rIf:"u32",br:"u32",brIf:"u32",brIable:"u32",brIablePerEntry:"u32",call:"u32",callIndirect:"u32",callIndirectPerParam:"u32",localGet:"u32",localSet:"u32",local_tee:"u32",globalGet:"u32",globalSet:"u32",memoryCurrent:"u32",memoryGrow:"u32",i64clz:"u32",i64ctz:"u32",i64popcnt:"u32",i64eqz:"u32",i64extendsi32:"u32",i64extendui32:"u32",i32wrapi64:"u32",i64eq:"u32",i64ne:"u32",i64lts:"u32",i64ltu:"u32",i64gts:"u32",i64gtu:"u32",i64les:"u32",i64leu:"u32",i64ges:"u32",i64geu:"u32",i64add:"u32",i64sub:"u32",i64mul:"u32",i64divs:"u32",i64divu:"u32",i64rems:"u32",i64remu:"u32",i64and:"u32",i64or:"u32",i64xor:"u32",i64shl:"u32",i64shrs:"u32",i64shru:"u32",i64rotl:"u32",i64rotr:"u32"},LimitsTo264:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32",codeSize:"u32"},Limits:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32"},PrefabWasmModule:{scheduleVersion:"Compact<u32>",initial:"Compact<u32>",maximum:"Compact<u32>",refcount:"Compact<u64>",_reserved:"Option<Null>",code:"Bytes",originalCodeLen:"u32"},RentProjection:{_enum:{EvictionAt:"BlockNumber",NoEviction:"Null"}},ScheduleTo212:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo258:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",transferCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo264:{version:"u32",enablePrintln:"bool",limits:"LimitsTo264",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeightsTo264"},Schedule:{version:"u32",enablePrintln:"bool",limits:"Limits",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeights"},SeedOf:"Hash",TombstoneContractInfo:"Hash",TrieId:"Bytes"}},Fp={rpc:{},types:{AccountVote:{_enum:{Standard:"AccountVoteStandard",Split:"AccountVoteSplit"}},AccountVoteSplit:{aye:"Balance",nay:"Balance"},AccountVoteStandard:{vote:"Vote",balance:"Balance"},Conviction:{_enum:["None","Locked1x","Locked2x","Locked3x","Locked4x","Locked5x","Locked6x"]},Delegations:{votes:"Balance",capital:"Balance"},PreimageStatus:{_enum:{Missing:"BlockNumber",Available:"PreimageStatusAvailable"}},PreimageStatusAvailable:{data:"Bytes",provider:"AccountId",deposit:"Balance",since:"BlockNumber",expiry:"Option<BlockNumber>"},PriorLock:"(BlockNumber, Balance)",PropIndex:"u32",Proposal:"Call",ProxyState:{_enum:{Open:"AccountId",Active:"AccountId"}},ReferendumIndex:"u32",ReferendumInfoTo239:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber"},ReferendumInfo:{_enum:{Ongoing:"ReferendumStatus",Finished:"ReferendumInfoFinished"}},ReferendumInfoFinished:{approved:"bool",end:"BlockNumber"},ReferendumStatus:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber",tally:"Tally"},Tally:{ayes:"Balance",nays:"Balance",turnout:"Balance"},Voting:{_enum:{Direct:"VotingDirect",Delegating:"VotingDelegating"}},VotingDirect:{votes:"Vec<VotingDirectVote>",delegations:"Delegations",prior:"PriorLock"},VotingDirectVote:"(ReferendumIndex, AccountVote)",VotingDelegating:{balance:"Balance",target:"AccountId",conviction:"Conviction",delegations:"Delegations",prior:"PriorLock"}}},Up={rpc:{},types:{ApprovalFlag:"u32",DefunctVoter:{who:"AccountId",voteCount:"Compact<u32>",candidateCount:"Compact<u32>"},Renouncing:{_enum:{Member:"Null",RunnerUp:"Null",Candidate:"Compact<u32>"}},SetIndex:"u32",Vote:"GenericVote",VoteIndex:"u32",VoterInfo:{lastActive:"VoteIndex",lastWin:"VoteIndex",pot:"Balance",stake:"Balance"},VoteThreshold:{_enum:["Super Majority Approve","Super Majority Against","Simple Majority"]}}},Gp={rpc:{createBlock:{description:"Instructs the manual-seal authorship task to create a new block",params:[{name:"createEmpty",type:"bool"},{name:"finalize",type:"bool"},{name:"parentHash",type:"BlockHash",isOptional:!0}],type:"CreatedBlock"},finalizeBlock:{description:"Instructs the manual-seal authorship task to finalize a block",params:[{name:"hash",type:"BlockHash"},{name:"justification",type:"Justification",isOptional:!0}],type:"bool"}},types:{CreatedBlock:{hash:"BlockHash",aux:"ImportedAux"},ImportedAux:{headerOnly:"bool",clearJustificationRequests:"bool",needsJustification:"bool",badJustification:"bool",needsFinalityProof:"bool",isNewBest:"bool"}}},_p={rpc:{},types:{EvmAccount:{nonce:"u256",balance:"u256"},EvmLog:{address:"H160",topics:"Vec<H256>",data:"Bytes"},EvmVicinity:{gasPrice:"u256",origin:"H160"},ExitError:{_enum:{StackUnderflow:"Null",StackOverflow:"Null",InvalidJump:"Null",InvalidRange:"Null",DesignatedInvalid:"Null",CallTooDeep:"Null",CreateCollision:"Null",CreateContractLimit:"Null",OutOfOffset:"Null",OutOfGas:"Null",OutOfFund:"Null",PCUnderflow:"Null",CreateEmpty:"Null",Other:"Text"}},ExitFatal:{_enum:{NotSupported:"Null",UnhandledInterrupt:"Null",CallErrorAsFatal:"ExitError",Other:"Text"}},ExitReason:{_enum:{Succeed:"ExitSucceed",Error:"ExitError",Revert:"ExitRevert",Fatal:"ExitFatal"}},ExitRevert:{_enum:["Reverted"]},ExitSucceed:{_enum:["Stopped","Returned","Suicided"]}}},Kp={rpc:{},types:{Extrinsic:"GenericExtrinsic",ExtrinsicEra:"GenericExtrinsicEra",ExtrinsicPayload:"GenericExtrinsicPayload",ExtrinsicSignature:"MultiSignature",ExtrinsicV4:"GenericExtrinsicV4",ExtrinsicPayloadV4:"GenericExtrinsicPayloadV4",ExtrinsicSignatureV4:"GenericExtrinsicSignatureV4",ExtrinsicUnknown:"GenericExtrinsicUnknown",ExtrinsicPayloadUnknown:"GenericExtrinsicPayloadUnknown",Era:"ExtrinsicEra",ImmortalEra:"GenericImmortalEra",MortalEra:"GenericMortalEra",AnySignature:"H512",MultiSignature:{_enum:{Ed25519:"Ed25519Signature",Sr25519:"Sr25519Signature",Ecdsa:"EcdsaSignature"}},Signature:"H512",SignerPayload:"GenericSignerPayload",EcdsaSignature:"[u8; 65]",Ed25519Signature:"H512",Sr25519Signature:"H512"}},Jp={rpc:{},types:{AssetOptions:{initalIssuance:"Compact<Balance>",permissions:"PermissionLatest"},Owner:{_enum:{None:"Null",Address:"AccountId"}},PermissionsV1:{update:"Owner",mint:"Owner",burn:"Owner"},PermissionVersions:{_enum:{V1:"PermissionsV1"}},PermissionLatest:"PermissionsV1"}},Qp={rpc:{},types:{ActiveGilt:{proportion:"Perquintill",amount:"Balance",who:"AccountId",expiry:"BlockNumber"},ActiveGiltsTotal:{frozen:"Balance",proportion:"Perquintill",index:"ActiveIndex",target:"Perquintill"},ActiveIndex:"u32",GiltBid:{amount:"Balance",who:"AccountId"}}},$p={rpc:{proveFinality:{description:"Prove finality for the range (begin; end] hash.",params:[{name:"begin",type:"BlockHash"},{name:"end",type:"BlockHash"},{name:"authoritiesSetId",type:"u64",isOptional:!0}],type:"Option<EncodedFinalityProofs>"},roundState:{description:"Returns the state of the current best round state as well as the ongoing background rounds",params:[],type:"ReportedRoundStates"},subscribeJustifications:{description:"Subscribes to grandpa justifications",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"JustificationNotification"}},types:{AuthorityIndex:"u64",AuthorityList:"Vec<NextAuthority>",AuthoritySet:{currentAuthorities:"AuthorityList",setId:"u64",pendingStandardChanges:"ForkTreePendingChange",pendingForcedChanges:"Vec<PendingChange>",authoritySetChanges:"AuthoritySetChanges"},ForkTreePendingChange:{roots:"Vec<ForkTreePendingChangeNode>",bestFinalizedNumber:"Option<BlockNumber>"},ForkTreePendingChangeNode:{hash:"BlockHash",number:"BlockNumber",data:"PendingChange",children:"Vec<ForkTreePendingChangeNode>"},AuthoritySetChange:"(U64, BlockNumber)",AuthoritySetChanges:"Vec<AuthoritySetChange>",AuthorityWeight:"u64",DelayKind:{_enum:{Finalized:"Null",Best:"DelayKindBest"}},DelayKindBest:{medianLastFinalized:"BlockNumber"},EncodedFinalityProofs:"Bytes",GrandpaEquivocation:{_enum:{Prevote:"GrandpaEquivocationValue",Precommit:"GrandpaEquivocationValue"}},GrandpaEquivocationProof:{setId:"SetId",equivocation:"GrandpaEquivocation"},GrandpaEquivocationValue:{roundNumber:"u64",identity:"AuthorityId",first:"(GrandpaPrevote, AuthoritySignature)",second:"(GrandpaPrevote, AuthoritySignature)"},GrandpaPrevote:{targetHash:"Hash",targetNumber:"BlockNumber"},GrandpaCommit:{targetHash:"BlockHash",targetNumber:"BlockNumber",precommits:"Vec<GrandpaSignedPrecommit>"},GrandpaPrecommit:{targetHash:"BlockHash",targetNumber:"BlockNumber"},GrandpaSignedPrecommit:{precommit:"GrandpaPrecommit",signature:"AuthoritySignature",id:"AuthorityId"},GrandpaJustification:{round:"u64",commit:"GrandpaCommit",votesAncestries:"Vec<Header>"},JustificationNotification:"Bytes",KeyOwnerProof:"MembershipProof",NextAuthority:"(AuthorityId, AuthorityWeight)",PendingChange:{nextAuthorities:"AuthorityList",delay:"BlockNumber",canonHeight:"BlockNumber",canonHash:"BlockHash",delayKind:"DelayKind"},PendingPause:{scheduledAt:"BlockNumber",delay:"BlockNumber"},PendingResume:{scheduledAt:"BlockNumber",delay:"BlockNumber"},Precommits:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},Prevotes:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},ReportedRoundStates:{setId:"u32",best:"RoundState",background:"Vec<RoundState>"},RoundState:{round:"u32",totalWeight:"u32",thresholdWeight:"u32",prevotes:"Prevotes",precommits:"Precommits"},SetId:"u64",StoredPendingChange:{scheduledAt:"BlockNumber",delay:"BlockNumber",nextAuthorities:"AuthorityList"},StoredState:{_enum:{Live:"Null",PendingPause:"PendingPause",Paused:"Null",PendingResume:"PendingResume"}}}},tm={rpc:{},types:{IdentityFields:{_set:{_bitLength:64,Display:1,Legal:2,Web:4,Riot:8,Email:16,PgpFingerprint:32,Image:64,Twitter:128}},IdentityInfoAdditional:"(Data, Data)",IdentityInfoTo198:{additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data"},IdentityInfo:{_fallback:"IdentityInfoTo198",additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data",twitter:"Data"},IdentityJudgement:{_enum:{Unknown:"Null",FeePaid:"Balance",Reasonable:"Null",KnownGood:"Null",OutOfDate:"Null",LowQuality:"Null",Erroneous:"Null"}},RegistrationJudgement:"(RegistrarIndex, IdentityJudgement)",RegistrationTo198:{judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfoTo198"},Registration:{_fallback:"RegistrationTo198",judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfo"},RegistrarIndex:"u32",RegistrarInfo:{account:"AccountId",fee:"Balance",fields:"IdentityFields"}}},em={rpc:{},types:{AuthIndex:"u32",AuthoritySignature:"Signature",Heartbeat:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex",validatorsLen:"u32"},HeartbeatTo244:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex"},OpaqueMultiaddr:"Bytes",OpaquePeerId:"Bytes",OpaqueNetworkState:{peerId:"OpaquePeerId",externalAddresses:"Vec<OpaqueMultiaddr>"}}},rm={rpc:{},types:{CallIndex:"(u8, u8)",LotteryConfig:{price:"Balance",start:"BlockNumber",length:"BlockNumber",delay:"BlockNumber",repeat:"bool"}}},nm={rpc:{generateProof:{description:"Generate MMR proof for given leaf index.",params:[{name:"leafIndex",type:"u64"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"MmrLeafProof"}},types:{MmrLeafProof:{blockHash:"BlockHash",leaf:"Bytes",proof:"Bytes"}}},im={rpc:{},types:{DeferredOffenceOf:"(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)",Kind:"[u8; 16]",OffenceDetails:{offender:"Offender",reporters:"Vec<Reporter>"},Offender:"IdentificationTuple",OpaqueTimeSlot:"Bytes",ReportIdOf:"Hash",Reporter:"AccountId"}},sm={rpc:{},types:{ProxyDefinition:{delegate:"AccountId",proxyType:"ProxyType",delay:"BlockNumber"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking"]},ProxyAnnouncement:{real:"AccountId",callHash:"Hash",height:"BlockNumber"}}},om={rpc:{},types:{ActiveRecovery:{created:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>"},RecoveryConfig:{delayPeriod:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>",threshold:"u16"}}},am={rpc:{},types:{Period:"(BlockNumber, u32)",Priority:"u8",SchedulePeriod:"Period",SchedulePriority:"Priority",Scheduled:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>",origin:"PalletsOrigin"},ScheduledTo254:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>"},TaskAddress:"(BlockNumber, u32)"}},um={rpc:{},types:Fi({},{BeefyKey:"[u8; 33]",Keys:"SessionKeys4",SessionKeys1:"(AccountId)",SessionKeys2:"(AccountId, AccountId)",SessionKeys3:"(AccountId, AccountId, AccountId)",SessionKeys4:"(AccountId, AccountId, AccountId, AccountId)",SessionKeys5:"(AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6B:"(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys7:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys7B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys8:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys8B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys9:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys9B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys10:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys10B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)"},{FullIdentification:"Exposure",IdentificationTuple:"(ValidatorId, FullIdentification)",MembershipProof:{session:"SessionIndex",trieNodes:"Vec<Vec<u8>>",validatorCount:"ValidatorCount"},SessionIndex:"u32",ValidatorCount:"u32"})},hm={rpc:{},types:{Bid:{who:"AccountId",kind:"BidKind",value:"Balance"},BidKind:{_enum:{Deposit:"Balance",Vouch:"(AccountId, Balance)"}},SocietyJudgement:{_enum:["Rebid","Reject","Approve"]},SocietyVote:{_enum:["Skeptic","Reject","Approve"]},StrikeCount:"u32",VouchingStatus:{_enum:["Vouching","Banned"]}}},cm={rpc:{},types:Fi({},{Points:"u32",EraPoints:{total:"Points",individual:"Vec<Points>"}},{CompactAssignments:"CompactAssignmentsWith16",CompactAssignmentsWith16:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>"},CompactAssignmentsWith24:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>",votes17:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>",votes18:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>",votes19:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>",votes20:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>",votes21:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>",votes22:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>",votes23:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>",votes24:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>"},CompactAssignmentsTo265:"CompactAssignmentsWith16",CompactAssignmentsTo257:{votes1:"Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>",votes2:"Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>",votes3:"Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>",votes4:"Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>",votes5:"Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>",votes6:"Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>",votes7:"Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>",votes8:"Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>",votes9:"Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>",votes10:"Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>",votes11:"Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>",votes12:"Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>",votes13:"Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>",votes14:"Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>",votes15:"Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>",votes16:"Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>"},CompactScore:"(ValidatorIndex, OffchainAccuracy)",CompactScoreCompact:"(ValidatorIndexCompact, OffchainAccuracyCompact)",ElectionCompute:{_enum:["OnChain","Signed","Unsigned"]},ElectionPhase:{_enum:{Off:null,Signed:null,Unsigned:"(bool, BlockNumber)",Emergency:null}},ElectionResult:{compute:"ElectionCompute",slotStake:"Balance",electedStashes:"Vec<AccountId>",exposures:"Vec<(AccountId, Exposure)>"},ElectionScore:"[u128; 3]",ElectionSize:{validators:"Compact<ValidatorIndex>",nominators:"Compact<NominatorIndex>"},ElectionStatus:{_enum:{Close:"Null",Open:"BlockNumber"}},ExtendedBalance:"u128",RawSolution:"RawSolutionWith16",RawSolutionWith16:{compact:"CompactAssignmentsWith16",score:"ElectionScore",round:"u32"},RawSolutionWith24:{compact:"CompactAssignmentsWith24",score:"ElectionScore",round:"u32"},RawSolutionTo265:"RawSolutionWith16",ReadySolution:{supports:"SolutionSupports",score:"ElectionScore",compute:"ElectionCompute"},RoundSnapshot:{voters:"Vec<(AccountId, VoteWeight, Vec<AccountId>)>",targets:"Vec<AccountId>"},SeatHolder:{who:"AccountId",stake:"Balance",deposit:"Balance"},SignedSubmission:{_fallback:"SignedSubmissionTo276",who:"AccountId",deposit:"Balance",solution:"RawSolution",reward:"Balance"},SignedSubmissionTo276:{who:"AccountId",deposit:"Balance",solution:"RawSolution"},SignedSubmissionOf:"SignedSubmission",SolutionOrSnapshotSize:{voters:"Compact<u32>",targets:"Compact<u32>"},SolutionSupport:{total:"ExtendedBalance",voters:"Vec<(AccountId, ExtendedBalance)>"},SolutionSupports:"Vec<(AccountId, SolutionSupport)>",Supports:"SolutionSupports",SubmissionIndicesOf:"BTreeMap<ElectionScore, u32>",Voter:{votes:"Vec<AccountId>",stake:"Balance",deposit:"Balance"},VoteWeight:"u64"},{ActiveEraInfo:{index:"EraIndex",start:"Option<Moment>"},EraIndex:"u32",EraRewardPoints:{total:"RewardPoint",individual:"BTreeMap<AccountId, RewardPoint>"},EraRewards:{total:"u32",rewards:"Vec<u32>"},Exposure:{total:"Compact<Balance>",own:"Compact<Balance>",others:"Vec<IndividualExposure>"},Forcing:{_enum:["NotForcing","ForceNew","ForceNone","ForceAlways"]},IndividualExposure:{who:"AccountId",value:"Compact<Balance>"},KeyType:"AccountId",MomentOf:"Moment",Nominations:{targets:"Vec<AccountId>",submittedIn:"EraIndex",suppressed:"bool"},NominatorIndex:"u32",NominatorIndexCompact:"Compact<NominatorIndex>",OffchainAccuracy:"PerU16",OffchainAccuracyCompact:"Compact<OffchainAccuracy>",PhragmenScore:"[u128; 3]",Points:"u32",RewardDestination:{_enum:{Staked:"Null",Stash:"Null",Controller:"Null",Account:"AccountId",None:"Null"}},RewardPoint:"u32",SlashJournalEntry:{who:"AccountId",amount:"Balance",ownSlash:"Balance"},SlashingSpansTo204:{spanIndex:"SpanIndex",lastStart:"EraIndex",prior:"Vec<EraIndex>"},SlashingSpans:{spanIndex:"SpanIndex",lastStart:"EraIndex",lastNonzeroSlash:"EraIndex",prior:"Vec<EraIndex>"},SpanIndex:"u32",SpanRecord:{slashed:"Balance",paidOut:"Balance"},StakingLedgerTo223:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>"},StakingLedgerTo240:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",lastReward:"Option<EraIndex>"},StakingLedger:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",claimedRewards:"Vec<EraIndex>"},UnappliedSlashOther:"(AccountId, Balance)",UnappliedSlash:{validator:"AccountId",own:"Balance",others:"Vec<UnappliedSlashOther>",reporters:"Vec<AccountId>",payout:"Balance"},UnlockChunk:{value:"Compact<Balance>",era:"Compact<BlockNumber>"},ValidatorIndex:"u16",ValidatorIndexCompact:"Compact<ValidatorIndex>",ValidatorPrefs:"ValidatorPrefsWithBlocked",ValidatorPrefsWithCommission:{commission:"Compact<Perbill>"},ValidatorPrefsWithBlocked:{commission:"Compact<Perbill>",blocked:"bool"},ValidatorPrefsTo196:{validatorPayment:"Compact<Balance>"},ValidatorPrefsTo145:{unstakeThreshold:"Compact<u32>",validatorPayment:"Compact<Balance>"}})},lm={rpc:{},types:{WeightToFeeCoefficient:{coeffInteger:"Balance",coeffFrac:"Perbill",negative:"bool",degree:"u8"}}},dm={rpc:{genSyncSpec:{endpoint:"sync_state_genSyncSpec",description:"Returns the json-serialized chainspec running the node, with a sync state.",params:[{name:"raw",type:"bool"}],type:"Json"}},types:{}},fm={rpc:{accountNextIndex:{alias:["account_nextIndex"],description:"Retrieves the next accountIndex as available on the node",params:[{name:"accountId",type:"AccountId"}],type:"Index"},dryRun:{alias:["system_dryRunAt"],description:"Dry run an extrinsic at a given block",params:[{name:"extrinsic",type:"Bytes"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"ApplyExtrinsicResult"},name:{description:"Retrieves the node name",params:[],type:"Text"},version:{description:"Retrieves the version of the node",params:[],type:"Text"},chain:{description:"Retrieves the chain",params:[],type:"Text"},chainType:{description:"Retrieves the chain type",params:[],type:"ChainType"},properties:{description:"Get a custom set of properties as a JSON object, defined in the chain spec",params:[],type:"ChainProperties"},health:{description:"Return health status of the node",params:[],type:"Health"},localPeerId:{description:"Returns the base58-encoded PeerId of the node",params:[],type:"Text"},localListenAddresses:{description:"The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example",params:[],type:"Vec<Text>"},peers:{description:"Returns the currently connected peers",params:[],type:"Vec<PeerInfo>"},networkState:{alias:["system_unstable_networkState"],description:"Returns current state of the network",params:[],type:"NetworkState"},addReservedPeer:{description:"Adds a reserved peer",params:[{name:"peer",type:"Text"}],type:"Text"},removeReservedPeer:{description:"Remove a reserved peer",params:[{name:"peerId",type:"Text"}],type:"Text"},reservedPeers:{description:"Returns the list of reserved peers",params:[],type:"Vec<Text>"},nodeRoles:{description:"Returns the roles the node is running as",params:[],type:"Vec<NodeRole>"},syncState:{description:"Returns the state of the syncing of the node",params:[],type:"SyncState"},addLogFilter:{description:"Adds the supplied directives to the current log filter",params:[{name:"directives",type:"Text"}],type:"Null"},resetLogFilter:{description:"Resets the log filter to Substrate defaults",params:[],type:"Null"}},types:{AccountInfo:"AccountInfoWithTripleRefCount",AccountInfoWithRefCountU8:{nonce:"Index",refcount:"u8",data:"AccountData"},AccountInfoWithRefCount:{_fallback:"AccountInfoWithRefCountU8",nonce:"Index",refcount:"RefCount",data:"AccountData"},AccountInfoWithDualRefCount:{_fallback:"AccountInfoWithRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",data:"AccountData"},AccountInfoWithProviders:"AccountInfoWithDualRefCount",AccountInfoWithTripleRefCount:{_fallback:"AccountInfoWithDualRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",sufficients:"RefCount",data:"AccountData"},ApplyExtrinsicResult:"Result<DispatchOutcome, TransactionValidityError>",ArithmeticError:{_enum:["Underflow","Overflow","DivisionByZero"]},BlockLength:{max:"PerDispatchClassU32"},BlockWeights:{baseBlock:"Weight",maxBlock:"Weight",perClass:"PerDispatchClassWeightsPerClass"},ChainProperties:"GenericChainProperties",ChainType:{_enum:{Development:"Null",Local:"Null",Live:"Null",Custom:"Text"}},ConsumedWeight:"PerDispatchClassWeight",DigestOf:"Digest",DispatchClass:{_enum:["Normal","Operational","Mandatory"]},DispatchError:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModule",ConsumerRemaining:"Null",NoProviders:"Null",Token:"TokenError",Arithmetic:"ArithmeticError"}},DispatchErrorModule:{index:"u8",error:"u8"},DispatchErrorTo198:{module:"Option<u8>",error:"u8"},DispatchInfo:{weight:"Weight",class:"DispatchClass",paysFee:"Pays"},DispatchInfoTo190:{weight:"Weight",class:"DispatchClass"},DispatchInfoTo244:{weight:"Weight",class:"DispatchClass",paysFee:"bool"},DispatchOutcome:"Result<(), DispatchError>",DispatchResult:"Result<(), DispatchError>",DispatchResultOf:"DispatchResult",DispatchResultTo198:"Result<(), Text>",Event:"GenericEvent",EventId:"[u8; 2]",EventIndex:"u32",EventRecord:{phase:"Phase",event:"Event",topics:"Vec<Hash>"},Health:{peers:"u64",isSyncing:"bool",shouldHavePeers:"bool"},InvalidTransaction:{_enum:{Call:"Null",Payment:"Null",Future:"Null",Stale:"Null",BadProof:"Null",AncientBirthBlock:"Null",ExhaustsResources:"Null",Custom:"u8",BadMandatory:"Null",MandatoryDispatch:"Null"}},Key:"Bytes",LastRuntimeUpgradeInfo:{specVersion:"Compact<u32>",specName:"Text"},NetworkState:{peerId:"Text",listenedAddresses:"Vec<Text>",externalAddresses:"Vec<Text>",connectedPeers:"HashMap<Text, Peer>",notConnectedPeers:"HashMap<Text, NotConnectedPeer>",averageDownloadPerSec:"u64",averageUploadPerSec:"u64",peerset:"NetworkStatePeerset"},NetworkStatePeerset:{messageQueue:"u64",nodes:"HashMap<Text, NetworkStatePeersetInfo>"},NetworkStatePeersetInfo:{connected:"bool",reputation:"i32"},NodeRole:{_enum:{Full:"Null",LightClient:"Null",Authority:"Null",UnknownRole:"u8"}},NotConnectedPeer:{knownAddresses:"Vec<Text>",latestPingTime:"Option<PeerPing>",versionString:"Option<Text>"},Peer:{enabled:"bool",endpoint:"PeerEndpoint",knownAddresses:"Vec<Text>",latestPingTime:"PeerPing",open:"bool",versionString:"Text"},PeerEndpoint:{listening:"PeerEndpointAddr"},PeerEndpointAddr:{_alias:{localAddr:"local_addr",sendBackAddr:"send_back_addr"},localAddr:"Text",sendBackAddr:"Text"},PeerPing:{nanos:"u64",secs:"u64"},PeerInfo:{peerId:"Text",roles:"Text",protocolVersion:"u32",bestHash:"Hash",bestNumber:"BlockNumber"},PerDispatchClassU32:{normal:"u32",operational:"u32",mandatory:"u32"},PerDispatchClassWeight:{normal:"Weight",operational:"Weight",mandatory:"Weight"},PerDispatchClassWeightsPerClass:{normal:"WeightPerClass",operational:"WeightPerClass",mandatory:"WeightPerClass"},Phase:{_enum:{ApplyExtrinsic:"u32",Finalization:"Null",Initialization:"Null"}},RawOrigin:{_enum:{Root:"Null",Signed:"AccountId",None:"Null"}},RefCount:"u32",RefCountTo259:"u8",SyncState:{startingBlock:"BlockNumber",currentBlock:"BlockNumber",highestBlock:"Option<BlockNumber>"},SystemOrigin:"RawOrigin",TokenError:{_enum:["NoFunds","WouldDie","BelowMinimum","CannotCreate","UnknownAsset","Frozen","Underflow","Overflow"]},TransactionValidityError:{_enum:{Invalid:"InvalidTransaction",Unknown:"UnknownTransaction"}},UnknownTransaction:{_enum:{CannotLookup:"Null",NoUnsignedValidator:"Null",Custom:"u8"}},WeightPerClass:{baseExtrinsic:"Weight",maxExtrinsic:"Weight",maxTotal:"Option<Weight>",reserved:"Option<Weight>"}}},pm={rpc:{},types:{Bounty:{proposer:"AccountId",value:"Balance",fee:"Balance",curatorDeposit:"Balance",bond:"Balance",status:"BountyStatus"},BountyIndex:"u32",BountyStatus:{_enum:{Proposed:"Null",Approved:"Null",Funded:"Null",CuratorProposed:"BountyStatusCuratorProposed",Active:"BountyStatusActive",PendingPayout:"BountyStatusPendingPayout"}},BountyStatusActive:{curator:"AccountId",updateDue:"BlockNumber"},BountyStatusCuratorProposed:{curator:"AccountId"},BountyStatusPendingPayout:{curator:"AccountId",beneficiary:"AccountId",unlockAt:"BlockNumber"},OpenTip:{reason:"Hash",who:"AccountId",finder:"AccountId",deposit:"Balance",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>",findersFee:"bool"},OpenTipTo225:{reason:"Hash",who:"AccountId",finder:"Option<OpenTipFinderTo225>",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>"},OpenTipFinderTo225:"(AccountId, Balance)",OpenTipTip:"(AccountId, Balance)",TreasuryProposal:{proposer:"AccountId",value:"Balance",beneficiary:"AccountId",bond:"Balance"}}},mm={rpc:{},types:{Multiplier:"Fixed128"}},ym={rpc:{},types:{ClassId:"u32",InstanceId:"u32",DepositBalance:"Balance",DepositBalanceOf:"Balance",ClassDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",totalDeposit:"DepositBalance",freeHolding:"bool",instances:"u32",instanceMetadatas:"u32",attributes:"u32",isFrozen:"bool"},DestroyWitness:{instances:"Compact<u32>",instanceMetadatas:"Compact<u32>",attributes:"Compact<u32>"},InstanceDetails:{owner:"AccountId",approved:"Option<AccountId>",isFrozen:"bool",deposit:"DepositBalance"},ClassMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"},InstanceMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"}}},vm={rpc:{},types:{Multisig:{when:"Timepoint",deposit:"Balance",depositor:"AccountId",approvals:"Vec<AccountId>"},Timepoint:{height:"BlockNumber",index:"u32"}}},gm={rpc:{},types:{VestingInfo:{locked:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"}}},bm={rpc:{},types:{BlockAttestations:{receipt:"CandidateReceipt",valid:"Vec<AccountId>",invalid:"Vec<AccountId>"},IncludedBlocks:{actualNumber:"BlockNumber",session:"SessionIndex",randomSeed:"H256",activeParachains:"Vec<ParaId>",paraBlocks:"Vec<Hash>"},MoreAttestations:{}}},wm={rpc:{},types:{BridgedBlockHash:"H256",BridgedBlockNumber:"BlockNumber",BridgedHeader:"Header",BridgeMessageId:"(LaneId, MessageNonce)",CallOrigin:{_enum:{SourceRoot:"Null",TargetAccount:"(AccountId, MultiSigner, MultiSignature)",SourceAccount:"AccountId"}},ChainId:"[u8; 4]",DeliveredMessages:{begin:"MessageNonce",end:"MessageNonce",dispatchResults:"BitVec"},DispatchFeePayment:{_enum:["AtSourceChain","AtTargetChain"]},InboundLaneData:{relayers:"Vec<UnrewardedRelayer>",lastConfirmedNonce:"MessageNonce"},InboundRelayer:"AccountId",InitializationData:{header:"Header",authorityList:"AuthorityList",setId:"SetId",isHalted:"bool"},LaneId:"[u8; 4]",MessageData:{payload:"Bytes",fee:"Balance"},MessagesDeliveryProofOf:{bridgedHeaderHash:"BlockHash",storageProof:"Vec<Bytes>",lane:"LaneId"},MessageKey:{laneId:"LaneId",nonce:"MessageNonce"},MessageNonce:"u64",MessagesProofOf:{bridgedHeaderHash:"BridgedBlockHash",storageProof:"Vec<Bytes>",lane:"LaneId",noncesStart:"MessageNonce",noncesEnd:"MessageNonce"},OperatingMode:{_enum:["Normal","RejectingOutboundMessages","Halted"]},OutboundLaneData:{oldestUnprunedNonce:"MessageNonce",latestReceivedNonce:"MessageNonce",latestGeneratedNonce:"MessageNonce"},OutboundMessageFee:"Balance",OutboundPayload:{specVersion:"u32",weight:"Weight",origin:"CallOrigin",dispatchFeePayment:"DispatchFeePayment",call:"Bytes"},Parameter:"Null",RelayerId:"AccountId",UnrewardedRelayer:{relayer:"RelayerId",messages:"DeliveredMessages"},UnrewardedRelayersState:{unrewardedRelayer_Entries:"MessageNonce",messagesInOldestEntry:"MessageNonce",totalMessages:"MessageNonce"}}},Mm={rpc:{},types:{StatementKind:{_enum:["Regular","Saft"]}}},km={rpc:{},types:{FundIndex:"u32",LastContribution:{_enum:{Never:"Null",PreEnding:"u32",Ending:"BlockNumber"}},FundInfo:{depositor:"AccountId",verifier:"Option<MultiSigner>",deposit:"Balance",raised:"Balance",end:"BlockNumber",cap:"Balance",lastContribution:"LastContribution",firstPeriod:"LeasePeriod",lastPeriod:"LeasePeriod",trieIndex:"TrieIndex"},TrieIndex:"u32"}},xm={rpc:{},types:{ConfigData:{maxIndividual:"Weight"},MessageId:"[u8; 32]",OverweightIndex:"u64",PageCounter:"u32",PageIndexData:{beginUsed:"PageCounter",endUsed:"PageCounter",overweightCount:"OverweightIndex"}}},Pm=Fi({},{Bidder:{_enum:{New:"NewBidder",Existing:"ParaId"}},IncomingParachain:{_enum:{Unset:"NewBidder",Fixed:"IncomingParachainFixed",Deploy:"IncomingParachainDeploy"}},IncomingParachainDeploy:{code:"ValidationCode",initialHeadData:"HeadData"},IncomingParachainFixed:{codeHash:"Hash",codeSize:"u32",initialHeadData:"HeadData"},NewBidder:{who:"AccountId",sub:"SubId"},SubId:"u32"},{AuctionIndex:"u32",LeasePeriod:"BlockNumber",LeasePeriodOf:"BlockNumber",SlotRange:{_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","OneOne","OneTwo","OneThree","TwoTwo","TwoThree","ThreeThree"]},WinningData:"[WinningDataEntry; 10]",WinningDataEntry:"Option<(AccountId, ParaId, BalanceOf)>",WinnersData:"Vec<WinnersDataTuple>",WinnersDataTuple:"(AccountId, ParaId, BalanceOf, SlotRange)"}),Lm={rpc:{},types:Fi({},{ServiceQuality:{_enum:["Ordered","Fast"]}},{DisputeLocation:{_enum:["Local","Remote"]},DisputeResult:{_enum:["Valid","Invalid"]},DisputeState:{validatorsFor:"BitVec",validatorsAgainst:"BitVec",start:"BlockNumber",concludedAt:"Option<BlockNumber>"},DisputeStatement:{_enum:{Valid:"ValidDisputeStatementKind",Invalid:"InvalidDisputeStatementKind"}},DisputeStatementSet:{candidateHash:"CandidateHash",session:"SessionIndex",statements:"Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>"},ExplicitDisputeStatement:{valid:"bool",candidateHash:"CandidateHash",session:"SessionIndex"},InvalidDisputeStatementKind:{_enum:["Explicit"]},MultiDisputeStatementSet:"Vec<DisputeStatementSet>",ValidDisputeStatementKind:{_enum:{Explicit:"Null",BackingSeconded:"Hash",BackingValid:"Hash",ApprovalChecking:"Null"}}},{HrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>",senderDeposit:"Balance",recipientDeposit:"Balance"},HrmpChannelId:{sender:"u32",receiver:"u32"},HrmpOpenChannelRequest:{confirmed:"bool",age:"SessionIndex",senderDeposit:"Balance",maxMessageSize:"u32",maxCapacity:"u32",maxTotalSize:"u32"}},{ParachainProposal:{proposer:"AccountId",genesisHead:"HeadData",validators:"Vec<ValidatorId>",name:"Bytes",balance:"Balance"},RegisteredParachainInfo:{validators:"Vec<ValidatorId>",proposer:"AccountId"}},Pm,{AbridgedCandidateReceipt:{parachainIndex:"ParaId",relayParent:"Hash",headData:"HeadData",collator:"CollatorId",signature:"CollatorSignature",povBlockHash:"Hash",commitments:"CandidateCommitments"},AbridgedHostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber"},AbridgedHrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>"},AssignmentId:"AccountId",AssignmentKind:{_enum:{Parachain:"Null",Parathread:"(CollatorId, u32)"}},AttestedCandidate:{candidate:"AbridgedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},AuthorityDiscoveryId:"AccountId",AvailabilityBitfield:"BitVec",AvailabilityBitfieldRecord:{bitfield:"AvailabilityBitfield",submittedTt:"BlockNumber"},BackedCandidate:{candidate:"CommittedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},BufferedSessionChange:{applyAt:"BlockNumber",validators:"Vec<ValidatorId>",queued:"Vec<ValidatorId>",sessionIndex:"SessionIndex"},CandidateCommitments:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",headData:"HeadData",processedDownwardMessages:"u32",hrmpWatermark:"BlockNumber"},CandidateDescriptor:{paraId:"ParaId",relayParent:"RelayChainHash",collatorId:"CollatorId",persistedValidationDataHash:"Hash",povHash:"Hash",erasureRoot:"Hash",signature:"CollatorSignature",paraHead:"Hash",validationCodeHash:"ValidationCodeHash"},CandidateHash:"Hash",CandidateInfo:{who:"AccountId",deposit:"Balance"},CandidatePendingAvailability:{core:"CoreIndex",hash:"CandidateHash",descriptor:"CandidateDescriptor",availabilityVotes:"BitVec",backers:"BitVec",relayParentNumber:"BlockNumber",backedInNumber:"BlockNumber",backingGroup:"GroupIndex"},CandidateReceipt:{descriptor:"CandidateDescriptor",commitmentsHash:"Hash"},GlobalValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},CollatorId:"H256",CollatorSignature:"Signature",CommittedCandidateReceipt:{descriptor:"CandidateDescriptor",commitments:"CandidateCommitments"},CoreAssignment:{core:"CoreIndex",paraId:"ParaId",kind:"AssignmentKind",groupIdx:"GroupIndex"},CoreIndex:"u32",CoreOccupied:{_enum:{Parathread:"ParathreadEntry",Parachain:"Null"}},DoubleVoteReport:{identity:"ValidatorId",first:"(Statement, ValidatorSignature)",second:"(Statement, ValidatorSignature)",proof:"MembershipProof",signingContext:"SigningContext"},DownwardMessage:"Bytes",GroupIndex:"u32",GlobalValidationSchedule:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},HeadData:"Bytes",HostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber",maxPovSize:"u32",maxDownwardMessageSize:"u32",preferredDispatchableUpwardMessagesStepWeight:"Weight",hrmpMaxParachainOutboundChannels:"u32",hrmpMaxParathreadOutboundChannels:"u32",hrmpOpenRequestTtl:"u32",hrmpSenderDeposit:"Balance",hrmpRecipientDeposit:"Balance",hrmpChannelMaxCapacity:"u32",hrmpChannelMaxTotalSize:"u32",hrmpMaxParachainInboundChannels:"u32",hrmpMaxParathreadInboundChannels:"u32",hrmpChannelMaxMessageSize:"u32",codeRetentionPeriod:"BlockNumber",parathreadCores:"u32",parathreadRetries:"u32",groupRotationFrequency:"BlockNumber",chainAvailabilityPeriod:"BlockNumber",threadAvailabilityPeriod:"BlockNumber",schedulingLookahead:"u32",maxValidatorsPerCore:"Option<u32>",maxValidators:"Option<u32>",disputePeriod:"SessionIndex",disputePostConclusionAcceptancePeriod:"BlockNumber",disputeMaxSpamSlots:"u32",disputeConclusionByTimeOutPeriod:"BlockNumber",noShowSlots:"u32",nDelayTranches:"u32",zerothDelayTrancheWidth:"u32",neededApprovals:"u32",relayVrfModuloSamples:"u32"},InboundDownwardMessage:{pubSentAt:"BlockNumber",pubMsg:"DownwardMessage"},InboundHrmpMessage:{sentAt:"BlockNumber",data:"Bytes"},InboundHrmpMessages:"Vec<InboundHrmpMessage>",LocalValidationData:{parentHead:"HeadData",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>"},MessageIngestionType:{downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, InboundHrmpMessages>"},MessageQueueChain:"RelayChainHash",OutboundHrmpMessage:{recipient:"u32",data:"Bytes"},ParachainDispatchOrigin:{_enum:["Signed","Parachain","Root"]},ParachainInherentData:{validationData:"PersistedValidationData",relayChainState:"StorageProof",downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, VecInboundHrmpMessage>"},ParachainsInherentData:{bitfields:"SignedAvailabilityBitfields",backedCandidates:"Vec<BackedCandidate>",disputes:"MultiDisputeStatementSet",parentHeader:"Header"},ParaGenesisArgs:{genesisHead:"Bytes",validationCode:"Bytes",parachain:"bool"},ParaId:"u32",ParaInfo:{manager:"AccountId",deposit:"Balance",locked:"bool"},ParaLifecycle:{_enum:["Onboarding","Parathread","Parachain","UpgradingToParachain","DowngradingToParathread","OutgoingParathread","OutgoingParachain"]},ParaPastCodeMeta:{upgradeTimes:"Vec<ReplacementTimes>",lastPruned:"Option<BlockNumber>"},ParaScheduling:{_enum:["Always","Dynamic"]},ParathreadClaim:"(ParaId, CollatorId)",ParathreadClaimQueue:{queue:"Vec<QueuedParathread>",nextCoreOffset:"u32"},ParathreadEntry:{claim:"ParathreadClaim",retries:"u32"},ParaValidatorIndex:"u32",PersistedValidationData:{parentHead:"HeadData",relayParentNumber:"RelayChainBlockNumber",relayParentStorageRoot:"Hash",maxPovSize:"u32"},QueuedParathread:{claim:"ParathreadEntry",coreOffset:"u32"},RelayBlockNumber:"u32",RelayChainBlockNumber:"RelayBlockNumber",RelayHash:"Hash",RelayChainHash:"RelayHash",Remark:"[u8; 32]",ReplacementTimes:{expectedAt:"BlockNumber",activatedAt:"BlockNumber"},Retriable:{_enum:{Never:"Null",WithRetries:"u32"}},Scheduling:{_enum:["Always","Dynamic"]},SessionInfo:{validators:"Vec<ValidatorId>",discoveryKeys:"Vec<AuthorityDiscoveryId>",assignmentKeys:"Vec<AssignmentId>",validatorGroups:"Vec<SessionInfoValidatorGroup>",nCores:"u32",zerothDelayTrancheWidth:"u32",relayVrfModuloSamples:"u32",nDelayTranches:"u32",noShowSlots:"u32",neededApprovals:"u32"},SessionInfoValidatorGroup:"Vec<ParaValidatorIndex>",SignedAvailabilityBitfield:{payload:"BitVec",validatorIndex:"ParaValidatorIndex",signature:"ValidatorSignature"},SignedAvailabilityBitfields:"Vec<SignedAvailabilityBitfield>",SigningContext:{sessionIndex:"SessionIndex",parentHash:"Hash"},Statement:{_enum:{Never:"Null",Candidate:"Hash",Valid:"Hash",Invalid:"Hash"}},TransientValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>",dmqLength:"u32"},UpgradeGoAhead:{_enum:["Abort","GoAhead"]},UpgradeRestriction:{_enum:["Present"]},UpwardMessage:"Bytes",ValidationFunctionParams:{maxCodeSize:"u32",relayChainHeight:"RelayChainBlockNumber",codeUpgradeAllowed:"Option<RelayChainBlockNumber>"},ValidationCode:"Bytes",ValidationCodeHash:"Hash",ValidationData:{persisted:"PersistedValidationData",transient:"TransientValidationData"},ValidationDataType:{validationData:"ValidationData",relayChainState:"Vec<Bytes>"},ValidatorSignature:"Signature",ValidityAttestation:{_enum:{Never:"Null",Implicit:"ValidatorSignature",Explicit:"ValidatorSignature"}},MessagingStateSnapshot:{relayDispatchQueueSize:"(u32, u32)",egressChannels:"Vec<MessagingStateSnapshotEgressEntry>"},MessagingStateSnapshotEgressEntry:"(ParaId, AbridgedHrmpChannel)",SystemInherentData:"ParachainInherentData",VecInboundHrmpMessage:"Vec<InboundHrmpMessage>"})},Tm={rpc:{},types:{Approvals:"[bool; 4]"}},Sm={rpc:{},types:{AccountStatus:{validity:"AccountValidity",freeBalance:"Balance",lockedBalance:"Balance",signature:"Vec<u8>",vat:"Permill"},AccountValidity:{_enum:["Invalid","Initiated","Pending","ValidLow","ValidHigh","Completed"]}}},Am=["AssetInstance","Fungibility","Junction","Junctions","MultiAsset","MultiAssetFilter","MultiLocation","Response","WildFungibility","WildMultiAsset","Xcm","XcmError","XcmOrder"];function Dm(t){return Am.reduce(((e,r)=>Fi(e,{[r]:`${r}${t}`})),{})}const jm={rpc:{},types:Fi({},{BodyId:{_enum:{Unit:"Null",Named:"Vec<u8>",Index:"Compact<u32>",Executive:"Null",Technical:"Null",Legislative:"Null",Judicial:"Null"}},BodyPart:{_enum:{Voice:"Null",Members:"Compact<u32>",Fraction:{nom:"Compact<u32>",denom:"Compact<u32>"},AtLeastProportion:{nom:"Compact<u32>",denom:"Compact<u32>"},MoreThanProportion:{nom:"Compact<u32>",denom:"Compact<u32>"}}},InteriorMultiLocation:"Junctions",NetworkId:{_enum:{Any:"Null",Named:"Vec<u8>",Polkadot:"Null",Kusama:"Null"}}},{XcmOrigin:{_enum:{Xcm:"MultiLocation"}},XcmpMessageFormat:{_enum:["ConcatenatedVersionedXcm","ConcatenatedEncodedBlob","Signals"]},XcmAssetId:{_enum:{Concrete:"MultiLocation",Abstract:"Bytes"}},InboundStatus:{_enum:["Ok","Suspended"]},OutboundStatus:{_enum:["Ok","Suspended"]},MultiAssets:"Vec<MultiAsset>"},{FungibilityV0:"FungibilityV1",WildFungibilityV0:"WildFungibilityV1",AssetInstanceV0:{_enum:{Undefined:"Null",Index8:"u8",Index16:"Compact<u16>",Index32:"Compact<u32>",Index64:"Compact<u64>",Index128:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Vec<u8>"}},JunctionV0:{_enum:{Parent:"Null",Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},MultiAssetV0:{_enum:{None:"Null",All:"Null",AllFungible:"Null",AllNonFungible:"Null",AllAbstractFungible:"Vec<u8>",AllAbstractNonFungible:"Vec<u8>",AllConcreteFungible:"MultiLocationV0",AllConcreteNonFungible:"MultiLocationV0",AbstractFungible:{id:"Vec<u8>",instance:"Compact<u128>"},AbstractNonFungible:{class:"Vec<u8>",instance:"AssetInstanceV0"},ConcreteFungible:{id:"MultiLocationV0",amount:"Compact<u128>"},ConcreteNonFungible:{class:"MultiLocationV0",instance:"AssetInstanceV0"}}},MultiLocationV0:{_enum:{Here:"Null",X1:"JunctionV0",X2:"(JunctionV0, JunctionV0)",X3:"(JunctionV0, JunctionV0, JunctionV0)",X4:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X5:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X6:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X7:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X8:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)"}},OriginKindV0:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},ResponseV0:{_enum:{Assets:"Vec<MultiAssetV0>"}},XcmV0:{_enum:{WithdrawAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReserveAssetDeposit:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReceiveTeleportedAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV0"},TransferAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},TransferReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV0",message:"XcmV0"}}},XcmErrorV0:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocation, Xcm)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",RecursionLimitReached:"Null"}},XcmOrderV0:{_enum:{Null:"Null",DepositAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},DepositReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},ExchangeAsset:{give:"Vec<MultiAssetV0>",receive:"Vec<MultiAssetV0>"},InitiateReserveWithdraw:{assets:"Vec<MultiAssetV0>",reserve:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},InitiateTeleport:{assets:"Vec<MultiAsset>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV0",assets:"Vec<MultiAssetV0>"},BuyExecution:{fees:"MultiAsset",weight:"u64",debt:"u64",haltOnError:"bool",xcm:"Vec<XcmV0>"}}}},{AssetInstanceV1:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Bytes"}},FungibilityV1:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV1"}},JunctionV1:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},JunctionsV1:{_enum:{Here:"Null",X1:"JunctionV1",X2:"(JunctionV1, JunctionV1)",X3:"(JunctionV1, JunctionV1, JunctionV1)",X4:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X5:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X6:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X7:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X8:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)"}},MultiAssetsV1:"Vec<MultiAssetV1>",MultiAssetV1:{id:"XcmAssetId",fungibility:"FungibilityV1"},MultiAssetFilterV1:{_enum:{Definite:"MultiAssetsV1",Wild:"WildMultiAssetV1"}},MultiLocationV1:{parents:"u8",interior:"JunctionsV1"},OriginKindV1:"OriginKindV0",ResponseV1:{_enum:{Assets:"MultiAssetsV1"}},WildFungibilityV1:{_enum:["Fungible","NonFungible"]},WildMultiAssetV1:{_enum:{All:"Null",AllOf:{id:"XcmAssetId",fungibility:"WildFungibilityV1"}}},XcmV1:{_enum:{WithdrawAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReserveAssetDeposit:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReceiveTeleportedAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV1"},TransferAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1"},TransferReserveAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV1",message:"XcmV1"}}},XcmErrorV1:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocationV1, XcmV1)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",DestinationUnsupported:"Null",RecursionLimitReached:"Null"}},XcmOrderV1:{_enum:{Noop:"Null",DepositAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",beneficiary:"MultiLocationV1"},DepositReserveAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},ExchangeAsset:{give:"MultiAssetFilterV1",receive:"MultiAssetsV1"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV1",reserve:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},InitiateTeleport:{assets:"MultiAssetFilterV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV1",assets:"MultiAssetFilterV1"},BuyExecution:{fees:"MultiAssetV1",weight:"u64",debt:"u64",haltOnError:"bool",instructions:"Vec<XcmV1>"}}}},{AssetInstanceV2:"AssetInstanceV1",FungibilityV2:"FungibilityV1",JunctionV2:"JunctionV1",JunctionsV2:"JunctionsV1",MultiAssetsV2:"MultiAssetsV1",MultiAssetV2:"MultiAssetV1",MultiAssetFilterV2:"MultiAssetFilterV1",MultiLocationV2:"MultiLocationV1",OriginKindV2:"OriginKindV1",WildFungibilityV2:"WildFungibilityV1",ResponseV2:{_enum:{Null:"Null",Assets:"MultiAssetsV2",ExecutionResult:"ResponseV2Result"}},ResponseV2Error:"(u32, XcmErrorV2)",ResponseV2Result:"Result<Null, ResponseV2Error>",WeightLimitV2:{_enum:{Unlimited:"Null",Limited:"Compact<u64>"}},InstructionV2:{_enum:{WithdrawAsset:"MultiAssetsV2",ReserveAssetDeposited:"MultiAssetsV2",ReceiveTeleportedAsset:"MultiAssetsV2",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV2",maxWeight:"Compact<u64>"},TransferAsset:{assets:"MultiAssetsV2",beneficiary:"MultiLocationV2"},TransferReserveAsset:{assets:"MultiAssetsV2",dest:"MultiLocationV2",xcm:"XcmV2"},Transact:{originType:"OriginKindV2",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"InteriorMultiLocation",ReportError:{queryId:"Compact<u64>",dest:"MultiLocationV2",maxResponseWeight:"Compact<u64>"},DepositAsset:{assets:"MultiAssetFilterV2",maxAssets:"u32",beneficiary:"MultiLocationV2"},DepositReserveAsset:{assets:"MultiAssetFilterV2",maxAssets:"u32",dest:"MultiLocationV2",xcm:"XcmV2"},ExchangeAsset:{give:"MultiAssetFilterV2",receive:"MultiAssetsV2"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV2",reserve:"MultiLocationV2",xcm:"XcmV2"},InitiateTeleport:{assets:"MultiAssetFilterV2",dest:"MultiLocationV2",xcm:"XcmV2"},QueryHolding:{query_id:"Compact<u64>",dest:"MultiLocationV2",assets:"MultiAssetFilterV2",maxResponse_Weight:"Compact<u64>"},BuyExecution:{fees:"MultiAssetV2",weightLimit:"WeightLimitV2"},RefundSurplus:"Null",SetErrorHandler:"XcmV2",SetAppendix:"XcmV2",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV2",ticket:"MultiLocationV2"},Trap:"u64"}},WildMultiAssetV2:"WildMultiAssetV1",XcmV2:"Vec<InstructionV2>",XcmErrorV2:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",MultiLocationFull:"Null",MultiLocationNotInvertible:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",DestinationUnsupported:"Null",RecursionLimitReached:"Null",Transport:"Null",Unroutable:"Null",UnknownWeightRequired:"Null",Trap:"u64",UnknownClaim:"Null",InvalidLocation:"Null"}},XcmOrderV2:"XcmOrderV1"},Dm("V2"),{DoubleEncodedCall:{encoded:"Vec<u8>"},XcmOriginKind:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},Outcome:{_enum:{Complete:"Weight",Incomplete:"(Weight, XcmErrorV0)",Error:"XcmErrorV0"}},QueryId:"u64",QueryStatus:{_enum:{Pending:{responder:"VersionedMultiLocation",maybeNotify:"Option<(u8, u8)>",timeout:"BlockNumber"},Ready:{response:"VersionedResponse",at:"BlockNumber"}}},QueueConfigData:{suspendThreshold:"u32",dropThreshold:"u32",resumeThreshold:"u32",thresholdWeight:"Weight",weightRestrictDecay:"Weight"},VersionMigrationStage:{_enum:{MigrateSupportedVersion:"Null",MigrateVersionNotifiers:"Null",NotifyCurrentTargets:"Option<Bytes>",MigrateAndNotifyOldTargets:"Null"}},VersionedMultiAsset:{_enum:{V0:"MultiAssetV0",V1:"MultiAssetV1",V2:"MultiAssetV2"}},VersionedMultiAssets:{_enum:{V0:"Vec<MultiAssetV0>",V1:"MultiAssetsV1",V2:"MultiAssetsV2"}},VersionedMultiLocation:{_enum:{V0:"MultiLocationV0",V1:"MultiLocationV1",V2:"MultiLocationV2"}},VersionedResponse:{V0:"ResponseV0",V1:"ResponseV1",V2:"ResponseV2"},VersionedXcm:{_enum:{V0:"XcmV0",V1:"XcmV1",V2:"XcmV2"}},XcmVersion:"u32"})},Hm={types:"Vec<Si0Type>",spec:"ContractContractSpec"},Om={source:"ContractProjectSource",contract:"ContractProjectContract"},zm={rpc:{},types:Fi({},{ContractCryptoHasher:{_enum:["Blake2x256","Sha2x256","Keccak256"]},ContractDiscriminant:"u32",ContractLayoutArray:{offset:"ContractLayoutKey",len:"u32",cellsPerElem:"u64",layout:"ContractStorageLayout"},ContractLayoutCell:{key:"ContractLayoutKey",ty:"SiLookupTypeId"},ContractLayoutEnum:{dispatchKey:"ContractLayoutKey",variants:"BTreeMap<ContractDiscriminant, ContractLayoutStruct>"},ContractLayoutHash:{offset:"ContractLayoutKey",strategy:"ContractLayoutHashingStrategy",layout:"ContractStorageLayout"},ContractLayoutHashingStrategy:{hasher:"ContractCryptoHasher",postfix:"Vec<u8>",prefix:"Vec<u8>"},ContractLayoutKey:"[u8; 32]",ContractLayoutStruct:{fields:"Vec<ContractLayoutStructField>"},ContractLayoutStructField:{layout:"ContractStorageLayout",name:"Text"},ContractStorageLayout:{_enum:{Cell:"ContractLayoutCell",Hash:"ContractLayoutHash",Array:"ContractLayoutArray",Struct:"ContractLayoutStruct",Enum:"ContractLayoutEnum"}}},{ContractConstructorSpec:{name:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpec>",docs:"Vec<Text>"},ContractContractSpec:{constructors:"Vec<ContractConstructorSpec>",messages:"Vec<ContractMessageSpec>",events:"Vec<ContractEventSpec>",docs:"Vec<Text>"},ContractDisplayName:"SiPath",ContractEventParamSpec:{name:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventSpec:{name:"Text",args:"Vec<ContractEventParamSpec>",docs:"Vec<Text>"},ContractMessageParamSpec:{name:"Text",type:"ContractTypeSpec"},ContractMessageSpec:{name:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpec>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractSelector:"[u8; 4]",ContractTypeSpec:{type:"SiLookupTypeId",displayName:"ContractDisplayName"}},{ContractProjectInfo:Om,ContractMetadataV0:Hm,ContractMetadataV1:{types:"Vec<PortableType>",spec:"ContractContractSpec"},ContractMetadata:{_enum:{V0:"ContractMetadataV0",V1:"ContractMetadataV1"}},ContractMetadataLatest:"ContractMetadataV1",ContractProjectV0:Fi({metadataVersion:"Text"},Om,Hm),ContractProject:"(ContractProjectInfo, ContractMetadata)",ContractProjectContract:{_alias:{docs:"documentation"},name:"Text",version:"Text",authors:"Vec<Text>",description:"Option<Text>",docs:"Option<Text>",repository:"Option<Text>",homepage:"Option<Text>",license:"Option<Text>"},ContractProjectSource:{_alias:{wasmHash:"hash"},wasmHash:"[u8; 32]",language:"Text",compiler:"Text",wasm:"Raw"}})},Nm={rpc:Fi({},{listening:{aliasSection:"net",description:"Returns true if client is actively listening for network connections. Otherwise false.",params:[],type:"bool"},peerCount:{aliasSection:"net",description:"Returns number of peers connected to node.",params:[],type:"String"},version:{aliasSection:"net",description:"Returns protocol version.",params:[],type:"String"}},{clientVersion:{aliasSection:"web3",description:"Returns current client version.",params:[],type:"String"},sha3:{aliasSection:"web3",description:"Returns sha3 of the given data",params:[{name:"data",type:"Bytes"}],type:"H256"}},{accounts:{description:"Returns accounts list.",params:[],type:"Vec<H160>"},blockNumber:{description:"Returns the blockNumber",params:[],type:"U256"},call:{description:"Call contract, returning the output data.",params:[{name:"request",type:"EthCallRequest"},{isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},chainId:{description:"Returns the chain ID used for transaction signing at the current best block. None is returned if not available.",params:[],type:"U64"},coinbase:{description:"Returns block author.",params:[],type:"H160"},estimateGas:{description:"Estimate gas needed for execution of given contract.",params:[{name:"request",type:"EthCallRequest"},{isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},gasPrice:{description:"Returns current gas price.",params:[],type:"U256"},getBalance:{description:"Returns balance of the given account.",params:[{name:"address",type:"H160"},{isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getBlockByHash:{description:"Returns block with given hash.",params:[{name:"hash",type:"H256"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockByNumber:{description:"Returns block with given number.",params:[{name:"block",type:"BlockNumber"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockTransactionCountByHash:{description:"Returns the number of transactions in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getBlockTransactionCountByNumber:{description:"Returns the number of transactions in a block with given block number.",params:[{name:"block",type:"BlockNumber"}],type:"U256"},getCode:{description:"Returns the code at given address at given time (block number).",params:[{name:"address",type:"H160"},{isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},getFilterChanges:{description:"Returns filter changes since last poll.",params:[{name:"index",type:"U256"}],type:"EthFilterChanges"},getFilterLogs:{description:"Returns all logs matching given filter (in a range 'from' - 'to').",params:[{name:"index",type:"U256"}],type:"Vec<EthLog>"},getLogs:{description:"Returns logs matching given filter object.",params:[{name:"filter",type:"EthFilter"}],type:"Vec<EthLog>"},getProof:{description:"Returns proof for account and storage.",params:[{name:"address",type:"H160"},{name:"storageKeys",type:"Vec<H256>"},{name:"number",type:"BlockNumber"}],type:"EthAccount"},getStorageAt:{description:"Returns content of the storage at given address.",params:[{name:"address",type:"H160"},{name:"index",type:"U256"},{isOptional:!0,name:"number",type:"BlockNumber"}],type:"H256"},getTransactionByBlockHashAndIndex:{description:"Returns transaction at given block hash and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByBlockNumberAndIndex:{description:"Returns transaction by given block number and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByHash:{description:"Get transaction by its hash.",params:[{name:"hash",type:"H256"}],type:"EthTransaction"},getTransactionCount:{description:"Returns the number of transactions sent from given address at given time (block number).",params:[{name:"hash",type:"H256"},{isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getTransactionReceipt:{description:"Returns transaction receipt by transaction hash.",params:[{name:"hash",type:"H256"}],type:"EthReceipt"},getUncleByBlockHashAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleByBlockNumberAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleCountByBlockHash:{description:"Returns the number of uncles in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getUncleCountByBlockNumber:{description:"Returns the number of uncles in a block with given block number.",params:[{name:"number",type:"BlockNumber"}],type:"U256"},getWork:{description:"Returns the hash of the current block, the seedHash, and the boundary condition to be met.",params:[],type:"EthWork"},hashrate:{description:"Returns the number of hashes per second that the node is mining with.",params:[],type:"U256"},mining:{description:"Returns true if client is actively mining new blocks.",params:[],type:"bool"},newBlockFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},newFilter:{description:"Returns id of new filter.",params:[{name:"filter",type:"EthFilter"}],type:"U256"},newPendingTransactionFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},protocolVersion:{description:"Returns protocol version encoded as a string (quotes are necessary).",params:[],type:"u64"},sendRawTransaction:{description:"Sends signed transaction, returning its hash.",params:[{name:"bytes",type:"Bytes"}],type:"H256"},sendTransaction:{description:"Sends transaction; will block waiting for signer to return the transaction hash",params:[{name:"tx",type:"EthTransactionRequest"}],type:"H256"},submitHashrate:{description:"Used for submitting mining hashrate.",params:[{name:"index",type:"U256"},{name:"hash",type:"H256"}],type:"bool"},submitWork:{description:"Used for submitting a proof-of-work solution.",params:[{name:"nonce",type:"H64"},{name:"headerHash",type:"H256"},{name:"mixDigest",type:"H256"}],type:"bool"},subscribe:{description:"Subscribe to Eth subscription.",params:[{name:"kind",type:"EthSubKind"},{isOptional:!0,name:"params",type:"EthSubParams"}],pubsub:["subscription","subscribe","unsubscribe"],type:"Null"},syncing:{description:"Returns an object with data about the sync status or false.",params:[],type:"EthSyncStatus"},uninstallFilter:{description:"Uninstalls filter.",params:[{name:"index",type:"U256"}],type:"bool"}}),types:Fi({},{BlockV0:{header:"EthHeader",transactions:"Vec<TransactionV0>",ommers:"Vec<EthHeader>"},LegacyTransaction:{nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",signature:"EthTransactionSignature"},TransactionV0:"LegacyTransaction"},{BlockV1:{header:"EthHeader",transactions:"Vec<TransactionV1>",ommers:"Vec<EthHeader>"},EIP2930Transaction:{chainId:"u64",nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV1:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction"}}},{BlockV2:{header:"EthHeader",transactions:"Vec<TransactionV2>",ommers:"Vec<EthHeader>"},EIP1559Transaction:{chainId:"u64",nonce:"U256",maxPriorityFeePerGas:"U256",maxFeePerGas:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV2:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction",EIP1559:"EIP1559Transaction"}}},{EthereumAccountId:"GenericEthereumAccountId",EthereumAddress:"GenericEthereumAccountId",EthereumLookupSource:"GenericEthereumLookupSource",EthereumSignature:"[u8; 65]",EthAccessListItem:{address:"EthAddress",slots:"Vec<H256>"},EthAccessList:"Vec<EthAccessListItem>",EthAccount:{address:"EthAddress",balance:"U256",nonce:"U256",codeHash:"H256",storageHash:"H256",accountProof:"Vec<Bytes>",storageProof:"Vec<EthStorageProof>"},EthAddress:"H160",EthBlock:{header:"EthHeader",transactions:"Vec<EthTransaction>",ommers:"Vec<EthHeader>"},EthHeader:{parentHash:"H256",ommersHash:"H256",beneficiary:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",logsBloom:"EthBloom",difficulty:"U256",number:"U256",gasLimit:"U256",gasUsed:"U256",timestamp:"u64",extraData:"Bytes",mixMash:"H256",nonce:"H64"},EthRichBlock:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",totalDifficulty:"Option<U256>",sealFields:"Vec<Bytes>",uncles:"Vec<H256>",transactions:"Vec<EthTransaction>",blockSize:"Option<U256>"},EthBloom:"H2048",EthCallRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthFilter:{fromBlock:"Option<BlockNumber>",toBlock:"Option<BlockNumber>",blockHash:"Option<H256>",address:"Option<EthFilterAddress>",topics:"Option<EthFilterTopic>"},EthFilterAddress:{_enum:{Single:"EthAddress",Multiple:"Vec<EthAddress>",Null:"Null"}},EthFilterChanges:{_enum:{Logs:"Vec<EthLog>",Hashes:"Vec<H256>",Empty:"Null"}},EthFilterTopic:{_enum:{Single:"EthFilterTopicInner",Multiple:"Vec<EthFilterTopicInner>",Null:"Null"}},EthFilterTopicEntry:"Option<H256>",EthFilterTopicInner:{_enum:{Single:"EthFilterTopicEntry",Multiple:"Vec<EthFilterTopicEntry>",Null:"Null"}},EthRichHeader:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",sealFields:"Vec<Bytes>",blockSize:"Option<U256>"},EthLog:{address:"EthAddress",topics:"Vec<H256>",data:"Bytes",blockHash:"Option<H256>",blockNumber:"Option<U256>",transactionHash:"Option<H256>",transactionIndex:"Option<U256>",logIndex:"Option<U256>",transactionLogIndex:"Option<U256>",removed:"bool"},EthReceipt:{transactionHash:"Option<H256>",transactionIndex:"Option<U256>",blockHash:"Option<H256>",from:"Option<EthAddress>",to:"Option<EthAddress>",blockNumber:"Option<U256>",cumulativeGasUsed:"U256",gasUsed:"Option<U256>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",root:"Option<H256>",logsBloom:"EthBloom",statusCode:"Option<U64>"},EthStorageProof:{key:"U256",value:"U256",proof:"Vec<Bytes>"},EthSubKind:{_enum:["newHeads","logs","newPendingTransactions","syncing"]},EthSubParams:{_enum:{None:"Null",Logs:"EthFilter"}},EthSubResult:{_enum:{Header:"EthRichHeader",Log:"EthLog",TransactionHash:"H256",SyncState:"EthSyncStatus"}},EthSyncInfo:{startingBlock:"U256",currentBlock:"U256",highestBlock:"U256",warpChunksAmount:"Option<U256>",warpChunksProcessed:"Option<U256>"},EthSyncStatus:{_enum:{Info:"EthSyncInfo",None:"Null"}},EthTransaction:"LegacyTransaction",EthTransactionSignature:{v:"u64",r:"H256",s:"H256"},EthTransactionAction:{_enum:{Call:"H160",Create:"Null"}},EthTransactionCondition:{_enum:{block:"u64",time:"u64"}},EthTransactionRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthTransactionStatus:{transactionHash:"H256",transactionIndex:"u32",from:"EthAddress",to:"Option<EthAddress>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",logsBloom:"EthBloom"},EthWork:{powHash:"H256",seedHash:"H256",target:"H256",number:"Option<u64>"}})},Em={rpc:{methods:{description:"Retrieves the list of RPC methods that are exposed by the node",params:[],type:"RpcMethods"}},types:{RpcMethods:{version:"u32",methods:"Vec<Text>"}}},Ym={rpc:{hasKey:{description:"Returns true if the keystore has private keys for the given public key and key type.",params:[{name:"publicKey",type:"Bytes"},{name:"keyType",type:"Text"}],type:"bool"},hasSessionKeys:{description:"Returns true if the keystore has private keys for the given session public keys.",params:[{name:"sessionKeys",type:"Bytes"}],type:"bool"},removeExtrinsic:{description:"Remove given extrinsic from the pool and temporarily ban it to prevent reimporting",params:[{name:"bytesOrHash",type:"Vec<ExtrinsicOrHash>"}],type:"Vec<Hash>"},insertKey:{description:"Insert a key into the keystore.",params:[{name:"keyType",type:"Text"},{name:"suri",type:"Text"},{name:"publicKey",type:"Bytes"}],type:"Bytes"},rotateKeys:{description:"Generate new session keys and returns the corresponding public keys",params:[],type:"Bytes"},pendingExtrinsics:{description:"Returns all pending extrinsics, potentially grouped by sender",params:[],type:"Vec<Extrinsic>"},submitExtrinsic:{isSigned:!0,description:"Submit a fully formatted extrinsic for block inclusion",params:[{name:"extrinsic",type:"Extrinsic"}],type:"Hash"},submitAndWatchExtrinsic:{description:"Submit and subscribe to watch an extrinsic until unsubscribed",isSigned:!0,params:[{name:"extrinsic",type:"Extrinsic"}],pubsub:["extrinsicUpdate","submitAndWatchExtrinsic","unwatchExtrinsic"],type:"ExtrinsicStatus"}},types:{ExtrinsicOrHash:{_enum:{Hash:"Hash",Extrinsic:"Bytes"}},ExtrinsicStatus:{_enum:{Future:"Null",Ready:"Null",Broadcast:"Vec<Text>",InBlock:"Hash",Retracted:"Hash",FinalityTimeout:"Hash",Finalized:"Hash",Usurped:"Hash",Dropped:"Null",Invalid:"Null"}}}},Rm={rpc:{getHeader:{alias:["chain_getHead"],description:"Retrieves the header for a specific block",params:[{name:"hash",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Header"},getBlock:{description:"Get header and body of a relay chain block",params:[{name:"hash",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"SignedBlock"},getBlockHash:{description:"Get the block hash for a specific block",params:[{name:"blockNumber",type:"BlockNumber",isOptional:!0}],type:"BlockHash"},getFinalizedHead:{alias:["chain_getFinalisedHead"],description:"Get hash of the last finalized block in the canon chain",params:[],type:"BlockHash"},subscribeNewHeads:{alias:["chain_unsubscribeNewHeads","subscribe_newHead","unsubscribe_newHead"],description:"Retrieves the best header via subscription",params:[],pubsub:["newHead","subscribeNewHead","unsubscribeNewHead"],type:"Header"},subscribeFinalizedHeads:{alias:["chain_subscribeFinalisedHeads","chain_unsubscribeFinalisedHeads"],description:"Retrieves the best finalized header via subscription",params:[],pubsub:["finalizedHead","subscribeFinalizedHeads","unsubscribeFinalizedHeads"],type:"Header"},subscribeAllHeads:{description:"Retrieves the newest header via subscription",params:[],pubsub:["allHead","subscribeAllHeads","unsubscribeAllHeads"],type:"Header"}},types:{BlockHash:"Hash"}},Im={rpc:{getKeys:{description:"Returns the keys with prefix from a child storage, leave empty to get all the keys",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageKey>"},getKeysPaged:{alias:["childstate_getKeysPagedAt"],description:"Returns the keys with prefix from a child storage with pagination support",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{name:"count",type:"u32"},{name:"startKey",type:"StorageKey",isOptional:!0},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageKey>"},getStorage:{description:"Returns a child storage entry at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Option<StorageData>"},getStorageEntries:{description:"Returns child storage entries for multiple keys at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Vec<Option<StorageData>>"},getStorageHash:{description:"Returns the hash of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Option<Hash>"},getStorageSize:{description:"Returns the size of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{name:"at",type:"Hash",isHistoric:!0,isOptional:!0}],type:"Option<u64>"}},types:{PrefixedStorageKey:"StorageKey"}},Bm={rpc:{localStorageSet:{description:"Set offchain local storage under given key and prefix",params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"},{name:"value",type:"Bytes"}],type:"Null"},localStorageGet:{description:"Get offchain local storage under given key and prefix",params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"}},types:{StorageKind:{_enum:{PERSISTENT:1,LOCAL:2}}}},Xm=[{name:"extrinsic",type:"Bytes"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],Vm={rpc:{queryInfo:{description:"Retrieves the fee information for an encoded extrinsic",params:Xm,type:"RuntimeDispatchInfo"},queryFeeDetails:{description:"Query the detailed fee of a given encoded extrinsic",params:Xm,type:"FeeDetails"}},types:{FeeDetails:{inclusionFee:"Option<InclusionFee>"},InclusionFee:{baseFee:"Balance",lenFee:"Balance",adjustedWeightFee:"Balance"},RuntimeDispatchInfo:{weight:"Weight",class:"DispatchClass",partialFee:"Balance"}}},Cm={rpc:{call:{alias:["state_callAt"],description:"Perform a call to a builtin on the chain",params:[{name:"method",type:"Text"},{name:"data",type:"Bytes"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Bytes"},getKeys:{description:"Retrieves the keys with a certain prefix",params:[{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageKey>"},getPairs:{description:"Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)",params:[{name:"prefix",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Vec<KeyValue>"},getKeysPaged:{alias:["state_getKeysPagedAt"],description:"Returns the keys with prefix with pagination support.",params:[{name:"key",type:"StorageKey"},{name:"count",type:"u32"},{name:"startKey",type:"StorageKey",isOptional:!0},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageKey>"},getStorage:{alias:["state_getStorageAt"],description:"Retrieves the storage for a key",params:[{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"StorageData"},getStorageHash:{alias:["state_getStorageHashAt"],description:"Retrieves the storage hash",params:[{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Hash"},getStorageSize:{alias:["state_getStorageSizeAt"],description:"Retrieves the storage size",params:[{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"u64"},getChildKeys:{description:"Retrieves the keys with prefix of a specific child storage",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageKey>"},getChildStorage:{description:"Retrieves the child storage for a key",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"StorageData"},getChildStorageHash:{description:"Retrieves the child storage hash",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Hash"},getChildStorageSize:{description:"Retrieves the child storage size",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"u64"},getMetadata:{description:"Returns the runtime metadata",params:[{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Metadata"},getRuntimeVersion:{alias:["chain_getRuntimeVersion"],description:"Get the runtime version",params:[{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"RuntimeVersion"},queryStorage:{description:"Query historical storage entries (by key) starting from a start block",params:[{name:"keys",type:"Vec<StorageKey>"},{name:"fromBlock",type:"Hash"},{name:"toBlock",type:"BlockHash",isOptional:!0}],type:"Vec<StorageChangeSet>"},queryStorageAt:{description:"Query storage entries (by key) starting at block hash given as the second parameter",params:[{name:"keys",type:"Vec<StorageKey>"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"Vec<StorageChangeSet>"},getChildReadProof:{description:"Returns proof of storage for child key entries at a specific block state.",params:[{name:"childStorageKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"ReadProof"},getReadProof:{description:"Returns proof of storage entries at a specific block state",params:[{name:"keys",type:"Vec<StorageKey>"},{name:"at",type:"BlockHash",isHistoric:!0,isOptional:!0}],type:"ReadProof"},subscribeRuntimeVersion:{alias:["chain_subscribeRuntimeVersion","chain_unsubscribeRuntimeVersion"],description:"Retrieves the runtime version via subscription",params:[],pubsub:["runtimeVersion","subscribeRuntimeVersion","unsubscribeRuntimeVersion"],type:"RuntimeVersion"},subscribeStorage:{description:"Subscribes to storage changes for the provided keys",params:[{name:"keys",type:"Vec<StorageKey>",isOptional:!0}],pubsub:["storage","subscribeStorage","unsubscribeStorage"],type:"StorageChangeSet"},traceBlock:{description:"Provides a way to trace the re-execution of a single block",params:[{name:"block",type:"Hash"},{name:"targets",type:"Option<Text>"},{name:"storageKeys",type:"Option<Text>"}],type:"TraceBlockResponse"}},types:{ApiId:"[u8; 8]",BlockTrace:{blockHash:"Text",parentHash:"Text",tracingTargets:"Text",storageKeys:"Text",spans:"Vec<BlockTraceSpan>",events:"Vec<BlockTraceEvent>"},BlockTraceEvent:{target:"Text",data:"BlockTraceEventData",parentId:"Option<u64>"},BlockTraceEventData:{stringValues:"HashMap<Text, Text>"},BlockTraceSpan:{id:"u64",parentId:"Option<u64>",name:"Text",target:"Text",wasm:"bool"},KeyValueOption:"(StorageKey, Option<StorageData>)",ReadProof:{at:"Hash",proof:"Vec<Bytes>"},RuntimeVersionApi:"(ApiId, u32)",RuntimeVersion:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>",transactionVersion:"u32"},RuntimeVersionPartial:{specName:"Text",specVersion:"u32"},SpecVersion:"u32",StorageChangeSet:{block:"Hash",changes:"Vec<KeyValueOption>"},TraceBlockResponse:{_enum:{TraceError:"TraceError",BlockTrace:"BlockTrace"}},TraceError:{error:"Text"}}};function Wm(t,{type:e},r,n){const i={},s=t.getSiType(e).def.asVariant.variants;for(let t=0;t<s.length;t++)xh(i,s[t],n,r);return i}function qm(t){return t?t.charAt(0).toLowerCase()+t.slice(1):""}function Zm({name:t}){return qm(t)}function Fm({name:t}){return kh(t)}function Um({name:t}){return t.toString()}function Gm(t,e){return Fi({args:e.fields.map((({type:e})=>t.getTypeDef(e).type))},e)}function _m(t,{lookup:e,pallets:r},n){const i={};for(let s=0;s<r.length;s++){const{errors:o,index:a,name:u}=r[s];if(o.isSome){const r=n>=12?a.toNumber():s;xh(i,kh(u),(()=>Wm(e,o.unwrap(),Um,(n=>({is:({error:t,index:e})=>e.eq(r)&&t.eq(n.index),meta:t.createType("ErrorMetadataLatest",Gm(e,n))})))))}}return i}function Km({events:t}){return t.isSome}function Jm(t,{lookup:e,pallets:r},n){const i={},s=r.filter(Km);for(let r=0;r<s.length;r++){const{events:o,index:a,name:u}=s[r],h=n>=12?a.toNumber():r;xh(i,kh(u),(()=>Wm(e,o.unwrap(),Um,(r=>({is:t=>h===t.index[0]&&r.index.eq(t.index[1]),meta:t.createType("EventMetadataLatest",Gm(e,r))})))))}return i}function Qm({calls:t}){return t.isSome}function $m(t,e,r,n,i){const{fields:s,index:o}=r,a=new Array(s.length);for(let t=0;t<s.length;t++){const{name:r,type:n,typeName:i}=s[t];a[t]=Fi({name:kh(r.unwrapOr(`param${t}`)),type:sp(e,n)},i.isSome?{typeName:i.unwrap()}:null)}return function(t,e,r,n){const i=n.fields,s=kh(n.name),o=(...o)=>(_(i.length===o.length,(()=>`Extrinsic ${e}.${s} expects ${i.length} arguments, got ${o.length}.`)),t.createType("Call",{args:o,callIndex:r},n));return o.is=t=>function(t,e){return t.callIndex[0]===e[0]&&t.callIndex[1]===e[1]}(t,r),o.callIndex=r,o.meta=n,o.method=s,o.section=e,o.toJSON=()=>n.toJSON(),o}(t,n,new Uint8Array([i,o.toNumber()]),t.createType("FunctionMetadataLatest",Fi({args:a},r)))}function ty(t,{lookup:e,pallets:r},n){const i={},s=r.filter(Qm);for(let r=0;r<s.length;r++){const{calls:o,index:a,name:u}=s[r],h=kh(u),c=n>=12?a.toNumber():r;xh(i,h,(()=>Wm(e,o.unwrap(),Fm,(r=>$m(t,e,r,h,c)))))}return i}function ey(t,{pallets:e},r){const n={};for(let r=0;r<e.length;r++){const{constants:i,name:s}=e[r];i.isEmpty||xh(n,kh(s),(()=>Ph({},i,(e=>{const r=t.createTypeUnsafe(t.createLookupType(e.type),[es(e.value.toHex())]);return r.meta=e,r}),Fm)))}return n}function ry(t,e){return e.toNumber()>=2?t.createType("StorageHasherV10",e.toNumber()+1):t.createType("StorageHasherV10",e)}function ny(t,e){return e.isMap?[{...e.asMap,hasher:ry(t,e.asMap.hasher)},1]:e.isDoubleMap?[{...e.asDoubleMap,hasher:ry(t,e.asDoubleMap.hasher),key2Hasher:ry(t,e.asDoubleMap.key2Hasher)},2]:[e.asPlain,0]}function iy(t,{modules:e}){return t.createType("MetadataV10",{modules:e.map((e=>function(t,e){const r=e.storage.unwrapOr(null);return t.createType("ModuleMetadataV10",{...e,storage:r?{...r,items:r.items.map((e=>({...e,type:t.createType("StorageEntryTypeV10",...ny(t,e.type))})))}:null})}(t,e)))})}function sy(t,{modules:e}){return t.createType("MetadataV11",{extrinsic:{signedExtensions:[],version:0},modules:e})}function oy(t,{extrinsic:e,modules:r}){return t.createType("MetadataV12",{extrinsic:e,modules:r.map((e=>t.createType("ModuleMetadataV12",{...e,index:255})))})}function ay(t,e){return t.createType("MetadataV13",e)}const uy={Council:"CollectiveOrigin",System:"SystemOrigin",TechnicalCommittee:"CollectiveOrigin",Xcm:"XcmOrigin",XcmPallet:"XcmOrigin",Authority:"AuthorityOrigin",GeneralCouncil:"CollectiveOrigin"},hy={},cy={assets:{Approval:"AssetApproval",ApprovalKey:"AssetApprovalKey",Balance:"TAssetBalance",DestroyWitness:"AssetDestroyWitness"},babe:{EquivocationProof:"BabeEquivocationProof"},balances:{Status:"BalanceStatus"},beefy:{AuthorityId:"BeefyId"},contracts:{StorageKey:"ContractStorageKey"},electionProviderMultiPhase:{Phase:"ElectionPhase"},ethereum:{Block:"EthBlock",Header:"EthHeader",Receipt:"EthReceipt",Transaction:"EthTransaction",TransactionStatus:"EthTransactionStatus"},evm:{Account:"EvmAccount",Log:"EvmLog",Vicinity:"EvmVicinity"},grandpa:{Equivocation:"GrandpaEquivocation",EquivocationProof:"GrandpaEquivocationProof"},identity:{Judgement:"IdentityJudgement"},inclusion:{ValidatorIndex:"ParaValidatorIndex"},paraDisputes:{ValidatorIndex:"ParaValidatorIndex"},paraInclusion:{ValidatorIndex:"ParaValidatorIndex"},paraScheduler:{ValidatorIndex:"ParaValidatorIndex"},paraShared:{ValidatorIndex:"ParaValidatorIndex"},parachains:{Id:"ParaId"},parasDisputes:{ValidatorIndex:"ParaValidatorIndex"},parasInclusion:{ValidatorIndex:"ParaValidatorIndex"},parasScheduler:{ValidatorIndex:"ParaValidatorIndex"},parasShared:{ValidatorIndex:"ParaValidatorIndex"},proposeParachain:{Proposal:"ParachainProposal"},proxy:{Announcement:"ProxyAnnouncement"},scheduler:{ValidatorIndex:"ParaValidatorIndex"},shared:{ValidatorIndex:"ParaValidatorIndex"},society:{Judgement:"SocietyJudgement",Vote:"SocietyVote"},staking:{Compact:"CompactAssignments"},treasury:{Proposal:"TreasuryProposal"},xcm:{AssetId:"XcmAssetId"},xcmPallet:{AssetId:"XcmAssetId"}},ly={AnchorData:{anchoredBlock:"u64",docRoot:"H256",id:"H256"},PreCommitData:{expirationBlock:"u64",identity:"H256",signingRoot:"H256"},Fee:{key:"Hash",price:"Balance"},MultiAccountData:{deposit:"Balance",depositor:"AccountId",signatories:"Vec<AccountId>",threshold:"u16"},ChainId:"u8",DepositNonce:"u64",ResourceId:"[u8; 32]","chainbridge::ChainId":"u8",RegistryId:"H160",TokenId:"U256",AssetId:{registryId:"RegistryId",tokenId:"TokenId"},AssetInfo:{metadata:"Bytes"},MintInfo:{anchorId:"Hash",proofs:"Vec<ProofMint>",staticHashes:"[Hash; 3]"},Proof:{leafHash:"H256",sortedHashes:"H256"},ProofMint:{hashes:"Vec<Hash>",property:"Bytes",salt:"[u8; 32]",value:"Bytes"},RegistryInfo:{fields:"Vec<Bytes>",ownerCanBurn:"bool"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","NonProxy"]}},dy=Fi({},ly,{AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",LookupSource:"IndicesLookupSource",Multiplier:"Fixed64",RefCount:"RefCountTo259"}),fy=[{minmax:[240,243],types:Fi({},dy,{ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","Vesting"]}})},{minmax:[244,999],types:Fi({},dy)},{minmax:[1e3,void 0],types:Fi({},ly)}],py={CompactAssignments:"CompactAssignmentsWith24",RawSolution:"RawSolutionWith24",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","IdentityJudgement","CancelProxy","Auction"]}},my={AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"IndicesLookupSource",ValidatorPrefs:"ValidatorPrefsWithCommission"},yy={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"},vy=[{minmax:[1019,1031],types:Fi({},my,{BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchError:"DispatchErrorTo198",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",IdentityInfo:"IdentityInfoTo198",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"})},{minmax:[1032,1042],types:Fi({},my,{BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"})},{minmax:[1043,1045],types:Fi({},my,{BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"})},{minmax:[1046,1054],types:Fi({},py,yy,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",StakingLedger:"StakingLedgerTo240",Weight:"u32"})},{minmax:[1055,1056],types:Fi({},py,yy,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",StakingLedger:"StakingLedgerTo240",Weight:"u32"})},{minmax:[1057,1061],types:Fi({},py,yy,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[1062,2012],types:Fi({},py,yy,{CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[2013,2022],types:Fi({},py,yy,{CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"})},{minmax:[2023,2024],types:Fi({},py,yy,{RefCount:"RefCountTo259"})},{minmax:[2025,2027],types:Fi({},py,yy)},{minmax:[2028,2029],types:Fi({},py,{AccountInfo:"AccountInfoWithDualRefCount",CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"})},{minmax:[2030,9e3],types:Fi({},py,{CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"})},{minmax:[9010,9099],types:Fi({},py,Dm("V0"))},{minmax:[9100,9105],types:Fi({},py,Dm("V1"))},{minmax:[9106,void 0],types:{}}],gy=[{minmax:[0,void 0],types:{}}],by=[{minmax:[0,void 0],types:{}}],wy={CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:{Any:0,NonTransfer:1,Governance:2,Staking:3,UnusedSudoBalances:4,IdentityJudgement:5,CancelProxy:6,Auction:7}}},My={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"},ky=[{minmax:[0,12],types:Fi({},wy,My,{CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[13,22],types:Fi({},wy,My,{CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"})},{minmax:[23,24],types:Fi({},wy,My,{RefCount:"RefCountTo259"})},{minmax:[25,27],types:Fi({},wy,My)},{minmax:[28,29],types:Fi({},wy,{AccountInfo:"AccountInfoWithDualRefCount"})},{minmax:[30,9109],types:Fi({},wy)},{minmax:[9110,void 0],types:{}}],xy={FullIdentification:"()",Keys:"SessionKeys7B"},Py=[{minmax:[0,200],types:Fi({},xy,{AccountInfo:"AccountInfoWithDualRefCount",Address:"AccountId",LookupSource:"AccountId"})},{minmax:[201,214],types:Fi({},xy,{AccountInfo:"AccountInfoWithDualRefCount"})},{minmax:[215,228],types:Fi({},xy,{Keys:"SessionKeys6"})},{minmax:[229,9099],types:Fi({},xy,Dm("V0"))},{minmax:[9100,9105],types:Fi({},xy,Dm("V1"))},{minmax:[9106,void 0],types:{}}],Ly=[{minmax:[0,void 0],types:{}}],Ty={TAssetBalance:"u128",ProxyType:{_enum:["Any","NonTransfer","CancelProxy","Assets","AssetOwner","AssetManager","Staking"]}},Sy=[{minmax:[0,3],types:Fi({},Ty,Dm("V0"))},{minmax:[4,5],types:Fi({},Ty,Dm("V1"))},{minmax:[500,void 0],types:{}}],Ay={CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Staking","SudoBalances","IdentityJudgement","CancelProxy"]}},Dy={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",LookupSource:"AccountId",Keys:"SessionKeys5",RawSolution:"RawSolutionWith16",ValidatorPrefs:"ValidatorPrefsWithCommission"},jy={"centrifuge-chain":fy,kusama:vy,node:gy,"node-template":by,polkadot:ky,rococo:Py,shell:Ly,statemine:Sy,statemint:Sy,westend:[{minmax:[1,2],types:Fi({},Ay,Dy,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",Weight:"u32"})},{minmax:[3,22],types:Fi({},Ay,Dy,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[23,42],types:Fi({},Ay,Dy,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"})},{minmax:[43,44],types:Fi({},Ay,Dy,{DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"})},{minmax:[45,47],types:Fi({},Ay,Dy)},{minmax:[48,49],types:Fi({},Ay,{AccountInfo:"AccountInfoWithDualRefCount"})},{minmax:[50,9099],types:Fi({},Ay,Dm("V0"))},{minmax:[9100,9105],types:Fi({},Ay,Dm("V1"))},{minmax:[9106,void 0],types:{}}],westmint:Sy},Hy={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],bifrost:["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],centrifuge:["0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],"dock-mainnet":["0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],"nodle-chain":["0xa3d114c2b8d0627c1aa9b134eafcf7d05ca561fdc19fb388bb9457f81809fb23"],plasm:["0x3e86364d4b4894021cb2a0390bcf2feb5517d5292f2de2bb9404227e908b0b8b"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"]},Oy={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},zy={centrifuge:747,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,kusama:434,"nodle-chain":1003,polkadot:354,polymesh:595,statemine:434},Ny={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,subspace_testnet:!0,"zero-alphaville":!0},Ey=[0,2,42],Yy=["testnet"];const Ry=[{decimals:[10],displayName:"Polkadot Relay Chain",network:"polkadot",prefix:0,standardAccount:"*25519",symbols:["DOT"],website:"https://polkadot.network"},{decimals:null,displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",network:"BareSr25519",prefix:1,standardAccount:"Sr25519",symbols:null,website:null},{decimals:[12],displayName:"Kusama Relay Chain",network:"kusama",prefix:2,standardAccount:"*25519",symbols:["KSM"],website:"https://kusama.network"},{decimals:null,displayName:"Bare 32-bit Ed25519 public key.",network:"BareEd25519",prefix:3,standardAccount:"Ed25519",symbols:null,website:null},{decimals:null,displayName:"Katal Chain",network:"katalchain",prefix:4,standardAccount:"*25519",symbols:null,website:null},{decimals:[15],displayName:"Plasm Network",network:"plasm",prefix:5,standardAccount:"*25519",symbols:["PLM"],website:"https://plasmnet.io"},{decimals:[12],displayName:"Bifrost",network:"bifrost",prefix:6,standardAccount:"*25519",symbols:["BNC"],website:"https://bifrost.finance/"},{decimals:[18],displayName:"Edgeware",network:"edgeware",prefix:7,standardAccount:"*25519",symbols:["EDG"],website:"https://edgewa.re"},{decimals:[12],displayName:"Karura",network:"karura",prefix:8,standardAccount:"*25519",symbols:["KAR"],website:"https://karura.network/"},{decimals:[18],displayName:"Laminar Reynolds Canary",network:"reynolds",prefix:9,standardAccount:"*25519",symbols:["REY"],website:"http://laminar.network/"},{decimals:[12],displayName:"Acala",network:"acala",prefix:10,standardAccount:"*25519",symbols:["ACA"],website:"https://acala.network/"},{decimals:[18],displayName:"Laminar",network:"laminar",prefix:11,standardAccount:"*25519",symbols:["LAMI"],website:"http://laminar.network/"},{decimals:[6],displayName:"Polymesh",network:"polymesh",prefix:12,standardAccount:"*25519",symbols:["POLYX"],website:"https://polymath.network/"},{decimals:[12],displayName:"Integritee",network:"integritee",prefix:13,standardAccount:"*25519",symbols:["TEER"],website:"https://integritee.network"},{decimals:[0],displayName:"Totem",network:"totem",prefix:14,standardAccount:"*25519",symbols:["TOTEM"],website:"https://totemaccounting.com"},{decimals:[12],displayName:"Synesthesia",network:"synesthesia",prefix:15,standardAccount:"*25519",symbols:["SYN"],website:"https://synesthesia.network/"},{decimals:[12],displayName:"Kulupu",network:"kulupu",prefix:16,standardAccount:"*25519",symbols:["KLP"],website:"https://kulupu.network/"},{decimals:null,displayName:"Dark Mainnet",network:"dark",prefix:17,standardAccount:"*25519",symbols:null,website:null},{decimals:[9,9],displayName:"Darwinia Network",network:"darwinia",prefix:18,standardAccount:"*25519",symbols:["RING","KTON"],website:"https://darwinia.network/"},{decimals:[12],displayName:"GeekCash",network:"geek",prefix:19,standardAccount:"*25519",symbols:["GEEK"],website:"https://geekcash.org"},{decimals:[12],displayName:"Stafi",network:"stafi",prefix:20,standardAccount:"*25519",symbols:["FIS"],website:"https://stafi.io"},{decimals:[6],displayName:"Dock Testnet",network:"dock-testnet",prefix:21,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:[6],displayName:"Dock Mainnet",network:"dock-mainnet",prefix:22,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:null,displayName:"ShiftNrg",network:"shift",prefix:23,standardAccount:"*25519",symbols:null,website:null},{decimals:[18],displayName:"ZERO",network:"zero",prefix:24,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:[18],displayName:"ZERO Alphaville",network:"zero-alphaville",prefix:25,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:[10],displayName:"Jupiter",network:"jupiter",prefix:26,standardAccount:"*25519",symbols:["jDOT"],website:"https://jupiter.patract.io"},{decimals:null,displayName:"Subsocial",network:"subsocial",prefix:28,standardAccount:"*25519",symbols:null,website:null},{decimals:[12,12],displayName:"CORD Network",network:"cord",prefix:29,standardAccount:"*25519",symbols:["DHI","WAY"],website:"https://cord.network/"},{decimals:[12],displayName:"Phala Network",network:"phala",prefix:30,standardAccount:"*25519",symbols:["PHA"],website:"https://phala.network"},{decimals:[12],displayName:"Litentry Network",network:"litentry",prefix:31,standardAccount:"*25519",symbols:["LIT"],website:"https://litentry.com/"},{decimals:[9],displayName:"Robonomics",network:"robonomics",prefix:32,standardAccount:"*25519",symbols:["XRT"],website:"https://robonomics.network"},{decimals:null,displayName:"DataHighway",network:"datahighway",prefix:33,standardAccount:"*25519",symbols:null,website:null},{decimals:[12],displayName:"Ares Protocol",network:"ares",prefix:34,standardAccount:"*25519",symbols:["ARES"],website:"https://www.aresprotocol.com/"},{decimals:[15],displayName:"Valiu Liquidity Network",network:"vln",prefix:35,standardAccount:"*25519",symbols:["USDv"],website:"https://valiu.com/"},{decimals:[18],displayName:"Centrifuge Chain",network:"centrifuge",prefix:36,standardAccount:"*25519",symbols:["CFG"],website:"https://centrifuge.io/"},{decimals:[18],displayName:"Nodle Chain",network:"nodle",prefix:37,standardAccount:"*25519",symbols:["NODL"],website:"https://nodle.io/"},{decimals:[18],displayName:"KILT Chain",network:"kilt",prefix:38,standardAccount:"*25519",symbols:["KILT"],website:"https://kilt.io/"},{decimals:[18],displayName:"MathChain mainnet",network:"mathchain",prefix:39,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:[18],displayName:"MathChain testnet",network:"mathchain-testnet",prefix:40,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:null,displayName:"Polimec Chain",network:"poli",prefix:41,standardAccount:"*25519",symbols:null,website:"https://polimec.io/"},{decimals:null,displayName:"Substrate",network:"substrate",prefix:42,standardAccount:"*25519",symbols:null,website:"https://substrate.io/"},{decimals:null,displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",network:"BareSecp256k1",prefix:43,standardAccount:"secp256k1",symbols:null,website:null},{decimals:[8],displayName:"ChainX",network:"chainx",prefix:44,standardAccount:"*25519",symbols:["PCX"],website:"https://chainx.org/"},{decimals:[12,12],displayName:"UniArts Network",network:"uniarts",prefix:45,standardAccount:"*25519",symbols:["UART","UINK"],website:"https://uniarts.me"},{decimals:null,displayName:"This prefix is reserved.",network:"reserved46",prefix:46,standardAccount:null,symbols:null,website:null},{decimals:null,displayName:"This prefix is reserved.",network:"reserved47",prefix:47,standardAccount:null,symbols:null,website:null},{decimals:[12],displayName:"Neatcoin Mainnet",network:"neatcoin",prefix:48,standardAccount:"*25519",symbols:["NEAT"],website:"https://neatcoin.org"},{decimals:[12],displayName:"Picasso",network:"picasso",prefix:49,standardAccount:"*25519",symbols:["PICA"],website:"https://picasso.composable.finance"},{decimals:[12],displayName:"Composable",network:"composable",prefix:50,standardAccount:"*25519",symbols:["LAYR"],website:"https://composable.finance"},{decimals:[9],displayName:"xx network",network:"xxnetwork",prefix:55,standardAccount:"*25519",symbols:["XX"],website:"https://xx.network"},{decimals:[12],displayName:"HydraDX",network:"hydradx",prefix:63,standardAccount:"*25519",symbols:["HDX"],website:"https://hydradx.io"},{decimals:[18],displayName:"AvN Mainnet",network:"aventus",prefix:65,standardAccount:"*25519",symbols:["AVT"],website:"https://aventus.io"},{decimals:[12],displayName:"Crust Network",network:"crust",prefix:66,standardAccount:"*25519",symbols:["CRU"],website:"https://crust.network"},{decimals:[0,9,9,9,9,9,9,9],displayName:"Equilibrium Network",network:"equilibrium",prefix:67,standardAccount:"*25519",symbols:["Unknown","USD","EQ","ETH","BTC","EOS","DOT","CRV"],website:"https://equilibrium.io"},{decimals:[18],displayName:"SORA Network",network:"sora",prefix:69,standardAccount:"*25519",symbols:["XOR"],website:"https://sora.org"},{decimals:[10],displayName:"Zeitgeist",network:"zeitgeist",prefix:73,standardAccount:"*25519",symbols:["ZTG"],website:"https://zeitgeist.pm"},{decimals:[12],displayName:"Manta network",network:"manta",prefix:77,standardAccount:"*25519",symbols:["MA"],website:"https://manta.network"},{decimals:[12],displayName:"Calamari: Manta Canary Network",network:"calamari",prefix:78,standardAccount:"*25519",symbols:["KMA"],website:"https://manta.network"},{decimals:[12],displayName:"Polkadex Mainnet",network:"polkadex",prefix:88,standardAccount:"*25519",symbols:["PDEX"],website:"https://polkadex.trade"},{decimals:[18],displayName:"PolkaSmith Canary Network",network:"polkasmith",prefix:98,standardAccount:"*25519",symbols:["PKS"],website:"https://polkafoundry.com"},{decimals:[18],displayName:"PolkaFoundry Network",network:"polkafoundry",prefix:99,standardAccount:"*25519",symbols:["PKF"],website:"https://polkafoundry.com"},{decimals:[18],displayName:"OriginTrail Parachain",network:"origintrail-parachain",prefix:101,standardAccount:"secp256k1",symbols:["TRAC"],website:"https://origintrail.io"},{decimals:[10],displayName:"Pontem Network",network:"pontem-network",prefix:105,standardAccount:"*25519",symbols:["PONT"],website:"https://pontem.network"},{decimals:[12],displayName:"Heiko",network:"heiko",prefix:110,standardAccount:"*25519",symbols:["HKO"],website:"https://parallel.fi/"},{decimals:null,displayName:"Integritee Incognito",network:"integritee-incognito",prefix:113,standardAccount:"*25519",symbols:null,website:"https://integritee.network"},{decimals:[18],displayName:"Clover Finance",network:"clover",prefix:128,standardAccount:"*25519",symbols:["CLV"],website:"https://clover.finance"},{decimals:[18],displayName:"Altair",network:"altair",prefix:136,standardAccount:"*25519",symbols:["AIR"],website:"https://centrifuge.io/"},{decimals:[12],displayName:"Parallel",network:"parallel",prefix:172,standardAccount:"*25519",symbols:["PARA"],website:"https://parallel.fi/"},{decimals:[18],displayName:"Social Network",network:"social-network",prefix:252,standardAccount:"*25519",symbols:["NET"],website:"https://social.network"},{decimals:[15],displayName:"QUARTZ by UNIQUE",network:"quartz_mainnet",prefix:255,standardAccount:"*25519",symbols:["QTZ"],website:"https://unique.network"},{decimals:[18],displayName:"Pioneer Network by Bit.Country",network:"pioneer_network",prefix:268,standardAccount:"*25519",symbols:["NEER"],website:"https://bit.country"},{decimals:[18],displayName:"Moonbeam",network:"moonbeam",prefix:1284,standardAccount:"secp256k1",symbols:["GLMR"],website:"https://moonbeam.network"},{decimals:[18],displayName:"Moonriver",network:"moonriver",prefix:1285,standardAccount:"secp256k1",symbols:["MOVR"],website:"https://moonbeam.network"},{decimals:[12],displayName:"Kapex",network:"kapex",prefix:2007,standardAccount:"*25519",symbols:["KAPEX"],website:"https://totemaccounting.com"},{decimals:[18],displayName:"Subspace testnet",network:"subspace_testnet",prefix:2254,standardAccount:"*25519",symbols:["tSSC"],website:"https://subspace.network"},{decimals:[18],displayName:"Subspace",network:"subspace",prefix:6094,standardAccount:"*25519",symbols:["SSC"],website:"https://subspace.network"},{decimals:[12],displayName:"Basilisk",network:"basilisk",prefix:10041,standardAccount:"*25519",symbols:["BSX"],website:"https://bsx.fi"},{decimals:[12],displayName:"CESS Testnet",network:"cess-testnet",prefix:10042,standardAccount:"*25519",symbols:["TCESS"],website:"https://cess.cloud"},{decimals:[12],displayName:"CESS",network:"cess",prefix:10043,standardAccount:"*25519",symbols:["CESS"],website:"https://cess.cloud"},{decimals:[18],displayName:"Automata ContextFree",network:"contextfree",prefix:11820,standardAccount:"*25519",symbols:["CTX"],website:"https://ata.network"}].map((function(t){const e=t.network||"",r=e.replace(/_/g,"-").split("-"),n=t;return n.slip44=zy[e],n.hasLedgerSupport=!!n.slip44,n.genesisHash=Hy[e]||[],n.icon=Oy[e]||"substrate",n.isTestnet=!!Ny[e]||Yy.includes(r[r.length-1]),n.isIgnored=n.isTestnet||!(t.standardAccount&&t.decimals&&t.symbols)&&42!==t.prefix,n})).filter((function(t){return!t.isIgnored&&!!t.network})).sort((function(t,e){const r=Ey.includes(t.prefix),n=Ey.includes(e.prefix);return r===n?0:r?-1:n?1:t.displayName.localeCompare(e.displayName)})).filter((function({genesisHash:t,prefix:e}){return!!t.length||42===e})),Iy={kusama:[[0,1020],[26669,1021],[38245,1022],[54248,1023],[59659,1024],[67651,1025],[82191,1027],[83238,1028],[101503,1029],[203466,1030],[295787,1031],[461692,1032],[504329,1033],[569327,1038],[587687,1039],[653183,1040],[693488,1042],[901442,1045],[1375086,1050],[1445458,1051],[1472960,1052],[1475648,1053],[1491596,1054],[1574408,1055],[2064961,1058],[2201991,1062],[2671528,2005],[2704202,2007],[2728002,2008],[2832534,2011],[2962294,2012],[324e4,2013],[3274408,2015],[3323565,2019],[3534175,2022],[3860281,2023],[4143129,2024],[4401242,2025],[4841367,2026],[5961600,2027],[6137912,2028],[6561855,2029],[7100891,2030],[7468792,9010],[7668600,9030],[7812476,9040],[8010981,9050],[8073833,9070],[8555825,9080],[8945245,9090],[9611377,9100],[9625129,9111],[9866422,9122]],polkadot:[[0,0],[29231,1],[188836,5],[199405,6],[214264,7],[244358,8],[303079,9],[314201,10],[342400,11],[443963,12],[528470,13],[687751,14],[746085,15],[787923,16],[799302,17],[1205128,18],[1603423,23],[1733218,24],[2005673,25],[2436698,26],[3613564,27],[3899547,28],[4345767,29],[4876134,30],[5661442,9050],[6321619,9080],[6713249,9090],[7217907,9100],[7229126,9110],[7560558,9122]],westend:[[214356,4],[392764,7],[409740,8],[809976,20],[877581,24],[879238,25],[889472,26],[902937,27],[932751,28],[991142,29],[1030162,31],[1119657,32],[1199282,33],[1342534,34],[1392263,35],[1431703,36],[1433369,37],[1490972,41],[2087397,43],[2316688,44],[2549864,45],[3925782,46],[3925843,47],[4207800,48],[4627944,49],[5124076,50],[5478664,900],[5482450,9e3],[5584305,9010],[5784566,9030],[5879822,9031],[5896856,9032],[5897316,9033],[6117927,9050],[6210274,9070],[6379314,9080],[6979141,9090],[7568453,9100],[7766394,9111],[7911691,9120],[7968866,9121],[7982889,9122]]},By={westend:{genesisHash:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"]}};function Xy(t,e){const r=e.filter(((t,r)=>{const n=e[r-1];return 0!==r&&(t[0]<=n[0]||t[1]<=n[1])}));return _(!r.length,(()=>`${t}: Mismatched upgrade ordering: ${Tu(r)}`)),e}const Vy=Object.entries(Iy).map((function([t,e]){const r=Ry.find((e=>e.network===t))||By[t];return _(r,(()=>`Unable to find info for chain ${t}`)),{genesisHash:es(r.genesisHash[0]),network:t,versions:Xy(t,e).map((([t,e])=>({blockNumber:new ps(t),specVersion:new ps(e)})))}})),Cy=Vy;function Wy(t=[],e){return t.filter((({minmax:[t,r]})=>(G(t)||U(t)||e>=t)&&(G(r)||U(r)||e<=r))).reduce(((t,{types:e})=>Fi(t,e)),{})}function qy({knownTypes:t},e,r,n){var i,s,o,a,u,h,c,l;const d=e.toString(),f=r.toString(),p=bs(n).toNumber();return Fi({},Wy(jy[f],p),Wy(hy[d],p),Wy(null===(i=t.typesBundle)||void 0===i||null===(s=i.spec)||void 0===s||null===(o=s[f])||void 0===o?void 0:o.types,p),Wy(null===(a=t.typesBundle)||void 0===a||null===(u=a.chain)||void 0===u||null===(h=u[d])||void 0===h?void 0:h.types,p),null===(c=t.typesSpec)||void 0===c?void 0:c[f],null===(l=t.typesChain)||void 0===l?void 0:l[d],t.types)}function Zy({knownTypes:t},e,r){var n,i,s,o,a,u;const h=e.toString(),c=r.toString();return Fi({},null===(n=t.typesBundle)||void 0===n||null===(i=n.spec)||void 0===i||null===(s=i[c])||void 0===s?void 0:s.rpc,null===(o=t.typesBundle)||void 0===o||null===(a=o.chain)||void 0===a||null===(u=a[h])||void 0===u?void 0:u.rpc)}const Fy=[["<",">"],["<",","],[",",">"],["(",")"],["(",","],[",",","],[",",")"]];function Uy(t,e){const r=e.toString(),n=t.findIndex((({def:t})=>t.HistoricMetaCompat===r));return-1!==n?n:t.push({def:{HistoricMetaCompat:r}})-1}function Gy(t,e){return t.push({def:{Tuple:e}})-1}function _y(t,e,r,n){return r.push({def:{Variant:{variants:n}},path:[`pallet_${t.toString()}`,"pallet",e]})-1}function Ky(t,e){e.forEach((e=>{const r=Object.keys(t).find((t=>e.eq(t)));if(r)e.setOverride(t[r]);else{const r=e.toString(),n=Object.entries(t).reduce(((t,[e,r])=>Fy.reduce(((t,[n,i])=>t.replace(`${n}${e}${i}`,`${n}${r}${i}`)),t)),r);r!==n&&e.setOverride(n)}}))}function Jy(t,e,r,n,i){const s=n.map((({args:r,docs:n,name:s},o)=>(Ky(i,r.map((({type:t})=>t))),e.createType("SiVariant",{docs:n,fields:r.map((({name:r,type:n})=>e.createType("SiField",{name:r,type:Uy(t,n)}))),index:o,name:s}))));return e.createType("PalletCallMetadataV14",{type:_y(r,"Call",t,s)})}function Qy(t,e,r,n){return r.map((({docs:r,name:i,type:s,value:o})=>(Ky(n,[s]),e.createType("PalletConstantMetadataV14",{docs:r,name:i,type:Uy(t,s),value:o}))))}function $y(t,e,r,n,i){const s=n.map((({docs:t,name:r},n)=>e.createType("SiVariant",{docs:t,fields:[],index:n,name:r})));return e.createType("PalletErrorMetadataV14",{type:_y(r,"Error",t,s)})}function tv(t,e,r,n,i){const s=n.map((({args:r,docs:n,name:s},o)=>(Ky(i,r),e.createType("SiVariant",{docs:n,fields:r.map((r=>e.createType("SiField",{type:Uy(t,r)}))),index:o,name:s}))));return e.createType("PalletEventMetadataV14",{type:_y(r,"Event",t,s)})}function ev(t,e,r,{hashers:n,keys:i,value:s}){return Ky(r,[s,...Array.isArray(i)?i:[i]]),e.createType("StorageEntryTypeV14",{Map:{hashers:n,key:1===n.length?Uy(t,i[0]):Gy(t,i.map((e=>Uy(t,e)))),value:Uy(t,s)}})}function rv(t,e,{items:r,prefix:n},i){return e.createType("PalletStorageMetadataV14",{items:r.map((({docs:r,fallback:n,modifier:s,name:o,type:a})=>{let u;if(a.isPlain){const r=a.asPlain;Ky(i,[r]),u=e.createType("StorageEntryTypeV14",{Plain:Uy(t,r)})}else if(a.isMap){const r=a.asMap;u=ev(t,e,i,{hashers:[r.hasher],keys:[r.key],value:r.value})}else if(a.isDoubleMap){const r=a.asDoubleMap;u=ev(t,e,i,{hashers:[r.hasher,r.key2Hasher],keys:[r.key1,r.key2],value:r.value})}else{const r=a.asNMap;u=ev(t,e,i,{hashers:r.hashers,keys:r.keyVec,value:r.value})}return e.createType("StorageEntryMetadataV14",{docs:r,fallback:n,modifier:s,name:o,type:u})})),prefix:n})}function nv(t,e,r,{calls:n,constants:i,errors:s,events:o,storage:a}){const u=function({knownTypes:t},e){var r;return Fi({},cy[e],null===(r=t.typesAlias)||void 0===r?void 0:r[e])}(e,kh(r.name));return e.createType("PalletMetadataV14",{calls:n&&Jy(t,e,r.name,n,u),constants:Qy(t,e,i,u),errors:s&&$y(t,e,r.name,s),events:o&&tv(t,e,r.name,o,u),index:r.index,name:r.name,storage:a&&rv(t,e,a,u)})}function iv(t,e,r){const n=[];Uy(n,"Null"),function(t,e,r){t.register({OriginCaller:{_enum:e.map(((t,e)=>[t.name.toString(),r>=12?t.index.toNumber():e])).sort(((t,e)=>t[1]-e[1])).reduce(((t,[e,r])=>{for(let e=Object.keys(t).length;e<r;e++)t[`Empty${e}`]="Null";return t[e]=uy[e]||"Null",t}),{})}})}(t,e.modules,r);const i=function(t,{signedExtensions:e,version:r}){return t.createType("ExtrinsicMetadataV14",{signedExtensions:e.map((t=>({identifier:t,type:0}))),type:0,version:r})}(t,e.extrinsic),s=e.modules.map((e=>nv(n,t,e,{calls:e.calls.unwrapOr(null),constants:e.constants,errors:e.errors.length?e.errors:null,events:e.events.unwrapOr(null),storage:e.storage.unwrapOr(null)})));return t.createType("MetadataV14",{extrinsic:i,lookup:{types:n.map(((e,r)=>t.createType("PortableType",{id:r,type:e})))},pallets:s})}function sv(t,e,r){return e}const ov=1635018093;class av extends ff{constructor(t,e){super(t,e),this.isEmpty||_(this.eq(ov),(()=>`MagicNumber mismatch: expected ${t.createType("u32",ov).toHex()}, found ${this.toHex()}`))}}function uv(t){const e=t.map((t=>t.toString().trim())),r=e.findIndex((t=>!t.length));return-1===r?e:e.slice(0,r)}function hv(t,{extrinsic:e,lookup:r,pallets:n}){return t.createType("MetadataLatest",{extrinsic:e,lookup:{types:r.types.map((({id:e,type:r})=>t.createType("PortableType",{id:e,type:{...r,docs:uv(r.docs)}})))},pallets:n.map((({calls:e,index:r,name:n})=>({calls:t.createType("Option<PalletCallMetadataLatest>",e.unwrapOr(null)),index:r,name:n})))}).toJSON()}function cv(t,e=[]){for(let r=0;r<t.length;r++){const n=t[r];Array.isArray(n)?cv(n,e):e.push(n)}return[...new Set(e)]}let lv;function dv(...t){return!t.some((t=>0!==t))}!function(t){t[t.BTreeMap=0]="BTreeMap",t[t.BTreeSet=1]="BTreeSet",t[t.Compact=2]="Compact",t[t.DoNotConstruct=3]="DoNotConstruct",t[t.Enum=4]="Enum",t[t.HashMap=5]="HashMap",t[t.Int=6]="Int",t[t.Linkage=7]="Linkage",t[t.Null=8]="Null",t[t.Option=9]="Option",t[t.Plain=10]="Plain",t[t.Range=11]="Range",t[t.Result=12]="Result",t[t.Set=13]="Set",t[t.Si=14]="Si",t[t.Struct=15]="Struct",t[t.Tuple=16]="Tuple",t[t.UInt=17]="UInt",t[t.Vec=18]="Vec",t[t.VecFixed=19]="VecFixed",t[t.WrapperOpaque=20]="WrapperOpaque"}(lv||(lv={}));const fv=["_alias","_fallback"];function pv(t){return F(t)?t.toString():JSON.stringify(t)}function mv(t,e,r){return t.info=lv.Enum,Array.isArray(e)?t.sub=e.map(((t,e)=>({index:e,info:lv.Plain,name:t,type:"Null"}))):!function(t){const e=Object.values(t);return!e.some((t=>Qo(t)))||(_(e.every((t=>Qo(t)&&t>=0&&t<=255)),"Invalid number-indexed enum definition"),!1)}(e)?t.sub=Object.entries(e).map((([t,e])=>({index:e,info:lv.Plain,name:t,type:"Null"}))):t.sub=Object.entries(e).map((([t,e],n)=>Fi({},xv(pv(e||"Null"),{name:t},r),{index:n}))),t}function yv(t,e,r){const n=xv(r);return t.sub=[n,n],t}function vv(t,e,r,n){return t.sub=0===r.length?[]:function(t){let[e,r,n,i,s]=[0,0,0,0,0];const o=[],a=a=>{dv(e,r,n,i)&&(o.push(t.substr(s,a-s).trim()),s=a+1)};for(let s=0;s<t.length;s++)switch(t[s]){case",":a(s);break;case"<":e++;break;case">":e--;break;case"[":r++;break;case"]":r--;break;case"{":n++;break;case"}":n--;break;case"(":i++;break;case")":i--}return _(dv(e,r,n,i),(()=>`Invalid definition (missing terminators) found in ${t}`)),o.push(t.substr(s,t.length-s).trim()),o}(r).map((t=>xv(t,{},n))),t}function gv(t,e,r,n){const[i,s]=e.substr(n.length+1,e.length-n.length-1-1).split(","),o=parseInt(i.trim(),10);return _(o<=8192&&o%8==0,(()=>`${e}: Only support for ${n}<bitLength>, where length <= 8192 and a power of 8, found ${o}`)),t.displayName=s,t.length=o,t}function bv(t,[e,r]){return t.substr(0,e.length)===e&&t.substr(-1*r.length)===r}const wv=[["[","]",lv.VecFixed,function(t,e,r,n){const i=e.length-1;let s=-1,o=0;for(let t=1;t<i&&-1===s;t++)";"===e[t]&&0===o?s=t:["[","(","<"].includes(e[t])?o++:["]",")",">"].includes(e[t])&&o--;_(-1!==s,(()=>`${e}: Unable to extract location of ';'`));const a=e.substr(1,s-1),[u,h]=e.substr(s+1,i-s-1).split(";"),c=parseInt(u.trim(),10);return _(c<=256,(()=>`${e}: Only support for [Type; <length>], where length <= 256`)),t.displayName=h,t.length=c,t.sub=xv(a,{},n),t}],["{","}",lv.Struct,function(t,e,r,n){const i=JSON.parse(e),s=Object.keys(i);return 1===s.length&&"_enum"===s[0]?mv(t,i[s[0]],n):1===s.length&&"_set"===s[0]?function(t,e){return t.info=lv.Set,t.length=e._bitLength,t.sub=Object.entries(e).filter((([t])=>!t.startsWith("_"))).map((([t,e])=>({index:e,info:lv.Plain,name:t,type:"Null"}))),t}(t,i[s[0]]):(t.alias=i._alias?new Map(Object.entries(i._alias)):void 0,t.fallbackType=i._fallback,t.sub=s.filter((t=>!fv.includes(t))).map((t=>xv(pv(i[t]),{name:t},n))),t)}],["(",")",lv.Tuple,vv],["BTreeMap<",">",lv.BTreeMap,vv],["HashMap<",">",lv.HashMap,vv],["Int<",">",lv.Int,function(t,e,r){return gv(t,e,0,"Int")}],["Range<",">",lv.Tuple,yv],["RangeInclusive<",">",lv.Tuple,yv],["Result<",">",lv.Result,vv],["UInt<",">",lv.UInt,function(t,e,r){return gv(t,e,0,"UInt")}],["DoNotConstruct<",">",lv.DoNotConstruct,function(t,e,r){const n="DoNotConstruct".length;return t.displayName=e.substr(n+1,e.length-n-1-1),t}]],Mv=[["BTreeSet<",">",lv.BTreeSet],["Compact<",">",lv.Compact],["Linkage<",">",lv.Linkage],["Option<",">",lv.Option],["Vec<",">",lv.Vec],["WrapperOpaque<",">",lv.WrapperOpaque]];function kv(t,[e,r]){return t.substr(e.length,t.length-e.length-r.length)}function xv(t,{displayName:e,name:r}={},n=0){const i=xp(t),s={displayName:e,info:lv.Plain,name:r,type:i};_(64!=++n,"getTypeDef: Maximum nested limit reached");const o=wv.find((t=>bv(i,t)));if(o)return s.info=o[2],o[3](s,i,kv(i,o),n);const a=Mv.find((t=>bv(i,t)));return a&&(s.info=a[2],s.sub=xv(kv(i,a),{},n)),s}function Pv(t){return t.map((t=>{const e=xv(t);switch(e.info){case lv.Plain:return e.lookupName||e.type;case lv.BTreeSet:case lv.Compact:case lv.Option:case lv.Vec:case lv.VecFixed:case lv.WrapperOpaque:return function({lookupName:t,type:e}){return Pv([t||e])}(e.sub);case lv.BTreeMap:case lv.Enum:case lv.HashMap:case lv.Result:case lv.Set:case lv.Struct:case lv.Tuple:return function(t){return Pv(t.map((({lookupName:t,type:e})=>t||e)))}(e.sub);default:throw new Error(`Unhandled: Unable to create and validate type from ${t} (info=${lv[e.info]})`)}}))}const Lv=xu("metadata");function Tv(t,e){return e.map((({type:e})=>t.getTypeDef(e).type))}function Sv(t,e){return t.getSiType(e).def.asVariant.variants.map((({fields:e})=>Tv(t,e)))}function Av(t,e,r){return function(t,e,r){const n=cv(Pv(r)).filter((e=>!t.hasType(e))).sort();if(0!==n.length){const t=`Unknown types found, no types for ${n.join(", ")}`;if(e)throw new Error(t);Lv.warn(t)}return r}(t,r,cv(function({lookup:t,pallets:e}){return e.reduce(((e,{calls:r,constants:n,events:i,storage:s})=>(e.push([Tv(t,n)]),r.isSome&&e.push(Sv(t,r.unwrap().type)),i.isSome&&e.push(Sv(t,i.unwrap().type)),s.isSome&&e.push(s.unwrap().items.map((({type:e})=>{if(e.isPlain)return[t.getTypeDef(e.asPlain).type];const{hashers:r,key:n,value:i}=e.asMap;return 1===r.length?[t.getTypeDef(i).type,t.getTypeDef(n).type]:[t.getTypeDef(i).type,...t.getSiType(n).def.asTuple.map((e=>t.getTypeDef(e).type))]}))),e)),[])}(e)))}var Dv=rt("converted"),jv=rt("assertVersion"),Hv=rt("getVersion"),Ov=rt("metadata");class zv extends Ll{constructor(t,e){super(t,{magicNumber:av,metadata:"MetadataAll"},e),Object.defineProperty(this,Dv,{writable:!0,value:new Map}),Object.defineProperty(this,jv,{writable:!0,value:t=>(_(this.version<=t,(()=>`Cannot convert metadata from version ${this.version} to ${t}`)),this.version===t)}),Object.defineProperty(this,Hv,{writable:!0,value:(t,e)=>{const r=`asV${t}`,n="latest"===t?"asV14":"asV"+(t-1);return"latest"!==t&&tt(this,jv)[jv](t)?tt(this,Ov)[Ov]()[r]:(tt(this,Dv)[Dv].has(t)||tt(this,Dv)[Dv].set(t,e(this.registry,this[n],this.version)),tt(this,Dv)[Dv].get(t))}}),Object.defineProperty(this,Ov,{writable:!0,value:()=>this.get("metadata")})}get asCallsOnly(){return new zv(this.registry,{magicNumber:this.magicNumber,metadata:this.registry.createType("MetadataAll",hv(this.registry,this.asLatest),14)})}get asV9(){return tt(this,jv)[jv](9),tt(this,Ov)[Ov]().asV9}get asV10(){return tt(this,Hv)[Hv](10,iy)}get asV11(){return tt(this,Hv)[Hv](11,sy)}get asV12(){return tt(this,Hv)[Hv](12,oy)}get asV13(){return tt(this,Hv)[Hv](13,ay)}get asV14(){return tt(this,Hv)[Hv](14,iv)}get asLatest(){return tt(this,Hv)[Hv]("latest",sv)}get magicNumber(){return this.get("magicNumber")}get version(){return tt(this,Ov)[Ov]().index}getUniqTypes(t){return Av(this.registry,this.asLatest,t)}toJSON(){return this.asLatest,super.toJSON()}}const Nv=new Uint8Array([109,101,116,97,9]),Ev=new Uint8Array;function Yv(t=Ev){if($i(t))return Yv(ds(t));if(us(t))return 0===t.length?Nv:t;throw new Error("Invalid type passed to Metadata constructor")}function Rv(t,e){if(us(e)||!e||$i(e)){const r=Yv(e),n=r[4];try{return new zv(t,r)}catch(e){if(9===n)return r[4]=10,Rv(t,r);throw e}}return new zv(t,e)}class Iv extends zv{constructor(t,e){super(t,Rv(t,e))}}const Bv=t=>t.toString(),Xv=["BTreeMap","BTreeSet","Compact","HashMap","Option","Result","Vec"];function Vv(t,e,r){const{info:n,sub:i}=e;switch(n){case lv.BTreeMap:case lv.BTreeSet:case lv.Compact:case lv.HashMap:case lv.Linkage:case lv.Option:case lv.Result:case lv.Vec:case lv.WrapperOpaque:return function(t,e,r=Bv){return`${t}${e?`<${(Array.isArray(e)?e:[e]).map(r).join(", ")}>`:""}`}(r,i,(e=>Zv(t,e)))}throw new Error(`Unable to encode ${Tu(e)} with params`)}function Cv(t,e,r,n){const i=e.map((({name:t})=>t));_(i.every((t=>!!t)),(()=>`Subtypes does not have consistent names, ${i.join(", ")}`));const s=Fi({},n);for(let r=0;r<e.length;r++){const n=e[r];s[n.name]=Zv(t,n)}return Tu(r?{_enum:s}:s)}const Wv={[lv.BTreeMap]:(t,e)=>Vv(t,e,"BTreeMap"),[lv.BTreeSet]:(t,e)=>Vv(t,e,"BTreeSet"),[lv.Compact]:(t,e)=>Vv(t,e,"Compact"),[lv.DoNotConstruct]:(t,{displayName:e,lookupIndex:r,lookupName:n})=>`DoNotConstruct<${n||e||(G(r)?"Unknown":t.createLookupType(r))}>`,[lv.Enum]:(t,{sub:e})=>(_(e&&Array.isArray(e),"Unable to encode Enum type"),e.every((({type:t})=>"Null"===t))?Tu({_enum:e.map((({name:t},e)=>`${t||`Empty${e}`}`))}):Cv(t,e,!0)),[lv.HashMap]:(t,e)=>Vv(t,e,"HashMap"),[lv.Int]:(t,{length:e=32})=>`Int<${e}>`,[lv.Linkage]:(t,e)=>Vv(t,e,"Linkage"),[lv.Null]:(t,e)=>"Null",[lv.Option]:(t,e)=>Vv(t,e,"Option"),[lv.Plain]:(t,{displayName:e,type:r})=>e||r,[lv.Range]:(t,e)=>Vv(t,e,e.type.includes("RangeInclusive")?"RangeInclusive":"Range"),[lv.Result]:(t,e)=>Vv(t,e,"Result"),[lv.Set]:(t,{length:e=8,sub:r})=>(_(r&&Array.isArray(r),"Unable to encode Set type"),Tu({_set:r.reduce(((t,{index:e,name:r},n)=>Fi(t,{[`${r||`Unknown${e||n}`}`]:e||n})),{_bitLength:e||8})})),[lv.Si]:(t,{lookupName:e,type:r})=>e||r,[lv.Struct]:(t,{alias:e,sub:r})=>(_(r&&Array.isArray(r),"Unable to encode Struct type"),Cv(t,r,!1,e?{_alias:[...e.entries()].reduce(((t,[e,r])=>Fi(t,{[e]:r})),{})}:{})),[lv.Tuple]:(t,{sub:e})=>(_(e&&Array.isArray(e),"Unable to encode Tuple type"),`(${e.map((e=>Zv(t,e))).join(",")})`),[lv.UInt]:(t,{length:e=32})=>`UInt<${e}>`,[lv.Vec]:(t,e)=>Vv(t,e,"Vec"),[lv.VecFixed]:(t,{length:e,sub:r})=>(_(Qo(e)&&!G(r)&&!Array.isArray(r),"Unable to encode VecFixed type"),`[${r.type};${e}]`),[lv.WrapperOpaque]:(t,e)=>Vv(t,e,"WrapperOpaque")};function qv(t,e,r=!0){return r&&e.lookupName?e.lookupName:Wv[e.info](t,e)}function Zv(t,e){return e.displayName&&!Xv.some((t=>e.displayName===t))?e.displayName:qv(t,e)}function Fv(t,e){return Fi({},e,{type:qv(t,e,!1)})}const Uv={toNumber:()=>-1},Gv={Char:"u32",Str:"Text"},_v=tg(["*_runtime_*::Call","*_runtime_*::Event","pallet_democracy::vote::Vote","pallet_identity::types::Data","sp_core::crypto::AccountId32","sp_runtime::generic::era::Era","sp_runtime::multiaddress::MultiAddress","account::AccountId20","polkadot_runtime_common::claims::EthereumAddress","primitive_types::*","sp_arithmetic::per_things::*","ink_env::types::*"]),Kv=tg(["pallet_identity::types::BitFlags"]),Jv=["BoundedBTreeMap","BoundedVec","Box","BTreeMap","Cow","Result","Option","WeakBoundedVec","WrapperOpaque"],Qv=["entries","hash","keys","new","size"],$v=["generic","misc","pallet","traits","types"];function tg(t){return t.map((t=>t.split("::")))}function eg({path:t}){return rg(t).join("::")}function rg(t){return t.map((t=>t.toString()))}function ng(t,e){return t.length===e.length&&t.every(((t,r)=>{const n=e[r].toString();if("*"===t||t===n)return!0;if(t.includes("*")&&t.includes("_")&&n.includes("_")){let e=t.split("_"),r=n.split("_");if("*"===e[0]){const t=r.indexOf(e[1]);-1!==t&&(e=e.slice(1),r=r.slice(t))}return 2===e.length&&"*"===e[1]&&e[0]===r[0]||ng(e,r)}return!1}))}function ig(t,{id:e,type:{params:r,path:n}}){if(!n.length||Jv.includes(n[n.length-1].toString()))return null;const i=n.map((t=>rd(t))).filter(((t,e)=>{const r=t.toLowerCase();return!(1===e&&$v.includes(r)||e!==n.length-1&&r===n[e+1].toLowerCase())}));let s=i.join("");if(2===i.length&&"RawOrigin"===i[1]&&2===r.length&&r[1].type.isSome){const e=t[r[1].type.unwrap().toNumber()];2===e.type.path.length&&(s=`${s}${e.type.path[1].toString()}`)}return[e.toNumber(),s,r]}function sg(t,e){const r=[],n={};for(let t=0;t<e.length;t++){const i=e[t],s=ig(e,e[t]);s&&r.push(s),n[i.id.toNumber()]=i}const i=function(t,e){const r={};return e.map((([n,i,s])=>{if(!i)return null;const o=e.filter((([,t])=>i===t));if(!o.some((([t,,e])=>n!==t&&(s.length!==e.length||s.some(((t,r)=>!t.name.eq(e[r].name)||t.type.unwrapOr(Uv).toNumber()!==e[r].type.unwrapOr(Uv).toNumber())))))||!o[0][2].length)return[n,i,s];const a=o[0][2].findIndex((({type:t},e)=>o.every((([,,t])=>t[e].type.isSome))&&o.every((([,,r],n)=>0===n||!r[e].type.eq(t)))));if(-1===a)return[n,i,s];const u=new Array(o.length);for(let e=0;e<o.length;e++){const[r,n,i]=o[e],{def:h,path:c}=t.getSiType(i[a].type.unwrap());if(!h.isPrimitive&&!c.length)return null;u[e]=[r,h.isPrimitive?`${n}${h.asPrimitive.toString()}`:`${n}${c[c.length-1].toString()}`,s]}if(function(t){for(let e=0;e<t.length;e++){const[r,n]=t[e];for(let e=0;e<t.length;e++){const[i,s]=t[e];if(r!==i&&n===s)return!1}}return!0}(u)){for(let t=0;t<u.length;t++){const[e,n]=u[t];r[e]=n}return[n,i,s]}return null})).filter((t=>!!t)).map((([t,e,n])=>[t,r[t]||e,n]))}(t,r),s={},o={},a={};for(let e=0;e<i.length;e++){const[r,n,u]=i[e];o[r]=n,s[n]=t.registry.createLookupType(r),a[n]=u}return[n,s,o,a]}var og=rt("names"),ag=rt("typeDefs"),ug=rt("types"),hg=rt("createSiDef"),cg=rt("getLookupId"),lg=rt("extract"),dg=rt("extractArray"),fg=rt("extractBitSequence"),pg=rt("extractCompact"),mg=rt("extractComposite"),yg=rt("extractCompositeSet"),vg=rt("extractFields"),gg=rt("extractFieldsAlias"),bg=rt("extractHistoric"),wg=rt("extractPrimitive"),Mg=rt("extractAliasPath"),kg=rt("extractSequence"),xg=rt("extractTuple"),Pg=rt("extractVariant"),Lg=rt("extractVariantEnum");class Tg extends Ll{constructor(t,e){super(t,{types:"Vec<PortableType>"},e),Object.defineProperty(this,Lg,{value:Wg}),Object.defineProperty(this,Pg,{value:Cg}),Object.defineProperty(this,xg,{value:Vg}),Object.defineProperty(this,kg,{value:Xg}),Object.defineProperty(this,Mg,{value:Bg}),Object.defineProperty(this,wg,{value:Ig}),Object.defineProperty(this,bg,{value:Rg}),Object.defineProperty(this,gg,{value:Yg}),Object.defineProperty(this,vg,{value:Eg}),Object.defineProperty(this,yg,{value:Ng}),Object.defineProperty(this,mg,{value:zg}),Object.defineProperty(this,pg,{value:Og}),Object.defineProperty(this,fg,{value:Hg}),Object.defineProperty(this,dg,{value:jg}),Object.defineProperty(this,lg,{value:Dg}),Object.defineProperty(this,cg,{value:Ag}),Object.defineProperty(this,hg,{value:Sg}),Object.defineProperty(this,og,{writable:!0,value:void 0}),Object.defineProperty(this,ag,{writable:!0,value:{}}),Object.defineProperty(this,ug,{writable:!0,value:void 0});const[r,n,i,s]=sg(this,this.types);tt(this,og)[og]=i,tt(this,ug)[ug]=r,function(t,e,r,n){if(t.registry.register(e),n.SpRuntimeUncheckedExtrinsic){const[e,,i]=n.SpRuntimeUncheckedExtrinsic,s=t.getSiType(e.type.unwrap()),o=eg(t.getSiType(i.type.unwrap()));let a=eg(s);const u="sp_runtime::multiaddress::MultiAddress"===a;if(u){const[e]=s.params;a=eg(t.getSiType(e.type.unwrap()))}t.registry.register({AccountId:["sp_core::crypto::AccountId32"].includes(a)?"AccountId32":["account::AccountId20","primitive_types::H160"].includes(a)?"AccountId20":"AccountId32",Address:u?"MultiAddress":"AccountId",ExtrinsicSignature:["sp_runtime::MultiSignature"].includes(o)?"MultiSignature":r[i.type.unwrap().toNumber()]||"MultiSignature"})}}(this,n,i,s)}get names(){return Object.values(tt(this,og)[og])}get types(){return this.get("types")}getName(t){return tt(this,og)[og][tt(this,cg)[cg](t)]}getSiType(t){const e=(tt(this,ug)[ug]||this.types)[tt(this,cg)[cg](t)];return _(e,(()=>`PortableRegistry: Unable to find type with lookupId ${t.toString()}`)),e.type}getTypeDef(t){const e=tt(this,cg)[cg](t);if(!tt(this,ag)[ag][e]){const r=tt(this,og)[og][e],n={info:lv.DoNotConstruct,lookupIndex:e,lookupName:r,type:this.registry.createLookupType(e)};r&&(tt(this,ag)[ag][e]=n);const i=tt(this,lg)[lg](this.getSiType(t),e);r||(tt(this,ag)[ag][e]=n),Object.keys(i).forEach((t=>{("lookupName"!==t||i[t])&&(tt(this,ag)[ag][e][t]=i[t])})),i.info===lv.Plain&&(tt(this,ag)[ag][e].lookupNameRoot=tt(this,ag)[ag][e].lookupName,delete tt(this,ag)[ag][e].lookupName)}return tt(this,ag)[ag][e]}}function Sg(t){const e=this.getTypeDef(t),r=t.toNumber();return[lv.DoNotConstruct,lv.Enum,lv.Struct].includes(e.info)&&e.lookupName?{docs:e.docs,info:lv.Si,lookupIndex:r,lookupName:tt(this,og)[og][r],type:this.registry.createLookupType(t)}:e}function Ag(t){return F(t)?(_(this.registry.isLookupType(t),(()=>`PortableRegistry: Expected a lookup string type, found ${t}`)),parseInt(t.replace("Lookup",""),10)):Qo(t)?t:t.toNumber()}function Dg(t,e){const r=[...t.path].join("::");let n;const i=(s=t.path).length&&_v.some((t=>ng(t,s)))?s[s.length-1].toString():null;var s;try{if(i)n=tt(this,Mg)[Mg](e,i);else if(t.def.isArray)n=tt(this,dg)[dg](e,t.def.asArray);else if(t.def.isBitSequence)n=tt(this,fg)[fg](e,t.def.asBitSequence);else if(t.def.isCompact)n=tt(this,pg)[pg](e,t.def.asCompact);else if(t.def.isComposite)n=tt(this,mg)[mg](e,t,t.def.asComposite);else if(t.def.isHistoricMetaCompat)n=tt(this,bg)[bg](e,t.def.asHistoricMetaCompat);else if(t.def.isPrimitive)n=tt(this,wg)[wg](e,t);else if(t.def.isSequence)n=tt(this,kg)[kg](e,t.def.asSequence);else if(t.def.isTuple)n=tt(this,xg)[xg](e,t.def.asTuple);else{if(!t.def.isVariant)throw new Error(`No SiTypeDef handler for ${t.def.toString()}`);n=tt(this,Pg)[Pg](e,t,t.def.asVariant)}}catch(n){throw new Error(`PortableRegistry: ${e}${r?` (${r})`:""}: Error extracting ${Tu(t)}: ${n.message}`)}return Fi({docs:rg(t.docs),namespace:r},n)}function jg(t,{len:e,type:r}){return _(!e||e.toNumber()<=256,"Only support for [Type; <length>], where length <= 256"),Fv(this.registry,{info:lv.VecFixed,length:e.toNumber(),sub:tt(this,hg)[hg](r)})}function Hg(t,{bitOrderType:e,bitStoreType:r}){const n=tt(this,hg)[hg](e),i=tt(this,hg)[hg](r);return _(["bitvec::order::Lsb0","bitvec::order::Msb0"].includes(n.namespace||""),(()=>`Unexpected bitOrder found as ${n.namespace||"<unknown>"}`)),_(i.info===lv.Plain&&"u8"===i.type,(()=>`Only u8 bitStore is currently supported, found ${i.type}`)),{info:lv.Plain,type:"BitVec"}}function Og(t,{type:e}){return Fv(this.registry,{info:lv.Compact,sub:tt(this,hg)[hg](e)})}function zg(t,{params:e,path:r},{fields:n}){const i=r[0].toString();if(1===r.length&&"BTreeMap"===i)return Fv(this.registry,{info:lv.BTreeMap,sub:e.map((({type:t})=>tt(this,hg)[hg](t.unwrap())))});if(["Range","RangeInclusive"].includes(i))return Fv(this.registry,{info:lv.Range,sub:n.map((({name:t,type:e,typeName:r},n)=>Fi({name:t.isSome?t.unwrap().toString():["start","end"][n]},tt(this,hg)[hg](e),r.isSome?{typeName:xp(r.unwrap())}:null)))});if(r.length){if("WrapperOpaque"===r[r.length-1].toString())return Fv(this.registry,{info:lv.WrapperOpaque,sub:tt(this,hg)[hg](e[0].type.unwrap())});if("WrapperKeepOpaque"===r[r.length-1].toString())return{info:lv.Plain,type:"Bytes"}}return Kv.some((t=>ng(t,r)))?tt(this,yg)[yg](t,e,n):tt(this,vg)[vg](t,n)}function Ng(t,e,r){return _(1===e.length&&1===r.length,"Set handling expects param/field as single entries"),Fv(this.registry,{info:lv.Set,length:this.registry.createType(this.registry.createLookupType(r[0].type)).bitLength(),sub:this.getSiType(e[0].type.unwrap()).def.asVariant.variants.map((({index:t,name:e})=>({index:t.toNumber(),info:lv.Plain,name:e.toString(),type:"Null"})))})}function Eg(t,e){let r=!0,n=!0;for(let t=0;t<e.length;t++){const{name:i}=e[t];r=r&&i.isSome,n=n&&i.isNone}if(_(n||r,"Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)"),0===e.length)return{info:lv.Null,type:"Null"};if(n&&1===e.length){const r=tt(this,hg)[hg](e[0].type);return Fi({},r,-1===t?{}:{lookupIndex:t,lookupName:tt(this,og)[og][t],lookupNameRoot:r.lookupName},e[0].typeName.isSome?{typeName:xp(e[0].typeName.unwrap())}:null)}const[i,s]=tt(this,gg)[gg](e);return Fv(this.registry,Fi({info:n?lv.Tuple:lv.Struct},s.size?{alias:s}:null,-1===t?{}:{lookupIndex:t,lookupName:tt(this,og)[og][t]},{sub:i}))}function Yg(t){const e=new Map,r=new Array(t.length);for(let n=0;n<t.length;n++){const{docs:i,name:s,type:o,typeName:a}=t[n],u=tt(this,hg)[hg](o);if(s.isNone)r[n]=u;else{let t=kh(s.unwrap()),o=null;t.includes("#")?(o=t,t=o.replace(/#/g,"_")):Qv.includes(t)&&(o=t,t=`${t}_`),o&&e.set(t,o),r[n]=Fi({},u,{docs:rg(i),name:t},a.isSome?{typeName:xp(a.unwrap())}:null)}}return[r,e]}function Rg(t,e){return Fi({},xv(e),{displayName:e.toString(),isFromSi:!0})}function Ig(t,e){const r=e.def.asPrimitive.type.toString();return{info:lv.Plain,type:Gv[r]||r.toLowerCase()}}function Bg(t,e){return{info:lv.Plain,type:e}}function Xg(t,{type:e}){const r=tt(this,hg)[hg](e);return"u8"===r.type?{info:lv.Plain,type:"Bytes"}:Fv(this.registry,{info:lv.Vec,lookupIndex:t,lookupName:tt(this,og)[og][t],sub:r})}function Vg(t,e){if(0===e.length)return{info:lv.Null,type:"Null"};if(1===e.length)return this.getTypeDef(e[0]);const r=e.map((t=>tt(this,hg)[hg](t)));return Fv(this.registry,{info:lv.Tuple,lookupIndex:t,lookupName:tt(this,og)[og][t],sub:r})}function Cg(t,{params:e,path:r},{variants:n}){const i=r[0].toString();return"Option"===i?Fv(this.registry,{info:lv.Option,sub:tt(this,hg)[hg](e[0].type.unwrap())}):"Result"===i?Fv(this.registry,{info:lv.Result,sub:e.map((({type:t},e)=>Fi({name:["Ok","Error"][e]},tt(this,hg)[hg](t.unwrap()))))}):0===n.length?{info:lv.Null,type:"Null"}:tt(this,Lg)[Lg](t,n)}function Wg(t,e){const r=[];return[...e].sort(((t,e)=>t.index.cmp(e.index))).forEach((({fields:t,index:e,name:n})=>{const i=e.toNumber();for(;r.length!==i;)r.push({index:r.length,info:lv.Null,name:`__Unused${r.length}`,type:"Null"});r.push(Fi(tt(this,vg)[vg](-1,t),{index:e.toNumber(),name:n.toString()}))})),Fv(this.registry,{info:lv.Enum,lookupIndex:t,lookupName:tt(this,og)[og][t],sub:r})}function qg(t){return t instanceof Uint8Array||Array.isArray(t)}function Zg(t){return Z(t&&t.toU8a)}function Fg(t){return Zg(t)&&Qo(t.index)&&Zg(t.value)}function Ug(t){return Qo(t)||fu(t)||gs(t)}function Gg(t,e){if(Ug(t)&&Ug(e))return bs(t).cmp(bs(e));if(t instanceof Map&&e instanceof Map)return Gg(Array.from(t.values()),Array.from(e.values()));if(Fg(t)&&Fg(e))return Gg(t.index,e.index)||Gg(t.value,e.value);if(qg(t)&&qg(e))return function(t,e){let r=0;const n=Math.min(t.length,e.length);for(let i=0;i<n;++i)if(r=Gg(t[i],e[i]),0!==r)return r;return t.length-e.length}(t,e);if(Zg(t)&&Zg(e))return Gg(t.toU8a(!0),e.toU8a(!0));throw new Error(`Attempting to sort unrecognized values: ${Tu(t)} (typeof ${typeof t}) <-> ${Tu(e)} (typeof ${typeof e})`)}const _g=xu("Map");function Kg(t,e,r,n){const i=new Map;for(const[s,o]of n.entries()){const n=e.prototype instanceof zl||e.prototype instanceof Ll||e.prototype instanceof dd;try{i.set(s instanceof e?s:new e(t,n?JSON.parse(s):s),o instanceof r?o:new r(t,o))}catch(t){throw _g.error("Failed to decode key or value:",t.message),t}}return[i,0]}function Jg(t,e,r,n){const i=yl(t,e),s=yl(t,r);if(!n)return[new Map,0];if(us(n)||$i(n))return function(t,e,r,n){const i=new Map,[s,o]=Zl(n),a=o.toNumber(),u=[];for(let t=0;t<a;t++)u.push(e,r);const[h,c]=wl(t,n.subarray(s),u);for(let t=0;t<h.length;t+=2)i.set(h[t],h[t+1]);return[i,s+c]}(t,i,s,ds(n));if(n instanceof Map)return Kg(t,i,s,n);if(pu(n))return Kg(t,i,s,new Map(Object.entries(n)));throw new Error("Map: cannot decode type")}var Qg=rt("KeyClass"),$g=rt("ValClass"),tb=rt("type");class eb extends Map{constructor(t,e,r,n,i="HashMap"){const[s,o]=Jg(t,e,r,n);super("BTreeMap"===i?function(t){return new Map(Array.from(t.entries()).sort((([t],[e])=>Gg(t,e))))}(s):s),this.registry=void 0,this.createdAtHash=void 0,Object.defineProperty(this,Qg,{writable:!0,value:void 0}),Object.defineProperty(this,$g,{writable:!0,value:void 0}),this.initialU8aLength=void 0,Object.defineProperty(this,tb,{writable:!0,value:void 0}),this.registry=t,this.initialU8aLength=o,tt(this,Qg)[Qg]=yl(t,e),tt(this,$g)[$g]=yl(t,r),tt(this,tb)[tb]=i}get encodedLength(){let t=Hl(this.size).length;for(const[e,r]of this.entries())t+=r.encodedLength+e.encodedLength;return t}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.size}eq(t){return nl(this,t)}toHex(){return ta(this.toU8a())}toHuman(t){const e={};for(const[r,n]of this.entries())e[r.toString()]=n.toHuman(t);return e}toJSON(){const t={};for(const[e,r]of this.entries())t[e.toString()]=r.toJSON();return t}toRawType(){return`${tt(this,tb)[tb]}<${this.registry.getClassName(tt(this,Qg)[Qg])||new(tt(this,Qg)[Qg])(this.registry).toRawType()},${this.registry.getClassName(tt(this,$g)[$g])||new(tt(this,$g)[$g])(this.registry).toRawType()}>`}toString(){return Tu(this.toJSON())}toU8a(t){const e=new Array;t||e.push(Hl(this.size));for(const[r,n]of this.entries())e.push(r.toU8a(t),n.toU8a(t));return ml(...e)}}class rb extends eb{static with(t,e){return class extends rb{constructor(r,n){super(r,t,e,n,"BTreeMap")}}}}function nb(t,e){return t.size===e.length&&!e.some((e=>!t.has(e)))}const ib=xu("BTreeSet");function sb(t,e,r){if(!r)return[new Set,0];const n=yl(t,e);if(us(r)||$i(r))return function(t,e,r){const n=new Set,[i,s]=Zl(r),[o,a]=Ml(t,r,i,e,s.toNumber());for(let t=0;t<o.length;t++)n.add(o[t]);return[n,a+i]}(t,n,ds(r));if(Array.isArray(r)||r instanceof Set)return function(t,e,r){const n=new Set;return r.forEach((r=>{try{n.add(r instanceof e?r:new e(t,r))}catch(t){throw ib.error("Failed to decode key or value:",t.message),t}})),[n,0]}(t,n,r);throw new Error("BTreeSet: cannot decode type")}var ob=rt("ValClass");class ab extends Set{constructor(t,e,r){const[n,i]=sb(t,e,r);var s;super((s=n,new Set(Array.from(s).sort(Gg)))),this.registry=void 0,this.createdAtHash=void 0,this.initialU8aLength=void 0,Object.defineProperty(this,ob,{writable:!0,value:void 0}),this.registry=t,this.initialU8aLength=i,tt(this,ob)[ob]=yl(t,e)}static with(t){return class extends ab{constructor(e,r){super(e,t,r)}}}get encodedLength(){let t=Hl(this.size).length;for(const e of this.values())t+=e.encodedLength;return t}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.size}get strings(){return[...super.values()].map((t=>t.toString()))}eq(t){return e=this,r=t,Array.isArray(r)?nb(e,r):r instanceof Set?nb(e,[...r.values()]):!!pu(r)&&nb(e,Object.values(r));var e,r}toHex(){return ta(this.toU8a())}toHuman(t){const e=[];for(const r of this.values())e.push(r.toHuman(t));return e}toJSON(){const t=[];for(const e of this.values())t.push(e.toJSON());return t}toRawType(){return`BTreeSet<${this.registry.getClassName(tt(this,ob)[ob])||new(tt(this,ob)[ob])(this.registry).toRawType()}>`}toString(){return Tu(this.toJSON())}toU8a(t){const e=new Array;t||e.push(Hl(this.size));for(const r of this.values())e.push(r.toU8a(t));return ml(...e)}}var ub=rt("Type"),hb=rt("raw");class cb{constructor(t,e,r=0){this.registry=void 0,this.createdAtHash=void 0,this.initialU8aLength=void 0,Object.defineProperty(this,ub,{writable:!0,value:void 0}),Object.defineProperty(this,hb,{writable:!0,value:void 0}),this.registry=t,tt(this,ub)[ub]=yl(t,e);const[n,i]=cb.decodeCompact(t,tt(this,ub)[ub],r);this.initialU8aLength=i,tt(this,hb)[hb]=n}static with(t){return class extends cb{constructor(e,r){super(e,t,r)}}}static decodeCompact(t,e,r){if(r instanceof cb)return[new e(t,tt(r,hb)[hb]),0];if(r instanceof e)return[r,0];if(F(r)||Qo(r)||fu(r)||gs(r))return[new e(t,r),0];const[n,i]=Zl(r);return[new e(t,i),n]}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return tt(this,hb)[hb].isEmpty}bitLength(){return tt(this,hb)[hb].bitLength()}eq(t){return tt(this,hb)[hb].eq(t instanceof cb?tt(t,hb)[hb]:t)}toBigInt(){return tt(this,hb)[hb].toBigInt()}toBn(){return tt(this,hb)[hb].toBn()}toHex(t){return tt(this,hb)[hb].toHex(t)}toHuman(t){return tt(this,hb)[hb].toHuman(t)}toJSON(){return tt(this,hb)[hb].toJSON()}toNumber(){return tt(this,hb)[hb].toNumber()}toRawType(){return`Compact<${this.registry.getClassName(tt(this,ub)[ub])||tt(this,hb)[hb].toRawType()}>`}toString(){return tt(this,hb)[hb].toString()}toU8a(t){return Hl(tt(this,hb)[hb].toBn())}unwrap(){return tt(this,hb)[hb]}}class lb extends eb{static with(t,e){return class extends lb{constructor(r,n){super(r,t,e,n)}}}}var db=rt("rangeName");class fb extends El{constructor(t,e,r,n="Range"){super(t,{end:e,start:e},r),Object.defineProperty(this,db,{writable:!0,value:void 0}),tt(this,db)[db]=n}static with(t){return class extends fb{constructor(e,r){super(e,t,r)}}}get start(){return this[0]}get end(){return this[1]}toRawType(){return`${tt(this,db)[db]}<${this.start.toRawType()}>`}}class pb extends fb{constructor(t,e,r){super(t,e,r,"RangeInclusive")}static with(t){return class extends pb{constructor(e,r){super(e,t,r)}}}}class mb extends dd{constructor(t,e,r,n){super(t,{Ok:e,Err:r},n)}static with(t){return class extends mb{constructor(e,r){super(e,t.Ok,t.Err,r)}}}get asErr(){return _(this.isErr,"Cannot extract Err value from Ok result, check isErr first"),this.value}get asError(){return this.asErr}get asOk(){return _(this.isOk,"Cannot extract Ok value from Err result, check isOk first"),this.value}get isEmpty(){return this.isOk&&this.value.isEmpty}get isErr(){return!this.isOk}get isError(){return this.isErr}get isOk(){return 0===this.index}toRawType(){const t=this._toRawStruct();return`Result<${t.Ok},${t.Err}>`}}function yb(t,e){const r=new ps(0);for(let n=0;n<e.length;n++)r.ior(bs(t[e[n]]||0));return r}function vb(t,e){const r=bs(e),n=Object.keys(t),i=[];for(let e=0;e<n.length;e++){const s=n[e];r.and(bs(t[s])).eq(bs(t[s]))&&i.push(s)}const s=yb(t,i);return _(r.eq(s),(()=>`Set: Mismatch decoding '${r.toString()}', computed as '${s.toString()}' with ${i.join(", ")}`)),i}function gb(t,e=0,r){_(r%8==0,(()=>`Expected valid bitLength, power of 8, found ${r}`));const n=r/8;if(us(e))return 0===e.length?[]:vb(t,ql(e.subarray(0,n),{isLe:!0}));if(F(e))return gb(t,ds(e),n);if(e instanceof Set||Array.isArray(e)){return function(t,e){const r=new Array(e.length);for(let n=0;n<e.length;n++){const i=e[n];_(!G(t[i]),(()=>`Set: Invalid key '${i}' passed to Set, allowed ${Object.keys(t).join(", ")}`)),r[n]=i}return r}(t,Array.isArray(e)?e:[...e.values()])}return vb(t,e)}var bb=rt("allowed"),wb=rt("byteLength");class Mb extends Set{constructor(t,e,r,n=8){super(gb(e,r,n)),this.registry=void 0,this.createdAtHash=void 0,Object.defineProperty(this,bb,{writable:!0,value:void 0}),Object.defineProperty(this,wb,{writable:!0,value:void 0}),this.add=t=>(_(G(tt(this,bb)[bb])||!G(tt(this,bb)[bb][t]),(()=>`Set: Invalid key '${t}' on add`)),super.add(t),this),this.registry=t,tt(this,bb)[bb]=e,tt(this,wb)[wb]=n/8}static with(t,e){const r=Object.keys(t),n=new Array(r.length);for(let t=0;t<r.length;t++)n[t]=`is${rd(r[t])}`;return class extends Mb{constructor(i,s){super(i,t,s,e),tl(this,n,((t,e)=>this.strings.includes(r[e])))}}}get encodedLength(){return tt(this,wb)[wb]}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.size}get strings(){return[...super.values()]}get valueEncoded(){return yb(tt(this,bb)[bb],this.strings)}eq(t){return Array.isArray(t)?Ol(this.strings.sort(),t.sort()):t instanceof Set?this.eq([...t.values()]):!(!Qo(t)&&!fu(t))&&this.valueEncoded.eq(bs(t))}toHex(){return ta(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.strings}toNumber(){return this.valueEncoded.toNumber()}toRawType(){return Tu({_set:tt(this,bb)[bb]})}toString(){return`[${this.strings.join(", ")}]`}toU8a(t){return Sl(this.valueEncoded,{bitLength:8*tt(this,wb)[wb],isLe:!0})}}const kb=xu("Vec");function xb(t,e,r,n=-1){if(Array.isArray(r)){const n=new Array(r.length);for(let i=0;i<r.length;i++){const s=r[i];try{n[i]=s instanceof e?s:new e(t,s)}catch(t){throw kb.error(`Unable to decode on index ${i}`,t.message),t}}return[n,0,0]}const i=ds(r);let s=0;if(-1===n){const[t,e]=Zl(i);_(e.lten(65536),(()=>`Vec length ${e.toString()} exceeds 65536`)),n=e.toNumber(),s=t}return Ml(t,i,s,e,n)}var Pb=rt("Type");class Lb extends zl{constructor(t,e,r=[]){const n=yl(t,e),[i,s]=xb(t,n,r);super(t,i,s),Object.defineProperty(this,Pb,{writable:!0,value:void 0}),tt(this,Pb)[Pb]=n}static with(t){return class extends Lb{constructor(e,r){super(e,t,r)}}}get Type(){return tt(this,Pb)[Pb].name}indexOf(t){const e=t instanceof tt(this,Pb)[Pb]?t:new(tt(this,Pb)[Pb])(this.registry,t);for(let t=0;t<this.length;t++)if(e.eq(this[t]))return t;return-1}toRawType(){return`Vec<${this.registry.getClassName(tt(this,Pb)[Pb])||new(tt(this,Pb)[Pb])(this.registry).toRawType()}>`}}var Tb=rt("Type");class Sb extends zl{constructor(t,e,r,n=[]){const i=yl(t,e),[s,,o]=us(n)?Ml(t,n,0,i,r):function(t,e,r,n){const[i,s,o]=xb(t,r,e,n);for(;i.length<n;)i.push(new r(t));return _(i.length===n,(()=>`Expected a length of exactly ${n} entries`)),[i,s,o]}(t,n,i,r);super(t,s,o),Object.defineProperty(this,Tb,{writable:!0,value:void 0}),tt(this,Tb)[Tb]=i}static with(t,e){return class extends Sb{constructor(r,n){super(r,t,e,n)}}}get Type(){return new(tt(this,Tb)[Tb])(this.registry).toRawType()}get encodedLength(){let t=0;for(let e=0;e<this.length;e++)t+=this[e].encodedLength;return t}toU8a(){const t=new Array(this.length);for(let e=0;e<this.length;e++)t[e]=this[e].toU8a();return t.length?ml(...t):new Uint8Array([])}toRawType(){return`[${this.Type};${this.length}]`}}function Ab(t){const[e,r]=Zl(t),n=e+r.toNumber();return[n,t.subarray(e,n)]}class Db extends Ul{constructor(t,e,r){super(t,function(t,e,r){const n=yl(t,e);if(us(r)){const[,e]=Ab(r);return new n(t,e)}return new n(t,r)}(t,e,r))}static with(t){return class extends Db{constructor(e,r){super(e,t,r)}}}toRawType(){return`WrapperOpaque<${this._raw.toRawType()}>`}toU8a(t){const e=super.toU8a(t);return t?e:Fl(e)}unwrap(){return this._raw}}function jb({lookupName:t,type:e}){return t||e}function Hb(t){return _(t.sub&&Array.isArray(t.sub),(()=>`Expected subtype as TypeDef[] in ${Tu(t)}`)),t.sub}function Ob(t){return jb(function(t){return _(t.sub&&!Array.isArray(t.sub),(()=>`Expected subtype as TypeDef in ${Tu(t)}`)),t.sub}(t))}function zb(t){const e=Hb(t),r={};for(let t=0;t<e.length;t++)r[e[t].name]=jb(e[t]);return r}function Nb(t){return Hb(t).map(jb)}function Eb({displayName:t,length:e},r){return _(Qo(e),(()=>`Expected bitLength information for ${t||r.constructor.name}<bitLength>`)),r.with(e,t)}function Yb(t,e){const[r,n]=Nb(t);return e.with(r,n)}const Rb={[lv.BTreeMap]:(t,e)=>Yb(e,rb),[lv.BTreeSet]:(t,e)=>ab.with(Ob(e)),[lv.Compact]:(t,e)=>cb.with(Ob(e)),[lv.DoNotConstruct]:(t,e)=>Qc.with(e.displayName||e.type),[lv.Enum]:(t,e)=>{const r=Hb(e);return dd.with(r.every((({type:t})=>"Null"===t))?r.reduce(((t,{index:e,name:r},n)=>(t[r]=e||n,t)),{}):zb(e))},[lv.HashMap]:(t,e)=>Yb(e,lb),[lv.Int]:(t,e)=>Eb(e,Qf),[lv.Linkage]:(t,e)=>{const r=`Option<${Ob(e)}>`,n=Ll.with({previous:r,next:r});return n.prototype.toRawType=function(){return`Linkage<${this.next.toRawType(!0)}>`},n},[lv.Null]:(t,e)=>Yl,[lv.Option]:(t,e)=>Hd.with(Ob(e)),[lv.Plain]:(t,e)=>t.getOrUnknown(e.type),[lv.Range]:(t,e)=>(e.type.includes("RangeInclusive")?pb:fb).with(Ob(e)),[lv.Result]:(t,e)=>{const[r,n]=Nb(e);return mb.with({Err:n,Ok:r})},[lv.Set]:(t,e)=>Mb.with(Hb(e).reduce(((t,{index:e,name:r})=>(t[r]=e,t)),{}),e.length),[lv.Si]:(t,e)=>Ib(t,t.lookup.getTypeDef(e.type)),[lv.Struct]:(t,e)=>Ll.with(zb(e),e.alias),[lv.Tuple]:(t,e)=>El.with(Nb(e)),[lv.UInt]:(t,e)=>Eb(e,bd),[lv.Vec]:(t,{sub:e})=>(_(e&&!Array.isArray(e),"Expected type information for vector"),"u8"===e.type?_f:Lb.with(jb(e))),[lv.VecFixed]:(t,{displayName:e,length:r,sub:n})=>(_(n&&Qo(r)&&!Array.isArray(n),"Expected length & type information for fixed vector"),"u8"===n.type?Fd.with(8*r,e):Sb.with(jb(n),r)),[lv.WrapperOpaque]:(t,e)=>Db.with(Ob(e))};function Ib(t,e){return t.get(e.type,!1,e)}function Bb(t,e){return Ib(t,t.isLookupType(e)?t.lookup.getTypeDef(e):xv(e))}function Xb(t,e){const r=ds(t),n=ds(e);if(r.length===n.length){const t=new DataView(r.buffer,r.byteOffset),e=new DataView(n.buffer,n.byteOffset),i=r.length%4,s=r.length-i;for(let r=0;r<s;r+=4)if(t.getUint32(r)!==e.getUint32(r))return!1;for(let t=s;t<r.length;t++)if(r[t]!==n[t])return!1;return!0}return!1}function Vb(t,e){const r=t.toU8a(),n=t.toRawType();_(Xb(r,e)||["Bytes","Text","Type"].includes(n)&&e.length===t.length||t.isEmpty&&e.every((t=>!t)),(()=>`${n}:: Decoded input doesn't match input, received ${ta(e,512)} (${e.length} bytes), created ${ta(r,512)} (${r.length} bytes)`))}function Cb(t,e,r=[],{blockHash:n,isOptional:i,isPedantic:s}={}){const o=new(i?Hd.with(e):e)(t,...r);return function(t,[e],r=!1){r&&(us(e)?Vb(t,e):$i(e)&&Vb(t,ds(e)))}(o,r,s),n&&(o.createdAtHash=function(t,e,...r){return Wb(t,e,r)}(t,"Hash",n)),o}function Wb(t,e,r=[],n={}){let i=null,s=null;try{return i=Bb(t,e),Cb(t,i,r,n)}catch(t){s=new Error(`createType(${e}):: ${t.message}`)}if(i&&i.__fallbackType)try{return i=Bb(t,i.__fallbackType),Cb(t,i,r,n)}catch{}throw s}const qb=xu("registry");function Zb(t){return t.toString()}function Fb(t,e){const r=new Array(e.length);for(let n=0;n<e.length;n++)r[n]=t.getTypeDef(e[n].type).type;return r}function Ub(t){const e=Object.keys(t);for(let r=0;r<e.length;r++)delete t[e[r]]}function Gb({index:t}){return t.toString()}var _b=rt("classes"),Kb=rt("definitions"),Jb=rt("lookup"),Qb=rt("metadata"),$b=rt("metadataVersion"),tw=rt("metadataCalls"),ew=rt("metadataErrors"),rw=rt("metadataEvents"),nw=rt("unknownTypes"),iw=rt("chainProperties"),sw=rt("hasher"),ow=rt("knownDefaults"),aw=rt("knownDefinitions"),uw=rt("knownTypes"),hw=rt("signedExtensions"),cw=rt("userExtensions");class lw{constructor(t){Object.defineProperty(this,_b,{writable:!0,value:new Map}),Object.defineProperty(this,Kb,{writable:!0,value:new Map}),Object.defineProperty(this,Jb,{writable:!0,value:void 0}),Object.defineProperty(this,Qb,{writable:!0,value:void 0}),Object.defineProperty(this,$b,{writable:!0,value:0}),Object.defineProperty(this,tw,{writable:!0,value:{}}),Object.defineProperty(this,ew,{writable:!0,value:{}}),Object.defineProperty(this,rw,{writable:!0,value:{}}),Object.defineProperty(this,nw,{writable:!0,value:new Map}),Object.defineProperty(this,iw,{writable:!0,value:void 0}),Object.defineProperty(this,sw,{writable:!0,value:Kc}),Object.defineProperty(this,ow,{writable:!0,value:void 0}),Object.defineProperty(this,aw,{writable:!0,value:void 0}),Object.defineProperty(this,uw,{writable:!0,value:{}}),Object.defineProperty(this,hw,{writable:!0,value:fl}),Object.defineProperty(this,cw,{writable:!0,value:void 0}),this.createdAtHash=void 0,tt(this,ow)[ow]=Fi({Json:il,Metadata:Iv,PortableRegistry:Tg,Raw:hl},r),tt(this,aw)[aw]=n,this.init(),t&&(this.createdAtHash=this.createType("Hash",t))}init(){tt(this,_b)[_b]=new Map,tt(this,Kb)[Kb]=new Map,tt(this,nw)[nw]=new Map,tt(this,uw)[uw]={},this.register(tt(this,ow)[ow]);const t=Object.values(tt(this,aw)[aw]);for(let e=0;e<t.length;e++)this.register(t[e].types);return this}get chainDecimals(){var t;if(null!==(t=tt(this,iw)[iw])&&void 0!==t&&t.tokenDecimals.isSome){const t=tt(this,iw)[iw].tokenDecimals.unwrap();if(t.length)return t.map((t=>t.toNumber()))}return[12]}get chainSS58(){var t;return null!==(t=tt(this,iw)[iw])&&void 0!==t&&t.ss58Format.isSome?tt(this,iw)[iw].ss58Format.unwrap().toNumber():void 0}get chainTokens(){var t;if(null!==(t=tt(this,iw)[iw])&&void 0!==t&&t.tokenSymbol.isSome){const t=tt(this,iw)[iw].tokenSymbol.unwrap();if(t.length)return t.map(Zb)}return[zh.getDefaults().unit]}isLookupType(t){return/Lookup\d+$/.test(t)}createLookupType(t){return`Lookup${t.toString()}`}get knownTypes(){return tt(this,uw)[uw]}get lookup(){return tt(this,Jb)[Jb]||this.metadata.lookup}get metadata(){return _(tt(this,Qb)[Qb],"Metadata has not been set on this registry"),tt(this,Qb)[Qb]}get unknownTypes(){return[...tt(this,nw)[nw].keys()]}get signedExtensions(){return tt(this,hw)[hw]}createClass(t){return Bb(this,t)}createType(t,...e){return this.createTypeUnsafe(t,e)}createTypeUnsafe(t,e,r){return Wb(this,t,e,r)}findMetaCall(t){const[e,r]=[t[0],t[1]];return K(tt(this,tw)[tw][`${e}`]&&tt(this,tw)[tw][`${e}`][`${r}`],(()=>`findMetaCall: Unable to find Call with index [${e}, ${r}]/[${t.toString()}]`))}findMetaError(t){const[e,r]=us(t)?[t[0],t[1]]:[t.index.toNumber(),t.error.toNumber()];return K(tt(this,ew)[ew][`${e}`]&&tt(this,ew)[ew][`${e}`][`${r}`],(()=>`findMetaError: Unable to find Error with index [${e}, ${r}]/[${t.toString()}]`))}findMetaEvent(t){const[e,r]=[t[0],t[1]];return K(tt(this,rw)[rw][`${e}`]&&tt(this,rw)[rw][`${e}`][`${r}`],(()=>`findMetaEvent: Unable to find Event with index [${e}, ${r}]/[${t.toString()}]`))}get(t,e,r){let n=tt(this,_b)[_b].get(t);if(!n){const i=tt(this,Kb)[Kb].get(t);let s;i?s=Bb(this,i):r?s=function(t,e){try{const r=Rb[e.info](t,e);return _(r,"No class created"),!r.__fallbackType&&e.fallbackType&&(r.__fallbackType=e.fallbackType),r}catch(t){throw new Error(`Unable to construct class from ${Tu(e)}: ${t.message}`)}}(this,r):e&&(qb.warn(`Unable to resolve type ${t}, it will fail on construction`),tt(this,nw)[nw].set(t,!0),s=Qc.with(t)),s&&(n=class extends s{},tt(this,_b)[_b].set(t,n))}return n}getChainProperties(){return tt(this,iw)[iw]}getClassName(t){const e=[];for(const[r,n]of tt(this,_b)[_b].entries())t===n&&e.push(r);return e.sort().reverse(),e.length?e[0]:void 0}getDefinition(t){return tt(this,Kb)[Kb].get(t)}getModuleInstances(t,e){var r,n,i,s,o;return null===(r=tt(this,uw)[uw])||void 0===r||null===(n=r.typesBundle)||void 0===n||null===(i=n.spec)||void 0===i||null===(s=i[t])||void 0===s||null===(o=s.instances)||void 0===o?void 0:o[e]}getOrThrow(t,e){const r=this.get(t);return _(r,e||`type ${t} not found`),r}getOrUnknown(t){return this.get(t,!0)}getSignedExtensionExtra(){return pl(tt(this,hw)[hw],"payload",tt(this,cw)[cw])}getSignedExtensionTypes(){return pl(tt(this,hw)[hw],"extrinsic",tt(this,cw)[cw])}hasClass(t){return tt(this,_b)[_b].has(t)}hasDef(t){return tt(this,Kb)[Kb].has(t)}hasType(t){return!tt(this,nw)[nw].get(t)&&(this.hasClass(t)||this.hasDef(t))}hash(t){return this.createType("CodecHash",tt(this,sw)[sw](t))}register(t,e){Z(t)?tt(this,_b)[_b].set(t.name,t):F(t)?(_(Z(e),(()=>`Expected class definition passed to '${t}' registration`)),_(t!==e.toString(),(()=>`Unable to register circular ${t} === ${t}`)),tt(this,_b)[_b].set(t,e)):this._registerObject(t)}_registerObject(t){const e=Object.entries(t);for(let t=0;t<e.length;t++){const[r,n]=e[t];if(Z(n))tt(this,_b)[_b].set(r,n);else{const t=F(n)?n:Tu(n);_(r!==t,(()=>`Unable to register circular ${r} === ${t}`)),tt(this,_b)[_b].has(r)&&tt(this,_b)[_b].delete(r),tt(this,Kb)[Kb].set(r,t)}}}setChainProperties(t){t&&(tt(this,iw)[iw]=t)}setHasher(t){tt(this,sw)[sw]=t||Kc}setKnownTypes(t){tt(this,uw)[uw]=t}setLookup(t){tt(this,Jb)[Jb]=t}setMetadata(t,e,r){tt(this,Qb)[Qb]=t.asLatest,tt(this,$b)[$b]=t.version,function(t,{lookup:e,pallets:r},n,i){const s=r.filter(Qm);Ub(i);for(let r=0;r<s.length;r++){const{calls:o,index:a,name:u}=s[r],h=n>=12?a.toNumber():r;xh(i,h,(()=>Wm(e,o.unwrap(),Gb,(r=>$m(t,e,r,kh(u),h)))))}}(this,tt(this,Qb)[Qb],tt(this,$b)[$b],tt(this,tw)[tw]),function(t,{lookup:e,pallets:r},n,i){Ub(i);for(let t=0;t<r.length;t++){const{errors:s,index:o,name:a}=r[t];if(s.isSome){const r=kh(a);xh(i,n>=12?o.toNumber():t,(()=>Wm(e,s.unwrap(),Gb,(({docs:t,fields:n,index:i,name:s})=>({args:Fb(e,n),docs:t.map(Zb),fields:n,index:i.toNumber(),method:s.toString(),name:s.toString(),section:r})))))}}}(0,tt(this,Qb)[Qb],tt(this,$b)[$b],tt(this,ew)[ew]),function(t,{lookup:e,pallets:r},n,i){const s=r.filter(Km);Ub(i);for(let r=0;r<s.length;r++){const{events:o,index:a,name:u}=s[r];xh(i,n>=12?a.toNumber():r,(()=>Wm(e,o.unwrap(),Gb,(r=>{const n=t.createType("EventMetadataLatest",Fi({},r,{args:Fb(e,r.fields)}));return class extends Vl{constructor(t,e){super(t,e,n,kh(u),r.name.toString())}}}))))}}(this,tt(this,Qb)[Qb],tt(this,$b)[$b],tt(this,rw)[rw]),this.setSignedExtensions(e||(tt(this,Qb)[Qb].extrinsic.version.gt(Nh)?tt(this,Qb)[Qb].extrinsic.signedExtensions.map((({identifier:t})=>t.toString())):fl),r),this.setChainProperties(function(t,e){var r;const n=t.getChainProperties(),i=null===(r=ey(t,e.asLatest,e.version).system)||void 0===r?void 0:r.ss58Prefix;if(!i)return n;const{tokenDecimals:s,tokenSymbol:o}=n||{};return t.createType("ChainProperties",{ss58Format:i,tokenDecimals:s,tokenSymbol:o})}(this,t))}setSignedExtensions(t=fl,e){tt(this,hw)[hw]=t,tt(this,cw)[cw]=e;const r=function(t,e={}){const r=[...Object.keys(dl),...Object.keys(e)];return t.filter((t=>!r.includes(t)))}(tt(this,hw)[hw],tt(this,cw)[cw]);r.length&&qb.warn(`Unknown signed extensions ${r.join(", ")} found, treating them as no-effect`)}}const dw="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",fw=[],pw=[];for(let t=0;t<dw.length;++t)fw[t]=dw[t],pw[dw.charCodeAt(t)]=t;pw["-".charCodeAt(0)]=62,pw["_".charCodeAt(0)]=63;var mw=__webpack_require__(31057);const yw=mw.bytes,vw=mw.sizeUncompressed,gw=Uint8Array,bw=Uint16Array,ww=Uint32Array,Mw=new gw([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),kw=new gw([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),xw=new gw([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Pw=(t,e)=>{const r=new bw(31);for(let n=0;n<31;++n)r[n]=e+=1<<t[n-1];const n=new ww(r[30]);for(let t=1;t<30;++t)for(let e=r[t];e<r[t+1];++e)n[e]=e-r[t]<<5|t;return[r,n]},[Lw,Tw]=Pw(kw,2);Lw[28]=258,Tw[258]=28;const[Sw]=Pw(xw,0),Aw=new bw(32768);for(let t=0;t<32768;++t){let e=(43690&t)>>>1|(21845&t)<<1;e=(52428&e)>>>2|(13107&e)<<2,e=(61680&e)>>>4|(3855&e)<<4,Aw[t]=((65280&e)>>>8|(255&e)<<8)>>>1}const Dw=(t,e,r)=>{const n=t.length;let i=0;const s=new bw(e);for(;i<n;++i)++s[t[i]-1];const o=new bw(e);for(i=0;i<e;++i)o[i]=o[i-1]+s[i-1]<<1;let a;if(r){a=new bw(1<<e);const r=15-e;for(i=0;i<n;++i)if(t[i]){const n=i<<4|t[i],s=e-t[i];let u=o[t[i]-1]++<<s;for(const t=u|(1<<s)-1;u<=t;++u)a[Aw[u]>>>r]=n}}else for(a=new bw(n),i=0;i<n;++i)a[i]=Aw[o[t[i]-1]++]>>>15-t[i];return a},jw=new gw(288);for(let t=0;t<144;++t)jw[t]=8;for(let t=144;t<256;++t)jw[t]=9;for(let t=256;t<280;++t)jw[t]=7;for(let t=280;t<288;++t)jw[t]=8;const Hw=new gw(32);for(let t=0;t<32;++t)Hw[t]=5;const Ow=Dw(jw,9,1),zw=Dw(Hw,5,1),Nw=(t,e,r)=>{const n=e>>>3;return(t[n]|t[n+1]<<8)>>>(7&e)&r},Ew=(t,e)=>{const r=e>>>3;return(t[r]|t[r+1]<<8|t[r+2]<<16)>>>(7&e)},Yw=t=>{let e=t[0];for(let r=1;r<t.length;++r)t[r]>e&&(e=t[r]);return e},Rw=(t,e,r)=>{const n=!r||r.i;r||(r={});const i=t.length,s=!e||!n;e||(e=new gw(3*i));const o=t=>{let r=e.length;if(t>r){const n=new gw(Math.max(r<<1,t));n.set(e),e=n}};let a=r.f||0,u=r.p||0,h=r.b||0,c=r.l,l=r.d,d=r.m,f=r.n;if(a&&!c)return e;const p=i<<3;do{if(!c){r.f=a=Nw(t,u,1);const y=Nw(t,u+1,3);if(u+=3,!y){const a=((m=u)>>>3)+(7&m&&1)+4,c=t[a-4]|t[a-3]<<8,l=a+c;if(l>i){if(n)throw"unexpected EOF";break}s&&o(h+c),e.set(t.subarray(a,l),h),r.b=h+=c,r.p=u=l<<3;continue}if(1==y)c=Ow,l=zw,d=9,f=5;else{if(2!=y)throw"invalid block type";{const e=Nw(t,u,31)+257,r=Nw(t,u+10,15)+4,i=e+Nw(t,u+5,31)+1;u+=14;const s=new gw(i),o=new gw(19);for(let e=0;e<r;++e)o[Mw[e]]=Nw(t,u+3*e,7);u+=3*r;const a=Yw(o),h=(1<<a)-1;if(!n&&u+i*(a+7)>p)break;const m=Dw(o,a,1);for(let e=0;e<i;){const r=m[Nw(t,u,h)];u+=15&r;const n=r>>>4;if(n<16)s[e++]=n;else{let r=0,i=0;for(16==n?(i=3+Nw(t,u,3),u+=2,r=s[e-1]):17==n?(i=3+Nw(t,u,7),u+=3):18==n&&(i=11+Nw(t,u,127),u+=7);i--;)s[e++]=r}}const y=s.subarray(0,e),v=s.subarray(e);d=Yw(y),f=Yw(v),c=Dw(y,d,1),l=Dw(v,f,1)}}if(u>p)throw"unexpected EOF"}s&&o(h+131072);const y=(1<<d)-1,v=(1<<f)-1,g=d+f+18;for(;n||u+g<p;){const r=c[Ew(t,u)&y],n=r>>>4;if(u+=15&r,u>p)throw"unexpected EOF";if(!r)throw"invalid length/literal";if(n<256)e[h++]=n;else{if(256==n){c=void 0;break}{let r=n-254;if(n>264){const e=n-257,i=kw[e];r=Nw(t,u,(1<<i)-1)+Lw[e],u+=i}const i=l[Ew(t,u)&v],a=i>>>4;if(!i)throw"invalid distance";u+=15&i;let c=Sw[a];if(a>3){const e=xw[a];c+=Ew(t,u)&(1<<e)-1,u+=e}if(u>p)throw"unexpected EOF";s&&o(h+131072);const d=h+r;for(;h<d;h+=4)e[h]=e[h-c],e[h+1]=e[h+1-c],e[h+2]=e[h+2-c],e[h+3]=e[h+3-c];h=d}}}r.l=c,r.p=u,r.b=h,c&&(a=1,r.m=d,r.d=l,r.n=f)}while(!a);var m;return h==e.length?e:((t,e,r)=>{(null==e||e<0)&&(e=0),(null==r||r>t.length)&&(r=t.length);const n=new(t instanceof bw?bw:t instanceof ww?ww:gw)(r-e);return n.set(t.subarray(e,r)),n})(e,0,h)};const Iw=function(t,e){return Rw(((t=>{if(8!=(15&t[0])||t[0]>>>4>7||(t[0]<<8|t[1])%31)throw"invalid zlib data";if(32&t[1])throw"invalid zlib data: preset dictionaries not supported"})(t),t.subarray(2,-4)),e)}(function(t){const[e,r]=function(t){const e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");const r=t.indexOf("=");return-1===r?[e,0]:[r,4-r%4]}(t),n=new Uint8Array(3*(e+r)/4-r);let i,s,o=0;const a=r>0?e-4:e;for(i=0;i<a;i+=4)s=pw[t.charCodeAt(i)]<<18|pw[t.charCodeAt(i+1)]<<12|pw[t.charCodeAt(i+2)]<<6|pw[t.charCodeAt(i+3)],n[o++]=s>>16&255,n[o++]=s>>8&255,n[o++]=255&s;return 2===r?(s=pw[t.charCodeAt(i)]<<2|pw[t.charCodeAt(i+1)]>>4,n[o++]=255&s):1===r&&(s=pw[t.charCodeAt(i)]<<10|pw[t.charCodeAt(i+1)]<<4|pw[t.charCodeAt(i+2)]>>2,n[o++]=s>>8&255,n[o++]=255&s),n}(yw),new Uint8Array(vw));let Bw=null,Xw=null,Vw=null;function Cw(t){return(...e)=>(_(Bw,"The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces."),t(Bw)(...e))}function Ww(){return null!==Xw&&Xw.buffer===Bw.memory.buffer||(Xw=new Int32Array(Bw.memory.buffer)),Xw}function qw(){return null!==Vw&&Vw.buffer===Bw.memory.buffer||(Vw=new Uint8Array(Bw.memory.buffer)),Vw}function Zw(t,e){return qw().subarray(t/1,t/1+e)}function Fw(t){const e=Bw.__wbindgen_malloc(1*t.length);return qw().set(t,e/1),[e,t.length]}function Uw(t){return Fw(ls(t))}function Gw(){const t=Ww()[2],e=Ww()[3],r=Zw(t,e).slice();return Bw.__wbindgen_free(t,1*e),r}const _w={getRandomValues:function(t){return crypto.getRandomValues(t)}},Kw={crypto:_w},Jw=new Array(32).fill(void 0).concat(void 0,null,!0,!1);let Qw=Jw.length;function $w(t){return Jw[t]}function tM(t){const e=$w(t);return function(t){t<36||(Jw[t]=Qw,Qw=t)}(t),e}function eM(t){Qw===Jw.length&&Jw.push(Jw.length+1);const e=Qw;return Qw=Jw[e],Jw[e]=t,e}function rM(t){return void 0===$w(t)}function nM(){return eM(Kw)}function iM(t,e){throw new Error(`Unable to require ${function(t,e){return ks(Zw(t,e))}(t,e)}`)}function sM(t){return eM(_w)}function oM(t){return eM(_w.getRandomValues)}function aM(t,e,r){_w.getRandomValues(Zw(e,r))}function uM(t,e,r){throw new Error("randomFillsync is not available")}function hM(t){tM(t)}function cM(){throw new Error("abort")}const lM=async function(t,e,r){try{_("undefined"!=typeof WebAssembly&&t&&t.length,"WebAssembly is not available in your environment");const e=await WebAssembly.instantiate(t,{wbg:r});Bw=e.instance.exports}catch(t){e?Bw=e(r):(console.error("FATAL: Unable to initialize @polkadot/wasm-crypto"),console.error(t),Bw=null)}}(Iw,null,i).catch((()=>null));Cw((t=>e=>(t.ext_bip39_generate(8,e),ks(Gw())))),Cw((t=>e=>{const[r,n]=Uw(e);return t.ext_bip39_to_entropy(8,r,n),Gw()})),Cw((t=>(e,r)=>{const[n,i]=Uw(e),[s,o]=Uw(r);return t.ext_bip39_to_mini_secret(8,n,i,s,o),Gw()})),Cw((t=>(e,r)=>{const[n,i]=Uw(e),[s,o]=Uw(r);return t.ext_bip39_to_seed(8,n,i,s,o),Gw()})),Cw((t=>e=>{const[r,n]=Uw(e);return 0!==t.ext_bip39_validate(r,n)})),Cw((t=>e=>{const[r,n]=Fw(e);return t.ext_ed_from_seed(8,r,n),Gw()})),Cw((t=>(e,r,n)=>{const[i,s]=Fw(e),[o,a]=Fw(r),[u,h]=Fw(n);return t.ext_ed_sign(8,i,s,o,a,u,h),Gw()})),Cw((t=>(e,r,n)=>{const[i,s]=Fw(e),[o,a]=Fw(r),[u,h]=Fw(n);return 0!==t.ext_ed_verify(i,s,o,a,u,h)})),Cw((t=>(e,r)=>{const[n,i]=Fw(e),[s,o]=Fw(r);return t.ext_sr_derive_keypair_hard(8,n,i,s,o),Gw()})),Cw((t=>(e,r)=>{const[n,i]=Fw(e),[s,o]=Fw(r);return t.ext_sr_derive_keypair_soft(8,n,i,s,o),Gw()})),Cw((t=>(e,r)=>{const[n,i]=Fw(e),[s,o]=Fw(r);return t.ext_sr_derive_public_soft(8,n,i,s,o),Gw()})),Cw((t=>e=>{const[r,n]=Fw(e);return t.ext_sr_from_seed(8,r,n),Gw()})),Cw((t=>(e,r,n)=>{const[i,s]=Fw(e),[o,a]=Fw(r),[u,h]=Fw(n);return t.ext_sr_sign(8,i,s,o,a,u,h),Gw()})),Cw((t=>(e,r,n)=>{const[i,s]=Fw(e),[o,a]=Fw(r),[u,h]=Fw(n);return 0!==t.ext_sr_verify(i,s,o,a,u,h)})),Cw((t=>(e,r)=>{const[n,i]=Fw(e),[s,o]=Fw(r);return t.ext_sr_agree(8,n,i,s,o),Gw()})),Cw((t=>(e,r,n,i)=>{const[s,o]=Fw(e),[a,u]=Fw(r),[h,c]=Fw(n),[l,d]=Fw(i);return t.ext_vrf_sign(8,s,o,a,u,h,c,l,d),Gw()})),Cw((t=>(e,r,n,i,s)=>{const[o,a]=Fw(e),[u,h]=Fw(r),[c,l]=Fw(n),[d,f]=Fw(i),[p,m]=Fw(s);return 0!==t.ext_vrf_verify(o,a,u,h,c,l,d,f,p,m)})),Cw((t=>(e,r,n)=>{const[i,s]=Fw(e),[o,a]=Fw(r);return t.ext_blake2b(8,i,s,o,a,n),Gw()})),Cw((t=>(e,r)=>{const[n,i]=Fw(e),[s,o]=Fw(r);return t.ext_hmac_sha256(8,n,i,s,o),Gw()})),Cw((t=>(e,r)=>{const[n,i]=Fw(e),[s,o]=Fw(r);return t.ext_hmac_sha512(8,n,i,s,o),Gw()})),Cw((t=>e=>{const[r,n]=Fw(e);return t.ext_keccak256(8,r,n),Gw()})),Cw((t=>e=>{const[r,n]=Fw(e);return t.ext_keccak512(8,r,n),Gw()})),Cw((t=>(e,r,n)=>{const[i,s]=Fw(e),[o,a]=Fw(r);return t.ext_pbkdf2(8,i,s,o,a,n),Gw()})),Cw((t=>(e,r,n,i,s)=>{const[o,a]=Fw(e),[u,h]=Fw(r);return t.ext_scrypt(8,o,a,u,h,n,i,s),Gw()})),Cw((t=>e=>{const[r,n]=Fw(e);return t.ext_sha256(8,r,n),Gw()})),Cw((t=>e=>{const[r,n]=Fw(e);return t.ext_sha512(8,r,n),Gw()})),Cw((t=>(e,r)=>{const[n,i]=Fw(e);return t.ext_twox(8,n,i,r),Gw()}));function dM(){return!!Bw}function fM(){return lM.then((()=>dM())).then((()=>!0)).catch((t=>(console.error("Unable to initialize @polkadot/util-crypto",t),!1)))}var pM=new ho((function(t){return t.complete()}));function mM(t){return t<=0?function(){return pM}:Ia((function(e,r){var n=0;e.subscribe(new Ba(r,(function(e){++n<=t&&(r.next(e),t<=n&&r.complete())})))}))}function yM(t){return Ia((function(e,r){var n,i=null,s=!1;i=e.subscribe(new Ba(r,void 0,void 0,(function(o){n=Na(t(o,yM(t)(e))),i?(i.unsubscribe(),i=null,n.subscribe(r)):s=!0}))),s&&(i.unsubscribe(),i=null,n.subscribe(r))}))}const vM=["Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten"];function gM(t){const e=t.map((t=>!!t));return{filtered:t.filter(((t,r)=>e[r])),included:e,original:t}}function bM(t,e){let r=-1;return e.included.map((e=>e?t[++r]:null))}function wM(t,e){var r,n,i,s,o,a;const u=t.registry.createType("AccountId"),h=gM([null===(r=t.consts.auctions)||void 0===r?void 0:r.leasePeriodsPerSlot,null===(n=t.consts.auctions)||void 0===n?void 0:n.slotRangeCount]),c=gM([null===(i=t.query.staking)||void 0===i?void 0:i.storageVersion]),l=gM([null===(s=t.query.session)||void 0===s?void 0:s.queuedKeys.key(),null===(o=t.query.system)||void 0===o||null===(a=o.account)||void 0===a?void 0:a.key(u)]);return Qa([h.filtered.length?wh(e?[]:h.filtered):wh([]),c.filtered.length?e?Qa(c.filtered.map((t=>t.at(e)))):t.queryMulti(c.filtered):wh([]),l.filtered.length?Qa(e?l.filtered.map((r=>t.rpc.state.getStorage.raw(r,e))):l.filtered.map((e=>t.rpc.state.getStorage.raw(e)))):wh([])]).pipe(Za((([e,r,n])=>function({accountIdLength:t,refcount1Length:e,refcount2Length:r,refcount3Length:n},[i,s],[o],[a,u]){const h={};if(u){const t=u.length;t===e?h.AccountInfo="AccountInfoWithRefCount":t===r?h.AccountInfo="AccountInfoWithDualRefCount":t===n&&(h.AccountInfo="AccountInfoWithTripleRefCount")}if(o&&(o.index>=4?h.ValidatorPrefs="ValidatorPrefsWithBlocked":h.ValidatorPrefs="ValidatorPrefsWithCommission"),a)try{const[e,r]=Zl(a),n=(a.length-e)/r.toNumber(),i=n/t,s=Math.floor(i);_(i>=2&&i<=11,(()=>`Detected ${i} in Keys, should be >= 2 and <= 11`)),s!==i?(s-1)*t+33===n?h.Keys=`SessionKeys${s-1}B`:_(!1,(()=>`Expected integer number of keys, found ${i.toFixed(2)}`)):h.Keys="SessionKeys"+(i-1)}catch{}if(i&&s){const t=[];for(let e=0;i.gtn(e);e++)for(let r=e;i.gtn(r);r++)t.push(`${vM[e]}${vM[r]}`);h.SlotRange={_enum:t},h.WinningData=`[WinningDataEntry; ${s.toNumber()}]`}return h}({accountIdLength:u.encodedLength,refcount1Length:t.registry.createType("AccountInfoWithRefCount").encodedLength,refcount2Length:t.registry.createType("AccountInfoWithDualRefCount").encodedLength,refcount3Length:t.registry.createType("AccountInfoWithTripleRefCount").encodedLength},bM(e,h),bM(r,c),bM(n.map((e=>t.registry.createType("Raw",e))),l)))),mM(1),yM((()=>wh({}))))}function MM(t,e,r){var n=Rs(t)||e||r?{next:t,error:e,complete:r}:t;return n?Ia((function(t,e){var r;null===(r=n.subscribe)||void 0===r||r.call(n);var i=!0;t.subscribe(new Ba(e,(function(t){var r;null===(r=n.next)||void 0===r||r.call(n,t),e.next(t)}),(function(){var t;i=!1,null===(t=n.complete)||void 0===t||t.call(n),e.complete()}),(function(t){var r;i=!1,null===(r=n.error)||void 0===r||r.call(n,t),e.error(t)}),(function(){var t,e;i&&(null===(t=n.unsubscribe)||void 0===t||t.call(n)),null===(e=n.finalize)||void 0===e||e.call(n)})))})):ao}function kM(t,e,r,n,i){return function(s,o){var a=r,u=e,h=0;s.subscribe(new Ba(o,(function(e){var r=h++;u=a?t(u,e,r):(a=!0,e),n&&o.next(u)}),i&&function(){a&&o.next(u),o.complete()}))}}var xM=function(t,e){return t.push(e),t};function PM(){return Ia((function(t,e){(function(t,e){return Ia(kM(t,e,arguments.length>=2,!1,!0))})(xM,[])(t).subscribe(e)}))}function LM(t,e,r,n){xh(t,e,(()=>Ph({},r(e),(t=>n(e,t)))))}const TM={alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:In.Jq,ipfsChar:"z",type:"base58"},SM=function({alphabet:t,ipfsChar:e,regex:r,type:n}){return(i,s)=>{if(_(i&&"string"==typeof i,(()=>`Expected non-null, non-empty ${n} string input`)),e&&s&&_(i[0]===e,(()=>`Expected ipfs-compatible ${n} to start with '${e}'`)),r)_(r.test(i),`Invalid ${n} encoding`);else for(let e=s?1:0;e<i.length;e++)_(t.includes(i[e]),(()=>`Invalid ${n} character "${i[e]}" (0x${i.charCodeAt(e).toString(16)}) at index ${e}`));return!0}}(TM),AM=function({coder:t,ipfsChar:e},r){return(n,i)=>(r(n,i),t.decode(e&&i?n.substr(1):n))}(TM,SM),DM=(function({coder:t,ipfsChar:e}){}(TM),function(t){}(SM),"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),jM=[],HM=[];for(let t=0;t<DM.length;++t)jM[t]=DM[t],HM[DM.charCodeAt(t)]=t;HM["-".charCodeAt(0)]=62,HM["_".charCodeAt(0)]=63;var OM=__webpack_require__(35583);const zM=OM.bytes,NM=OM.sizeUncompressed,EM=Uint8Array,YM=Uint16Array,RM=Uint32Array,IM=new EM([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),BM=new EM([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),XM=new EM([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),VM=(t,e)=>{const r=new YM(31);for(let n=0;n<31;++n)r[n]=e+=1<<t[n-1];const n=new RM(r[30]);for(let t=1;t<30;++t)for(let e=r[t];e<r[t+1];++e)n[e]=e-r[t]<<5|t;return[r,n]},[CM,WM]=VM(BM,2);CM[28]=258,WM[258]=28;const[qM]=VM(XM,0),ZM=new YM(32768);for(let t=0;t<32768;++t){let e=(43690&t)>>>1|(21845&t)<<1;e=(52428&e)>>>2|(13107&e)<<2,e=(61680&e)>>>4|(3855&e)<<4,ZM[t]=((65280&e)>>>8|(255&e)<<8)>>>1}const FM=(t,e,r)=>{const n=t.length;let i=0;const s=new YM(e);for(;i<n;++i)++s[t[i]-1];const o=new YM(e);for(i=0;i<e;++i)o[i]=o[i-1]+s[i-1]<<1;let a;if(r){a=new YM(1<<e);const r=15-e;for(i=0;i<n;++i)if(t[i]){const n=i<<4|t[i],s=e-t[i];let u=o[t[i]-1]++<<s;for(const t=u|(1<<s)-1;u<=t;++u)a[ZM[u]>>>r]=n}}else for(a=new YM(n),i=0;i<n;++i)a[i]=ZM[o[t[i]-1]++]>>>15-t[i];return a},UM=new EM(288);for(let t=0;t<144;++t)UM[t]=8;for(let t=144;t<256;++t)UM[t]=9;for(let t=256;t<280;++t)UM[t]=7;for(let t=280;t<288;++t)UM[t]=8;const GM=new EM(32);for(let t=0;t<32;++t)GM[t]=5;const _M=FM(UM,9,1),KM=FM(GM,5,1),JM=(t,e,r)=>{const n=e>>>3;return(t[n]|t[n+1]<<8)>>>(7&e)&r},QM=(t,e)=>{const r=e>>>3;return(t[r]|t[r+1]<<8|t[r+2]<<16)>>>(7&e)},$M=t=>{let e=t[0];for(let r=1;r<t.length;++r)t[r]>e&&(e=t[r]);return e},tk=(t,e,r)=>{const n=!r||r.i;r||(r={});const i=t.length,s=!e||!n;e||(e=new EM(3*i));const o=t=>{let r=e.length;if(t>r){const n=new EM(Math.max(r<<1,t));n.set(e),e=n}};let a=r.f||0,u=r.p||0,h=r.b||0,c=r.l,l=r.d,d=r.m,f=r.n;if(a&&!c)return e;const p=i<<3;do{if(!c){r.f=a=JM(t,u,1);const y=JM(t,u+1,3);if(u+=3,!y){const a=((m=u)>>>3)+(7&m&&1)+4,c=t[a-4]|t[a-3]<<8,l=a+c;if(l>i){if(n)throw"unexpected EOF";break}s&&o(h+c),e.set(t.subarray(a,l),h),r.b=h+=c,r.p=u=l<<3;continue}if(1==y)c=_M,l=KM,d=9,f=5;else{if(2!=y)throw"invalid block type";{const e=JM(t,u,31)+257,r=JM(t,u+10,15)+4,i=e+JM(t,u+5,31)+1;u+=14;const s=new EM(i),o=new EM(19);for(let e=0;e<r;++e)o[IM[e]]=JM(t,u+3*e,7);u+=3*r;const a=$M(o),h=(1<<a)-1;if(!n&&u+i*(a+7)>p)break;const m=FM(o,a,1);for(let e=0;e<i;){const r=m[JM(t,u,h)];u+=15&r;const n=r>>>4;if(n<16)s[e++]=n;else{let r=0,i=0;for(16==n?(i=3+JM(t,u,3),u+=2,r=s[e-1]):17==n?(i=3+JM(t,u,7),u+=3):18==n&&(i=11+JM(t,u,127),u+=7);i--;)s[e++]=r}}const y=s.subarray(0,e),v=s.subarray(e);d=$M(y),f=$M(v),c=FM(y,d,1),l=FM(v,f,1)}}if(u>p)throw"unexpected EOF"}s&&o(h+131072);const y=(1<<d)-1,v=(1<<f)-1,g=d+f+18;for(;n||u+g<p;){const r=c[QM(t,u)&y],n=r>>>4;if(u+=15&r,u>p)throw"unexpected EOF";if(!r)throw"invalid length/literal";if(n<256)e[h++]=n;else{if(256==n){c=void 0;break}{let r=n-254;if(n>264){const e=n-257,i=BM[e];r=JM(t,u,(1<<i)-1)+CM[e],u+=i}const i=l[QM(t,u)&v],a=i>>>4;if(!i)throw"invalid distance";u+=15&i;let c=qM[a];if(a>3){const e=XM[a];c+=QM(t,u)&(1<<e)-1,u+=e}if(u>p)throw"unexpected EOF";s&&o(h+131072);const d=h+r;for(;h<d;h+=4)e[h]=e[h-c],e[h+1]=e[h+1-c],e[h+2]=e[h+2-c],e[h+3]=e[h+3-c];h=d}}}r.l=c,r.p=u,r.b=h,c&&(a=1,r.m=d,r.d=l,r.n=f)}while(!a);var m;return h==e.length?e:((t,e,r)=>{(null==e||e<0)&&(e=0),(null==r||r>t.length)&&(r=t.length);const n=new(t instanceof YM?YM:t instanceof RM?RM:EM)(r-e);return n.set(t.subarray(e,r)),n})(e,0,h)};const ek=function(t,e){return tk(((t=>{if(8!=(15&t[0])||t[0]>>>4>7||(t[0]<<8|t[1])%31)throw"invalid zlib data";if(32&t[1])throw"invalid zlib data: preset dictionaries not supported"})(t),t.subarray(2,-4)),e)}(function(t){const[e,r]=function(t){const e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");const r=t.indexOf("=");return-1===r?[e,0]:[r,4-r%4]}(t),n=new Uint8Array(3*(e+r)/4-r);let i,s,o=0;const a=r>0?e-4:e;for(i=0;i<a;i+=4)s=HM[t.charCodeAt(i)]<<18|HM[t.charCodeAt(i+1)]<<12|HM[t.charCodeAt(i+2)]<<6|HM[t.charCodeAt(i+3)],n[o++]=s>>16&255,n[o++]=s>>8&255,n[o++]=255&s;return 2===r?(s=HM[t.charCodeAt(i)]<<2|HM[t.charCodeAt(i+1)]>>4,n[o++]=255&s):1===r&&(s=HM[t.charCodeAt(i)]<<10|HM[t.charCodeAt(i+1)]<<4|HM[t.charCodeAt(i+2)]>>2,n[o++]=s>>8&255,n[o++]=255&s),n}(zM),new Uint8Array(NM));let rk=null,nk=null,ik=null;function sk(t){return(...e)=>(_(rk,"The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces."),t(rk)(...e))}function ok(){return null!==nk&&nk.buffer===rk.memory.buffer||(nk=new Int32Array(rk.memory.buffer)),nk}function ak(){return null!==ik&&ik.buffer===rk.memory.buffer||(ik=new Uint8Array(rk.memory.buffer)),ik}function uk(t,e){return ak().subarray(t/1,t/1+e)}function hk(t){const e=rk.__wbindgen_malloc(1*t.length);return ak().set(t,e/1),[e,t.length]}function ck(t){return hk(ls(t))}function lk(){const t=ok()[2],e=ok()[3],r=uk(t,e).slice();return rk.__wbindgen_free(t,1*e),r}const dk={getRandomValues:function(t){return crypto.getRandomValues(t)}},fk={crypto:dk},pk=new Array(32).fill(void 0).concat(void 0,null,!0,!1);let mk=pk.length;function yk(t){return pk[t]}function vk(t){const e=yk(t);return function(t){t<36||(pk[t]=mk,mk=t)}(t),e}function gk(t){mk===pk.length&&pk.push(pk.length+1);const e=mk;return mk=pk[e],pk[e]=t,e}function bk(t){return void 0===yk(t)}function wk(){return gk(fk)}function Mk(t,e){throw new Error(`Unable to require ${function(t,e){return ks(uk(t,e))}(t,e)}`)}function kk(t){return gk(dk)}function xk(t){return gk(dk.getRandomValues)}function Pk(t,e,r){dk.getRandomValues(uk(e,r))}function Lk(t,e,r){throw new Error("randomFillsync is not available")}function Tk(t){vk(t)}function Sk(){throw new Error("abort")}(async function(t,e,r){try{_("undefined"!=typeof WebAssembly&&t&&t.length,"WebAssembly is not available in your environment");const e=await WebAssembly.instantiate(t,{wbg:r});rk=e.instance.exports}catch(t){e?rk=e(r):(console.error("FATAL: Unable to initialize @polkadot/wasm-crypto"),console.error(t),rk=null)}})(ek,null,s).catch((()=>null)),sk((t=>e=>(t.ext_bip39_generate(8,e),ks(lk())))),sk((t=>e=>{const[r,n]=ck(e);return t.ext_bip39_to_entropy(8,r,n),lk()})),sk((t=>(e,r)=>{const[n,i]=ck(e),[s,o]=ck(r);return t.ext_bip39_to_mini_secret(8,n,i,s,o),lk()})),sk((t=>(e,r)=>{const[n,i]=ck(e),[s,o]=ck(r);return t.ext_bip39_to_seed(8,n,i,s,o),lk()})),sk((t=>e=>{const[r,n]=ck(e);return 0!==t.ext_bip39_validate(r,n)})),sk((t=>e=>{const[r,n]=hk(e);return t.ext_ed_from_seed(8,r,n),lk()})),sk((t=>(e,r,n)=>{const[i,s]=hk(e),[o,a]=hk(r),[u,h]=hk(n);return t.ext_ed_sign(8,i,s,o,a,u,h),lk()})),sk((t=>(e,r,n)=>{const[i,s]=hk(e),[o,a]=hk(r),[u,h]=hk(n);return 0!==t.ext_ed_verify(i,s,o,a,u,h)})),sk((t=>(e,r)=>{const[n,i]=hk(e),[s,o]=hk(r);return t.ext_sr_derive_keypair_hard(8,n,i,s,o),lk()})),sk((t=>(e,r)=>{const[n,i]=hk(e),[s,o]=hk(r);return t.ext_sr_derive_keypair_soft(8,n,i,s,o),lk()})),sk((t=>(e,r)=>{const[n,i]=hk(e),[s,o]=hk(r);return t.ext_sr_derive_public_soft(8,n,i,s,o),lk()})),sk((t=>e=>{const[r,n]=hk(e);return t.ext_sr_from_seed(8,r,n),lk()})),sk((t=>(e,r,n)=>{const[i,s]=hk(e),[o,a]=hk(r),[u,h]=hk(n);return t.ext_sr_sign(8,i,s,o,a,u,h),lk()})),sk((t=>(e,r,n)=>{const[i,s]=hk(e),[o,a]=hk(r),[u,h]=hk(n);return 0!==t.ext_sr_verify(i,s,o,a,u,h)})),sk((t=>(e,r)=>{const[n,i]=hk(e),[s,o]=hk(r);return t.ext_sr_agree(8,n,i,s,o),lk()})),sk((t=>(e,r,n,i)=>{const[s,o]=hk(e),[a,u]=hk(r),[h,c]=hk(n),[l,d]=hk(i);return t.ext_vrf_sign(8,s,o,a,u,h,c,l,d),lk()})),sk((t=>(e,r,n,i,s)=>{const[o,a]=hk(e),[u,h]=hk(r),[c,l]=hk(n),[d,f]=hk(i),[p,m]=hk(s);return 0!==t.ext_vrf_verify(o,a,u,h,c,l,d,f,p,m)}));const Ak=sk((t=>(e,r,n)=>{const[i,s]=hk(e),[o,a]=hk(r);return t.ext_blake2b(8,i,s,o,a,n),lk()}));sk((t=>(e,r)=>{const[n,i]=hk(e),[s,o]=hk(r);return t.ext_hmac_sha256(8,n,i,s,o),lk()})),sk((t=>(e,r)=>{const[n,i]=hk(e),[s,o]=hk(r);return t.ext_hmac_sha512(8,n,i,s,o),lk()})),sk((t=>e=>{const[r,n]=hk(e);return t.ext_keccak256(8,r,n),lk()})),sk((t=>e=>{const[r,n]=hk(e);return t.ext_keccak512(8,r,n),lk()})),sk((t=>(e,r,n)=>{const[i,s]=hk(e),[o,a]=hk(r);return t.ext_pbkdf2(8,i,s,o,a,n),lk()})),sk((t=>(e,r,n,i,s)=>{const[o,a]=hk(e),[u,h]=hk(r);return t.ext_scrypt(8,o,a,u,h,n,i,s),lk()})),sk((t=>e=>{const[r,n]=hk(e);return t.ext_sha256(8,r,n),lk()})),sk((t=>e=>{const[r,n]=hk(e);return t.ext_sha512(8,r,n),lk()})),sk((t=>(e,r)=>{const[n,i]=hk(e);return t.ext_twox(8,n,i,r),lk()}));function Dk(){return!!rk}function jk(t,e=256,r,n){const i=Math.ceil(e/8),s=ds(t);return function(t){return Dk()&&!t}(n)?Ak(s,ds(r),i):Fr.blake2b(s,r||void 0,i)}const Hk=ls("SS58PRE");function Ok(t){const e=64&t[0]?2:1,r=1===e?t[0]:(63&t[0])<<2|t[1]>>6|(63&t[1])<<8,n=[34+e,35+e].includes(t.length),i=t.length-(n?2:1),s=(o=t.subarray(0,i),jk(ml(Hk,o),512));var o;return[0==(128&t[0])&&![46,47].includes(t[0])&&(n?t[t.length-2]===s[0]&&t[t.length-1]===s[1]:t[t.length-1]===s[0]),i,e,r]}const zk={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],bifrost:["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],centrifuge:["0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],"dock-mainnet":["0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],"nodle-chain":["0xa3d114c2b8d0627c1aa9b134eafcf7d05ca561fdc19fb388bb9457f81809fb23"],plasm:["0x3e86364d4b4894021cb2a0390bcf2feb5517d5292f2de2bb9404227e908b0b8b"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"]},Nk={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},Ek={centrifuge:747,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,kusama:434,"nodle-chain":1003,polkadot:354,polymesh:595,statemine:434},Yk={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,subspace_testnet:!0,"zero-alphaville":!0},Rk=[0,2,42],Ik=["testnet"];const Bk=[{decimals:[10],displayName:"Polkadot Relay Chain",network:"polkadot",prefix:0,standardAccount:"*25519",symbols:["DOT"],website:"https://polkadot.network"},{decimals:null,displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",network:"BareSr25519",prefix:1,standardAccount:"Sr25519",symbols:null,website:null},{decimals:[12],displayName:"Kusama Relay Chain",network:"kusama",prefix:2,standardAccount:"*25519",symbols:["KSM"],website:"https://kusama.network"},{decimals:null,displayName:"Bare 32-bit Ed25519 public key.",network:"BareEd25519",prefix:3,standardAccount:"Ed25519",symbols:null,website:null},{decimals:null,displayName:"Katal Chain",network:"katalchain",prefix:4,standardAccount:"*25519",symbols:null,website:null},{decimals:[15],displayName:"Plasm Network",network:"plasm",prefix:5,standardAccount:"*25519",symbols:["PLM"],website:"https://plasmnet.io"},{decimals:[12],displayName:"Bifrost",network:"bifrost",prefix:6,standardAccount:"*25519",symbols:["BNC"],website:"https://bifrost.finance/"},{decimals:[18],displayName:"Edgeware",network:"edgeware",prefix:7,standardAccount:"*25519",symbols:["EDG"],website:"https://edgewa.re"},{decimals:[12],displayName:"Karura",network:"karura",prefix:8,standardAccount:"*25519",symbols:["KAR"],website:"https://karura.network/"},{decimals:[18],displayName:"Laminar Reynolds Canary",network:"reynolds",prefix:9,standardAccount:"*25519",symbols:["REY"],website:"http://laminar.network/"},{decimals:[12],displayName:"Acala",network:"acala",prefix:10,standardAccount:"*25519",symbols:["ACA"],website:"https://acala.network/"},{decimals:[18],displayName:"Laminar",network:"laminar",prefix:11,standardAccount:"*25519",symbols:["LAMI"],website:"http://laminar.network/"},{decimals:[6],displayName:"Polymesh",network:"polymesh",prefix:12,standardAccount:"*25519",symbols:["POLYX"],website:"https://polymath.network/"},{decimals:[12],displayName:"Integritee",network:"integritee",prefix:13,standardAccount:"*25519",symbols:["TEER"],website:"https://integritee.network"},{decimals:[0],displayName:"Totem",network:"totem",prefix:14,standardAccount:"*25519",symbols:["TOTEM"],website:"https://totemaccounting.com"},{decimals:[12],displayName:"Synesthesia",network:"synesthesia",prefix:15,standardAccount:"*25519",symbols:["SYN"],website:"https://synesthesia.network/"},{decimals:[12],displayName:"Kulupu",network:"kulupu",prefix:16,standardAccount:"*25519",symbols:["KLP"],website:"https://kulupu.network/"},{decimals:null,displayName:"Dark Mainnet",network:"dark",prefix:17,standardAccount:"*25519",symbols:null,website:null},{decimals:[9,9],displayName:"Darwinia Network",network:"darwinia",prefix:18,standardAccount:"*25519",symbols:["RING","KTON"],website:"https://darwinia.network/"},{decimals:[12],displayName:"GeekCash",network:"geek",prefix:19,standardAccount:"*25519",symbols:["GEEK"],website:"https://geekcash.org"},{decimals:[12],displayName:"Stafi",network:"stafi",prefix:20,standardAccount:"*25519",symbols:["FIS"],website:"https://stafi.io"},{decimals:[6],displayName:"Dock Testnet",network:"dock-testnet",prefix:21,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:[6],displayName:"Dock Mainnet",network:"dock-mainnet",prefix:22,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:null,displayName:"ShiftNrg",network:"shift",prefix:23,standardAccount:"*25519",symbols:null,website:null},{decimals:[18],displayName:"ZERO",network:"zero",prefix:24,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:[18],displayName:"ZERO Alphaville",network:"zero-alphaville",prefix:25,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:[10],displayName:"Jupiter",network:"jupiter",prefix:26,standardAccount:"*25519",symbols:["jDOT"],website:"https://jupiter.patract.io"},{decimals:null,displayName:"Subsocial",network:"subsocial",prefix:28,standardAccount:"*25519",symbols:null,website:null},{decimals:[12,12],displayName:"CORD Network",network:"cord",prefix:29,standardAccount:"*25519",symbols:["DHI","WAY"],website:"https://cord.network/"},{decimals:[12],displayName:"Phala Network",network:"phala",prefix:30,standardAccount:"*25519",symbols:["PHA"],website:"https://phala.network"},{decimals:[12],displayName:"Litentry Network",network:"litentry",prefix:31,standardAccount:"*25519",symbols:["LIT"],website:"https://litentry.com/"},{decimals:[9],displayName:"Robonomics",network:"robonomics",prefix:32,standardAccount:"*25519",symbols:["XRT"],website:"https://robonomics.network"},{decimals:null,displayName:"DataHighway",network:"datahighway",prefix:33,standardAccount:"*25519",symbols:null,website:null},{decimals:[12],displayName:"Ares Protocol",network:"ares",prefix:34,standardAccount:"*25519",symbols:["ARES"],website:"https://www.aresprotocol.com/"},{decimals:[15],displayName:"Valiu Liquidity Network",network:"vln",prefix:35,standardAccount:"*25519",symbols:["USDv"],website:"https://valiu.com/"},{decimals:[18],displayName:"Centrifuge Chain",network:"centrifuge",prefix:36,standardAccount:"*25519",symbols:["CFG"],website:"https://centrifuge.io/"},{decimals:[18],displayName:"Nodle Chain",network:"nodle",prefix:37,standardAccount:"*25519",symbols:["NODL"],website:"https://nodle.io/"},{decimals:[18],displayName:"KILT Chain",network:"kilt",prefix:38,standardAccount:"*25519",symbols:["KILT"],website:"https://kilt.io/"},{decimals:[18],displayName:"MathChain mainnet",network:"mathchain",prefix:39,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:[18],displayName:"MathChain testnet",network:"mathchain-testnet",prefix:40,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:null,displayName:"Polimec Chain",network:"poli",prefix:41,standardAccount:"*25519",symbols:null,website:"https://polimec.io/"},{decimals:null,displayName:"Substrate",network:"substrate",prefix:42,standardAccount:"*25519",symbols:null,website:"https://substrate.io/"},{decimals:null,displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",network:"BareSecp256k1",prefix:43,standardAccount:"secp256k1",symbols:null,website:null},{decimals:[8],displayName:"ChainX",network:"chainx",prefix:44,standardAccount:"*25519",symbols:["PCX"],website:"https://chainx.org/"},{decimals:[12,12],displayName:"UniArts Network",network:"uniarts",prefix:45,standardAccount:"*25519",symbols:["UART","UINK"],website:"https://uniarts.me"},{decimals:null,displayName:"This prefix is reserved.",network:"reserved46",prefix:46,standardAccount:null,symbols:null,website:null},{decimals:null,displayName:"This prefix is reserved.",network:"reserved47",prefix:47,standardAccount:null,symbols:null,website:null},{decimals:[12],displayName:"Neatcoin Mainnet",network:"neatcoin",prefix:48,standardAccount:"*25519",symbols:["NEAT"],website:"https://neatcoin.org"},{decimals:[12],displayName:"Picasso",network:"picasso",prefix:49,standardAccount:"*25519",symbols:["PICA"],website:"https://picasso.composable.finance"},{decimals:[12],displayName:"Composable",network:"composable",prefix:50,standardAccount:"*25519",symbols:["LAYR"],website:"https://composable.finance"},{decimals:[9],displayName:"xx network",network:"xxnetwork",prefix:55,standardAccount:"*25519",symbols:["XX"],website:"https://xx.network"},{decimals:[12],displayName:"HydraDX",network:"hydradx",prefix:63,standardAccount:"*25519",symbols:["HDX"],website:"https://hydradx.io"},{decimals:[18],displayName:"AvN Mainnet",network:"aventus",prefix:65,standardAccount:"*25519",symbols:["AVT"],website:"https://aventus.io"},{decimals:[12],displayName:"Crust Network",network:"crust",prefix:66,standardAccount:"*25519",symbols:["CRU"],website:"https://crust.network"},{decimals:[0,9,9,9,9,9,9,9],displayName:"Equilibrium Network",network:"equilibrium",prefix:67,standardAccount:"*25519",symbols:["Unknown","USD","EQ","ETH","BTC","EOS","DOT","CRV"],website:"https://equilibrium.io"},{decimals:[18],displayName:"SORA Network",network:"sora",prefix:69,standardAccount:"*25519",symbols:["XOR"],website:"https://sora.org"},{decimals:[10],displayName:"Zeitgeist",network:"zeitgeist",prefix:73,standardAccount:"*25519",symbols:["ZTG"],website:"https://zeitgeist.pm"},{decimals:[12],displayName:"Manta network",network:"manta",prefix:77,standardAccount:"*25519",symbols:["MA"],website:"https://manta.network"},{decimals:[12],displayName:"Calamari: Manta Canary Network",network:"calamari",prefix:78,standardAccount:"*25519",symbols:["KMA"],website:"https://manta.network"},{decimals:[12],displayName:"Polkadex Mainnet",network:"polkadex",prefix:88,standardAccount:"*25519",symbols:["PDEX"],website:"https://polkadex.trade"},{decimals:[18],displayName:"PolkaSmith Canary Network",network:"polkasmith",prefix:98,standardAccount:"*25519",symbols:["PKS"],website:"https://polkafoundry.com"},{decimals:[18],displayName:"PolkaFoundry Network",network:"polkafoundry",prefix:99,standardAccount:"*25519",symbols:["PKF"],website:"https://polkafoundry.com"},{decimals:[18],displayName:"OriginTrail Parachain",network:"origintrail-parachain",prefix:101,standardAccount:"secp256k1",symbols:["TRAC"],website:"https://origintrail.io"},{decimals:[10],displayName:"Pontem Network",network:"pontem-network",prefix:105,standardAccount:"*25519",symbols:["PONT"],website:"https://pontem.network"},{decimals:[12],displayName:"Heiko",network:"heiko",prefix:110,standardAccount:"*25519",symbols:["HKO"],website:"https://parallel.fi/"},{decimals:null,displayName:"Integritee Incognito",network:"integritee-incognito",prefix:113,standardAccount:"*25519",symbols:null,website:"https://integritee.network"},{decimals:[18],displayName:"Clover Finance",network:"clover",prefix:128,standardAccount:"*25519",symbols:["CLV"],website:"https://clover.finance"},{decimals:[18],displayName:"Altair",network:"altair",prefix:136,standardAccount:"*25519",symbols:["AIR"],website:"https://centrifuge.io/"},{decimals:[12],displayName:"Parallel",network:"parallel",prefix:172,standardAccount:"*25519",symbols:["PARA"],website:"https://parallel.fi/"},{decimals:[18],displayName:"Social Network",network:"social-network",prefix:252,standardAccount:"*25519",symbols:["NET"],website:"https://social.network"},{decimals:[15],displayName:"QUARTZ by UNIQUE",network:"quartz_mainnet",prefix:255,standardAccount:"*25519",symbols:["QTZ"],website:"https://unique.network"},{decimals:[18],displayName:"Pioneer Network by Bit.Country",network:"pioneer_network",prefix:268,standardAccount:"*25519",symbols:["NEER"],website:"https://bit.country"},{decimals:[18],displayName:"Moonbeam",network:"moonbeam",prefix:1284,standardAccount:"secp256k1",symbols:["GLMR"],website:"https://moonbeam.network"},{decimals:[18],displayName:"Moonriver",network:"moonriver",prefix:1285,standardAccount:"secp256k1",symbols:["MOVR"],website:"https://moonbeam.network"},{decimals:[12],displayName:"Kapex",network:"kapex",prefix:2007,standardAccount:"*25519",symbols:["KAPEX"],website:"https://totemaccounting.com"},{decimals:[18],displayName:"Subspace testnet",network:"subspace_testnet",prefix:2254,standardAccount:"*25519",symbols:["tSSC"],website:"https://subspace.network"},{decimals:[18],displayName:"Subspace",network:"subspace",prefix:6094,standardAccount:"*25519",symbols:["SSC"],website:"https://subspace.network"},{decimals:[12],displayName:"Basilisk",network:"basilisk",prefix:10041,standardAccount:"*25519",symbols:["BSX"],website:"https://bsx.fi"},{decimals:[12],displayName:"CESS Testnet",network:"cess-testnet",prefix:10042,standardAccount:"*25519",symbols:["TCESS"],website:"https://cess.cloud"},{decimals:[12],displayName:"CESS",network:"cess",prefix:10043,standardAccount:"*25519",symbols:["CESS"],website:"https://cess.cloud"},{decimals:[18],displayName:"Automata ContextFree",network:"contextfree",prefix:11820,standardAccount:"*25519",symbols:["CTX"],website:"https://ata.network"}].map((function(t){const e=t.network||"",r=e.replace(/_/g,"-").split("-"),n=t;return n.slip44=Ek[e],n.hasLedgerSupport=!!n.slip44,n.genesisHash=zk[e]||[],n.icon=Nk[e]||"substrate",n.isTestnet=!!Yk[e]||Ik.includes(r[r.length-1]),n.isIgnored=n.isTestnet||!(t.standardAccount&&t.decimals&&t.symbols)&&42!==t.prefix,n})).filter((function(t){return!t.isIgnored&&!!t.network})).sort((function(t,e){const r=Rk.includes(t.prefix),n=Rk.includes(e.prefix);return r===n?0:r?-1:n?1:t.displayName.localeCompare(e.displayName)}));Bk.filter((function({genesisHash:t,prefix:e}){return!!t.length||42===e}));const Xk={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:Bk.map((function({prefix:t}){return t})),prefix:42};function Vk(t,e,r=-1){if(_(t,"Invalid empty address passed"),us(t)||$i(t))return ds(t);try{const n=AM(t);_(Xk.allowedEncodedLengths.includes(n.length),"Invalid decoded address length");const[i,s,o,a]=Ok(n);return _(e||i,"Invalid decoded address checksum"),_([-1,a].includes(r),(()=>`Expected ss58Format ${r}, received ${a}`)),n.slice(o,s)}catch(e){throw new Error(`Decoding ${t}: ${e.message}`)}}function Ck(){return"none"}function Wk(t,{getInstanceId:e=Ck}={}){const r={},n=(...n)=>{const i=Tu(n),s=e();return r[s]||(r[s]={}),G(r[s][i])&&(r[s][i]=t(...n)),r[s][i]};return n.unmemoize=(...t)=>{const n=Tu(t),i=e();r[i]&&!G(r[i][n])&&delete r[i][n]},n}function qk(t,e){return t===e}var Zk={now:function(){return(Zk.delegate||Date).now()},delegate:void 0},Fk=function(t){function e(e,r,n){void 0===e&&(e=1/0),void 0===r&&(r=1/0),void 0===n&&(n=Zk);var i=t.call(this)||this;return i._bufferSize=e,i._windowTime=r,i._timestampProvider=n,i._buffer=[],i._infiniteTimeWindow=!0,i._infiniteTimeWindow=r===1/0,i._bufferSize=Math.max(1,e),i._windowTime=Math.max(1,r),i}return As(e,t),e.prototype.next=function(e){var r=this,n=r.isStopped,i=r._buffer,s=r._infiniteTimeWindow,o=r._timestampProvider,a=r._windowTime;n||(i.push(e),!s&&i.push(o.now()+a)),this._trimBuffer(),t.prototype.next.call(this,e)},e.prototype._subscribe=function(t){this._throwIfClosed(),this._trimBuffer();for(var e=this._innerSubscribe(t),r=this._infiniteTimeWindow,n=this._buffer.slice(),i=0;i<n.length&&!t.closed;i+=r?1:2)t.next(n[i]);return this._checkFinalizedStatuses(t),e},e.prototype._trimBuffer=function(){var t=this,e=t._bufferSize,r=t._timestampProvider,n=t._buffer,i=t._infiniteTimeWindow,s=(i?1:2)*e;if(e<1/0&&s<n.length&&n.splice(0,n.length-s),!i){for(var o=r.now(),a=0,u=1;u<n.length&&n[u]<=o;u+=2)a=u;a&&n.splice(0,a+1)}},e}(fo);function Uk(){return Ia((function(t,e){var r=null;t._refCount++;var n=new Ba(e,void 0,void 0,void 0,(function(){if(!t||t._refCount<=0||0<--t._refCount)r=null;else{var n=t._connection,i=r;r=null,!n||i&&n!==i||n.unsubscribe(),e.unsubscribe()}}));t.subscribe(n),n.closed||(r=t.connect())}))}var Gk=function(t){function e(e,r){var n=t.call(this)||this;return n.source=e,n.subjectFactory=r,n._subject=null,n._refCount=0,n._connection=null,Ra(e)&&(n.lift=e.lift),n}return As(e,t),e.prototype._subscribe=function(t){return this.getSubject().subscribe(t)},e.prototype.getSubject=function(){var t=this._subject;return t&&!t.isStopped||(this._subject=this.subjectFactory()),this._subject},e.prototype._teardown=function(){this._refCount=0;var t=this._connection;this._subject=this._connection=null,null==t||t.unsubscribe()},e.prototype.connect=function(){var t=this,e=this._connection;if(!e){e=this._connection=new Vs;var r=this.getSubject();e.add(this.source.subscribe(new Ba(r,void 0,(function(){t._teardown(),r.complete()}),(function(e){t._teardown(),r.error(e)}),(function(){return t._teardown()})))),e.closed&&(this._connection=null,e=Vs.EMPTY)}return e},e.prototype.refCount=function(){return Uk()(this)},e}(ho);var _k={connector:function(){return new fo}};function Kk(t,e){void 0===e&&(e=_k);var r=e.connector;return Ia((function(e,n){var i,s=r();qa(t((i=s,new ho((function(t){return i.subscribe(t)}))))).subscribe(n),n.add(e.subscribe(s))}))}function Jk(t,e,r,n){r&&!Rs(r)&&(n=r);var i=Rs(r)?r:void 0;return function(r){return function(t,e){var r=Rs(t)?t:function(){return t};return Rs(e)?Kk(e,{connector:r}):function(t){return new Gk(t,r)}}(new Fk(t,e,n),i)(r)}}var Qk,$k=function(t){function e(e,r){return t.call(this)||this}return As(e,t),e.prototype.schedule=function(t,e){return void 0===e&&(e=0),this},e}(Vs),tx={setInterval:function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var r=tx.delegate;return((null==r?void 0:r.setInterval)||setInterval).apply(void 0,zs([],Os(t)))},clearInterval:function(t){var e=tx.delegate;return((null==e?void 0:e.clearInterval)||clearInterval)(t)},delegate:void 0},ex=function(t){function e(e,r){var n=t.call(this,e,r)||this;return n.scheduler=e,n.work=r,n.pending=!1,n}return As(e,t),e.prototype.schedule=function(t,e){if(void 0===e&&(e=0),this.closed)return this;this.state=t;var r=this.id,n=this.scheduler;return null!=r&&(this.id=this.recycleAsyncId(n,r,e)),this.pending=!0,this.delay=e,this.id=this.id||this.requestAsyncId(n,this.id,e),this},e.prototype.requestAsyncId=function(t,e,r){return void 0===r&&(r=0),tx.setInterval(t.flush.bind(t,this),r)},e.prototype.recycleAsyncId=function(t,e,r){if(void 0===r&&(r=0),null!=r&&this.delay===r&&!1===this.pending)return e;tx.clearInterval(e)},e.prototype.execute=function(t,e){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var r=this._execute(t,e);if(r)return r;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},e.prototype._execute=function(t,e){var r,n=!1;try{this.work(t)}catch(t){n=!0,r=t||new Error("Scheduled action threw falsy error")}if(n)return this.unsubscribe(),r},e.prototype.unsubscribe=function(){if(!this.closed){var e=this.id,r=this.scheduler,n=r.actions;this.work=this.state=this.scheduler=null,this.pending=!1,Xs(n,this),null!=e&&(this.id=this.recycleAsyncId(r,e,null)),this.delay=null,t.prototype.unsubscribe.call(this)}},e}($k),rx=1,nx={};function ix(t){return t in nx&&(delete nx[t],!0)}var sx=function(t){var e=rx++;return nx[e]=!0,Qk||(Qk=Promise.resolve()),Qk.then((function(){return ix(e)&&t()})),e},ox=function(t){ix(t)},ax={setImmediate:function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var r=ax.delegate;return((null==r?void 0:r.setImmediate)||sx).apply(void 0,zs([],Os(t)))},clearImmediate:function(t){var e=ax.delegate;return((null==e?void 0:e.clearImmediate)||ox)(t)},delegate:void 0},ux=function(t){function e(e,r){var n=t.call(this,e,r)||this;return n.scheduler=e,n.work=r,n}return As(e,t),e.prototype.requestAsyncId=function(e,r,n){return void 0===n&&(n=0),null!==n&&n>0?t.prototype.requestAsyncId.call(this,e,r,n):(e.actions.push(this),e._scheduled||(e._scheduled=ax.setImmediate(e.flush.bind(e,void 0))))},e.prototype.recycleAsyncId=function(e,r,n){if(void 0===n&&(n=0),null!=n&&n>0||null==n&&this.delay>0)return t.prototype.recycleAsyncId.call(this,e,r,n);0===e.actions.length&&(ax.clearImmediate(r),e._scheduled=void 0)},e}(ex),hx=function(){function t(e,r){void 0===r&&(r=t.now),this.schedulerActionCtor=e,this.now=r}return t.prototype.schedule=function(t,e,r){return void 0===e&&(e=0),new this.schedulerActionCtor(this,t).schedule(r,e)},t.now=Zk.now,t}(),cx=new(function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return As(e,t),e.prototype.flush=function(t){this._active=!0,this._scheduled=void 0;var e,r=this.actions,n=-1;t=t||r.shift();var i=r.length;do{if(e=t.execute(t.state,t.delay))break}while(++n<i&&(t=r.shift()));if(this._active=!1,e){for(;++n<i&&(t=r.shift());)t.unsubscribe();throw e}},e}(function(t){function e(e,r){void 0===r&&(r=hx.now);var n=t.call(this,e,r)||this;return n.actions=[],n._active=!1,n._scheduled=void 0,n}return As(e,t),e.prototype.flush=function(t){var e=this.actions;if(this._active)e.push(t);else{var r;this._active=!0;do{if(r=t.execute(t.state,t.delay))break}while(t=e.shift());if(this._active=!1,r){for(;t=e.shift();)t.unsubscribe();throw r}}},e}(hx)))(ux);function lx(t=1750){return e=>{let[r,n,i,s]=[0,0,Vs.EMPTY,Vs.EMPTY];return new ho((o=>(e.subscribe(o),0==n++&&(1===r?s.unsubscribe():i=e.connect(),r=3),()=>{0==--n&&(2===r?(r=0,s.unsubscribe()):(r=1,s=cx.schedule((()=>{r=0,i.unsubscribe()}),t)))})))}}const dx=xu("drr"),fx=(t,e)=>Tu({t})===Tu({t:e}),px=t=>{throw dx.error(t.message),t},mx=()=>{},yx=({delay:t,skipChange:e=!1,skipTimeout:r=!1}={})=>n=>{return n.pipe(yM(px),e?MM(mx):(void 0===s&&(s=ao),i=null!=(i=fx)?i:qk,Ia((function(t,e){var r,n=!0;t.subscribe(new Ba(e,(function(t){var o=s(t);!n&&i(r,o)||(n=!1,r=o,e.next(t))})))}))),Jk(1),r?Uk():lx(t));var i,s};function vx(t,e){const r=Wk(((...t)=>new ho((n=>{const i=e(...t).subscribe(n);return()=>{r.unmemoize(...t),i.unsubscribe()}})).pipe(yx())),{getInstanceId:()=>t});return r}function gx(t,e){return vx(t,(t=>function(t,e){const r=us(e)?e:Vk((e||"").toString());if(r.length>8)return wh(t.registry.createType("AccountId",r));const n=t.registry.createType("AccountIndex",r);return t.derive.accounts.indexToId(n.toString()).pipe(Za((t=>K(t,"Unable to retrieve accountId"))))}(e,t)))}function bx(t,e){return vx(t,(t=>{var r,n,i,s,o;const a=e.query.phragmenElection?"phragmenElection":e.query.electionsPhragmen?"electionsPhragmen":"elections";return Qa([t&&null!==(r=e.query[a])&&void 0!==r&&r.members?e.query[a].members():wh(void 0),t&&null!==(n=e.query.council)&&void 0!==n&&n.members?e.query.council.members():wh([]),t&&null!==(i=e.query.technicalCommittee)&&void 0!==i&&i.members?e.query.technicalCommittee.members():wh([]),t&&null!==(s=e.query.society)&&void 0!==s&&s.members?e.query.society.members():wh([]),t&&null!==(o=e.query.sudo)&&void 0!==o&&o.key?e.query.sudo.key():wh(void 0)]).pipe(Za((e=>function(t,[e,r,n,i,s]){const o=e=>!!t&&e.toString()===t.toString();return{isCouncil:((null==e?void 0:e.map((([t])=>t)))||r||[]).some(o),isSociety:(i||[]).some(o),isSudo:(null==s?void 0:s.toString())===(null==t?void 0:t.toString()),isTechCommittee:(n||[]).some(o)}}(t,e))))}))}function wx(t,e){return vx(t,(t=>function(t,e){try{const r=us(e)?e:Vk((e||"").toString());if(r.length>8){const e=t.registry.createType("AccountId",r);return t.derive.accounts.idToIndex(e).pipe(Za((t=>[e,t])))}const n=t.registry.createType("AccountIndex",r);return t.derive.accounts.indexToId(n.toString()).pipe(Za((t=>[t,n])))}catch(t){return wh([void 0,void 0])}}(e,t)))}function Mx(t,e){return vx(t,(t=>e.derive.accounts.indexes().pipe(Za((e=>(e||{})[t.toString()])))))}const kx={toHex:()=>{}};function xx(t){return t.isRaw?ks(t.asRaw.toU8a(!0)):t.isNone?void 0:t.toHex()}function Px(t,e){return vx(t,(t=>function(t,e){var r;return e&&null!==(r=t.query.identity)&&void 0!==r&&r.identityOf?t.queryMulti([[t.query.identity.identityOf,e],[t.query.identity.superOf,e]]):wh([void 0,void 0])}(e,t).pipe(bh((([t,r])=>function(t,e,r){if(null!=e&&e.isSome)return wh([e,void 0]);if(null!=r&&r.isSome){const e=r.unwrap();return Qa([t.query.identity.identityOf(e[0]),wh(e)])}return wh([void 0,void 0])}(e,t,r))),Za((([t,e])=>function(t,e){if(null==t||!t.isSome)return{judgements:[]};const{info:r,judgements:n}=t.unwrap(),i=xx(r.display);return{display:e&&xx(e[1])||i,displayParent:e&&i,email:xx(r.email),image:xx(r.image),judgements:n,legal:xx(r.legal),other:(s=r.additional,s.reduce(((t,[e,r])=>{const n=xx(e),i=xx(r);return n&&i&&(t[n]=i),t}),{})),parent:e&&e[0],pgp:r.pgpFingerprint.unwrapOr(kx).toHex(),riot:xx(r.riot),twitter:xx(r.twitter),web:xx(r.web)};var s}(t,e))))))}function Lx(t,e){return vx(t,(t=>e.derive.accounts.hasIdentityMulti([t]).pipe(Za((([t])=>t)))))}function Tx(t,e){return vx(t,(t=>{var r;return null!==(r=e.query.identity)&&void 0!==r&&r.identityOf?Qa([e.query.identity.identityOf.multi(t),e.query.identity.superOf.multi(t)]).pipe(Za((([t,e])=>t.map(((t,r)=>{const n=e[r],i=n&&n.isSome?n.unwrap()[0].toString():void 0;let s;if(t&&t.isSome){const e=xx(t.unwrap().info.display);e&&!$i(e)&&(s=e)}return{display:s,hasIdentity:!(!s&&!i),parentId:i}}))))):wh(t.map((()=>({hasIdentity:!1}))))}))}function Sx(t,e){return vx(t,(t=>e.query.indices?e.query.indices.accounts(t).pipe(Za((t=>t.unwrapOr([])[0]))):wh(void 0)))}function Ax(t,e,r){return void 0===r&&(r=1/0),Rs(e)?Ax((function(r,n){return Za((function(t,i){return e(r,t,n,i)}))(Na(t(r,n)))}),r):("number"==typeof e&&(r=e),Ia((function(e,n){return function(t,e,r,n,i,s,o,a){var u=[],h=0,c=0,l=!1,d=function(){!l||u.length||h||e.complete()},f=function(t){return h<n?p(t):u.push(t)},p=function(t){s&&e.next(t),h++;var a=!1;Na(r(t,c++)).subscribe(new Ba(e,(function(t){null==i||i(t),s?f(t):e.next(t)}),(function(){a=!0}),void 0,(function(){if(a)try{h--;for(var t=function(){var t=u.shift();o?Ya(e,o,(function(){return p(t)})):p(t)};u.length&&h<n;)t();d()}catch(t){e.error(t)}})))};return t.subscribe(new Ba(e,f,(function(){l=!0,d()}))),function(){null==a||a()}}(e,n,t,r)})))}function Dx(){return void 0===(t=1)&&(t=1/0),Ax(ao,t);var t}function jx(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return Dx()(qa(t,Ka(t)))}function Hx(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var r=Ka(t);return Ia((function(e,n){(r?jx(t,e,r):jx(t,e)).subscribe(n)}))}let Ox=null;function zx(t,e){return vx(t,(()=>Ox?wh(Ox):(e.query.indices?function(t){return t.query.indices.accounts.entries().pipe(Za((e=>e.reduce(((e,[r,n])=>(n.isSome&&(e[n.unwrap()[0].toString()]=t.registry.createType("AccountIndex",r.args[0])),e)),{}))))}(e).pipe(Hx({})):wh({})).pipe(Za((t=>(Ox=t,t))))))}function Nx(t,e){var r;return(e&&null!==(r=t.query.nicks)&&void 0!==r&&r.nameOf?t.query.nicks.nameOf(e):wh(void 0)).pipe(Za((e=>null!=e&&e.isSome?ks(e.unwrap()[0]).substr(0,t.consts.nicks.maxLength.toNumber()):void 0)))}function Ex(t,e){return vx(t,(t=>e.derive.accounts.idAndIndex(t).pipe(bh((([t,r])=>Qa([wh({accountId:t,accountIndex:r}),e.derive.accounts.identity(t),Nx(e,t)]))),Za((([{accountId:t,accountIndex:e},r,n])=>({accountId:t,accountIndex:e,identity:r,nickname:n}))))))}function Yx(t,e){_(e.length>=1,"Must provide one or more BN arguments");let r=e[0];for(let n=1;n<e.length;n++)r=ps[t](r,e[n]);return r}function Rx(...t){return Yx("max",t)}function Ix(t,e,r,n){const{allLocked:i,lockedBalance:s,lockedBreakdown:o,vestingLocked:a}=function(t,e,r){let n=t.registry.createType("Balance"),i=[],s=t.registry.createType("Balance"),o=!1;if(Array.isArray(r)){i=r.filter((({until:t})=>!t||e&&t.gt(e))),o=i.some((({amount:t})=>t&&t.isMax())),s=t.registry.createType("Balance",i.filter((({id:t})=>t.eq("0x76657374696e6720"))).reduce(((t,{amount:e})=>t.iadd(e)),new ps(0)));const a=i.filter((({amount:t})=>t&&!t.isMax()));a.length&&(n=t.registry.createType("Balance",Rx(...a.map((({amount:t})=>t)))))}return{allLocked:o,lockedBalance:n,lockedBreakdown:i,vestingLocked:s}}(t,e,n);return{...r,availableBalance:t.registry.createType("Balance",i?0:Rx(new ps(0),r.freeBalance.sub(s))),lockedBalance:s,lockedBreakdown:o,vestingLocked:a}}function Bx(t,e,r){const n=r||[],i=!e.vestingLocked.isZero(),s=n.map((({locked:e,perBlock:r,startingBlock:n})=>t.gt(n)?function(...t){return Yx("min",t)}(e,r.mul(t.sub(n))):Nh)),o=s.reduce(((t,e)=>t.iadd(e)),new ps(0)),a=n.reduce(((t,{locked:e})=>t.iadd(e)),new ps(0));return{isVesting:i,vestedBalance:o,vestedClaimable:i?e.vestingLocked.sub(a.sub(o)):Nh,vesting:n.map((({locked:t,perBlock:e,startingBlock:r},n)=>({endBlock:t.div(e).iadd(r),locked:t,perBlock:e,startingBlock:r,vested:s[n]}))).filter((({locked:t})=>!t.isZero())),vestingTotal:a}}function Xx(t,e){return t.queryMulti([[t.query.balances.locks,e],[t.query.balances.vesting,e]]).pipe(Za((([e,r])=>{let n=null;if(r.isSome){const{offset:e,perBlock:i,startingBlock:s}=r.unwrap();n=t.registry.createType("VestingInfo",{locked:e,perBlock:i,startingBlock:s})}return[n?[n]:null,[e]]})))}const Vx=t=>!!t;function Cx(t,e,r=["balances"]){var n;const i=r.map((e=>{var r,n;return(null===(r=t.derive[e])||void 0===r?void 0:r.customLocks)||(null===(n=t.query[e])||void 0===n?void 0:n.locks)})),s=i.map((t=>!t)),o=i.filter(Vx).map((t=>[t,e]));return(null!==(n=t.query.vesting)&&void 0!==n&&n.vesting?t.queryMulti([[t.query.vesting.vesting,e],...o]):o.length?t.queryMulti(o).pipe(Za((e=>[t.registry.createType("Option<VestingInfo>"),...e]))):wh([t.registry.createType("Option<VestingInfo>")])).pipe(Za((([e,...r])=>{let n=-1;const i=e.unwrapOr(null);return[i?Array.isArray(i)?i:[i]:null,s.map((e=>e?t.registry.createType("Vec<BalanceLock>"):r[++n]))]})))}function Wx(t,e){const r=e.registry.getModuleInstances(e.runtimeVersion.specName.toString(),"balances");return vx(t,(t=>e.derive.balances.account(t).pipe(bh((t=>{var n,i;return t.accountId.isEmpty?wh([t,e.registry.createType("BlockNumber"),[null,[]]]):Qa([wh(t),e.derive.chain.bestNumber(),Z(null===(n=e.query.system)||void 0===n?void 0:n.account)||Z(null===(i=e.query.balances)||void 0===i?void 0:i.account)?Cx(e,t.accountId,r):Xx(e,t.accountId)])})),Za((t=>function(t,[e,r,[n,i]]){const s=Ix(t,r,e,i[0]);return{...s,...Bx(r,s,n),accountId:e.accountId,accountNonce:e.accountNonce,additional:i.filter(((t,e)=>0!==e)).map(((n,i)=>Ix(t,r,e.additional[i],n)))}}(e,t))))))}function qx(t){return t.registry.createType("Balance")}function Zx(t,[e,r,n,i]){const s=t.registry.createType("Balance",e.toBn());return{freeBalance:e,frozenFee:n,frozenMisc:i,reservedBalance:r,votingBalance:s}}function Fx(t,e){return t.queryMulti([[t.query.balances.freeBalance,e],[t.query.balances.reservedBalance,e],[t.query.system.accountNonce,e]]).pipe(Za((([e,r,n])=>[n,[[e,r,qx(t),qx(t)]]])))}function Ux(t,e){const r=e=>[e,[[qx(t),qx(t),qx(t),qx(t)]]];return Z(t.query.system.account)?t.query.system.account(e).pipe(Za((({nonce:t})=>r(t)))):Z(t.query.system.accountNonce)?t.query.system.accountNonce(e).pipe(Za((t=>r(t)))):wh(r(t.registry.createType("Index")))}function Gx(t,e,r=["balances"]){const n=r.map((e=>{var r,n;return(null===(r=t.derive[e])||void 0===r?void 0:r.customAccount)||(null===(n=t.query[e])||void 0===n?void 0:n.account)})).filter((t=>Z(t))).map((t=>[t,e])),i=(t,e)=>[t,e.map((({feeFrozen:t,free:e,miscFrozen:r,reserved:n})=>[e,n,t,r]))];return n.length?Z(t.query.system.account)?t.queryMulti([[t.query.system.account,e],...n]).pipe(Za((([{nonce:t},...e])=>i(t,e)))):t.queryMulti([[t.query.system.accountNonce,e],...n]).pipe(Za((([t,...e])=>i(t,e)))):Ux(t,e)}function _x(t,e){return t.query.system.account(e).pipe(Za((e=>{const r=e.nonce?e.data:e[1],n=e.nonce||e[0];if(!r||r.isEmpty)return[n,[[qx(t),qx(t),qx(t),qx(t)]]];const{feeFrozen:i,free:s,miscFrozen:o,reserved:a}=r;return[n,[[s,a,i,o]]]})))}function Kx(t,e){const r=e.registry.getModuleInstances(e.runtimeVersion.specName.toString(),"balances");return vx(t,(t=>e.derive.accounts.accountId(t).pipe(bh((t=>{var n,i,s;return t?Qa([wh(t),r?Gx(e,t,r):Z(null===(n=e.query.system)||void 0===n?void 0:n.account)?_x(e,t):Z(null===(i=e.query.balances)||void 0===i?void 0:i.account)?Gx(e,t):Z(null===(s=e.query.balances)||void 0===s?void 0:s.freeBalance)?Fx(e,t):Ux(e,t)]):wh([e.registry.createType("AccountId"),[e.registry.createType("Index"),[[qx(e),qx(e),qx(e),qx(e)]]]])})),Za((t=>function(t,[e,[r,[n,...i]]]){return{accountId:e,accountNonce:r,additional:i.map((e=>Zx(t,e))),...Zx(t,n)}}(e,t))))))}function Jx(t,e){return vx(t,(()=>{var t,r,n,i,s;return wh([(null===(t=e.consts.balances)||void 0===t?void 0:t.creationFee)||e.registry.createType("Balance"),(null===(r=e.consts.balances)||void 0===r?void 0:r.transferFee)||e.registry.createType("Balance"),(null===(n=e.consts.balances)||void 0===n?void 0:n.existentialDeposit)||e.registry.createType("Balance"),(null===(i=e.consts.transactionPayment)||void 0===i?void 0:i.transactionBaseFee)||e.registry.createType("Balance"),(null===(s=e.consts.transactionPayment)||void 0===s?void 0:s.transactionByteFee)||e.registry.createType("Balance")]).pipe(Za((([t,e,r,n,i])=>({creationFee:t,existentialDeposit:r,transactionBaseFee:n,transactionByteFee:i,transferFee:e}))))}))}function Qx(t,e){return vx(t,(t=>t&&t.length?Qa(t.map((t=>e.derive.balances.account(t)))):wh([])))}const $x=Wx;function tP(t,e){const r=t.tx.bounties?t.tx.bounties:t.tx.treasury,n=[r.approveBounty,r.closeBounty,r.proposeCurator,r.unassignCurator];return e.filter((t=>n.find((e=>e.is(t.proposal)))))}function eP([t,e,r,n]){const i=[];return t.forEach(((t,s)=>{t.isSome&&i.push({bounty:t.unwrap(),description:e[s].unwrapOrDefault().toUtf8(),index:r[s],proposals:n.filter((t=>r[s].eq(t.proposal.args[0])))})})),i}function rP(t,e){const r=e.query.bounties||e.query.treasury;return vx(t,(()=>Qa([r.bountyCount(),e.query.council?e.query.council.proposalCount():wh(0)]).pipe(bh((()=>Qa([r.bounties.keys(),e.derive.council?e.derive.council.proposals():wh([])]))),bh((([t,n])=>{const i=t.map((({args:[t]})=>t));return Qa([r.bounties.multi(i),r.bountyDescriptions.multi(i),wh(i),wh(tP(e,n))])})),Za(eP))))}function nP(t,e){return vx(t,(()=>e.derive.chain.subscribeNewHeads().pipe(Za((t=>t.number.unwrap())))))}function iP(t,e){return vx(t,(()=>e.rpc.chain.subscribeFinalizedHeads().pipe(Za((t=>t.number.unwrap())))))}function sP(t,e){return vx(t,(()=>Qa([e.derive.chain.bestNumber(),e.derive.chain.bestNumberFinalized()]).pipe(Za((([t,r])=>e.registry.createType("BlockNumber",t.sub(r)))))))}function oP(t,e=[]){const[r]=t.logs.filter((({type:t})=>"Consensus"===t)),[n]=t.logs.filter((({type:t})=>"PreRuntime"===t)),[i]=t.logs.filter((({type:t})=>"Seal"===t));let s;if(n)try{const[t,r]=n.asPreRuntime;s=t.extractAuthor(r,e)}catch{}if(!s&&r)try{const[t,n]=r.asConsensus;s=t.extractAuthor(n,e)}catch{}if(!s&&i)try{const[t,r]=i.asSeal;s=t.extractAuthor(r,e)}catch{}return s}function aP(t,e,r){const n=t.createClass("Header");var i=rt("author"),s=rt("validators");return new class extends n{constructor(t,e,r){super(t,e),Object.defineProperty(this,i,{writable:!0,value:void 0}),Object.defineProperty(this,s,{writable:!0,value:void 0}),tt(this,i)[i]=oP(this.digest,r),tt(this,s)[s]=r,this.createdAtHash=null==e?void 0:e.createdAtHash}get author(){return tt(this,i)[i]}get validators(){return tt(this,s)[s]}}(t,e,r)}function uP(t,e){return vx(t,(t=>Qa([e.rpc.chain.getHeader(t),e.queryAt(t).pipe(bh((t=>t.session?t.session.validators():wh([]))))]).pipe(Za((([t,e])=>aP(t.registry,t,e))),yM((()=>wh())))))}function hP(t,e,r,n){const i=t.createClass("SignedBlock");var s=rt("author"),o=rt("events"),a=rt("extrinsics");return new class extends i{constructor(t,e,r,n){var i,u;super(t,e),Object.defineProperty(this,s,{writable:!0,value:void 0}),Object.defineProperty(this,o,{writable:!0,value:void 0}),Object.defineProperty(this,a,{writable:!0,value:void 0}),tt(this,s)[s]=oP(this.block.header.digest,n),tt(this,o)[o]=r||[],tt(this,a)[a]=(i=this.block.extrinsics,u=tt(this,o)[o],i.map(((t,e)=>{let r,n;const i=u.filter((({phase:t})=>t.isApplyExtrinsic&&t.asApplyExtrinsic.eq(e))).map((({event:t})=>("system"===t.section&&("ExtrinsicSuccess"===t.method?n=t.data[0]:"ExtrinsicFailed"===t.method&&(r=t.data[0],n=t.data[1])),t)));return{dispatchError:r,dispatchInfo:n,events:i,extrinsic:t}}))),this.createdAtHash=null==e?void 0:e.createdAtHash}get author(){return tt(this,s)[s]}get events(){return tt(this,o)[o]}get extrinsics(){return tt(this,a)[a]}}(t,e,r,n)}function cP(t,e){return vx(t,(t=>Qa([e.rpc.chain.getBlock(t),e.queryAt(t).pipe(bh((t=>Qa([t.system.events(),t.session?t.session.validators():wh([])]))))]).pipe(Za((([t,[r,n]])=>hP(e.registry,t,r,n))),yM((()=>wh())))))}function lP(t,e){return vx(t,(()=>e.derive.chain.subscribeNewHeads().pipe(bh((t=>{const r=t.createdAtHash||t.hash;return Qa([wh(t),e.rpc.chain.getBlock(r),e.queryAt(r).pipe(bh((t=>t.system.events())))])})),Za((([t,e,r])=>hP(e.registry,e,r,t.validators))))))}function dP(t,e){return vx(t,(()=>Qa([e.rpc.chain.subscribeNewHeads(),e.query.session?e.query.session.validators():wh(void 0)]).pipe(Za((([t,e])=>(t.createdAtHash=t.hash,aP(t.registry,t,e)))))))}function fP(t,e){return vx(t,(()=>function(t){return wh([t.consts.contracts.callBaseFee||t.registry.createType("Balance"),t.consts.contracts.contractFee||t.registry.createType("Balance"),t.consts.contracts.creationFee||t.registry.createType("Balance"),t.consts.contracts.transactionBaseFee||t.registry.createType("Balance"),t.consts.contracts.transactionByteFee||t.registry.createType("Balance"),t.consts.contracts.transferFee||t.registry.createType("Balance"),t.consts.contracts.rentByteFee,t.consts.contracts.rentDepositOffset,t.consts.contracts.surchargeReward,t.consts.contracts.tombstoneDeposit])}(e).pipe(Za((([t,e,r,n,i,s,o,a,u,h])=>({callBaseFee:t,contractFee:e,creationFee:r,rentByteFee:o,rentDepositOffset:a,surchargeReward:u,tombstoneDeposit:h,transactionBaseFee:n,transactionByteFee:i,transferFee:s}))))))}function pP(t,e){const r=t.registry.getModuleInstances(t.runtimeVersion.specName.toString(),e);return r&&r.length?r[0]:e}function mP(t,e,r){const n=pP(e,r);return vx(t,(()=>{var t;return Z(null===(t=e.query[n])||void 0===t?void 0:t.members)?e.query[n].members():wh([])}))}function yP(t,e){return vx(t,mP(t,e,"council"))}function vP(t,e,r){const n=pP(e,r);return vx(t,(()=>{var t;return Z(null===(t=e.query[n])||void 0===t?void 0:t.prime)?e.query[n].prime().pipe(Za((t=>t.unwrapOr(null)))):wh(null)}))}function gP(t,e){return vx(t,vP(t,e,"council"))}function bP(t,e,r){return vx(t,(t=>{var n;return(Z(null===(n=e.query[r])||void 0===n?void 0:n.proposals)&&t.length?Qa([wh(t),Qa(t.map((t=>e.query[r].proposalOf(t).pipe(yM((()=>wh(null))))))),e.query[r].voting.multi(t)]):wh([[],[],[]])).pipe(Za((t=>function(t,[e,r,n]){return r.map(((r,i)=>r&&r.isSome?{hash:t.registry.createType("Hash",e[i]),proposal:r.unwrap(),votes:n[i].unwrapOr(null)}:null)).filter((t=>!!t))}(e,t))))}))}function wP(t,e,r){const n=pP(e,r);return vx(t,(()=>{var t;return wh(Z(null===(t=e.query[n])||void 0===t?void 0:t.proposals))}))}function MP(t,e,r){const n=pP(e,r);return vx(t,(()=>Z(e.query[n].proposalCount)?e.query[n].proposalCount():wh(null)))}function kP(t,e,r){const n=pP(e,r);return vx(t,(()=>{var t;return Z(null===(t=e.query[n])||void 0===t?void 0:t.proposals)?e.query[n].proposals():wh([])}))}function xP(t,e,r){const n=bP(t,e,pP(e,r)),i=kP(t,e,r);return vx(t,(()=>i().pipe(bh(n))))}function PP(t,e,r){const n=pP(e,r),i=bP(t,e,n);return vx(t,(t=>{var r;return Z(null===(r=e.query[n])||void 0===r?void 0:r.proposals)?i([t]).pipe(Za((([t])=>t))):wh(null)}))}function LP(t,e){return vx(t,wP(t,e,"council"))}function TP(t,e){return vx(t,PP(t,e,"council"))}function SP(t,e){return vx(t,MP(t,e,"council"))}function AP(t,e){return vx(t,kP(t,e,"council"))}function DP(t,e){return vx(t,xP(t,e,"council"))}function jP(t){return!Array.isArray(t)}function HP(t){return t.stakeOf.entries().pipe(Za((t=>t.map((([{args:[t]},e])=>[t,e])))))}function OP(t){return t.votesOf.entries().pipe(Za((t=>t.map((([{args:[t]},e])=>[t,e])))))}function zP(t,e){const r=e.query.phragmenElection||e.query.electionsPhragmen||e.query.elections;return vx(t,(()=>r?r.stakeOf?function(t,e){return Qa([HP(e),OP(e)]).pipe(Za((([e,r])=>{const n=[];return r.forEach((([e,r])=>{n.push([e,{stake:t.registry.createType("Balance"),votes:r}])})),e.forEach((([t,e])=>{const r=n.find((([e])=>e.eq(t)));r?r[1].stake=e:n.push([t,{stake:e,votes:[]}])})),n})))}(e,r):function(t){return t.voting.entries().pipe(Za((t=>t.map((([{args:[t]},e])=>[t,jP(e)?{stake:e.stake,votes:e.votes}:{stake:e[0],votes:e[1]}])))))}(r):wh([])))}function NP(t,e){return vx(t,(t=>e.derive.council.votes().pipe(Za((r=>(r.find((([e])=>e.eq(t)))||[null,{stake:e.registry.createType("Balance"),votes:[]}])[1])))))}function EP(t,e){return vx(t,(t=>e.query.crowdloan.funds(t).pipe(Za((t=>t.isSome?function({trieIndex:t}){return ta(ml(":child_storage:default:",jk(ml("crowdloan",t.toU8a()))))}(t.unwrap()):null)))))}function YP(t){let e=0;for(let r=0;r<t.length;r++)e+=t[r].length;const r=new Array(e);let n=-1;for(let e=0;e<t.length;e++){const i=t[e];for(let t=0;t<i.length;t++)r[++n]=i[t]}return r}function RP(t,e){var r;return e.filter((({event:{data:[,e],method:r,section:n}})=>"crowdloan"===n&&["Contributed","Withdrew"].includes(r)&&e.eq(t))).reduce(((t,{event:{data:[e],method:r}})=>("Contributed"===r?t.added.push(e.toHex()):t.removed.push(e.toHex()),t)),{added:[],blockHash:(null===(r=e.createdAtHash)||void 0===r?void 0:r.toHex())||"-",removed:[]})}const IP=1e3;function BP(t,e){let r=[],n=[];return t.query.system.events().pipe(bh((t=>{const i=RP(e,t);var s;return i.added.length||i.removed.length?(r=r.concat(...i.added),n=n.concat(...i.removed),wh({added:r,addedDelta:i.added,blockHash:(null===(s=t.createdAtHash)||void 0===s?void 0:s.toHex())||"-",removed:n,removedDelta:i.removed})):pM})),Hx({added:r,addedDelta:[],blockHash:"-",removed:n,removedDelta:[]}))}function XP(t,e,r){return function(t,e){return t.query.system.events().pipe(bh((t=>{var r;const n=t.filter((({event:{data:[t],method:r,section:n}})=>"crowdloan"===n&&["AllRefunded","Dissolved","PartiallyRefunded"].includes(r)&&t.eq(e)));return n.length?wh((null===(r=t.createdAtHash)||void 0===r?void 0:r.toHex())||"-"):pM})),Hx("-"))}(t,e).pipe(bh((()=>Z(t.rpc.childstate.getKeysPaged)?function(t,e){const r=new mo(void 0);return r.pipe(bh((r=>t.rpc.childstate.getKeysPaged(e,"0x",IP,r))),MM((t=>{setTimeout((()=>{t.length===IP?r.next(t[999].toHex()):r.complete()}),0)})),PM(),Za((t=>YP(t))))}(t,r):t.rpc.childstate.getKeys(r,"0x"))),Za((t=>t.map((t=>t.toHex())))))}function VP(t,e){return vx(t,(t=>e.derive.crowdloan.childKey(t).pipe(bh((r=>r?function(t,e,r){return Qa([XP(t,e,r),BP(t,e)]).pipe(Za((([t,{added:e,blockHash:r,removed:n}])=>{const i={};return t.forEach((t=>{i[t]=!0})),e.forEach((t=>{i[t]=!0})),n.forEach((t=>{delete i[t]})),{blockHash:r,contributorsHex:Object.keys(i)}})))}(e,t,r):wh({blockHash:"-",contributorsHex:[]}))))))}function CP(t,e,r){return Qa(r.map((r=>t.rpc.childstate.getStorage(e,r)))).pipe(Za((e=>e.map((e=>t.registry.createType("Option<StorageData>",e))).map((e=>e.isSome?t.registry.createType("Balance",e.unwrap()):t.registry.createType("Balance"))).reduce(((t,e,n)=>({...t,[r[n]]:e})),{}))))}function WP(t,e,r,n){return t.query.system.events().pipe(bh((i=>{const s=RP(e,i),o=n.filter((t=>s.added.includes(t)||s.removed.includes(t)));return o.length?CP(t,r,o):pM})),Hx({}))}function qP(t,e){return vx(t,((t,r)=>e.derive.crowdloan.childKey(t).pipe(bh((n=>n&&r.length?function(t,e,r,n){return Qa([CP(t,r,n),WP(t,e,r,n)]).pipe(Za((([t,e])=>({...t,...e}))))}(e,t,n,r):wh({}))))))}const ZP=ta(ls("democrac"));function FP(t){return function(t){return t.derive.democracy.referendumsFinished().pipe(bh((()=>t.query.scheduler.agenda.keys())),bh((e=>{const r=e.map((({args:[t]})=>t));return r.length?Qa([wh(r),Qa(r.map((e=>t.query.scheduler.agenda(e).pipe(yM((()=>wh(null)))))))]):wh([[],[]])})))}(t).pipe(bh((([e,r])=>{const n=[];return e.forEach(((e,i)=>{(r[i]||[]).filter((t=>t.isSome)).forEach((r=>{const i=r.unwrap();if(i.maybeId.isSome){const r=i.maybeId.unwrap().toHex();if(r.startsWith(ZP)){const[,s]=t.registry.createType("(u64, ReferendumIndex)",r),o=i.call.args[0];n.push({at:e,imageHash:o,index:s})}}}))})),n.length?Qa([wh(n),t.derive.democracy.preimages(n.map((({imageHash:t})=>t)))]):wh([[],[]])})),Za((([t,e])=>t.map(((t,r)=>({...t,image:e[r]}))))))}function UP(t,e){return vx(t,(()=>{var t;return Z(null===(t=e.query.scheduler)||void 0===t?void 0:t.agenda)?FP(e):e.query.democracy.dispatchQueue?function(t){return t.query.democracy.dispatchQueue().pipe(bh((e=>Qa([wh(e),t.derive.democracy.preimages(e.map((([,t])=>t)))]))),Za((([t,e])=>t.map((([t,r,n],i)=>({at:t,image:e[i],imageHash:r,index:n}))))))}(e):wh([])}))}const GP=[0,1,2,4,8,16,32];function _P(t,[e,r],n){const{balance:i,vote:s}=r.asStandard,[o,a]=n.isFinished?function(t,e,{approved:r,end:n}){return[n,r.isTrue&&e.isAye||r.isFalse&&e.isNay?n.add((t.consts.democracy.voteLockingPeriod||t.consts.democracy.enactmentPeriod).muln(GP[e.conviction.index])):Nh]}(t,s,n.asFinished):[Nh,Nh];return{balance:i,isDelegated:!1,isFinished:n.isFinished,referendumEnd:o,referendumId:e,unlockAt:a,vote:s}}function KP(t,e){return vx(t,(t=>e.query.democracy.votingOf?e.query.democracy.votingOf(t).pipe(bh((t=>t.isDirect?function(t,{votes:e}){return e.length?t.query.democracy.referendumInfoOf.multi(e.map((([t])=>t))).pipe(Za((r=>e.map(((t,e)=>[t,r[e].unwrapOr(null)])).filter((t=>!!t[1]&&G(t[1].end)&&t[0][1].isStandard)).map((([e,r])=>_P(t,e,r)))))):wh([])}(e,t.asDirect):t.isDelegating?function(t,{balance:e,conviction:r,target:n}){return t.derive.democracy.locks(n).pipe(Za((n=>n.map((({isFinished:n,referendumEnd:i,referendumId:s,unlockAt:o,vote:a})=>({balance:e,isDelegated:!0,isFinished:n,referendumEnd:i,referendumId:s,unlockAt:o.isZero()?o:i.add((t.consts.democracy.voteLockingPeriod||t.consts.democracy.enactmentPeriod).muln(GP[r.index])),vote:t.registry.createType("Vote",{aye:a.isAye,conviction:r})}))))))}(e,t.asDelegating):wh([])))):wh([])))}function JP(t,e){return vx(t,(()=>{var t;return null!==(t=e.query.democracy)&&void 0!==t&&t.nextExternal?e.query.democracy.nextExternal().pipe(bh((t=>function(t,e){if(e.isNone)return wh(null);const[r,n]=e.unwrap();return t.derive.democracy.preimage(r).pipe(Za((t=>({image:t,imageHash:r,threshold:n}))))}(e,t)))):wh(null)}))}const QP=new ps(94906265);function $P(t){const e=bs(t);if(_(e.gte(Nh),"square root of negative numbers is not supported"),e.lte(Ch))return new ps(Math.floor(Math.sqrt(e.toNumber())));let r=QP.clone();for(;;){const t=e.div(r).iadd(r).ishrn(1);if(r.eq(t)||r.eq(t.sub(Eh)))return r;r=t}}function tL(t,e,r,n){for(;;){const i=t.div(e),s=r.div(n);if(i.lt(s))return!0;if(s.lt(i))return!1;const o=t.mod(e),a=r.mod(n);if(a.isZero())return!1;if(o.isZero())return!0;t=n,r=e,e=a,n=o}}function eL(t,e,r){return t.isSimpleMajority?r.votedAye.gt(r.votedNay):function(t,e,{votedAye:r,votedNay:n,votedTotal:i}){const s=$P(i);return!s.isZero()&&(t.isSuperMajorityApprove?tL(n,s,r,e):tL(n,e,r,s))}(t,e,r)}function rL(t,e,r){const n=e.status.tally?function(t,e){const r=[],n=[];return e.forEach((t=>{t.vote.isAye?r.push(t):n.push(t)})),{allAye:r,allNay:n,voteCount:r.length+n.length,voteCountAye:r.length,voteCountNay:n.length,votedAye:t.ayes,votedNay:t.nays,votedTotal:t.turnout}}(e.status.tally,r):r.reduce(((t,e)=>{const{balance:r,vote:n}=e,i=0===n.conviction.index,s=r.muln(i?1:n.conviction.index).divn(i?10:1);return n.isAye?(t.allAye.push(e),t.voteCountAye++,t.votedAye.iadd(s)):(t.allNay.push(e),t.voteCountNay++,t.votedNay.iadd(s)),t.voteCount++,t.votedTotal.iadd(s),t}),{allAye:[],allNay:[],voteCount:0,voteCountAye:0,voteCountNay:0,votedAye:new ps(0),votedNay:new ps(0),votedTotal:new ps(0)});return{...n,isPassing:eL(e.status.threshold,t,n),votes:r}}function nL(t,[e,r,n,i]){let s;try{s=t.registry.createType("Proposal",e.toU8a(!0))}catch(t){console.error(t)}return{at:i,balance:n,proposal:s,proposer:r}}function iL(t,e){if(!e.isNone){if(function(t,e){return!!e&&!t.query.democracy.dispatchQueue}(t,e)){const r=e.unwrap();if(r.isMissing)return;const{data:n,deposit:i,provider:s,since:o}=r.asAvailable;return nL(t,[n,s,i,o])}return nL(t,e.unwrap())}}function sL(t,e){return vx(t,(t=>e.query.democracy.preimages(t).pipe(Za((t=>iL(e,t))))))}function oL(t,e){return vx(t,(t=>t.length?e.query.democracy.preimages.multi(t).pipe(Za((t=>t.map((t=>iL(e,t)))))):wh([])))}function aL(t){return Z(t[1].mul)}function uL([t,e,r]){return t.filter((([,,t],e)=>{var n;return!(null===(n=r[e])||void 0===n||!n.isSome||t.isEmpty)})).map((([t,n,i],s)=>{const o=r[s].unwrap();return{...aL(o)?{balance:o[1],seconds:o[0]}:{balance:o[0],seconds:o[1]},image:e[s],imageHash:n,index:t,proposer:i}}))}function hL(t,e){return vx(t,(()=>{var t,r;return Z(null===(t=e.query.democracy)||void 0===t?void 0:t.publicProps)&&Z(null===(r=e.query.democracy)||void 0===r?void 0:r.preimages)?e.query.democracy.publicProps().pipe(bh((t=>t.length?Qa([wh(t),e.derive.democracy.preimages(t.map((([,t])=>t))),e.query.democracy.depositOf.multi(t.map((([t])=>t)))]):wh([[],[],[]]))),Za(uL)):wh([])}))}function cL(t,e){return vx(t,(()=>{var t;return null!==(t=e.query.democracy)&&void 0!==t&&t.lowestUnbaked?e.queryMulti([e.query.democracy.lowestUnbaked,e.query.democracy.referendumCount]).pipe(Za((([t,e])=>e.gt(t)?[...Array(e.sub(t).toNumber())].map(((e,r)=>t.addn(r))):[]))):wh([])}))}function lL(t,e){return vx(t,(()=>e.derive.democracy.referendumsActive().pipe(bh((t=>t.length?Qa([wh(t),e.derive.democracy._referendumsVotes(t)]):wh([[],[]]))),Za((([t,e])=>t.map(((t,r)=>({...t,...e[r]}))))))))}function dL(t,e){return vx(t,(()=>e.derive.democracy.referendumIds().pipe(bh((t=>t.length?e.derive.democracy.referendumsInfo(t):wh([]))))))}function fL(t,e){return vx(t,(()=>e.derive.democracy.referendumIds().pipe(bh((t=>e.query.democracy.referendumInfoOf.multi(t))),Za((t=>t.map((t=>t.unwrapOr(null))).filter((t=>!!t&&t.isFinished)).map((t=>t.asFinished)))))))}function pL(t,e){return t.query.democracy.votersFor(e).pipe(bh((r=>Qa([wh(r),r.length?t.query.democracy.voteOf.multi(r.map((t=>[e,t]))):wh([]),t.derive.balances.votingBalances(r)]))),Za((([e,r,n])=>e.map(((e,i)=>({accountId:e,balance:n[i].votingBalance||t.registry.createType("Balance"),isDelegating:!1,vote:r[i]||t.registry.createType("Vote")}))))))}function mL(t,e){return t.query.democracy.votingOf.entries().pipe(Za((r=>{const n=r.map((([{args:[t]},e])=>[t,e])),i=function(t,e){return t.filter((([,t])=>t.isDirect)).map((([t,r])=>[t,r.asDirect.votes.filter((([t])=>t.eq(e)))])).filter((([,t])=>!!t.length)).reduce(((t,[e,r])=>r.reduce(((t,[,r])=>(r.isStandard&&t.push({accountId:e,isDelegating:!1,...r.asStandard}),t)),t)),[])}(n,e),s=n.filter((([,t])=>t.isDelegating)).map((([t,e])=>[t,e.asDelegating]));return s.forEach((([e,{balance:r,conviction:n,target:o}])=>{const a=s.find((([t])=>t.eq(o))),u=i.find((({accountId:t})=>t.eq(a?a[0]:o)));u&&i.push({accountId:e,balance:r,isDelegating:!0,vote:t.registry.createType("Vote",{aye:u.vote.isAye,conviction:n})})})),i})))}function yL(t,e){return vx(t,(t=>Qa([e.derive.democracy.sqrtElectorate(),Z(e.query.democracy.votingOf)?mL(e,t.index):pL(e,t.index)]).pipe(Za((([e,r])=>rL(e,t,r))))))}function vL(t,e){return vx(t,(t=>t.length?Qa(t.map((t=>e.derive.democracy._referendumVotes(t)))):wh([])))}function gL(t,e){return vx(t,((t,r)=>{const n=function(t){if(t.isNone)return null;const e=t.unwrap();return function(t){return!!t.proposalHash}(e)?e:e.isOngoing?e.asOngoing:null}(r);return n?e.query.democracy.preimages(n.proposalHash).pipe(Za((r=>({image:iL(e,r),imageHash:n.proposalHash,index:e.registry.createType("ReferendumIndex",t),status:n})))):wh(null)}))}function bL(t,e){return vx(t,(t=>t.length?e.query.democracy.referendumInfoOf.multi(t).pipe(bh((r=>Qa(t.map(((t,n)=>e.derive.democracy._referendumInfo(t,r[n])))))),Za((t=>t.filter((t=>!!t))))):wh([])))}function wL(t,e){return vx(t,(()=>e.query.balances.totalIssuance().pipe(Za((t=>$P(t))))))}function ML(t){return function(t){return!Array.isArray(t)}(t)?[t.who,t.stake]:t}function kL(t){return function(t){return Array.isArray(t)}(t)?t[0]:t}function xL([,t],[,e]){return e.cmp(t)}function PL(t,e){return vx(t,(()=>function(t){const e=t.query.phragmenElection?"phragmenElection":t.query.electionsPhragmen?"electionsPhragmen":t.query.elections?"elections":null,[r]=t.registry.getModuleInstances(t.runtimeVersion.specName.toString(),"council")||["council"];return(e?t.queryMulti([t.query[r].members,t.query[e].candidates,t.query[e].members,t.query[e].runnersUp]):Qa([t.query[r].members(),wh([]),wh([]),wh([])])).pipe(Za((([r,n,i,s])=>({...e?{candidacyBond:t.consts[e].candidacyBond,desiredRunnersUp:t.consts[e].desiredRunnersUp,desiredSeats:t.consts[e].desiredMembers,termDuration:t.consts[e].termDuration,votingBond:t.consts[e].votingBond}:{},candidateCount:t.registry.createType("u32",n.length),candidates:n.map(kL),members:i.length?i.map(ML).sort(xL):r.map((e=>[e,t.registry.createType("Balance")])),runnersUp:s.map(ML).sort(xL)}))))}(e)))}function LL([t,e,r,n]){return e.forEach(((e,i)=>{const s=e.toString(),o=n[i],a=!r[i].isEmpty,u=t[s];u&&u.hasMessage===a&&u.blockCount.eq(o)||(t[s]={blockCount:o,hasMessage:a,isOnline:a||o.gt(Nh)})})),t}function TL(t,e){return vx(t,(()=>{var t;return null!==(t=e.query.imOnline)&&void 0!==t&&t.receivedHeartbeats?e.derive.staking.overview().pipe(bh((({currentIndex:t,validators:r})=>Qa([wh({}),wh(r),e.query.imOnline.receivedHeartbeats.multi(r.map(((e,r)=>[t,r]))),e.query.imOnline.authoredBlocks.multi(r.map((e=>[t,e])))]))),Za(LL)):wh({})}))}function SL(t,e){return vx(t,mP(t,e,"membership"))}function AL(t,e){return vx(t,vP(t,e,"membership"))}function DL(t,e){return vx(t,wP(t,e,"membership"))}function jL(t,e){return vx(t,PP(t,e,"membership"))}function HL(t,e){return vx(t,MP(t,e,"membership"))}function OL(t,e){return vx(t,kP(t,e,"membership"))}function zL(t,e){return vx(t,xP(t,e,"membership"))}function NL(t,e){return!!t.isSome&&t.unwrap().some((t=>t.eq(e)))}function EL(t,e){const r=e.find((([e])=>e===t));if(r&&r[1].isSome){const[t,e]=r[1].unwrap();return{collatorId:t,...e.isWithRetries?{isRetriable:!0,retries:e.asWithRetries.toNumber()}:{isRetriable:!1,retries:0}}}return null}function YL(t,e){return e.map((e=>{const r=e.find((([e])=>e===t));return r?r[1]:null}))}function RL(t,e){return vx(t,(t=>e.query.registrar&&e.query.parachains?e.queryMulti([e.query.registrar.active,e.query.registrar.retryQueue,e.query.registrar.selectedThreads,e.query.parachains.didUpdate,[e.query.registrar.paras,t],[e.query.registrar.pendingSwap,t],[e.query.parachains.heads,t],[e.query.parachains.relayDispatchQueue,t]]).pipe(Za((r=>function(t,[e,r,n,i,s,o,a,u]){return s.isNone?null:{active:EL(t,e),didUpdate:NL(i,t),heads:a,id:t,info:{id:t,...s.unwrap()},pendingSwapId:o.unwrapOr(null),relayDispatchQueue:u,retryCollators:YL(t,r),selectedCollators:YL(t,n)}}(e.registry.createType("ParaId",t),r)))):wh(null)))}function IL([t,e,r,n,i]){return t.map(((t,s)=>({didUpdate:NL(e,t),id:t,info:{id:t,...r[s].unwrapOr(null)},pendingSwapId:n[s].unwrapOr(null),relayDispatchQueueSize:i[s][0].toNumber()})))}function BL(t,e){return vx(t,(()=>{var t;return null!==(t=e.query.registrar)&&void 0!==t&&t.parachains&&e.query.parachains?e.query.registrar.parachains().pipe(bh((t=>Qa([wh(t),e.query.parachains.didUpdate(),e.query.registrar.paras.multi(t),e.query.registrar.pendingSwap.multi(t),e.query.parachains.relayDispatchQueueSize.multi(t)]))),Za(IL)):wh([])}))}function XL(t,e){return vx(t,(()=>e.derive.session.info().pipe(Za((t=>t.eraLength)))))}function VL(t,e){return vx(t,(()=>e.derive.session.progress().pipe(Za((t=>t.eraProgress)))))}function CL([t,e,r,n,i]){return{activeEra:e,activeEraStart:r,currentEra:n,currentIndex:t,validatorCount:i}}function WL(t,e){return vx(t,(()=>e.query.session?e.query.staking?function(t){return t.queryMulti([t.query.session.currentIndex,t.query.staking.activeEra,t.query.staking.currentEra,t.query.staking.validatorCount]).pipe(Za((([t,e,r,n])=>{const{index:i,start:s}=e.unwrapOrDefault();return CL([t,i,s,r.unwrapOrDefault(),n])})))}(e):function(t){return t.query.session.currentIndex().pipe(Za((e=>CL([e,t.registry.createType("EraIndex"),t.registry.createType("Option<Moment>"),t.registry.createType("EraIndex"),t.registry.createType("u32")]))))}(e):function(t){return wh(CL([t.registry.createType("SessionIndex",1),t.registry.createType("EraIndex"),t.registry.createType("Option<Moment>"),t.registry.createType("EraIndex"),t.registry.createType("u32")]))}(e)))}function qL(t,e){return vx(t,(()=>e.derive.session.indexes().pipe(Za((t=>{var r,n,i,s;const o=(null===(r=e.consts)||void 0===r||null===(n=r.babe)||void 0===n?void 0:n.epochDuration)||e.registry.createType("u64",1),a=(null===(i=e.consts)||void 0===i||null===(s=i.staking)||void 0===s?void 0:s.sessionsPerEra)||e.registry.createType("SessionIndex",1);return{...t,eraLength:e.registry.createType("BlockNumber",a.mul(o)),isEpoch:!!e.query.babe,sessionLength:o,sessionsPerEra:a}})))))}function ZL(t,e){return vx(t,(()=>e.query.babe?function(t){return t.derive.session.info().pipe(bh((e=>{var r;return Qa([wh(e),null!==(r=t.query.staking)&&void 0!==r&&r.erasStartSessionIndex?t.queryMulti([t.query.babe.currentSlot,t.query.babe.epochIndex,t.query.babe.genesisSlot,[t.query.staking.erasStartSessionIndex,e.activeEra]]):t.queryMulti([t.query.babe.currentSlot,t.query.babe.epochIndex,t.query.babe.genesisSlot])])})),Za((([e,[r,n,i,s]])=>[e,[r,n,i,s&&s.isSome?s.unwrap():t.registry.createType("SessionIndex",1)]])))}(e).pipe(Za((([t,r])=>function(t,e,[r,n,i,s]){const o=n.mul(e.sessionLength).iadd(i),a=r.sub(o),u=e.currentIndex.sub(s).imul(e.sessionLength).iadd(a);return{...e,eraProgress:t.registry.createType("BlockNumber",u),sessionProgress:t.registry.createType("BlockNumber",a)}}(e,t,r)))):function(t){return t.derive.session.info().pipe(Za((e=>({...e,eraProgress:t.registry.createType("BlockNumber"),sessionProgress:t.registry.createType("BlockNumber")}))))}(e)))}function FL(t,e){return vx(t,(()=>e.derive.session.progress().pipe(Za((t=>t.sessionProgress)))))}function UL(t,e){return vx(t,(()=>e.query.society.candidates().pipe(bh((t=>Qa([wh(t),e.query.society.suspendedCandidates.multi(t.map((({who:t})=>t)))]))),Za((([t,e])=>t.map((({kind:t,value:r,who:n},i)=>({accountId:n,isSuspended:e[i].isSome,kind:t,value:r}))))))))}function GL(t,e){return vx(t,(()=>e.queryMulti([e.query.society.bids,e.query.society.defender,e.query.society.founder,e.query.society.head,e.query.society.maxMembers,e.query.society.pot]).pipe(Za((([t,e,r,n,i,s])=>({bids:t,defender:e.unwrapOr(void 0),founder:r.unwrapOr(void 0),hasDefender:e.isSome&&n.isSome&&!n.eq(e)||!1,head:n.unwrapOr(void 0),maxMembers:i,pot:s}))))))}function _L(t,e){return vx(t,(t=>e.derive.society._members([t]).pipe(Za((([t])=>t)))))}function KL(t,e){return vx(t,(t=>Qa([wh(t),e.query.society.payouts.multi(t),e.query.society.strikes.multi(t),e.query.society.defenderVotes.multi(t),e.query.society.suspendedMembers.multi(t),e.query.society.vouching.multi(t)]).pipe(Za((([t,e,r,n,i,s])=>t.map(((t,o)=>({accountId:t,isDefenderVoter:n[o].isSome,isSuspended:i[o].isTrue,payouts:e[o],strikes:r[o],vote:n[o].unwrapOr(void 0),vouching:s[o].unwrapOr(void 0)}))))))))}function JL(t,e){return vx(t,(()=>e.query.society.members().pipe(bh((t=>e.derive.society._members(t))))))}const QL={withDestination:!0,withLedger:!0,withNominations:!0,withPrefs:!0};function $L(t,e,r){const n=Object.entries((i=((null==e?void 0:e.unlocking)||[]).filter((({era:t})=>t.unwrap().gt(r.activeEra))),i.reduce(((t,{era:e,value:r})=>{const n=e.toString();return t[n]=(t[n]||Nh).add(r.unwrap()),t}),{}))).map((([e,n])=>({remainingEras:new ps(e).isub(r.activeEra),value:t.registry.createType("Balance",n)})));var i;return n.length?n:void 0}function tT(t,e,r){return t.registry.createType("Balance",((null==e?void 0:e.unlocking)||[]).reduce(((t,{era:e,value:n})=>r.activeEra.gte(e.unwrap())?t.iadd(n.unwrap()):t),new ps(0)))}function eT(t,e){return vx(t,(t=>e.derive.session.info().pipe(bh((r=>Qa([e.derive.staking.keysMulti(t),e.derive.staking.queryMulti(t,QL)]).pipe(Za((([t,n])=>n.map(((n,i)=>function(t,e,r,n){return{...r,...n,redeemable:tT(t,n.stakingLedger,e),unlocking:$L(t,n.stakingLedger,e)}}(e,r,t[i],n)))))))))))}function rT(t,e){return vx(t,(t=>e.derive.staking.accounts([t]).pipe(Za((([t])=>t)))))}function nT(t,e){return vx(t,(()=>e.derive.session.indexes().pipe(bh((({activeEra:t})=>e.query.staking.erasRewardPoints(t))))))}new Map;const iT={del:()=>{},forEach:()=>{},get:()=>{},set:(t,e)=>e};let sT;!function(t="",e){sT=e?function(t,e){return{del:r=>e.del(`${t}${r}`),forEach:e.forEach,get:r=>{const n=`${t}${r}`,i=e.get(n);if(i)return i.x=Date.now(),e.set(n,i),i.v},set:(r,n)=>{e.set(`${t}${r}`,{v:n,x:Date.now()})}}}(`derive:${t}:`,e):iT,e&&function(t){const e=Date.now(),r=[];t.forEach(((t,{x:n})=>{e-n>6048e5&&r.push(t)})),r.forEach((e=>t.del(e)))}(e)}();function oT(t,e){return vx(t,((t,r)=>{const n=`eraExposure-${t.toString()}`,i=r?void 0:sT.get(n);return i?wh(i):e.query.staking.erasStakersClipped.entries(t).pipe(Za((e=>{const i=function(t,e){const r={},n={};return e.forEach((([t,e])=>{const i=t.args[1].toString();n[i]=e,e.others.forEach((({who:t},e)=>{const n=t.toString();r[n]=r[n]||[],r[n].push({validatorId:i,validatorIndex:e})}))})),{era:t,nominators:r,validators:n}}(t,e);return!r&&sT.set(n,i),i})))}))}function aT(t,e){return vx(t,(t=>e.derive.staking._eraExposure(t,!0)))}function uT(t,e){return vx(t,((t,r)=>t.length?Qa(t.map((t=>e.derive.staking._eraExposure(t,r)))):wh([])))}function hT(t,e){return vx(t,((t=!1)=>e.derive.staking.erasHistoric(t).pipe(bh((r=>e.derive.staking._erasExposure(r,t))))))}function cT(t,e){return vx(t,(t=>e.queryMulti([e.query.staking.activeEra,e.query.staking.historyDepth]).pipe(Za((([r,n])=>{const i=[],s=n.toNumber(),o=r.unwrapOrDefault().index;let a=o;for(;a.gte(Nh)&&i.length<s;)a===o&&!0!==t||i.push(e.registry.createType("EraIndex",a)),a=a.sub(Eh);return i.reverse()})))))}function lT(t,e){return t.filter((t=>!e.some((e=>t.eq(e.era)))))}function dT({individual:t}){return[...t.entries()].filter((([,t])=>t.gt(Nh))).reduce(((t,[e,r])=>(t[e.toString()]=r,t)),{})}function fT(t,e){return vx(t,((t,r)=>{if(!t.length)return wh([]);const n=r?[]:t.map((t=>sT.get(`eraPoints-${t.toString()}`))).filter((t=>!!t)),i=lT(t,n);return i.length?e.query.staking.erasRewardPoints.multi(i).pipe(Za((e=>{const s=function(t,e){return t.map(((t,r)=>({era:t,eraPoints:e[r].total,validators:dT(e[r])})))}(i,e);return!r&&s.forEach((t=>sT.set(`eraPoints-${t.era.toString()}`,t))),t.map((t=>n.find((e=>t.eq(e.era)))||s.find((e=>t.eq(e.era)))))}))):wh(n)}))}function pT(t,e){return vx(t,((t=!1)=>e.derive.staking.erasHistoric(t).pipe(bh((r=>e.derive.staking._erasPoints(r,t))))))}function mT(t,e){return vx(t,((t,r)=>{const n=`eraPrefs-${t.toString()}`,i=r?void 0:sT.get(n);return i?wh(i):e.query.staking.erasValidatorPrefs.entries(t).pipe(Za((e=>{const i=function(t,e){const r={};return e.forEach((([t,e])=>{r[t.args[1].toString()]=e})),{era:t,validators:r}}(t,e);return!r&&sT.set(n,i),i})))}))}function yT(t,e){return vx(t,(t=>e.derive.staking._eraPrefs(t,!0)))}function vT(t,e){return vx(t,((t,r)=>t.length?Qa(t.map((t=>e.derive.staking._eraPrefs(t,r)))):wh([])))}function gT(t,e){return vx(t,((t=!1)=>e.derive.staking.erasHistoric(t).pipe(bh((r=>e.derive.staking._erasPrefs(r,t))))))}function bT(t,e){return vx(t,((t,r)=>{if(!t.length)return wh([]);const n=r?[]:t.map((t=>sT.get(`eraRewards-${t.toString()}`))).filter((t=>!!t)),i=lT(t,n);return i.length?e.query.staking.erasValidatorReward.multi(i).pipe(Za((e=>{const s=function(t,e){return t.map(((t,r)=>({era:t,eraReward:e[r].unwrapOrDefault()})))}(i,e);return!r&&s.forEach((t=>sT.set(`eraRewards-${t.era.toString()}`,t))),t.map((t=>n.find((e=>t.eq(e.era)))||s.find((e=>t.eq(e.era)))))}))):wh(n)}))}function wT(t,e){return vx(t,((t=!1)=>e.derive.staking.erasHistoric(t).pipe(bh((r=>e.derive.staking._erasRewards(r,t))))))}function MT(t,e){return vx(t,((t,r)=>{const n=`eraSlashes-${t.toString()}`,i=r?void 0:sT.get(n);return i?wh(i):Qa([e.query.staking.nominatorSlashInEra.entries(t),e.query.staking.validatorSlashInEra.entries(t)]).pipe(Za((([e,i])=>{const s=function(t,e,r){const n={},i={};return e.forEach((([t,e])=>{n[t.args[1].toString()]=e.unwrap()})),r.forEach((([t,e])=>{i[t.args[1].toString()]=e.unwrapOrDefault()[1]})),{era:t,nominators:n,validators:i}}(t,e,i);return!r&&sT.set(n,s),s})))}))}function kT(t,e){return vx(t,(t=>e.derive.staking._eraSlashes(t,!0)))}function xT(t,e){return vx(t,((t,r)=>t.length?Qa(t.map((t=>e.derive.staking._eraSlashes(t,r)))):wh([])))}function PT(t,e){return vx(t,((t=!1)=>e.derive.staking.erasHistoric(t).pipe(bh((r=>e.derive.staking._erasSlashes(r,t))))))}const LT={withController:!0,withExposure:!0,withPrefs:!0};function TT(t,e){return vx(t,((t=LT)=>e.derive.staking.validators().pipe(bh((({nextElected:r,validators:n})=>e.derive.staking.queryMulti(function(t,e){return YP([t,e.filter((e=>!t.find((t=>t.eq(e)))))])}(r,n),t).pipe(Za((t=>({info:t,nextElected:r,validators:n})))))))))}function ST(t,e){return vx(t,(t=>e.derive.staking.keysMulti([t]).pipe(Za((([t])=>t)))))}function AT(t,e){return vx(t,(t=>t.length?e.query.session.queuedKeys().pipe(bh((r=>{var n;return Qa([wh(r),null!==(n=e.consts.session)&&void 0!==n&&n.dedupKeyPrefix?e.query.session.nextKeys.multi(t.map((t=>[e.consts.session.dedupKeyPrefix,t]))):e.query.session.nextKeys.multi(t)])})),Za((([e,r])=>t.map(((t,n)=>function(t,e,r){const n=(e.find((([e])=>e.eq(t)))||[void 0,[]])[1],i=r.unwrapOr([]);return{nextSessionIds:Array.isArray(i)?i:[...i.values()],sessionIds:Array.isArray(n)?n:[...n.values()]}}(t,e,r[n])))))):wh([])))}function DT(t,e){return vx(t,(()=>Qa([e.derive.session.indexes(),e.derive.staking.validators()]).pipe(Za((([t,{nextElected:e,validators:r}])=>({...t,nextElected:e,validators:r}))))))}function jT(t,e){return vx(t,((t,r,n)=>r.length?e.queryMulti([...r.map((r=>[e.query.staking.erasStakersClipped,[r,t]])),...r.map((r=>[e.query.staking.erasStakers,[r,t]]))]).pipe(Za((t=>r.map(((e,n)=>({clipped:t[n],era:e,exposure:t[r.length+n]})))))):wh([])))}function HT(t,e){return vx(t,((t,r)=>e.derive.staking._ownExposures(t,[r],!0).pipe(Za((([t])=>t)))))}function OT(t,e){return vx(t,((t,r=!1)=>e.derive.staking.erasHistoric(r).pipe(bh((n=>e.derive.staking._ownExposures(t,n,r))))))}function zT(t,e){return vx(t,((t,r,n)=>r.length?e.queryMulti([...r.map((r=>[e.query.staking.validatorSlashInEra,[r,t]])),...r.map((r=>[e.query.staking.nominatorSlashInEra,[r,t]]))]).pipe(Za((t=>r.map(((e,n)=>({era:e,total:t[n].isSome?t[n].unwrap()[1]:t[n+r.length].unwrapOrDefault()})))))):wh([])))}function NT(t,e){return vx(t,((t,r)=>e.derive.staking._ownSlashes(t,[r],!0).pipe(Za((([t])=>t)))))}function ET(t,e){return vx(t,((t,r=!1)=>e.derive.staking.erasHistoric(r).pipe(bh((n=>e.derive.staking._ownSlashes(t,n,r))))))}function YT(t,e,r,n){return function(t,e,r,{withController:n,withDestination:i,withExposure:s,withLedger:o,withNominations:a,withPrefs:u}){const h=t.registry.createType("Option<Nominations>"),c=t.registry.createType("RewardDestination"),l=t.registry.createType("Exposure"),d=t.registry.createType("ValidatorPrefs");return Qa([n||o?t.query.staking.bonded.multi(e):wh(e.map((()=>null))),a?t.query.staking.nominators.multi(e):wh(e.map((()=>h))),i?t.query.staking.payee.multi(e):wh(e.map((()=>c))),u?t.query.staking.validators.multi(e):wh(e.map((()=>d))),s?t.query.staking.erasStakers.multi(e.map((t=>[r,t]))):wh(e.map((()=>l)))])}(t,r,e,n).pipe(bh((([e,i,s,o,a])=>function(t,e,{withLedger:r=!1}){const n=e.filter((t=>r&&!!t&&t.isSome)).map((t=>t.unwrap())),i=t.registry.createType("Option<StakingLedger>");return(n.length?t.query.staking.ledger.multi(n):wh([])).pipe(Za((t=>{let r=-1;return e.map((e=>e&&e.isSome&&t[++r]||i))})))}(t,e,n).pipe(Za((t=>r.map(((r,n)=>function(t,e,r,n,i,s,o){return{accountId:t,controllerId:e&&e.unwrapOr(null),exposure:s,nominators:r.isSome?r.unwrap().targets:[],rewardDestination:n,stakingLedger:o.unwrapOrDefault(),stashId:t,validatorPrefs:i}}(r,e[n],i[n],s[n],o[n],a[n],t[n])))))))))}function RT(t,e){return vx(t,((t,r)=>e.derive.staking.queryMulti([t],r).pipe(Za((([t])=>t)))))}function IT(t,e){return vx(t,((t,r)=>t.length?e.derive.session.indexes().pipe(bh((({activeEra:n})=>{const i=t.map((t=>e.registry.createType("AccountId",t)));return YT(e,n,i,r)}))):wh([])))}function BT(t,e){return vx(t,((t,r,n)=>{const i=t.map((t=>e.registry.createType("AccountId",t).toString()));return e.derive.staking._erasExposure(r,n).pipe(Za((t=>i.map((e=>t.map((({era:t,nominators:r,validators:n})=>{const i=!!n[e],s={},o=r[e]||[];return i?s[e]=n[e]:o&&o.forEach((({validatorId:t})=>{s[t]=n[t]})),{era:t,isEmpty:!Object.keys(s).length,isValidator:i,nominating:o,validators:s}})))))))}))}function XT(t,e){return vx(t,((t,r=!1)=>e.derive.staking.erasHistoric(r).pipe(bh((n=>e.derive.staking._stakerExposures(t,n,r))))))}function VT(t,e){return vx(t,((t,r=!1)=>e.derive.staking.stakerExposures([t],r).pipe(Za((([t])=>t)))))}function CT(t,e){return vx(t,((t,r,n)=>{const i=e.registry.createType("AccountId",t).toString();return e.derive.staking._erasPoints(r,n).pipe(Za((t=>t.map((({era:t,eraPoints:r,validators:n})=>({era:t,eraPoints:r,points:n[i]||e.registry.createType("RewardPoint")}))))))}))}function WT(t,e){return vx(t,((t,r=!1)=>e.derive.staking.erasHistoric(r).pipe(bh((n=>e.derive.staking._stakerPoints(t,n,r))))))}function qT(t,e){return vx(t,((t,r,n)=>e.query.staking.erasValidatorPrefs.multi(r.map((e=>[e,t]))).pipe(Za((t=>t.map(((t,e)=>({era:r[e],validatorPrefs:t}))))))))}function ZT(t,e){return vx(t,((t,r=!1)=>e.derive.staking.erasHistoric(r).pipe(bh((n=>e.derive.staking._stakerPrefs(t,n,r))))))}function FT(t,e,{rewards:r,stakingLedger:n}){const i=t.filter((t=>!n.claimedRewards.some((e=>e.eq(t))))),s=e.map((([t])=>t)),o=e.map((([,t])=>t));return r.filter((({isEmpty:t})=>!t)).filter((t=>!!i.some((e=>t.era.eq(e)))&&(function(t,e,r){const n=[];Object.keys(r.validators).forEach((i=>{const s=t.indexOf(i);if(-1!==s){const t=e[s].stakingLedger;null!=t&&t.claimedRewards.some((t=>r.era.eq(t)))&&n.push(i)}})),n.forEach((t=>{delete r.validators[t]}))}(s,o,t),!0))).filter((({validators:t})=>0!==Object.keys(t).length)).map((t=>({...t,nominators:t.nominating.filter((e=>t.validators[e.validatorId]))})))}function UT(t,e){return vx(t,((t,r)=>Qa([e.derive.staking._erasPoints(t,r),e.derive.staking._erasPrefs(t,r),e.derive.staking._erasRewards(t,r)])))}function GT(t,e){return vx(t,((t,r,n)=>Qa([e.derive.staking.queryMulti(t,{withLedger:!0}),e.derive.staking._stakerExposures(t,r,n),e.derive.staking._stakerRewardsEras(r,n)]).pipe(bh((([t,i,s])=>{const o=t.map((({stakingLedger:t,stashId:r},n)=>r&&t?function(t,e,[r,n,i],s){return s.map((({era:s,isEmpty:o,isValidator:a,nominating:u,validators:h})=>{const{eraPoints:c,validators:l}=r.find((t=>t.era.eq(s)))||{eraPoints:Nh,validators:{}},{eraReward:d}=i.find((t=>t.era.eq(s)))||{eraReward:t.registry.createType("Balance")},{validators:f}=n.find((t=>t.era.eq(s)))||{validators:{}},p={},m=e.toString();return Object.entries(h).forEach((([e,r])=>{var n,i;const s=l[e]||Nh,o=(null===(n=f[e])||void 0===n?void 0:n.commission.unwrap())||Nh,a=(null===(i=r.total)||void 0===i?void 0:i.unwrap())||Nh;let u,h=Nh;if(!(a.isZero()||s.isZero()||c.isZero())){h=d.mul(s).div(c);const t=o.mul(h).div(Xh);let n;if(e===m)n=r.own.unwrap();else{const t=r.others.find((({who:t})=>t.eq(m)));n=t?t.value.unwrap():Nh}u=h.sub(t).imul(n).div(a).iadd(e===m?t:Nh)}p[e]={total:t.registry.createType("Balance",h),value:t.registry.createType("Balance",u)}})),{era:s,eraReward:d,isEmpty:o,isValidator:a,nominating:u,validators:p}}))}(e,r,s,i[n]):[]));if(n)return wh(o);const[a,u]=o.reduce((([t,e],r)=>{const n=[];return e.push(n),r.forEach((({validators:e})=>Object.keys(e).forEach((e=>{n.includes(e)||(n.push(e),t.includes(e)||t.push(e))})))),[t,e]}),[[],[]]);return e.derive.staking.queryMulti(a,{withLedger:!0}).pipe(Za((e=>t.map((({stakingLedger:t},n)=>FT(r,u[n].map((t=>[t,e.find((e=>e.accountId.eq(t)))])),{rewards:o[n],stakingLedger:t}))))))})))))}function _T(t,e){return vx(t,((t,r=!1)=>e.derive.staking.erasHistoric(r).pipe(bh((n=>e.derive.staking._stakerRewards([t],n,r))),Za((([t])=>t)))))}function KT(t,e){return vx(t,((t,r)=>t.length&&r.length?e.derive.staking._stakerRewards(t,r,!1):wh([])))}function JT(t,e){return vx(t,((t,r=!1)=>e.derive.staking.erasHistoric(r).pipe(bh((r=>e.derive.staking.stakerRewardsMultiEras(t,r))))))}function QT(t,e){return vx(t,((t,r,n)=>{const i=e.registry.createType("AccountId",t).toString();return e.derive.staking._erasSlashes(r,n).pipe(Za((t=>t.map((({era:t,nominators:r,validators:n})=>({era:t,total:r[i]||n[i]||e.registry.createType("Balance")}))))))}))}function $T(t,e){return vx(t,((t,r=!1)=>e.derive.staking.erasHistoric(r).pipe(bh((n=>e.derive.staking._stakerSlashes(t,n,r))))))}function tS(t,e){return vx(t,(()=>function(t){let e=Date.now();return t.query.system.events().pipe(Za((t=>(e=t.filter((({event:t,phase:e})=>{try{return e.isApplyExtrinsic&&"staking"===t.section&&"Bonded"===t.method}catch{return!1}}))?Date.now():e,e))),Hx(e),yx({skipTimeout:!0}))}(e).pipe(bh((()=>e.query.staking.validators.keys())),Za((t=>t.map((({args:[t]})=>t)).filter((t=>t)))))))}function eS(t,e){return vx(t,(()=>e.query.staking.erasStakers?e.derive.session.indexes().pipe(bh((({currentEra:t})=>e.query.staking.erasStakers.keys(t))),Za((t=>t.map((({args:[,t]})=>t))))):e.query.staking.currentElected()))}function rS(t,e){return vx(t,(()=>Qa([e.query.session?e.query.session.validators():wh([]),e.query.staking?e.derive.staking.nextElected():wh([])]).pipe(Za((([t,e])=>({nextElected:e.length?e:t,validators:t}))))))}const nS={withController:!0,withPrefs:!0};function iS(t,e){return vx(t,((t=nS)=>Qa([e.derive.staking.validators(),e.derive.staking.stashes()]).pipe(bh((([{nextElected:r},n])=>{const i=r.map((t=>t.toString())),s=n.filter((t=>!i.includes(t.toString())));return e.derive.staking.queryMulti(s,t).pipe(Za((t=>({info:t,waiting:s}))))})))))}function sS(t,e){return vx(t,mP(t,e,"technicalCommittee"))}function oS(t,e){return vx(t,vP(t,e,"technicalCommittee"))}function aS(t,e){return vx(t,wP(t,e,"technicalCommittee"))}function uS(t,e){return vx(t,PP(t,e,"technicalCommittee"))}function hS(t,e){return vx(t,MP(t,e,"technicalCommittee"))}function cS(t,e){return vx(t,kP(t,e,"technicalCommittee"))}function lS(t,e){return vx(t,xP(t,e,"technicalCommittee"))}function dS(t,e){return vx(t,(()=>e.query.treasury?Qa([e.query.treasury.proposalCount(),e.query.treasury.approvals()]).pipe(bh((([t,r])=>function(t,e,r){const n=[],i=e.toNumber();for(let e=0;e<i;e++)r.some((t=>t.eqn(e)))||n.push(t.registry.createType("ProposalIndex",e));const s=[...n,...r];return Qa([t.query.treasury.proposals.multi(s),t.derive.council?t.derive.council.proposals():wh([])]).pipe(Za((([n,i])=>function(t,{allIds:e,allProposals:r,approvalIds:n,councilProposals:i,proposalCount:s}){const o=[],a=[],u=i.filter((({proposal:e})=>t.tx.treasury.approveProposal.is(e)||t.tx.treasury.rejectProposal.is(e)));return e.forEach(((t,e)=>{if(r[e].isSome){const i=u.filter((({proposal:e})=>t.eq(e.args[0]))).sort(((t,e)=>t.proposal.method.localeCompare(e.proposal.method))),s=n.some((e=>e.eq(t))),h={council:i,id:t,proposal:r[e].unwrap()};s?o.push(h):a.push(h)}})),{approvals:o,proposalCount:s,proposals:a}}(t,{allIds:s,allProposals:n,approvalIds:r,councilProposals:i,proposalCount:e}))))}(e,t,r)))):wh({approvals:[],proposalCount:e.registry.createType("ProposalIndex"),proposals:[]})))}function fS(t,e){return vx(t,(t=>Qa([e.rpc.chain.getBlock(t),e.queryAt(t).pipe(bh((t=>t.system.events())))]).pipe(Za((([t,e])=>({block:t,events:e}))))))}const pS=new ps(6e3),mS=new ps(5),yS=new ps(3e5);function vS(t,e){return t.derive.balances.account(e).pipe(Za((({accountNonce:t})=>t)))}function gS(t,e){var r;return null!==(r=t.rpc.system)&&void 0!==r&&r.accountNextIndex?t.rpc.system.accountNextIndex(e):vS(t,e)}function bS(t){return Qa([t.rpc.chain.getHeader().pipe(bh((e=>e.parentHash.isEmpty?wh(e):t.rpc.chain.getHeader(e.parentHash)))),t.rpc.chain.getFinalizedHead().pipe(bh((e=>t.rpc.chain.getHeader(e))))]).pipe(Za((([t,e])=>t.number.unwrap().sub(e.number.unwrap()).gt(mS)?t:e)))}function wS(t,e){return(t,r,n)=>Qa([G(r)?vS(e,t):-1===r?gS(e,t):wh(e.registry.createType("Index",r)),G(n)||Qo(n)&&n>0?bS(e):wh(null)]).pipe(Za((([t,r])=>{var n,i,s,o;return{header:r,mortalLength:Math.min((null===(n=e.consts.system)||void 0===n||null===(i=n.blockHashCount)||void 0===i?void 0:i.toNumber())||250,yS.div((null===(s=e.consts.babe)||void 0===s?void 0:s.expectedBlockTime)||(null===(o=e.consts.timestamp)||void 0===o?void 0:o.minimumPeriod.muln(2))||pS).iadd(mS).toNumber()),nonce:t}})))}const MS={accounts:o,balances:a,bounties:u,chain:h,contracts:c,council:l,crowdloan:d,democracy:f,elections:p,imOnline:m,membership:y,parachains:v,session:g,society:b,staking:w,technicalCommittee:M,treasury:k,tx:x},kS={contracts:{instances:["contracts"],methods:[]},council:{instances:["council"],methods:[],withDetect:!0},crowdloan:{instances:["crowdloan"],methods:[]},democracy:{instances:["democracy"],methods:[]},elections:{instances:["phragmenElection","electionsPhragmen","elections","council"],methods:[],withDetect:!0},imOnline:{instances:["imOnline"],methods:[]},membership:{instances:["membership"],methods:[]},parachains:{instances:["parachains","registrar"],methods:[]},session:{instances:["session"],methods:[]},society:{instances:["society"],methods:[]},staking:{instances:["staking"],methods:["erasRewardPoints"]},technicalCommittee:{instances:["technicalCommittee"],methods:[],withDetect:!0},treasury:{instances:["treasury"],methods:[]}};function xS(t,e,r){const n=Object.keys(e.query),i=e.runtimeVersion.specName.toString(),s=t=>n.includes(t),o=t=>function(t,e,r){return t.registry.getModuleInstances(e,r)||[]}(e,i,t).some(s),a=t=>{return!kS[t]||kS[t].instances.some(s)&&(!kS[t].methods.length||kS[t].methods.every((r=kS[t].instances,t=>r.some((r=>n.includes(r)&&!!e.query[r][t])))))||kS[t].withDetect&&kS[t].instances.some(o);var r},u=t=>Object.keys(r[t]),h=(n,i)=>r[n][i](t,e),c={},l=Object.keys(r);for(let t=0;t<l.length;t++){const e=l[t];a(e)&&LM(c,e,u,h)}return c}const PS={};Object.keys(n).forEach((t=>Object.entries(n[t].rpc||{}).forEach((([e,r])=>{const n=r.aliasSection||t;PS[n]||(PS[n]={}),PS[n][e]=Fi({},r,{isSubscription:!!r.pubsub,jsonrpc:`${n}_${e}`,method:e,section:n})}))));const LS=PS,TS=xu("rpc-core"),SS={fallback:void 0,modifier:{isOptional:!0},type:{asMap:{linked:{isTrue:!1}},isMap:!1}};function AS(t,{params:e,type:r},n){const i=e.map((({isOptional:t,name:e,type:r})=>`${e}${t?"?":""}: ${r}`)).join(", ");TS.error(`${t}(${i}): ${r}:: ${n.message}`)}function DS(t){return["0x3a636f6465"].includes(t.toHex())}var jS=rt("instanceId"),HS=rt("registryDefault"),OS=rt("getBlockRegistry"),zS=rt("storageCache");class NS{constructor(t,e,r,n={}){Object.defineProperty(this,jS,{writable:!0,value:void 0}),Object.defineProperty(this,HS,{writable:!0,value:void 0}),Object.defineProperty(this,OS,{writable:!0,value:void 0}),Object.defineProperty(this,zS,{writable:!0,value:new Map}),this.mapping=new Map,this.provider=void 0,this.sections=[],_(r&&Z(r.send),"Expected Provider to API create"),tt(this,jS)[jS]=t,tt(this,HS)[HS]=e,this.provider=r;const i=Object.keys(LS);this.sections.push(...i),this.addUserInterfaces(n)}get isConnected(){return this.provider.isConnected}connect(){return this.provider.connect()}disconnect(){return this.provider.disconnect()}setRegistrySwap(t){tt(this,OS)[OS]=Wk(t,{getInstanceId:()=>tt(this,jS)[jS]})}addUserInterfaces(t){this.sections.push(...Object.keys(t).filter((t=>!this.sections.includes(t))));for(let e=0;e<this.sections.length;e++){const r=this.sections[e],n=Fi({},LS[r],t[r]),i=Object.keys(n);for(let t=0;t<i.length;t++){const e=i[t],s=n[e],o=s.endpoint||`${r}_${e}`;if(!this.mapping.has(o)){const t=!!s.pubsub;this[r]||(this[r]={}),this.mapping.set(o,Fi({},s,{isSubscription:t,jsonrpc:o,method:e,section:r})),xh(this[r],e,(()=>t?this._createMethodSubscribe(r,e,s):this._createMethodSend(r,e,s)))}}}}_memomize(t,e){const r={getInstanceId:()=>tt(this,jS)[jS]},n=Wk(t(!0),r);return n.raw=Wk(t(!1),r),n.meta=e,n}_formatResult(t,e,r,n,i,s,o){return t?this._formatOutput(e,r,n,i,s,o):o}_createMethodSend(t,e,r){const n=r.endpoint||`${t}_${e}`,i=r.params.findIndex((({isHistoric:t})=>t));let s=null;const o=async(t,s)=>{const o=-1===i?null:s[i],{registry:a}=t&&o&&tt(this,OS)[OS]?await tt(this,OS)[OS](ds(o)):{registry:tt(this,HS)[HS]},u=this._formatInputs(a,null,r,s),h=await this.provider.send(n,u.map((t=>t.toJSON())),!!o);return this._formatResult(t,a,o,e,r,u,h)};return s=this._memomize((t=>(...n)=>{const a=t&&-1!==i&&!!n[i];return new ho((i=>(o(t,n).then((t=>{i.next(t),i.complete()})).catch((t=>{AS(e,r,t),i.error(t),i.complete()})),()=>{var t;null===(t=s)||void 0===t||t.unmemoize(...n)}))).pipe(Jk(1),a?lx():Uk())}),r),s}_createSubscriber({paramsJson:t,subName:e,subType:r,update:n},i){return new Promise(((s,o)=>{this.provider.subscribe(r,e,t,n).then(s).catch((t=>{i(t),o(t)}))}))}_createMethodSubscribe(t,e,r){const[n,i,s]=r.pubsub,o=`${t}_${i}`,a=`${t}_${s}`,u=`${t}_${n}`;let h=null;return h=this._memomize((t=>(...n)=>new ho((i=>{let s=Promise.resolve(null);const c=tt(this,HS)[HS],l=t=>{AS(e,r,t),i.error(t)};try{const a=this._formatInputs(c,null,r,n),h=a.map((t=>t.toJSON())),d=(n,s)=>{if(n)AS(e,r,n);else try{i.next(this._formatResult(t,c,null,e,r,a,s))}catch(n){i.error(n)}};s=this._createSubscriber({paramsJson:h,subName:o,subType:u,update:d},l)}catch(t){l(t)}return()=>{var t;null===(t=h)||void 0===t||t.unmemoize(...n),s.then((t=>U(t)?Promise.resolve(!1):this.provider.unsubscribe(u,a,t))).catch((t=>AS(e,r,t)))}})).pipe(yx())),r),h}_formatInputs(t,e,r,n){const i=r.params.filter((({isOptional:t})=>!t)).length,s=i===r.params.length?"":` (${r.params.length-i} optional)`;return _(n.length>=i&&n.length<=r.params.length,(()=>`Expected ${r.params.length} parameters${s}, ${n.length} found instead`)),n.map(((n,i)=>t.createTypeUnsafe(r.params[i].type,[n],{blockHash:e})))}_formatOutput(t,e,r,n,i,s){if("StorageData"===n.type){const r=i[0];return this._formatStorageData(t,e,r,s)}if("StorageChangeSet"===n.type){const e=i[0];return e?this._formatStorageSet(t,s.block,e,s.changes):t.createType("StorageChangeSet",s)}if("Vec<StorageChangeSet>"===n.type){const e=s.map((({block:e,changes:r})=>[t.createType("Hash",e),this._formatStorageSet(t,e,i[0],r)]));return"queryStorageAt"===r?e[0][1]:e}return t.createTypeUnsafe(n.type,[s],{blockHash:e})}_formatStorageData(t,e,r,n){const i=U(n),s=i?null:DS(r)?n:ds(n);return this._newType(t,e,r,s,i)}_formatStorageSet(t,e,r,n){const i=1!==r.length;return r.reduce(((r,s,o)=>(r.push(this._formatStorageSetEntry(t,e,s,n,i,o)),r)),[])}_formatStorageSetEntry(t,e,r,n,i,s){const o=r.toHex(),a=n.find((([t])=>t===o)),u=G(a)?i&&tt(this,zS)[zS].get(o)||null:a[1],h=U(u),c=h||DS(r)?u:ds(u);return tt(this,zS)[zS].set(o,u),this._newType(t,e,r,c,h,s)}_newType(t,e,r,n,i,s=-1){const o=r.outputType||"Raw",a=r.meta||SS,u=-1===s?"":` entry ${s}:`;try{return t.createTypeUnsafe(o,[i?a.fallback?es(a.fallback.toHex()):void 0:a.modifier.isOptional?t.createTypeUnsafe(o,[n],{blockHash:e,isPedantic:!0}):n],{blockHash:e,isOptional:a.modifier.isOptional,isPedantic:!a.modifier.isOptional})}catch(t){throw new Error(`Unable to decode storage ${r.section||"unknown"}.${r.method||"unknown"}:${u}: ${t.message}`)}}}var ES=__webpack_require__(45361);function YS(t,e){return function(t,e){return ES.h64(ds(t).buffer,e)}(t,e).toString(16)}function RS(t,e){return new ps(YS(t,e),16)}function IS(t,e=64,r){const n=Math.ceil(e/64),i=ds(t);if(_c(r))return Zc(i,n);const s=new Uint8Array(Math.ceil(e/8));for(let t=0;t<n;t++)s.set(RS(i,t).toArray("le",8),8*t);return s}Uc(IS);const BS=t=>IS(t,128),XS={Blake2_128:t=>Kc(t,128),Blake2_128Concat:t=>ml(Kc(t,128),ds(t)),Blake2_256:t=>Kc(t,256),Identity:t=>ds(t),Twox128:t=>IS(t,128),Twox256:t=>IS(t,256),Twox64Concat:t=>ml(IS(t,64),ds(t))};function VS(t,e,r,n,i){const s=new Array(r.length);for(let e=0;e<r.length;e++)s[e]=(o=n[e],XS[o.type]||BS)(t.createType(t.createLookupType(r[e]),i[e]).toU8a());var o;return ml(IS(e.prefix,128),IS(e.method,128),...s)}function CS(t){return!G(t)}function WS(t,e,r,n,i){const{method:s,section:o}=e;return _(Array.isArray(i),(()=>`Call to ${kh(o||"unknown")}.${kh(s||"unknown")} needs ${r.length} arguments`)),_(i.filter(CS).length===r.length,(()=>`Call to ${kh(o||"unknown")}.${kh(s||"unknown")} needs ${r.length} arguments, found [${i.join(", ")}]`)),Fl(VS(t,e,r,n,i))}function qS(t,e,r){const{meta:{type:n}}=e;let i=null;const s=function({meta:t,method:e,prefix:r,section:n},i){const s=i;return s.meta=t,s.method=qm(e),s.prefix=r,s.section=n,s.toJSON=()=>Fi({storage:{method:e,prefix:r,section:n}},t.toJSON()),s}(e,((...s)=>{if(n.isPlain)return i||(i=r.skipHashing?Fl(ds(r.key)):WS(t,e,[],[],[])),i;const{hashers:o,key:a}=n.asMap;return 1===o.length?WS(t,e,[a],o,s):WS(t,e,t.lookup.getSiType(a).def.asTuple,o,s)}));return n.isMap&&function(t,e,r){const{meta:{type:n},method:i,section:s}=e;r.iterKey=function(t,{meta:{docs:e,name:r,type:n},section:i},{method:s},o){const a=t.createLookupType(n.asMap.key);return o.meta=t.createType("StorageEntryMetadataLatest",{docs:e,fallback:t.createType("Bytes"),modifier:t.createType("StorageEntryModifierLatest",1),name:r,type:t.createType("StorageEntryTypeLatest",a,0)}),(...e)=>t.createType("StorageKey",o(...e),{method:s,section:i})}(t,e,r,((...r)=>{if(_(0===r.length||n.isMap&&r.length<n.asMap.hashers.length,(()=>`Iteration ${kh(s||"unknown")}.${kh(i||"unknown")} needs arguments to be at least one less than the full arguments, found [${r.join(", ")}]`)),r.length&&n.isMap){const{hashers:i,key:s}=n.asMap,o=1===i.length?[s]:t.lookup.getSiType(s).def.asTuple;return new hl(t,VS(t,e,o.slice(0,r.length),i.slice(0,r.length),r))}return new hl(t,VS(t,e,[],[],[]))}))}(t,e,s),s.keyPrefix=(...t)=>s.iterKey&&s.iterKey(...t)||Ab(s())[1],s}function ZS(t,e){const r=e.toLowerCase();return t.lookup.types.find((t=>t.type.def.isPrimitive&&t.type.def.asPrimitive.toString().toLowerCase()===r||t.type.def.isHistoricMetaCompat&&t.type.def.asHistoricMetaCompat.toString().toLowerCase()===r))}function FS(t,e){let r=ZS(t,e);if(!r&&"Bytes"===e){const n=ZS(t,"u8");n&&(r=t.lookup.types.find((t=>t.type.def.isSequence&&t.type.def.asSequence.type.eq(n.id)||t.type.def.isHistoricMetaCompat&&t.type.def.asHistoricMetaCompat.eq(e))))}return r||console.warn(`Unable to map ${e} to a lookup index`),r}function US({method:t,prefix:e,section:r},n,{docs:i,type:s}){return o=>{var a;return qS(o,{meta:o.createType("StorageEntryMetadataLatest",{docs:o.createType("Vec<Text>",[i]),modifier:o.createType("StorageEntryModifierLatest","Required"),name:o.createType("Text",t),toJSON:()=>n,type:o.createType("StorageEntryTypeLatest",{Plain:(null===(a=FS(o,s))||void 0===a?void 0:a.id)||0})}),method:t,prefix:e,section:r},{key:n,skipHashing:!0})}}function GS(t,e,r){return US({method:t,prefix:"Substrate",section:"substrate"},e,r)}const _S={changesTrieConfig:GS("changesTrieConfig",":changes_trie",{docs:"Changes trie configuration is stored under this key.",type:"u32"}),childStorageKeyPrefix:GS("childStorageKeyPrefix",":child_storage:",{docs:"Prefix of child storage keys.",type:"u32"}),code:GS("code",":code",{docs:"Wasm code of the runtime.",type:"Bytes"}),extrinsicIndex:GS("extrinsicIndex",":extrinsic_index",{docs:"Current extrinsic index (u32) is stored under this key.",type:"u32"}),heapPages:GS("heapPages",":heappages",{docs:"Number of wasm linear memory pages required for execution of the runtime.",type:"u64"})};const KS={docs:"Returns the current pallet version from storage",type:"u16"};function JS(t,{pallets:e},r){const n=function(t){const e={},r=Object.entries(_S);for(let n=0;n<r.length;n++)e[r[n][0]]=r[n][1](t);return{substrate:e}}(t);for(let r=0;r<e.length;r++){const{name:i,storage:s}=e[r];if(s.isSome){const e=kh(i),{items:r,prefix:o}=s.unwrap(),a=o.toString();xh(n,e,(()=>Ph({palletVersion:US({method:"palletVersion",prefix:a,section:e},VS(t,{method:":__STORAGE_VERSION__:",prefix:i.toString()},[],[],[]),KS)(t)},r,(r=>qS(t,{meta:r,method:r.name.toString(),prefix:a,section:e},{})),Zm)))}}return n}function QS(t,e){const r=Math.ceil(t.length/e),n=Array(r);for(let i=0;i<r;i++){const r=i*e;n[i]=t.slice(r,r+e)}return n}function $S(t,e){return Ia((function(r,n){var i=0;r.subscribe(new Ba(n,(function(r){return t.call(e,r,i++)&&n.next(r)})))}))}function tA(t){return Ia((function(e,r){var n=!1;e.subscribe(new Ba(r,(function(t){n=!0,r.next(t)}),(function(){n||r.next(t),r.complete()})))}))}function eA(t){return void 0===t&&(t=rA),Ia((function(e,r){var n=!1;e.subscribe(new Ba(r,(function(t){n=!0,r.next(t)}),(function(){return n?r.complete():r.error(t())})))}))}function rA(){return new vh}function nA(t,e){var r=arguments.length>=2;return function(n){return n.pipe(t?$S((function(e,r){return t(e,r,n)})):ao,mM(1),r?tA(e):eA((function(){return new vh})))}}function iA(t){return Za((function(){return t}))}function sA(t){return Z(t.sign)}const oA=xu("api/util");function aA(t,{block:{extrinsics:e,header:r}},n,i){for(const[r,i]of e.entries())if(i.hash.eq(t))return n.filter((({phase:t})=>t.isApplyExtrinsic&&t.asApplyExtrinsic.eqn(r)));if(i.isInBlock){const n=e.map((t=>t.hash.toHex()));oA.warn(`block ${r.hash.toHex()}: Unable to find extrinsic ${t.toHex()} inside ${n.join(", ")}`)}}const uA=t=>t;function hA(t,e,r,n){return t.filter((({event:t})=>e===t.section&&r.includes(t.method))).map((t=>n(t)))}function cA({event:{data:[t]}}){return t}function lA({event:{data:t,method:e}}){return"ExtrinsicSuccess"===e?t[0]:t[1]}class dA{constructor({dispatchError:t,dispatchInfo:e,events:r,internalError:n,status:i}){this.dispatchError=void 0,this.dispatchInfo=void 0,this.internalError=void 0,this.events=void 0,this.status=void 0,this.dispatchError=t||function(t=[]){return hA(t,"system",["ExtrinsicFailed"],cA)[0]}(r),this.dispatchInfo=e||function(t=[]){return hA(t,"system",["ExtrinsicFailed","ExtrinsicSuccess"],lA)[0]}(r),this.events=r||[],this.internalError=n,this.status=i}get isCompleted(){return this.isError||this.status.isInBlock||this.status.isFinalized}get isError(){return this.status.isDropped||this.status.isFinalityTimeout||this.status.isInvalid||this.status.isUsurped}get isFinalized(){return this.status.isFinalized}get isInBlock(){return this.status.isInBlock}get isWarning(){return this.status.isRetracted}filterRecords(t,e){return hA(this.events,t,Array.isArray(e)?e:[e],uA)}findRecord(t,e){return this.filterRecords(t,e)[0]}toHuman(t){var e,r,n;return{dispatchError:null===(e=this.dispatchError)||void 0===e?void 0:e.toHuman(),dispatchInfo:null===(r=this.dispatchInfo)||void 0===r?void 0:r.toHuman(),events:this.events.map((e=>e.toHuman(t))),internalError:null===(n=this.internalError)||void 0===n?void 0:n.message.toString(),status:this.status.toHuman(t)}}}const fA=t=>t;function pA(t,e,r,{header:n,mortalLength:i,nonce:s}){return n?yA(t,r,{blockHash:n.hash,era:e.createType("ExtrinsicEra",{current:n.number,period:r.era||i}),nonce:s}):(Qo(r.era)&&(delete r.era,delete r.blockHash),yA(t,r,{nonce:s}))}function mA(t,e){let r={};return Z(t)?e=t:r=Fi({},t),[r,e]}function yA(t,e,r){return Fi({blockHash:t.genesisHash,genesisHash:t.genesisHash},e,r,{runtimeVersion:t.runtimeVersion,signedExtensions:t.registry.signedExtensions,version:t.extrinsicType})}function vA(t={}){return fu(t)||Qo(t)?{nonce:t}:t}function gA(t,e,r){const n=function({api:t,apiType:e,decorateMethod:r}){const n=t.registry.createClass("Extrinsic");var i=rt("ignoreStatusCb"),s=rt("transformResult"),o=rt("observeSign"),a=rt("observeStatus"),u=rt("observeSend"),h=rt("observeSubscribe"),c=rt("signViaSigner"),l=rt("updateSigner");return class extends n{constructor(r,n){super(r,n,{version:t.extrinsicType}),Object.defineProperty(this,i,{writable:!0,value:void 0}),Object.defineProperty(this,s,{writable:!0,value:fA}),Object.defineProperty(this,o,{writable:!0,value:(e,r)=>{const n=sA(e)?e.address:e.toString(),i=vA(r);let s;return t.derive.tx.signingInfo(n,i.nonce,i.era).pipe(nA(),Ax((async r=>{const o=pA(t,this.registry,i,r);sA(e)?this.sign(e,o):s=await tt(this,c)[c](n,o,r.header)})),iA(s))}}),Object.defineProperty(this,a,{writable:!0,value:(e,r)=>{if(!r.isFinalized&&!r.isInBlock)return wh(tt(this,s)[s](new dA({status:r})));const n=r.isInBlock?r.asInBlock:r.asFinalized;return t.derive.tx.events(n).pipe(Za((({block:t,events:n})=>tt(this,s)[s](new dA({events:aA(e,t,n,r),status:r})))),yM((t=>wh(tt(this,s)[s](new dA({internalError:t,status:r}))))))}}),Object.defineProperty(this,u,{writable:!0,value:(e=-1)=>t.rpc.author.submitExtrinsic(this).pipe(MM((t=>{tt(this,l)[l](e,t)})))}),Object.defineProperty(this,h,{writable:!0,value:(e=-1)=>{const r=this.hash;return t.rpc.author.submitAndWatchExtrinsic(this).pipe(bh((t=>tt(this,a)[a](r,t))),MM((t=>{tt(this,l)[l](e,t)})))}}),Object.defineProperty(this,c,{writable:!0,value:async(e,r,n)=>{const i=r.signer||t.signer;_(i,"No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.");const s=this.registry.createType("SignerPayload",Fi({},r,{address:e,blockNumber:n?n.number:0,method:this.method}));let o;if(i.signPayload)o=await i.signPayload(s.toPayload());else{if(!i.signRaw)throw new Error("Invalid signer interface, it should implement either signPayload or signRaw (or both)");o=await i.signRaw(s.toRaw())}return super.addSignature(e,o.signature,s.toPayload()),o.id}}),Object.defineProperty(this,l,{writable:!0,value:(e,r)=>{-1!==e&&t.signer&&t.signer.update&&t.signer.update(e,r)}}),tt(this,i)[i]="rxjs"===e}dryRun(e,n){return F(n)||us(n)?r((()=>t.rpc.system.dryRun(this.toHex(),n))):r((()=>tt(this,o)[o](e,n).pipe(bh((()=>t.rpc.system.dryRun(this.toHex()))))))()}paymentInfo(e,n){if(F(n)||us(n))return r((()=>t.rpc.payment.queryInfo(this.toHex(),n)));const[i]=mA(n),s=sA(e)?e.address:e.toString();return r((()=>t.derive.tx.signingInfo(s,i.nonce,i.era).pipe(nA(),bh((e=>{const r=pA(t,this.registry,i,e),n=yA(t,r,{});return this.signFake(s,n),t.rpc.payment.queryInfo(this.toHex())})))))()}send(e){const n=t.hasSubscriptions&&(tt(this,i)[i]||!!e);return r(n?tt(this,h)[h]:tt(this,u)[u])(e)}sign(e,r){return super.sign(e,yA(t,vA(r),{})),this}signAsync(t,e){return r((()=>tt(this,o)[o](t,e).pipe(iA(this))))()}signAndSend(e,n,s){const[a,c]=mA(n,s),l=t.hasSubscriptions&&(tt(this,i)[i]||!!c);return r((()=>tt(this,o)[o](e,a).pipe(bh((t=>l?tt(this,h)[h](t):tt(this,u)[u](t))))))(c)}withResultTransform(t){return tt(this,s)[s]=t,this}}}({api:e,apiType:t,decorateMethod:r});return t=>new n(e.registry,t)}const bA=xu("api/augment");function wA(t,e,r=[]){return e.length?` ${e.length} ${t}${r.length?" and":""}`:""}function MA(t,e){return e.length?`\n\t${t.padStart(7)}: ${e.sort().join(", ")}`:""}function kA(t,e,[r,n]){(r.length||n.length)&&bA.warn(`api.${t}: Found${wA("added",r,n)}${wA("removed",n)} ${e}:${MA("added",r)}${MA("removed",n)}`)}function xA(t,e){return t.filter((t=>!e.includes(t)))}function PA(t,e){const r=Object.keys(t),n=(i=Object.keys(e),s=r,i.filter((t=>s.includes(t))));var i,s;const o=[];for(let r=0;r<n.length;r++){const i=n[r],s=Object.keys(t[i]),a=Object.keys(e[i]);o.push(...a.filter((t=>!s.includes(t))).map((t=>`${i}.${t}`)))}return o}function LA(t,e){const r=e=>t[e],n=Object.keys(t);for(let t=0;t<n.length;t++){const i=n[t];Object.prototype.hasOwnProperty.call(e,i)||xh(e,i,r)}}function TA(t,e,r,n=!1){n&&function(t){const e=Object.keys(t);for(let r=0;r<e.length;r++)delete t[e[r]]}(r),t&&Object.keys(r).length&&(kA(t,"modules",function(t,e){const r=Object.keys(t),n=Object.keys(e);return[xA(r,n),xA(n,r)]}(e,r)),kA(t,"calls",function(t,e){return[PA(e,t),PA(t,e)]}(e,r)));const i=Object.keys(e);for(let t=0;t<i.length;t++){const n=i[t];r[n]||(r[n]={}),LA(e[n],r[n])}return r}function SA(t,e){const r=t=>Object.keys(e[t]),n=(r,n)=>t(e[r][n]),i={},s=Object.keys(e);for(let t=0;t<s.length;t++)LM(i,s[t],r,n);return i}function AA({lookup:t},{method:e,section:r},n){return`${r}.${e}(${n.map((e=>t.getTypeDef(e).type)).join(", ")})`}function DA(t,e,r){const n=r.filter((t=>!G(t)));if(e.meta.type.isPlain)_(0===n.length,(()=>`${AA(t,e,[])} does not take any arguments, ${n.length} found`));else{const{hashers:r,key:i}=e.meta.type.asMap,s=1===r.length?[i]:t.lookup.getSiType(i).def.asTuple.map((t=>t));_(n.length===s.length,(()=>`${AA(t,e,s)} is a map, requiring ${s.length} arguments, ${n.length} found`))}return[e,n]}var jA=rt("eventemitter");const HA=1e3,OA=xu("api/init");let zA=0;function NA(t,{method:e,section:r}){return _(t.rx.query[r]&&t.rx.query[r][e],(()=>`query.${r}.${e} is not available in this version of the metadata`)),t.rx.query[r][e]}var EA=rt("instanceId"),YA=rt("registry");const RA=xu("api/init");function IA(t){return t.toString()}var BA=rt("healthTimer"),XA=rt("registries"),VA=rt("updateSub"),CA=rt("waitingRegistries"),WA=rt("onProviderConnect"),qA=rt("onProviderDisconnect"),ZA=rt("onProviderError");function FA(t){return K(t,"Api needs to be initialized before using, listen on 'ready'")}var UA=rt("allHasFired"),GA=rt("callback"),_A=rt("fired"),KA=rt("fns"),JA=rt("isActive"),QA=rt("results"),$A=rt("subscriptions");class tD{constructor(t,e){Object.defineProperty(this,UA,{writable:!0,value:!1}),Object.defineProperty(this,GA,{writable:!0,value:void 0}),Object.defineProperty(this,_A,{writable:!0,value:[]}),Object.defineProperty(this,KA,{writable:!0,value:[]}),Object.defineProperty(this,JA,{writable:!0,value:!0}),Object.defineProperty(this,QA,{writable:!0,value:[]}),Object.defineProperty(this,$A,{writable:!0,value:[]}),tt(this,GA)[GA]=e,tt(this,$A)[$A]=t.map((async(t,e)=>{const[r,...n]=Array.isArray(t)?t:[t];return tt(this,_A)[_A].push(!1),tt(this,KA)[KA].push(r),r(...n,this._createCallback(e))}))}_allHasFired(){var t;return(t=tt(this,UA))[UA]||(t[UA]=0===tt(this,_A)[_A].filter((t=>!t)).length),tt(this,UA)[UA]}_createCallback(t){return e=>{tt(this,_A)[_A][t]=!0,tt(this,QA)[QA][t]=e,this._triggerUpdate()}}_triggerUpdate(){if(tt(this,JA)[JA]&&Z(tt(this,GA)[GA])&&this._allHasFired())try{tt(this,GA)[GA](tt(this,QA)[QA])}catch(t){}}unsubscribe(){tt(this,JA)[JA]&&(tt(this,JA)[JA]=!1,tt(this,$A)[$A].forEach((async t=>{try{const e=await t;Z(e)&&e()}catch(t){}})))}}function eD(t,e){let r=!1;return{reject:t=>(r||(r=!0,e(t)),pM),resolve:e=>{r||(r=!0,t(e))}}}function rD(t,e){const r=!!(e&&e.methodName&&e.methodName.includes("subscribe"));return function(...n){const[i,s]=function(t,e){let r;const n=t.slice();return t.length&&Z(t[t.length-1])&&(r=n.pop()),_(!e||Z(r),"Expected a callback to be passed with subscriptions"),[n,r]}(n,r);return s?function(t,e,r){return new Promise(((n,i)=>{const s=eD(n,i),o=t(...e).pipe(yM((t=>s.reject(t))),MM((()=>s.resolve((()=>o.unsubscribe()))))).subscribe((t=>{setTimeout((()=>r(t)),0)}))}))}(t,i,s):function(t,e){return new Promise(((r,n)=>{const i=eD(r,n),s=t(...e).pipe(yM((t=>i.reject(t)))).subscribe((t=>{i.resolve(t),setTimeout((()=>s.unsubscribe()),0)}))}))}((null==e?void 0:e.overrideNoSub)||t,i)}}var nD=rt("isReadyPromise"),iD=rt("isReadyOrErrorPromise");class sD extends class extends class extends class extends class extends class{constructor(){Object.defineProperty(this,jA,{writable:!0,value:new lu})}emit(t,...e){return tt(this,jA)[jA].emit(t,...e)}on(t,e){return tt(this,jA)[jA].on(t,e),this}off(t,e){return tt(this,jA)[jA].removeListener(t,e),this}once(t,e){return tt(this,jA)[jA].once(t,e),this}}{constructor(t,e,r){var n;super(),Object.defineProperty(this,EA,{writable:!0,value:void 0}),Object.defineProperty(this,YA,{writable:!0,value:void 0}),this.__phantom=new ps(0),this._consts={},this._derive=void 0,this._errors={},this._events={},this._extrinsics=void 0,this._extrinsicType=4,this._genesisHash=void 0,this._isConnected=void 0,this._isReady=!1,this._options=void 0,this._query={},this._queryMulti=void 0,this._rpc=void 0,this._rpcCore=void 0,this._runtimeChain=void 0,this._runtimeMetadata=void 0,this._runtimeVersion=void 0,this._rx={consts:{},query:{},tx:{}},this._type=void 0,this._decorateMethod=void 0,this._rxDecorateMethod=t=>t,tt(this,EA)[EA]=""+ ++zA,tt(this,YA)[YA]=(null===(n=t.source)||void 0===n?void 0:n.registry)||t.registry||new lw,this._rx.queryAt=(t,e)=>qa(this.at(t,e)).pipe(Za((t=>t.rx.query))),this._rx.registry=tt(this,YA)[YA];const i=t.source?t.source._rpcCore.provider.clone():t.provider||new lh;this._decorateMethod=r,this._options=t,this._type=e,this._rpcCore=new NS(tt(this,EA)[EA],tt(this,YA)[YA],i,this._options.rpc),this._isConnected=new mo(this._rpcCore.provider.isConnected),this._rx.hasSubscriptions=this._rpcCore.provider.hasSubscriptions}get registry(){return tt(this,YA)[YA]}createType(t,...e){return tt(this,YA)[YA].createType(t,...e)}registerTypes(t){t&&tt(this,YA)[YA].register(t)}get hasSubscriptions(){return this._rpcCore.provider.hasSubscriptions}get supportMulti(){return this._rpcCore.provider.hasSubscriptions||!!this._rpcCore.state.queryStorageAt}_createDecorated(t,e,r,n){r||(r={consts:{},errors:{},events:{},query:{},registry:t.registry,rx:{query:{}}}),t.decoratedMeta||(t.decoratedMeta=function(t,e){_(e instanceof Iv,"You need to pass a valid Metadata instance to Decorated");const r=e.asLatest,n=e.version;return{consts:ey(t,r),errors:_m(t,r,n),events:Jm(t,r,n),query:JS(t,r),registry:t,tx:ty(t,r,n)}}(t.registry,t.metadata));const i=this._decorateStorage(t.decoratedMeta,this._decorateMethod,n),s=this._decorateStorage(t.decoratedMeta,this._rxDecorateMethod,n);return TA("consts",t.decoratedMeta.consts,r.consts,e),TA("errors",t.decoratedMeta.errors,r.errors,e),TA("events",t.decoratedMeta.events,r.events,e),TA("query",i,r.query,e),TA("query",s,r.rx.query,e),r.findCall=e=>mh(t.registry,e),r.findError=e=>yh(t.registry,e),r.queryMulti=n?this._decorateMultiAt(r,this._decorateMethod,n):this._decorateMulti(this._decorateMethod),{decoratedApi:r,decoratedMeta:t.decoratedMeta}}_injectMetadata(t,e=!1){!e&&t.decoratedApi||(t.decoratedApi={consts:{},errors:{},events:{},query:{},registry:t.registry,rx:{query:{}}});const{decoratedApi:r,decoratedMeta:n}=this._createDecorated(t,e,t.decoratedApi);this._consts=r.consts,this._errors=r.errors,this._events=r.events,this._query=r.query,this._rx.query=r.rx.query;const i=this._decorateExtrinsics(n,this._decorateMethod),s=this._decorateExtrinsics(n,this._rxDecorateMethod);e||!this._extrinsics?(this._extrinsics=i,this._rx.tx=s):(TA("tx",i,this._extrinsics,!1),TA(null,s,this._rx.tx,!1)),TA(null,n.consts,this._rx.consts,e)}injectMetadata(t,e,r){this._injectMetadata({metadata:t,registry:r||tt(this,YA)[YA],specName:tt(this,YA)[YA].createType("Text"),specVersion:Nh},e)}_decorateFunctionMeta(t,e){return e.meta=t.meta,e.method=t.method,e.section=t.section,e.toJSON=t.toJSON,t.callIndex&&(e.callIndex=t.callIndex),e}_filterRpc(t,e){0!==Object.keys(e).length&&(this._rpcCore.addUserInterfaces(e),this._decorateRpc(this._rpcCore,this._decorateMethod,this._rpc),this._decorateRpc(this._rpcCore,this._rxDecorateMethod,this._rx.rpc)),this._filterRpcMethods(t)}_filterRpcMethods(t){const e=0!==t.length,r=[...this._rpcCore.mapping.entries()],n=[];for(let t=0;t<r.length;t++){const[,{alias:e,endpoint:i,method:s,pubsub:o,section:a}]=r[t];n.push(`${a}_${s}`),o&&(n.push(`${a}_${o[1]}`),n.push(`${a}_${o[2]}`)),e&&n.push(...e),i&&n.push(i)}const i=t.filter((t=>!n.includes(t)));i.length&&OA.warn(`RPC methods not decorated: ${i.join(", ")}`);for(let n=0;n<r.length;n++){const[i,{method:s,section:o}]=r[n];e&&!t.includes(i)&&"rpc_methods"!==i&&(delete this._rpc[o][s],delete this._rx.rpc[o][s])}}_decorateRpc(t,e,r={}){const n=r,i=(r,n)=>{const i=t[r][n],s=e(i,{methodName:n});return s.meta=i.meta,s.raw=e(i.raw,{methodName:n}),s};for(let e=0;e<t.sections.length;e++){const r=t.sections[e];if(!Object.prototype.hasOwnProperty.call(n,r)){const e=Object.keys(t[r]),s=t=>i(r,t);for(let t=0;t<e.length;t++){const i=e[t];(this.hasSubscriptions||!i.startsWith("subscribe")&&!i.startsWith("unsubscribe"))&&(Object.prototype.hasOwnProperty.call(n,r)||(n[r]={}),xh(n[r],i,s))}}}return n}_decorateMulti(t){return t((t=>(this.hasSubscriptions?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt)(t.map((t=>Array.isArray(t)?t[0].creator.meta.type.isPlain?[t[0].creator]:1===t[0].creator.meta.type.asMap.hashers.length?[t[0].creator,t.slice(1)]:[t[0].creator,...t.slice(1)]:[t.creator])))))}_decorateMultiAt(t,e,r){return e((e=>this._rpcCore.state.queryStorageAt(e.map((e=>{if(Array.isArray(e)){const{creator:r}=NA(t,e[0].creator);return r.meta.type.isPlain?[r]:1===r.meta.type.asMap.hashers.length?[r,e.slice(1)]:[r,...e.slice(1)]}return[NA(t,e.creator).creator]})),r)))}_decorateExtrinsics({tx:t},e){const r=gA(this._type,this._rx,e),n=e=>Ph({},Object.keys(t[e]),(n=>this._decorateExtrinsicEntry(t[e][n],r))),i=Object.keys(t);for(let t=0;t<i.length;t++)xh(r,i[t],n);return r}_decorateExtrinsicEntry(t,e){const r=(...r)=>e(t(...r));return r.is=e=>t.is(e),this._decorateFunctionMeta(t,r)}_decorateStorage({query:t,registry:e},r,n){const i={},s=i=>Ph({},Object.keys(t[i]),(s=>n?this._decorateStorageEntryAt(e,t[i][s],r,n):this._decorateStorageEntry(t[i][s],r))),o=Object.keys(t);for(let t=0;t<o.length;t++)xh(i,o[t],s);return i}_decorateStorageEntry(t,e){const r=(e,r)=>DA(r||tt(this,YA)[YA],t,e),n=e=>qa(this.at(e)).pipe(Za((e=>NA(e,t)))),i=this._decorateStorageCall(t,e);return i.creator=t,i.at=e(((t,...e)=>n(t).pipe(bh((t=>t(...e)))))),i.hash=e(((...t)=>this._rpcCore.state.getStorageHash(r(t)))),i.is=e=>e.section===t.section&&e.method===t.method,i.key=(...e)=>ta(Ab(t(...e))[1]),i.keyPrefix=(...e)=>ta(t.keyPrefix(...e)),i.range=e(((t,...e)=>this._decorateStorageRange(i,e,t))),i.size=e(((...t)=>this._rpcCore.state.getStorageSize(r(t)))),i.sizeAt=e(((t,...e)=>n(t).pipe(bh((n=>this._rpcCore.state.getStorageSize(r(e,n.creator.meta.registry),t)))))),t.iterKey&&t.meta.type.isMap&&(i.entries=e(vx(tt(this,EA)[EA],((...e)=>this._retrieveMapEntries(t,null,e)))),i.entriesAt=e(vx(tt(this,EA)[EA],((t,...e)=>n(t).pipe(bh((r=>this._retrieveMapEntries(r.creator,t,e))))))),i.entriesPaged=e(vx(tt(this,EA)[EA],(e=>this._retrieveMapEntriesPaged(t,e)))),i.keys=e(vx(tt(this,EA)[EA],((...e)=>this._retrieveMapKeys(t,null,e)))),i.keysAt=e(vx(tt(this,EA)[EA],((t,...e)=>n(t).pipe(bh((r=>this._retrieveMapKeys(r.creator,t,e))))))),i.keysPaged=e(vx(tt(this,EA)[EA],(e=>this._retrieveMapKeysPaged(t,e))))),this.supportMulti&&t.meta.type.isMap&&(i.multi=e((e=>1===t.meta.type.asMap.hashers.length?this._retrieveMulti(e.map((e=>[t,[e]]))):this._retrieveMulti(e.map((e=>[t,e])))))),this._decorateFunctionMeta(t,i)}_decorateStorageEntryAt(t,e,r,n){const i=r=>DA(t,e,r),s=r(((...t)=>this._rpcCore.state.getStorage(i(t),n)));return s.creator=e,s.hash=r(((...t)=>this._rpcCore.state.getStorageHash(i(t),n))),s.is=t=>t.section===e.section&&t.method===e.method,s.key=(...t)=>ta(Ab(e(e.meta.type.isPlain?void 0:t))[1]),s.keyPrefix=(...t)=>ta(e.keyPrefix(...t)),s.size=r(((...t)=>this._rpcCore.state.getStorageSize(i(t),n))),e.iterKey&&e.meta.type.isMap&&(s.entries=r(vx(tt(this,EA)[EA],((...t)=>this._retrieveMapEntries(e,n,t)))),s.keys=r(vx(tt(this,EA)[EA],((...t)=>this._retrieveMapKeys(e,n,t))))),this._decorateFunctionMeta(e,s)}_decorateStorageCall(t,e){return e(((...e)=>this.hasSubscriptions?this._rpcCore.state.subscribeStorage([DA(tt(this,YA)[YA],t,e)]).pipe(Za((([t])=>t))):this._rpcCore.state.getStorage(DA(tt(this,YA)[YA],t,e))),{methodName:t.method,overrideNoSub:(...e)=>this._rpcCore.state.getStorage(DA(tt(this,YA)[YA],t,e))})}_decorateStorageRange(t,e,r){const n=ap(tt(this,YA)[YA],t.creator.meta.type,t.creator.meta.modifier.isOptional);return this._rpcCore.state.queryStorage([t.key(...e)],...r).pipe(Za((t=>t.map((([t,[e]])=>[t,this.createType(n,e.isSome?e.unwrap().toHex():void 0)])))))}_retrieveMulti(t){if(!t.length)return wh([]);const e=this.hasSubscriptions?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt;return Qa(QS(t,250).map((t=>e(t)))).pipe(Za(YP))}_retrieveMapKeys({iterKey:t,meta:e,method:r,section:n},i,s){_(t&&e.type.isMap,"keys can only be retrieved on maps");const o=t(...s).toHex(),a=new mo(o),u=i?t=>this._rpcCore.state.getKeysPaged(o,HA,t,i):t=>this._rpcCore.state.getKeysPaged(o,HA,t),h=t=>t.setMeta(e,n,r);return a.pipe(bh(u),Za((t=>t.map(h))),MM((t=>{setTimeout((()=>{t.length===HA?a.next(t[999].toHex()):a.complete()}),0)})),PM(),Za(YP))}_retrieveMapKeysPaged({iterKey:t,meta:e,method:r,section:n},i){_(t&&e.type.isMap,"keys can only be retrieved on maps");const s=t(...i.args).toHex(),o=t=>t.setMeta(e,n,r);return this._rpcCore.state.getKeysPaged(s,i.pageSize,i.startKey||s).pipe(Za((t=>t.map(o))))}_retrieveMapEntries(t,e,r){const n=e?t=>this._rpcCore.state.queryStorageAt(t,e):t=>this._rpcCore.state.queryStorageAt(t);return this._retrieveMapKeys(t,e,r).pipe(bh((t=>t.length?Qa(QS(t,250).map(n)).pipe(Za((e=>YP(e).map(((e,r)=>[t[r],e]))))):wh([]))))}_retrieveMapEntriesPaged(t,e){return this._retrieveMapKeysPaged(t,e).pipe(bh((t=>t.length?this._rpcCore.state.queryStorageAt(t).pipe(Za((e=>e.map(((e,r)=>[t[r],e]))))):wh([]))))}_decorateDeriveRx(t){var e,r,n,i;const s=null===(e=this._runtimeVersion)||void 0===e?void 0:e.specName.toString();return SA(t,function(t,e,r={}){return{...xS(t,e,MS),...xS(t,e,r)}}(tt(this,EA)[EA],this._rx,Fi({},this._options.derives,null===(r=this._options.typesBundle)||void 0===r||null===(n=r.spec)||void 0===n||null===(i=n[s||""])||void 0===i?void 0:i.derives)))}_decorateDerive(t){return SA(t,this._rx.derive)}}{constructor(t,e,r){super(t,e,r),Object.defineProperty(this,BA,{writable:!0,value:null}),Object.defineProperty(this,XA,{writable:!0,value:[]}),Object.defineProperty(this,VA,{writable:!0,value:null}),Object.defineProperty(this,CA,{writable:!0,value:{}}),Object.defineProperty(this,WA,{writable:!0,value:async()=>{this._isConnected.next(!0),this.emit("connected");try{const[t,e]=await Promise.all([this._loadMeta(),!1===this._options.initWasm?Promise.resolve(!0):fM()]);this._subscribeHealth(),t&&!this._isReady&&e&&(this._isReady=!0,this.emit("ready",this))}catch(t){const e=new Error(`FATAL: Unable to initialize the API: ${t.message}`);RA.error(e),this.emit("error",e)}}}),Object.defineProperty(this,qA,{writable:!0,value:()=>{this._isConnected.next(!1),this._unsubscribeHealth(),this.emit("disconnected")}}),Object.defineProperty(this,ZA,{writable:!0,value:t=>{this.emit("error",t)}}),this.registry.setKnownTypes(t),t.source?tt(this,XA)[XA]=tt(t.source,XA)[XA]:this.registerTypes(t.types),this._rpc=this._decorateRpc(this._rpcCore,this._decorateMethod),this._rx.rpc=this._decorateRpc(this._rpcCore,this._rxDecorateMethod),this.supportMulti&&(this._queryMulti=this._decorateMulti(this._decorateMethod),this._rx.queryMulti=this._decorateMulti(this._rxDecorateMethod)),this._rx.signer=t.signer,this._rpcCore.setRegistrySwap((t=>this.getBlockRegistry(t))),this.hasSubscriptions?(this._rpcCore.provider.on("disconnected",tt(this,qA)[qA]),this._rpcCore.provider.on("error",tt(this,ZA)[ZA]),this._rpcCore.provider.on("connected",tt(this,WA)[WA])):RA.warn("Api will be available in a limited mode since the provider does not support subscriptions"),this._rpcCore.provider.isConnected&&tt(this,WA)[WA]()}_initRegistry(t,e,r,n,i){t.setChainProperties(i||this.registry.getChainProperties()),t.setKnownTypes(this._options),t.register(qy(t,e,r.specName,r.specVersion)),t.setHasher(function({knownTypes:t},e,r){var n,i,s,o,a,u;const h=e.toString(),c=r.toString();return t.hasher||(null===(n=t.typesBundle)||void 0===n||null===(i=n.chain)||void 0===i||null===(s=i[h])||void 0===s?void 0:s.hasher)||(null===(o=t.typesBundle)||void 0===o||null===(a=o.spec)||void 0===a||null===(u=a[c])||void 0===u?void 0:u.hasher)||null}(t,e,r.specName)),t.knownTypes.typesBundle&&(t.knownTypes.typesAlias=function({knownTypes:t},e,r){var n,i,s,o,a,u;const h=e.toString(),c=r.toString();return Fi({},null===(n=t.typesBundle)||void 0===n||null===(i=n.spec)||void 0===i||null===(s=i[c])||void 0===s?void 0:s.alias,null===(o=t.typesBundle)||void 0===o||null===(a=o.chain)||void 0===a||null===(u=a[h])||void 0===u?void 0:u.alias,t.typesAlias)}(t,e,r.specName)),t.setMetadata(n,void 0,Fi({},function({knownTypes:t},e,r){var n,i,s,o,a,u;const h=e.toString(),c=r.toString();return Fi({},null===(n=t.typesBundle)||void 0===n||null===(i=n.spec)||void 0===i||null===(s=i[c])||void 0===s?void 0:s.signedExtensions,null===(o=t.typesBundle)||void 0===o||null===(a=o.chain)||void 0===a||null===(u=a[h])||void 0===u?void 0:u.signedExtensions)}(t,e,r.specName),this._options.signedExtensions))}_getDefaultRegistry(){const t=tt(this,XA)[XA].find((({isDefault:t})=>t));return _(t,"Initialization error, cannot find the default registry"),t}async at(t,e){const r=ds(t),n=await this.getBlockRegistry(r,e);return this._createDecorated(n,!0,null,r).decoratedApi}_getBlockRegistryViaVersion(t,e){if(e){const r=tt(this,XA)[XA].find((({specName:t,specVersion:r})=>t.eq(e.specName)&&r.eq(e.specVersion)));if(r)return r.lastBlockHash=t,r}return null}async _getBlockRegistry(t){_(this._genesisHash&&this._runtimeVersion,"Cannot retrieve data on an uninitialized chain");const e=this.registry.createType("HeaderPartial",this._genesisHash.eq(t)?{number:Nh,parentHash:this._genesisHash}:await gh(this._rpcCore.chain.getHeader.raw(t)));_(!e.parentHash.isEmpty,"Unable to retrieve header and parent from supplied hash");const[r,n]=function(t,e){const r=Cy.find((e=>t.eq(e.genesisHash)));return r?[r.versions.reduce(((t,r)=>e.gt(r.blockNumber)?r:t),void 0),r.versions.find((t=>e.lte(t.blockNumber)))]:[void 0,void 0]}(this._genesisHash,e.number),i=this.registry.createType("RuntimeVersionPartial",r&&(n||r.specVersion.eq(this._runtimeVersion.specVersion))?{specName:this._runtimeVersion.specName,specVersion:r.specVersion}:await gh(this._rpcCore.state.getRuntimeVersion.raw(e.parentHash))),s=this._getBlockRegistryViaVersion(t,i);if(s)return s;const o=new lw(t),a=new Iv(o,await gh(this._rpcCore.state.getMetadata.raw(e.parentHash)));this._initRegistry(o,this._runtimeChain,i,a);const u={lastBlockHash:t,metadata:a,registry:o,specName:i.specName,specVersion:i.specVersion};return tt(this,XA)[XA].push(u),u}async getBlockRegistry(t,e){const r=tt(this,XA)[XA].find((({lastBlockHash:e})=>e&&Xb(e,t)));if(r)return r;const n=this._getBlockRegistryViaVersion(t,e);if(n)return n;const i=ta(t);let s=tt(this,CA)[CA][i];return G(s)&&(s=this._getBlockRegistry(t),tt(this,CA)[CA][i]=s,s.then((()=>{delete tt(this,CA)[CA][i]})).catch((()=>{}))),s}async _loadMeta(){var t;return!!this._isReady||(this._unsubscribeUpdates(),[this._genesisHash,this._runtimeMetadata]=null!==(t=this._options.source)&&void 0!==t&&t._isReady?await this._metaFromSource(this._options.source):await this._metaFromChain(this._options.metadata),this._initFromMeta(this._runtimeMetadata))}async _metaFromSource(t){this._extrinsicType=t.extrinsicVersion,this._runtimeChain=t.runtimeChain,this._runtimeVersion=t.runtimeVersion;const e=Object.keys(t.rpc),r=[];for(let n=0;n<e.length;n++){const i=e[n],s=Object.keys(t.rpc[i]);for(let t=0;t<s.length;t++)r.push(`${i}_${s[t]}`)}return this._filterRpc(r,Zy(this.registry,t.runtimeChain,t.runtimeVersion.specName)),[t.genesisHash,t.runtimeMetadata]}_detectCapabilities(t,e){return gh(wM(this._rx,e)).then((r=>{Object.keys(r).length&&(t.register(r),RA.debug((()=>`Capabilities detected${e?` (${ta(ds(e))})`:""}: ${Tu(r)}`)))})).catch(void 0),!0}_subscribeUpdates(){!tt(this,VA)[VA]&&this.hasSubscriptions&&(tt(this,VA)[VA]=this._rpcCore.state.subscribeRuntimeVersion().pipe(bh((t=>{var e;return null!==(e=this._runtimeVersion)&&void 0!==e&&e.specVersion.eq(t.specVersion)?wh(!1):this._rpcCore.state.getMetadata().pipe(Za((e=>{RA.log(`Runtime version updated to spec=${t.specVersion.toString()}, tx=${t.transactionVersion.toString()}`),this._runtimeMetadata=e,this._runtimeVersion=t,this._rx.runtimeVersion=t;const r=this._getDefaultRegistry();return r.metadata=e,r.specVersion=t.specVersion,this._initRegistry(r.registry.init(),this._runtimeChain,t,e),this._injectMetadata(r,!1),this._detectCapabilities(r.registry)})))}))).subscribe())}async _metaFromChain(t){const[e,r,n,i,s,o]=await Promise.all([gh(this._rpcCore.chain.getBlockHash(0)),gh(this._rpcCore.state.getRuntimeVersion()),gh(this._rpcCore.system.chain()),gh(this._rpcCore.system.properties()),gh(this._rpcCore.rpc.methods()),t?Promise.resolve(null):gh(this._rpcCore.state.getMetadata())]);this._runtimeChain=n,this._runtimeVersion=r,this._rx.runtimeVersion=r;const a=`${e.toHex()||"0x"}-${r.specVersion.toString()}`,u=o||(t&&t[a]?new Iv(this.registry,t[a]):await gh(this._rpcCore.state.getMetadata()));return this._initRegistry(this.registry,n,r,u,i),this._filterRpc(s.methods.map(IA),Zy(this.registry,n,r.specName)),this._subscribeUpdates(),tt(this,XA)[XA].length||tt(this,XA)[XA].push({isDefault:!0,metadata:u,registry:this.registry,specName:r.specName,specVersion:r.specVersion}),u.getUniqTypes(this._options.throwOnUnknown||!1),[e,u]}_initFromMeta(t){return this._extrinsicType=t.asLatest.extrinsic.version.toNumber(),this._rx.extrinsicType=this._extrinsicType,this._rx.genesisHash=this._genesisHash,this._rx.runtimeVersion=this._runtimeVersion,this._injectMetadata(this._getDefaultRegistry(),!0),this._rx.derive=this._decorateDeriveRx(this._rxDecorateMethod),this._derive=this._decorateDerive(this._decorateMethod),this._detectCapabilities(this.registry),!0}_subscribeHealth(){tt(this,BA)[BA]=this.hasSubscriptions?setInterval((()=>{gh(this._rpcCore.system.health()).catch((()=>{}))}),1e4):null}_unsubscribeHealth(){tt(this,BA)[BA]&&(clearInterval(tt(this,BA)[BA]),tt(this,BA)[BA]=null)}_unsubscribeUpdates(){tt(this,VA)[VA]&&(tt(this,VA)[VA].unsubscribe(),tt(this,VA)[VA]=null)}_unsubscribe(){this._unsubscribeHealth(),this._unsubscribeUpdates()}}{get consts(){return FA(this._consts)}get derive(){return FA(this._derive)}get errors(){return FA(this._errors)}get events(){return FA(this._events)}get extrinsicVersion(){return this._extrinsicType}get genesisHash(){return FA(this._genesisHash)}get isConnected(){return this._isConnected.getValue()}get libraryInfo(){return`${fh} v${ph}`}get query(){return FA(this._query)}get queryMulti(){return FA(this._queryMulti)}get rpc(){return FA(this._rpc)}get runtimeChain(){return FA(this._runtimeChain)}get runtimeMetadata(){return FA(this._runtimeMetadata)}get runtimeVersion(){return FA(this._runtimeVersion)}get rx(){return FA(this._rx)}get type(){return this._type}get tx(){return FA(this._extrinsics)}findCall(t){return mh(this.registry,t)}findError(t){return yh(this.registry,t)}}{constructor(t={},e,r){super(t,e,r)}connect(){return this._rpcCore.connect()}disconnect(){return this._unsubscribe(),this._rpcCore.disconnect()}setSigner(t){this._rx.signer=t}async sign(t,e,{signer:r}={}){if(F(t)){const n=r||this._rx.signer;return _(null==n?void 0:n.signRaw,"No signer exists with a signRaw interface. You possibly need to pass through an explicit keypair for the origin so it can be used for signing."),(await n.signRaw(Fi({type:"bytes"},e,{address:t}))).signature}return ta(t.sign(ds(e.data)))}}{constructor(t){super(t,"promise",rD),Object.defineProperty(this,nD,{writable:!0,value:void 0}),Object.defineProperty(this,iD,{writable:!0,value:void 0}),tt(this,nD)[nD]=new Promise((t=>{super.once("ready",(()=>t(this)))})),tt(this,iD)[iD]=new Promise(((t,e)=>{const r=eD(t,e);super.once("ready",(()=>r.resolve(this))),super.once("error",(t=>r.reject(t)))}))}static create(t){const e=new sD(t);return t&&t.throwOnConnect?e.isReadyOrError:(e.isReadyOrError.catch((()=>{})),e.isReady)}get isReady(){return tt(this,nD)[nD]}get isReadyOrError(){return tt(this,iD)[iD]}clone(){return new sD(Fi({},this._options,{source:this}))}async combineLatest(t,e){const r=new tD(t,e);return()=>{r.unsubscribe()}}}var oD=__webpack_require__(18269),aD=__webpack_require__.n(oD),uD=__webpack_require__(30381),hD=__webpack_require__.n(uD),cD=(hD()().subtract(1,"week").startOf("day").valueOf(),hD()().endOf("day").valueOf(),hD()().subtract(1,"month").startOf("day").valueOf(),hD()().endOf("day").valueOf(),hD()().subtract(3,"months").startOf("day").valueOf(),hD()().endOf("day").valueOf(),12);function lD(){var t=function(){for(var t="BCDEF".split(""),e="#",r=0;r<6;r++)e+=t[Math.floor(Math.random()*t.length)];return e}(),e="#"+Math.floor(16777215*Math.random()).toString(16),r=function(t,e){return Math.floor(Math.random()*(e-t))+t}(46,229),n=[r,360-r],i=[t,e],s=null;document.getElementsByTagName("canvas").length?s=document.getElementsByTagName("canvas")[0]:((s=document.createElement("canvas")).height=400,s.width=400);for(var o=s.getContext("2d"),a=0;a<n.length;a++)dD(s,o,a,n,i);return s.toDataURL()}function dD(t,e,r,n,i){e.save();var s=Math.floor(t.width/2),o=Math.floor(t.height/2),a=Math.floor(t.width/2),u=fD(function(t,e){for(var r=0,n=0;n<e;n++)r+=t[n];return r}(n,r)),h=u+fD(n[r]);e.beginPath(),e.moveTo(s,o),e.arc(s,o,a,u,h,!1),e.closePath(),e.fillStyle=i[r],e.fill(),e.restore()}function fD(t){return t*Math.PI/180}var pD=__webpack_require__(72367),mD=function(t,e,r,n){return new(r||(r=Promise))((function(i,s){function o(t){try{u(n.next(t))}catch(t){s(t)}}function a(t){try{u(n.throw(t))}catch(t){s(t)}}function u(t){t.done?i(t.value):function(t){return t instanceof r?t:new r((function(e){e(t)}))}(t.value).then(o,a)}u((n=n.apply(t,e||[])).next())}))},yD=function(t,e){var r,n,i,s,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(s){return function(a){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(i=2&s[0]?n.return:s[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,s[1])).done)return i;switch(n=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(i=o.trys,(i=i.length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){o.label=s[1];break}if(6===s[0]&&o.label<i[1]){o.label=i[1],i=s;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(s);break}i[2]&&o.ops.pop(),o.trys.pop();continue}s=e.call(t,o)}catch(t){s=[6,t],n=0}finally{r=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,a])}}};function vD(t){return $i(e=t)&&66===e.length;var e}var gD=function(t,e){return mD(void 0,void 0,void 0,(function(){return yD(this,(function(r){switch(r.label){case 0:return[4,(0,pD.decrypt)(e,t)];case 1:return[2,r.sent()]}}))}))},bD=function(){return bD=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var i in e=arguments[r])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},bD.apply(this,arguments)},wD=function(t,e,r,n){return new(r||(r=Promise))((function(i,s){function o(t){try{u(n.next(t))}catch(t){s(t)}}function a(t){try{u(n.throw(t))}catch(t){s(t)}}function u(t){t.done?i(t.value):function(t){return t instanceof r?t:new r((function(e){e(t)}))}(t.value).then(o,a)}u((n=n.apply(t,e||[])).next())}))},MD=function(t,e){var r,n,i,s,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(s){return function(a){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(i=2&s[0]?n.return:s[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,s[1])).done)return i;switch(n=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(i=o.trys,(i=i.length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){o.label=s[1];break}if(6===s[0]&&o.label<i[1]){o.label=i[1],i=s;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(s);break}i[2]&&o.ops.pop(),o.trys.pop();continue}s=e.call(t,o)}catch(t){s=[6,t],n=0}finally{r=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,a])}}},kD=function(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var n,i,s=r.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(n=s.next()).done;)o.push(n.value)}catch(t){i={error:t}}finally{try{n&&!n.done&&(r=s.return)&&r.call(s)}finally{if(i)throw i.error}}return o};L().setDefaultLevel("debug");var xD=function(){function t(){var t=this;hu().then((function(){return wD(t,void 0,void 0,(function(){var t,e,r,n,i,s;return MD(this,(function(o){switch(o.label){case 0:return t=new lh("ws://13.229.207.100:9944"),[4,sD.create({provider:t})];case 1:return e=o.sent(),[4,Promise.all([e.rpc.system.chain(),e.rpc.system.name(),e.rpc.system.version()])];case 2:return r=kD.apply(void 0,[o.sent(),3]),n=r[0],i=r[1],s=r[2],this.api=e,L().info("You are connected to chain "+n+" using "+i+" v"+s),uu.loadAll({ss58Format:42,type:"sr25519"}),L().info("Glitch Test initialization complete."),[2]}}))}))}))}return t.prototype.createAccount=function(t,e,r){return wD(this,void 0,void 0,(function(){var n,i;return MD(this,(function(s){switch(s.label){case 0:return n=t||function(t=12,e=!1){return jr()&&!e?ur(t):zo(cu[t])}(cD),i=uu.addUri(n,r||void 0,{avatar:lD(),name:e}).json,[4,(o=n,mD(void 0,void 0,void 0,(function(){var t;return yD(this,(function(e){switch(e.label){case 0:return t=ta(Hn()),[4,(0,pD.encrypt)(t,o)];case 1:return[2,{encrypted:e.sent(),secret:t}]}}))})))];case 1:return[2,{mnemonicEncrypted:s.sent(),json:i}]}var o}))}))},t.prototype.editAccount=function(t,e){var r=uu.getPair(e);return!!r&&(uu.saveAccountMeta(r,bD(bD({},r.meta),{name:t})),!0)},t.prototype.unlockAccount=function(t,e){try{return uu.getPair(e).unlock(t),!0}catch(t){return!1}},t.prototype.getBalance=function(t){return wD(this,void 0,void 0,(function(){var e,r;return MD(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,this.api.query.system.account(t)];case 1:return[2,""+(e=n.sent().data).free?aD().fromWei(""+e.free):"0"];case 2:throw r=n.sent(),new Error(r.message);case 3:return[2]}}))}))},t.prototype.transfer=function(t,e,r){return wD(this,void 0,void 0,(function(){var n,i,s,o;return MD(this,(function(a){switch(a.label){case 0:return a.trys.push([0,2,,3]),n=uu.getPair(t),i=aD().toWei(r).toString(),L().info("Sending",r,"from",n.address,"to",e),[4,this.api.tx.balances.transfer(e,i).signAndSend(n)];case 1:return s=a.sent(),L().info("Transfer success: ",s.toHex()),[3,3];case 2:throw o=a.sent(),L().info("Transfer Error:",o),new Error(o.message);case 3:return[2]}}))}))},t.prototype.getPrivateKeyFromSeed=function(t){return vD(t)?t:ta(Hr(Eo(t)).secretKey.subarray(0,32))},t}(),PD=function(){return PD=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var i in e=arguments[r])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},PD.apply(this,arguments)},LD=function(t,e,r,n){return new(r||(r=Promise))((function(i,s){function o(t){try{u(n.next(t))}catch(t){s(t)}}function a(t){try{u(n.throw(t))}catch(t){s(t)}}function u(t){t.done?i(t.value):function(t){return t instanceof r?t:new r((function(e){e(t)}))}(t.value).then(o,a)}u((n=n.apply(t,e||[])).next())}))},TD=function(t,e){var r,n,i,s,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(s){return function(a){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(i=2&s[0]?n.return:s[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,s[1])).done)return i;switch(n=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(i=o.trys,(i=i.length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){o.label=s[1];break}if(6===s[0]&&o.label<i[1]){o.label=i[1],i=s;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(s);break}i[2]&&o.ops.pop(),o.trys.pop();continue}s=e.call(t,o)}catch(t){s=[6,t],n=0}finally{r=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,a])}}};L().setDefaultLevel("debug");var SD=function(){function t(t){var e=t.initialState;this.glitchWeb3=new xD,this.appStateController=new W({initialState:e})}return t.prototype.createAccount=function(t,e,r){return LD(this,void 0,void 0,(function(){var n,i,s,o,a,u,h,c;return TD(this,(function(l){switch(l.label){case 0:return l.trys.push([0,3,,4]),[4,this.glitchWeb3.createAccount(t,e,r)];case 1:return n=l.sent(),i=n.mnemonicEncrypted,s=n.json,a=(o=s).address,u=o.meta,[4,this.appStateController.updateState("wallet",{isInitialized:"pending",isLocked:!0,selectedAddress:a,firstAddress:a,isBackUp:!1,accounts:(c={},c[a]={address:a,balance:0,name:u.name,avatar:u.avatar,whenCreated:u.whenCreated,seed:i},c)})];case 2:return[2,l.sent()];case 3:throw h=l.sent(),new Error(h.message);case 4:return[2]}}))}))},t.prototype.createAccountCompleted=function(){return LD(this,void 0,void 0,(function(){var t,e,r,n,i;return TD(this,(function(s){switch(s.label){case 0:return s.trys.push([0,5,,6]),[4,this.appStateController.getAddressSelected()];case 1:return t=s.sent(),[4,this.appStateController.getAccounts()];case 2:return e=s.sent(),[4,this.glitchWeb3.getBalance(t)];case 3:return r=s.sent(),[4,this.appStateController.updateState("wallet",{isInitialized:"completed",isLocked:!1,isBackUp:!0,accounts:(i={},i[t]=PD(PD({},e[t]),{balance:r}),i)})];case 4:return[2,s.sent()];case 5:throw n=s.sent(),new Error(n.message);case 6:return[2]}}))}))},t.prototype.createWalletCompleted=function(){return LD(this,void 0,void 0,(function(){var t,e,r,n,i;return TD(this,(function(s){switch(s.label){case 0:return s.trys.push([0,5,,6]),[4,this.appStateController.getAddressSelected()];case 1:return t=s.sent(),[4,this.appStateController.getAccounts()];case 2:return e=s.sent(),[4,this.glitchWeb3.getBalance(t)];case 3:return r=s.sent(),[4,this.appStateController.updateState("wallet",{isInitialized:"completed",isLocked:!1,isBackUp:!0,accounts:(i={},i[t]=PD(PD({},e[t]),{balance:r}),i)})];case 4:return[2,s.sent()];case 5:throw n=s.sent(),new Error(n.message);case 6:return[2]}}))}))},t.prototype.lockWallet=function(){return LD(this,void 0,void 0,(function(){var t;return TD(this,(function(e){switch(e.label){case 0:return[4,this.appStateController.updateState("wallet",{isLocked:!0})];case 1:return t=e.sent(),[2,PD({},t)]}}))}))},t.prototype.unlockWallet=function(t){return LD(this,void 0,void 0,(function(){var e,r,n,i,s,o;return TD(this,(function(a){switch(a.label){case 0:return a.trys.push([0,6,,7]),e={},[4,this.appStateController.getFirstAddress()];case 1:return r=a.sent(),[4,this.appStateController.getSettingsState()];case 2:return n=a.sent(),i=this.glitchWeb3.unlockAccount(t,r),[4,this.appStateController.updateState("wallet",PD(PD({},e),{isLocked:!i}))];case 3:return s=a.sent(),i?[4,this.appStateController.updateState("settings",{autoLock:PD(PD({},n.autoLock),{openTime:(new Date).getTime()})})]:[3,5];case 4:a.sent(),a.label=5;case 5:return[2,PD(PD({},s),{isWrongPassword:!i})];case 6:throw o=a.sent(),new Error(o.message);case 7:return[2]}}))}))},t.prototype.backupWallet=function(){return LD(this,void 0,void 0,(function(){var t;return TD(this,(function(e){switch(e.label){case 0:return[4,this.appStateController.updateState("wallet",{isBackUp:!0,isInitialized:"completed"})];case 1:return t=e.sent(),[2,PD({},t)]}}))}))},t.prototype.restoreWallet=function(t,e,r){return LD(this,void 0,void 0,(function(){var n,i,s,o,a,u,h,c,l,d;return TD(this,(function(f){switch(f.label){case 0:return[4,this.glitchWeb3.createAccount(t,e,r)];case 1:return n=f.sent(),i=n.mnemonicEncrypted,s=n.json,a=(o=s).address,u=o.meta,[4,this.glitchWeb3.getBalance(a)];case 2:h=f.sent(),f.label=3;case 3:return f.trys.push([3,6,,7]),[4,this.appStateController.updateState("wallet",{isInitialized:"completed",isLocked:!1,selectedAddress:a,firstAddress:a,isBackUp:!0,accounts:(d={},d[a]={address:a,balance:h,name:u.name,avatar:u.avatar,seed:i,whenCreated:u.whenCreated},d)})];case 4:return c=f.sent(),[4,this.setAutoLockTimer({openTime:(new Date).getTime(),duration:null})];case 5:return f.sent(),[2,c];case 6:throw l=f.sent(),new Error(l.message);case 7:return[2]}}))}))},t.prototype.logoutWallet=function(t){return LD(this,void 0,void 0,(function(){var e,r,n;return TD(this,(function(i){switch(i.label){case 0:return i.trys.push([0,4,,5]),[4,this.appStateController.getFirstAddress()];case 1:return e=i.sent(),(r=this.glitchWeb3.unlockAccount(t,e))?[4,this.appStateController.setDefaultState()]:[3,3];case 2:i.sent(),i.label=3;case 3:return[2,{isWrongPassword:!r}];case 4:throw n=i.sent(),new Error(n.message);case 5:return[2]}}))}))},t.prototype.showSeedPhrase=function(t){return LD(this,void 0,void 0,(function(){var e,r,n,i,s;return TD(this,(function(o){switch(o.label){case 0:return o.trys.push([0,5,,6]),[4,this.appStateController.getFirstAddress()];case 1:return e=o.sent(),this.glitchWeb3.unlockAccount(t,e)?[4,this.appStateController.getAccounts()]:[3,4];case 2:return r=o.sent(),n=r[e],i=n.seed,[4,gD(i.encrypted,i.secret)];case 3:return[2,{isWrongPassword:!1,seedPhrases:o.sent()}];case 4:return[2,{isWrongPassword:!0}];case 5:throw s=o.sent(),new Error(s.message);case 6:return[2]}}))}))},t.prototype.addNewAccount=function(t){return LD(this,void 0,void 0,(function(){var e,r,n,i,s,o,a,u,h,c;return TD(this,(function(l){switch(l.label){case 0:return l.trys.push([0,5,,6]),[4,this.glitchWeb3.createAccount(null,t,null)];case 1:return e=l.sent(),r=e.mnemonicEncrypted,n=e.json,s=(i=n).address,o=i.meta,[4,this.appStateController.getAccounts()];case 2:return a=l.sent(),[4,this.glitchWeb3.getBalance(s)];case 3:return u=l.sent(),[4,this.appStateController.updateState("wallet",{selectedAddress:s,accounts:PD((c={},c[s]={name:o.name,address:s,avatar:o.avatar,balance:u,seed:r,whenCreated:o.whenCreated},c),a)})];case 4:return h=l.sent(),[2,PD({},h)];case 5:throw l.sent();case 6:return[2]}}))}))},t.prototype.changeAccount=function(t){return LD(this,void 0,void 0,(function(){var e,r,n;return TD(this,(function(i){switch(i.label){case 0:return i.trys.push([0,4,,5]),[4,this.appStateController.getAccounts()];case 1:return e=i.sent(),[4,this.glitchWeb3.getBalance(t)];case 2:return r=i.sent(),e[t].balance=r,[4,this.appStateController.updateState("wallet",{selectedAddress:t,accounts:PD({},e)})];case 3:return n=i.sent(),[2,PD({},n)];case 4:throw i.sent();case 5:return[2]}}))}))},t.prototype.importAccount=function(t,e){return LD(this,void 0,void 0,(function(){var r,n,i,s,o,a,u,h,c,l,d;return TD(this,(function(f){switch(f.label){case 0:return f.trys.push([0,5,,6]),[4,this.glitchWeb3.createAccount(e,t,null)];case 1:return r=f.sent(),n=r.mnemonicEncrypted,i=r.json,o=(s=i).address,a=s.meta,[4,this.appStateController.getAccounts()];case 2:return u=f.sent(),[4,this.glitchWeb3.getBalance(o)];case 3:return h=f.sent(),[4,this.appStateController.updateState("wallet",{selectedAddress:o,accounts:PD((d={},d[o]={name:a.name,address:o,avatar:a.avatar,balance:h,seed:n,whenCreated:a.whenCreated},d),u)})];case 4:return c=f.sent(),[2,PD({},c)];case 5:throw l=f.sent(),new Error(l.message);case 6:return[2]}}))}))},t.prototype.showPrivateKeysAccount=function(t){return LD(this,void 0,void 0,(function(){var e,r,n,i,s,o,a;return TD(this,(function(u){switch(u.label){case 0:return u.trys.push([0,6,,7]),[4,this.appStateController.getFirstAddress()];case 1:return e=u.sent(),[4,this.appStateController.getAddressSelected()];case 2:return r=u.sent(),this.glitchWeb3.unlockAccount(t,e)?[4,this.appStateController.getAccounts()]:[3,5];case 3:return n=u.sent(),i=n[r],s=i.seed,[4,gD(s.encrypted,s.secret)];case 4:return o=u.sent(),[2,{isWrongPassword:!1,privateKey:this.glitchWeb3.getPrivateKeyFromSeed(o)}];case 5:return[2,{isWrongPassword:!0,privateKey:null}];case 6:throw a=u.sent(),new Error(a.message);case 7:return[2]}}))}))},t.prototype.changeAccountName=function(t){return LD(this,void 0,void 0,(function(){var e,r,n,i;return TD(this,(function(s){switch(s.label){case 0:return s.trys.push([0,4,,5]),[4,this.appStateController.getAccounts()];case 1:return e=s.sent(),[4,this.appStateController.getAddressSelected()];case 2:return r=s.sent(),this.glitchWeb3.editAccount(t,r),e[r].name=t,[4,this.appStateController.updateState("wallet",{accounts:PD({},e)})];case 3:return n=s.sent(),[2,PD({},n)];case 4:throw i=s.sent(),new Error(i.message);case 5:return[2]}}))}))},t.prototype.transfer=function(t,e,r){return LD(this,void 0,void 0,(function(){var n,i,s;return TD(this,(function(o){switch(o.label){case 0:return o.trys.push([0,5,,6]),[4,this.appStateController.getFirstAddress()];case 1:return n=o.sent(),[4,this.appStateController.getAddressSelected()];case 2:return i=o.sent(),this.glitchWeb3.unlockAccount(t,n)?(this.glitchWeb3.unlockAccount("",i),[4,this.glitchWeb3.transfer(i,e,r)]):[3,4];case 3:return o.sent(),[2,{isWrongPassword:!1,isTransferSuccess:!0}];case 4:return[2,{isWrongPassword:!0}];case 5:throw s=o.sent(),new Error(s.message);case 6:return[2]}}))}))},t.prototype.getTokenPrice=function(t,e){var r;return LD(this,void 0,void 0,(function(){var n,i,s;return TD(this,(function(o){switch(o.label){case 0:return o.trys.push([0,3,,4]),[4,B().get("https://api.coingecko.com/api/v3/simple/price?ids="+t+"&vs_currencies="+e)];case 1:return n=o.sent(),i=null===(r=null==n?void 0:n.data[t])||void 0===r?void 0:r.usd,[4,this.appStateController.updateState("wallet",{priceUsd:i})];case 2:return o.sent(),[2,{price:i}];case 3:return s=o.sent(),L().info("getTokenPriceError",s),[3,4];case 4:return[2]}}))}))},t.prototype.getBalance=function(){return LD(this,void 0,void 0,(function(){var t,e,r,n;return TD(this,(function(i){switch(i.label){case 0:return[4,this.appStateController.getAccounts()];case 1:return t=i.sent(),[4,this.appStateController.getAddressSelected()];case 2:return e=i.sent(),[4,this.glitchWeb3.getBalance(e)];case 3:return r=i.sent(),t[e].balance=r,[4,this.appStateController.updateState("wallet",{accounts:PD({},t)})];case 4:return n=i.sent(),[2,PD({},n)]}}))}))},t.prototype.getTransactionHistory=function(t){return LD(this,void 0,void 0,(function(){var e,r,n,i,s,o,a,u,h,c,l;return TD(this,(function(d){switch(d.label){case 0:return r=(e=t||{}).pageIndex,n=e.pageSize,i=e.txStatus,s=e.txType,o=e.startTime,a=e.endTime,[4,this.appStateController.getAddressSelected()];case 1:u=d.sent(),h=o&&a?"&start_time="+o+"&end_time="+a:"",d.label=2;case 2:return d.trys.push([2,4,,5]),[4,B().get("https://api-testnet.glitch.finance/address/"+u+"/tx?page_index="+r+"&page_size="+n+"&txStatus="+i+"&txType="+s+h)];case 3:return[2,null==(c=d.sent())?void 0:c.data];case 4:return l=d.sent(),L().info("getTransactionHistoryError",l),[3,5];case 5:return[2]}}))}))},t.prototype.setAutoLockTimer=function(t){return LD(this,void 0,void 0,(function(){var e,r,n,i,s;return TD(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,3]),r=(e=t||{}).openTime,n=e.duration,[4,this.appStateController.updateState("settings",{autoLock:{openTime:r,duration:n}})];case 1:return i=o.sent(),[2,PD({},i)];case 2:throw s=o.sent(),new Error(s.message);case 3:return[2]}}))}))},t.prototype.setDefaultAppState=function(){return LD(this,void 0,void 0,(function(){return TD(this,(function(t){switch(t.label){case 0:return[4,this.appStateController.setDefaultState()];case 1:return[2,t.sent()]}}))}))},t}();const AD="WALLET/CREATE_ACCOUNT",DD="WALLET/GET_BALANCE",jD="WALLET/GET_TOKEN_PRICE",HD="WALLET/BG_WALLET_UNLOCK_WALLET",OD="WALLET/BG_WALLET_LOCK_WALLET",zD="WALLET/BG_WALLET_CREATE_WALLET_COMPLETED",ND="WALLET/BG_WALLET_RESTORE_WALLET",ED="WALLET/BG_WALLET_LOGOUT_WALLET",YD="WALLET/BG_WALLET_SHOW_SEED_PHARES",RD="WALLET/BG_WALLET_BACK_UP_WALLET",ID="WALLET/BG_WALLET_TRANSFER_TOKEN",BD="WALLET/BG_WALLET_RESET_STATE",XD="ACCOUNT/ADD_ACCOUNT",VD="ACCOUNT/CHANGE_ACCOUNT",CD="ACCOUNT/IMPORT_ACCOUNT",WD="ACCOUNT/SHOW_PRIVATE_KEYS",qD="ACCOUNT/CHANGE_ACCOUNT_NAME",ZD="TRANSACTION/BG_TRANSACTION_GET_TX_LIST",FD="SETTINGS/SET_AUTO_LOCK_TIMER";var UD=function(t,e,r,n){return new(r||(r=Promise))((function(i,s){function o(t){try{u(n.next(t))}catch(t){s(t)}}function a(t){try{u(n.throw(t))}catch(t){s(t)}}function u(t){t.done?i(t.value):function(t){return t instanceof r?t:new r((function(e){e(t)}))}(t.value).then(o,a)}u((n=n.apply(t,e||[])).next())}))},GD=function(t,e){var r,n,i,s,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(s){return function(a){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(i=2&s[0]?n.return:s[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,s[1])).done)return i;switch(n=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(i=o.trys,(i=i.length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){o.label=s[1];break}if(6===s[0]&&o.label<i[1]){o.label=i[1],i=s;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(s);break}i[2]&&o.ops.pop(),o.trys.pop();continue}s=e.call(t,o)}catch(t){s=[6,t],n=0}finally{r=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,a])}}};L().setDefaultLevel("debug");new N;var _D=new R;function KD(){return UD(this,void 0,void 0,(function(){return GD(this,(function(t){switch(t.label){case 0:return L().info("background.loadStateFromPersistence"),[4,_D.getAllStorageData()];case 1:return[2,t.sent()]}}))}))}!function(){UD(this,void 0,void 0,(function(){var t;return GD(this,(function(e){switch(e.label){case 0:return[4,KD()];case 1:return t=e.sent(),function(t){L().info("background.handleChromeListeners"),chrome.runtime.onMessage.addListener((function(e,r,n){var i=r.url,s=chrome.runtime.getURL("popup.html"),o=chrome.runtime.getURL("window.html"),a=r.id,u=chrome.runtime.id,h=e||{},c=h.type,l=h.payload;if(L().info("BG Received: ",e),a===u&&(i===s||i===o))try{switch(c){case zD:!function(t,e){D(void 0,void 0,void 0,(function(){var r,n;return j(this,(function(i){switch(i.label){case 0:return i.trys.push([0,2,,3]),[4,t.createWalletCompleted()];case 1:return(r=i.sent())&&e(A(A({},T),{state:r})),[3,3];case 2:return n=i.sent(),e(A(A({},S),{error:n})),[3,3];case 3:return[2]}}))}))}(t,n);break;case ND:!function(t,e,r){D(void 0,void 0,void 0,(function(){var n,i,s,o,a,u;return j(this,(function(h){switch(h.label){case 0:return h.trys.push([0,2,,3]),i=(n=t||{}).seedPhrase,s=n.name,o=n.password,[4,e.restoreWallet(i,s,o)];case 1:return(a=h.sent())&&r(A(A({},T),{state:a})),[3,3];case 2:return u=h.sent(),r(A(A({},S),{error:u})),[3,3];case 3:return[2]}}))}))}(l,t,n);break;case OD:!function(t,e){D(void 0,void 0,void 0,(function(){var r,n;return j(this,(function(i){switch(i.label){case 0:return i.trys.push([0,2,,3]),[4,t.lockWallet()];case 1:return(r=i.sent())&&e(A(A({},T),{state:r})),[3,3];case 2:return n=i.sent(),e(A(A({},S),{error:n})),[3,3];case 3:return[2]}}))}))}(t,n);break;case HD:!function(t,e,r){D(void 0,void 0,void 0,(function(){var n,i,s;return j(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,3]),n=(t||{}).password,[4,e.unlockWallet(n)];case 1:return(i=o.sent())&&r(A(A({},T),{state:i})),[3,3];case 2:return s=o.sent(),r(A(A({},S),{error:s})),[3,3];case 3:return[2]}}))}))}(l,t,n);break;case ED:!function(t,e,r){D(void 0,void 0,void 0,(function(){var n,i,s;return j(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,3]),n=(t||{}).password,[4,e.logoutWallet(n)];case 1:return(i=o.sent())&&r(A(A({},T),{state:i})),[3,3];case 2:return s=o.sent(),r(A(A({},S),{error:s})),[3,3];case 3:return[2]}}))}))}(l,t,n);break;case YD:!function(t,e,r){D(void 0,void 0,void 0,(function(){var n,i,s;return j(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,3]),n=(t||{}).password,[4,e.showSeedPhrase(n)];case 1:return(i=o.sent())&&r(A(A({},T),{state:i})),[3,3];case 2:return s=o.sent(),r(A(A({},S),{error:s})),[3,3];case 3:return[2]}}))}))}(l,t,n);break;case RD:!function(t,e){D(void 0,void 0,void 0,(function(){var r,n;return j(this,(function(i){switch(i.label){case 0:return i.trys.push([0,2,,3]),[4,t.backupWallet()];case 1:return(r=i.sent())&&e(A(A({},T),{state:r})),[3,3];case 2:return n=i.sent(),e(A(A({},S),{error:n})),[3,3];case 3:return[2]}}))}))}(t,n);break;case DD:!function(t,e){D(void 0,void 0,void 0,(function(){var r,n;return j(this,(function(i){switch(i.label){case 0:return i.trys.push([0,2,,3]),[4,t.getBalance()];case 1:return(r=i.sent())&&e(A(A({},T),{state:r})),[3,3];case 2:return n=i.sent(),e(A(A({},S),{error:n})),[3,3];case 3:return[2]}}))}))}(t,n);break;case jD:!function(t,e,r){D(void 0,void 0,void 0,(function(){var n,i,s,o,a;return j(this,(function(u){switch(u.label){case 0:return u.trys.push([0,2,,3]),i=(n=t||{}).tokenName,s=n.currency,[4,e.getTokenPrice(i,s)];case 1:return(o=u.sent())&&r(A(A({},T),{state:o})),[3,3];case 2:return a=u.sent(),r(A(A({},S),{error:a})),[3,3];case 3:return[2]}}))}))}(l,t,n);break;case ID:!function(t,e,r){D(void 0,void 0,void 0,(function(){var n,i,s,o,a,u;return j(this,(function(h){switch(h.label){case 0:return h.trys.push([0,2,,3]),i=(n=t||{}).password,s=n.toAddress,o=n.amount,[4,e.transfer(i,s,o)];case 1:return(a=h.sent())&&r(A(A({},T),{state:a})),[3,3];case 2:return u=h.sent(),r(A(A({},S),{error:u})),[3,3];case 3:return[2]}}))}))}(l,t,n);break;case BD:!function(t,e){D(void 0,void 0,void 0,(function(){var r,n;return j(this,(function(i){switch(i.label){case 0:return i.trys.push([0,2,,3]),[4,t.setDefaultAppState()];case 1:return(r=i.sent())&&e(A(A({},T),{state:r})),[3,3];case 2:return n=i.sent(),e(A(A({},S),{error:n})),[3,3];case 3:return[2]}}))}))}(t,n);break;case AD:!function(t,e,r){D(void 0,void 0,void 0,(function(){var n,i,s,o,a,u;return j(this,(function(h){switch(h.label){case 0:return h.trys.push([0,2,,3]),i=(n=t||{}).seed,s=n.name,o=n.password,[4,e.createAccount(i,s,o)];case 1:return(a=h.sent())&&r(A(A({},T),{state:a})),[3,3];case 2:return u=h.sent(),r(A(A({},S),{error:u})),[3,3];case 3:return[2]}}))}))}(l,t,n);break;case XD:!function(t,e,r){D(void 0,void 0,void 0,(function(){var n,i,s;return j(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,3]),n=(t||{}).name,[4,e.addNewAccount(n)];case 1:return(i=o.sent())&&r(A(A({},T),{state:i})),[3,3];case 2:return s=o.sent(),r(A(A({},S),{error:s})),[3,3];case 3:return[2]}}))}))}(l,t,n);break;case VD:!function(t,e,r){D(void 0,void 0,void 0,(function(){var n,i,s;return j(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,3]),n=(t||{}).address,[4,e.changeAccount(n)];case 1:return(i=o.sent())&&r(A(A({},T),{state:i})),[3,3];case 2:return s=o.sent(),r(A(A({},S),{error:s})),[3,3];case 3:return[2]}}))}))}(l,t,n);break;case CD:!function(t,e,r){D(void 0,void 0,void 0,(function(){var n,i,s,o,a;return j(this,(function(u){switch(u.label){case 0:return u.trys.push([0,2,,3]),i=(n=t||{}).name,s=n.privateKey,[4,e.importAccount(i,s)];case 1:return(o=u.sent())&&r(A(A({},T),{state:o})),[3,3];case 2:return a=u.sent(),r(A(A({},S),{error:a})),[3,3];case 3:return[2]}}))}))}(l,t,n);break;case WD:!function(t,e,r){D(void 0,void 0,void 0,(function(){var n,i,s;return j(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,3]),n=(t||{}).password,[4,e.showPrivateKeysAccount(n)];case 1:return(i=o.sent())&&r(A(A({},T),{state:i})),[3,3];case 2:return s=o.sent(),r(A(A({},S),{error:s})),[3,3];case 3:return[2]}}))}))}(l,t,n);break;case qD:!function(t,e,r){D(void 0,void 0,void 0,(function(){var n,i,s;return j(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,3]),n=(t||{}).name,[4,e.changeAccountName(n)];case 1:return(i=o.sent())&&r(A(A({},T),{state:i})),[3,3];case 2:return s=o.sent(),r(A(A({},S),{error:s})),[3,3];case 3:return[2]}}))}))}(l,t,n);break;case ZD:!function(t,e,r){D(void 0,void 0,void 0,(function(){var n,i,s;return j(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,3]),n=(t||{}).params,[4,e.getTransactionHistory(n)];case 1:return(i=o.sent())&&r(A(A({},T),{state:i})),[3,3];case 2:return s=o.sent(),r(A(A({},S),{error:s})),[3,3];case 3:return[2]}}))}))}(l,t,n);break;case FD:!function(t,e,r){D(void 0,void 0,void 0,(function(){var n,i;return j(this,(function(s){switch(s.label){case 0:return s.trys.push([0,2,,3]),[4,e.setAutoLockTimer(t)];case 1:return(n=s.sent())&&r(A(A({},T),{state:n})),[3,3];case 2:return i=s.sent(),r(A(A({},S),{error:i})),[3,3];case 3:return[2]}}))}))}(l,t,n);break;default:!function(t,e){e(A(A({},S),{message:"Invalid request. Check message type "+t.type}))}(e,n)}}catch(t){!function(t,e){D(void 0,void 0,void 0,(function(){var r;return j(this,(function(n){return r=A(A({},S),{message:"Error while processing request. Check message type "+t.type}),e(r),[2]}))}))}(e,n)}return!0}))}(new SD({initialState:t})),L().info("Glitch initialization complete."),[2]}}))}))}()})()})();